{"version":3,"sources":["../../../../enyo-dev/node_modules/browserify/node_modules/browser-pack/_prelude.js","../../../../enyo-dev/node_modules/browserify/lib/_empty.js","../../../../enyo-dev/node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js","../../../../enyo-dev/node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","../../../../enyo-dev/node_modules/browserify/node_modules/buffer/node_modules/is-array/index.js","../../../../enyo-dev/node_modules/browserify/node_modules/process/browser.js","../../../enyo-ilib/lib/packedbuffer.js","../../../enyo/lib/PathResolverFactory.js","../../../enyo/lib/options.js","../../index.js","../../../../enyo-dev/node_modules/browserify/node_modules/buffer/index.js","../../../enyo-ilib/ilib/js/ilib-dyn-standard.js","../../../enyo/lib/path.js","../../../enyo/index.js","../../../enyo-ilib/lib/zoneinfo.js","../../../enyo/lib/AjaxProperties.js","../../../enyo/lib/ModelList.js","../../../enyo/lib/States.js","../../../enyo/lib/json.js","../../../enyo/lib/ready.js","../../../enyo/lib/roots.js","../../../enyo/lib/utils.js","../../../enyo/lib/StateSupport.js","../../../enyo/lib/EventEmitter.js","../../../enyo/lib/FormData.js","../../../enyo/lib/platform.js","../../../enyo/lib/animation.js","../../../enyo/lib/dom.js","../../../enyo/lib/logger.js","../../../enyo/lib/xhr.js","../../../enyo/lib/HTMLStringDelegate.js","../../../enyo/lib/kind.js","../../../enyo/lib/ApplicationSupport.js","../../../enyo/lib/Binding.js","../../../enyo/lib/ComponentBindingSupport.js","../../../enyo/lib/ComputedSupport.js","../../../enyo/lib/Layout.js","../../../enyo/lib/LinkedListNode.js","../../../enyo/lib/MixinSupport.js","../../../enyo/lib/Source.js","../../../enyo/lib/floatingLayer.js","../../lib/Groupbox/Groupbox.js","../../lib/GroupboxHeader/GroupboxHeader.js","../../../enyo/lib/BindingSupport.js","../../../enyo/lib/RepeaterChildSupport.js","../../../layout/lib/Arranger/Arranger.js","../../../enyo/lib/LinkedList.js","../../../enyo/lib/ObserverChainNode.js","../../../layout/lib/CardArranger.js","../../../enyo/lib/ObserverChain.js","../../../enyo/lib/ObserverSupport.js","../../../enyo/lib/CoreObject.js","../../../enyo/lib/Async.js","../../../enyo/lib/Store.js","../../../enyo/lib/jobs.js","../../../enyo/lib/Ajax.js","../../../enyo/lib/Model.js","../../../enyo/lib/Component.js","../../../enyo/lib/Animator.js","../../../enyo/lib/Collection.js","../../../enyo/lib/ScrollMath.js","../../../enyo/lib/Selection.js","../../../enyo/lib/Signals.js","../../../enyo/lib/hooks.js","../../../enyo/lib/master.js","../../../enyo/lib/UiComponent.js","../../../enyo/lib/dispatcher.js","../../../enyo/lib/fullscreen/fullscreen.js","../../../enyo/lib/gesture.js","../../../layout/lib/Panels/Panels.js","../../../enyo/lib/Control/Control.js","../../../enyo/lib/drag.js","../../../enyo-ilib/lib/glue.js","../../../enyo/lib/Anchor.js","../../../enyo/lib/DataRepeater.js","../../../enyo/lib/Drawer.js","../../../enyo/lib/Group.js","../../../enyo/lib/GroupItem.js","../../../enyo/lib/Input.js","../../../enyo/lib/Scrim/Scrim.js","../../../enyo/lib/ScrollStrategy.js","../../../enyo/lib/ScrollThumb/ScrollThumb.js","../../../layout/lib/FittableLayout/FittableLayout.js","../../../layout/lib/FlyweightRepeater.js","../../lib/Grabber/Grabber.js","../../lib/Icon/Icon.js","../../lib/ProgressBar/ProgressBar.js","../../lib/Spinner/Spinner.js","../../lib/ToggleButton/ToggleButton.js","../../lib/Toolbar/Toolbar.js","../../../enyo-ilib/index.js","../../lib/Drawer.js","../../../enyo/lib/ToolDecorator/ToolDecorator.js","../../../enyo/lib/Checkbox.js","../../../enyo/lib/RichText/RichText.js","../../../enyo/lib/TextArea.js","../../lib/Input/Input.js","../../../enyo/lib/Popup/Popup.js","../../../enyo/lib/TouchScrollStrategy.js","../../../layout/lib/FittableColumns.js","../../../layout/lib/FittableRows.js","../../lib/IconButton.js","../../lib/ToggleIconButton.js","../../lib/ProgressButton/ProgressButton.js","../../lib/RangeSlider/RangeSlider.js","../../lib/Slider/Slider.js","SpinnerSample.js","ToggleButtonSample.js","../../../enyo/lib/Button/Button.js","../../lib/InputDecorator.js","../../lib/Checkbox/Checkbox.js","../../lib/RichText/RichText.js","../../lib/TextArea/TextArea.js","../../lib/Popup/Popup.js","../../../enyo/lib/TranslateScrollStrategy.js","IconButtonSample.js","../../lib/Button/Button.js","../../lib/MenuItem.js","../../lib/RadioButton/RadioButton.js","../../lib/TabBarItem/TabBarItem.js","GroupboxSample.js","CheckboxSample.js","InputSample.js","../../lib/Tooltip/Tooltip.js","../../../enyo/lib/Scroller/Scroller.js","../../lib/PickerButton.js","../../lib/TooltipDecorator.js","ButtonSample.js","PopupSample.js","ProgressSample.js","../../lib/Submenu/Submenu.js","../../lib/RadioGroup/RadioGroup.js","../../lib/ContextualPopup/ContextualPopup.js","../../lib/Menu/Menu.js","SliderSample.js","../../lib/MenuDecorator.js","ButtonGroupSample.js","../../lib/Picker/Picker.js","../../lib/MoreToolbar/MoreToolbar.js","../../lib/PickerDecorator.js","../../lib/TabBar/TabBar.js","ContextualPopupSample.js","MenuSample.js","SubmenuSample.js","TooltipSample.js","../../lib/FlyweightPicker.js","../../lib/IntegerPicker.js","MoreToolbarSample.js","ToolbarSample.js","../../lib/TimePicker/TimePicker.js","../../lib/TabPanels.js","TabBarSample.js","../../lib/DatePicker/DatePicker.js","PickerSample.js","TimePickerSample.js","TabPanelSample.js","DatePickerSample.js","index.js"],"names":[],"mappings":"AAAA;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3CA;AACA;AACA;AACA;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtziprMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChjyzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClvdhlrlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvnvppvtlvjplqypszxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhhxrmptlbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvhtxppjajeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvphCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnxjvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACh3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChvtgxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvtnhWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrjzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnyvWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvvxhrjzzttvzbvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"output.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n * packedbuffer.js - represent a packed buffer of bytes\n * \n * Copyright © 2014 LG Electronics, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @constructor\n * Represents a binary buffer of unsigned bytes that will be parsed in various ways. The buffer \n * can be decoded by reading various lengths of bytes and interpretting them as longs\n * or unsigned bytes, etc. The bytes are interpretted in big-endian (network) format.\n * @param {string} buffer the binary buffer represented as a string\n */\nvar PackedBuffer = function (buffer) {\n\tthis.buffer = buffer;\n\tthis.index = 0;\n};\n\n/**\n * Return the specified number of signed long integers from the current location in\n * the buffer as an array of numbers and advance the current pointer in the buffer.\n * This method will only return as many longs as are available in the rest of the\n * buffer.\n * \n * @param {number} num The number of longs to return\n * @returns {Array.<number>} the array of signed long integers\n */\nPackedBuffer.prototype.getLongs = function(num) {\n\tvar result = undefined;\n\tif (this.buffer && this.index < this.buffer.length) {\n\t\tresult = [];\n\t\tfor (var i = 0; i < num && this.index+3 < this.buffer.length; i++) {\n\t\t\tvar longnum = this.buffer[this.index] << 24 | \n\t\t\t\tthis.buffer[this.index+1] << 16 | \n\t\t\t\tthis.buffer[this.index+2] << 8 | \n\t\t\t\tthis.buffer[this.index+3];\n\t\t\tresult.push(longnum);\n\t\t\tthis.index += 4;\n\t\t}\n\t}\n\treturn result;\n};\n\n/**\n * Return a signed long integer from the current location in\n * the buffer as an array of numbers and advance the current pointer in the buffer.\n * This method will only return a long if it is available in the buffer, otherwise\n * it will return undefined.\n * \n * @returns {number} the long at the current point in the buffer, or undefined if\n * there is not enough bytes left in the buffer to form a long\n */\nPackedBuffer.prototype.getLong = function() {\n\tvar longs = this.getLongs(1);\n\tif (longs && longs.length > 0) {\n\t\treturn longs[0];\n\t}\n\treturn undefined;\n};\n\n/**\n * Return the specified number of signed byte integers from the current location in\n * the buffer as an array of numbers and advance the current pointer in the buffer.\n * This method will only return as many bytes as are available in the rest of the\n * buffer.\n * \n * @param {number|undefined} num The number of bytes to return\n * @returns {Array.<number>} the array of signed byte integers\n */\nPackedBuffer.prototype.getBytes = function(num) {\n\tvar result = undefined;\n\tif (this.buffer && this.index < this.buffer.length) {\n\t\tresult = [];\n\t\tfor (var i = 0; i < num && this.index < this.buffer.length; i++) {\n\t\t\tvar bytenum = this.buffer[this.index++];\n\t\t\tif (bytenum & 0x80) {\n\t\t\t\tbytenum -= 0x100;\n\t\t\t}\n\t\t\tresult.push(bytenum);\n\t\t}\n\t}\n\treturn result;\n};\n\n/**\n * Return a signed byte integer from the current location in\n * the buffer as an array of numbers and advance the current pointer in the buffer.\n * This method will only return a byte if it is available in the buffer, otherwise\n * it will return undefined.\n * \n * @returns {number} the byte at the current point in the buffer, or undefined if\n * there is not enough bytes left in the buffer to form a byte\n */\nPackedBuffer.prototype.getByte = function() {\n\tvar bytes = this.getBytes(1);\n\tif (bytes && bytes.length > 0) {\n\t\treturn bytes[0];\n\t}\n\treturn undefined;\n};\n\n/**\n * Return the specified number of unsigned byte integers from the current location in\n * the buffer as an array of numbers and advance the current pointer in the buffer.\n * This method will only return as many bytes as are available in the rest of the\n * buffer.\n * \n * @param {number} num The number of bytes to return\n * @returns {Array.<number>} the array of unsigned byte integers\n */\nPackedBuffer.prototype.getUnsignedBytes = function(num) {\n\tvar result = undefined;\n\tif (this.buffer && this.index < this.buffer.length) {\n\t\tresult = [];\n\t\tfor (var i = 0; i < num && this.index < this.buffer.length; i++) {\n\t\t\tresult.push(this.buffer[this.index++]);\n\t\t}\n\t}\n\treturn result;\n\t\n};\n\n/**\n * Return a string made out of the given number of bytes and convert\n * from UTF-8 to UTF-16.\n * \n * @param {number} num The number of bytes to make a string out of\n * @returns {string} a string made out of the given bytes\n */\nPackedBuffer.prototype.getString = function(num) {\n\tvar arr = this.getUnsignedBytes(num);\n\tvar str = \"\";\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tstr += String.fromCharCode(arr[i]);\n\t}\n\treturn str;\n\t\n};\n\n/**\n * Advance the current pointer in the buffer by the specified number of\n * bytes in the string.\n * \n * @param {number} num The number of bytes to skip\n */\nPackedBuffer.prototype.skip = function(num) {\n\tthis.index += num;\n};\n\nmodule.exports = PackedBuffer;","\n\nvar PathResolverFactory = module.exports = function() {\n\tthis.paths = {};\n\tthis.pathNames = [];\n};\n\nPathResolverFactory.prototype = {\n\taddPath: function(inName, inPath) {\n\t\tthis.paths[inName] = inPath;\n\t\tthis.pathNames.push(inName);\n\t\tthis.pathNames.sort(function(a, b) {\n\t\t\treturn b.length - a.length;\n\t\t});\n\t\treturn inPath;\n\t},\n\taddPaths: function(inPaths) {\n\t\tif (inPaths) {\n\t\t\tfor (var n in inPaths) {\n\t\t\t\tthis.addPath(n, inPaths[n]);\n\t\t\t}\n\t\t}\n\t},\n\tincludeTrailingSlash: function(inPath) {\n\t\treturn (inPath && inPath.slice(-1) !== \"/\") ? inPath + \"/\" : inPath;\n\t},\n\t// replace macros of the form $pathname with the mapped value of paths.pathname\n\trewrite: function (inPath) {\n\t\tvar working, its = this.includeTrailingSlash, paths = this.paths;\n\t\tvar fn = function(macro, name) {\n\t\t\tworking = true;\n\t\t\treturn its(paths[name]) || '';\n\t\t};\n\t\tvar result = inPath;\n\t\tdo {\n\t\t\tworking = false;\n\t\t\tfor (var i=0; i<this.pathNames.length; i++) {\n\t\t\t\tvar regex = new RegExp(\"\\\\$(\" + this.pathNames[i] + \")(\\\\/)?\", \"g\");\n\t\t\t\tresult = result.replace(regex, fn);\n\t\t\t}\n\t\t} while (working);\n\t\treturn result;\n\t}\n};","/*jshint node:true */\n'use strict';\n\nmodule.exports = (global.enyo && global.enyo.options) || {};","/**\n* Features a variety of commonly used widgets, including toolbars, text inputs, checkboxes, groups\n* and multiple types of buttons. \n*\n* @namespace onyx \n*/\nmodule.exports.version = \"2.6.0-pre.4.dev\";","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding) {\n  var self = this\n  if (!(self instanceof Buffer)) return new Buffer(subject, encoding)\n\n  var type = typeof subject\n  var length\n\n  if (type === 'number') {\n    length = +subject\n  } else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) {\n    // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data)) subject = subject.data\n    length = +subject.length\n  } else {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (length > kMaxLength) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' +\n      kMaxLength.toString(16) + ' bytes')\n  }\n\n  if (length < 0) length = 0\n  else length >>>= 0 // coerce to uint32\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    self = Buffer._augment(new Uint8Array(length)) // eslint-disable-line consistent-this\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    self.length = length\n    self._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    self._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++) {\n        self[i] = subject.readUInt8(i)\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        self[i] = ((subject[i] % 256) + 256) % 256\n      }\n    }\n  } else if (type === 'string') {\n    self.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (i = 0; i < length; i++) {\n      self[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize) self.parent = rootParent\n\n  return self\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function byteLength (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function toString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, target_start, start, end) {\n  var self = this // source\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || self.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= self.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - target_start < end - start) {\n    end = target.length - target_start + start\n  }\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n","/*\n * ilibglobal.js - define the ilib name space\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @namespace The global namespace that contains all ilib functions and classes.\n */\nvar ilib = ilib || {};\n\n/**\n * Return the current version of ilib.\n * \n * @static\n * @return {string} a version string for this instance of ilib\n */\nilib.getVersion = function () {\n    // increment this for each release\n    return \"10.0\"\n    ;\n};\n\n/**\n * Place where resources and such are eventually assigned.\n */\nilib.data = {\n    norm: {\n        nfc: {},\n        nfd: {},\n        nfkd: {},\n        ccc: {}\n    },\n    zoneinfo: {\n        \"Etc/UTC\":{\"o\":\"0:0\",\"f\":\"UTC\"},\n        \"local\":{\"f\":\"local\"}\n    },\n    /** @type {null|Object.<string,Array.<Array.<number>>>} */ ctype: null,\n    /** @type {null|Object.<string,Array.<Array.<number>>>} */ ctype_c: null,\n    /** @type {null|Object.<string,Array.<Array.<number>>>} */ ctype_l: null,\n    /** @type {null|Object.<string,Array.<Array.<number>>>} */ ctype_m: null,\n    /** @type {null|Object.<string,Array.<Array.<number>>>} */ ctype_p: null,\n    /** @type {null|Object.<string,Array.<Array.<number>>>} */ ctype_z: null,\n    /** @type {null|Object.<string,Array.<Array.<number>>>} */ scriptToRange: null,\n    /** @type {null|Object.<string,string|Object.<string|Object.<string,string>>>} */ dateformats: null\n};\n\nif (typeof(window) !== 'undefined') {\n    window[\"ilib\"] = ilib;\n}\n\n// export ilib for use as a module in nodejs\nif (typeof(exports) !== 'undefined') {\n    exports.ilib = ilib;\n}\n\nilib.pseudoLocales = [\"zxx-XX\"];\n\n/**\n * Sets the pseudo locale. Pseudolocalization (or pseudo-localization) is used for testing\n * internationalization aspects of software. Instead of translating the text of the software\n * into a foreign language, as in the process of localization, the textual elements of an application\n * are replaced with an altered version of the original language.These specific alterations make\n * the original words appear readable, but include the most problematic characteristics of \n * the world's languages: varying length of text or characters, language direction, and so on.\n * Regular Latin pseudo locale: eu-ES and RTL pseudo locale: ps-AF\n * \n * @param {string|undefined|null} localename the locale specifier for the pseudo locale\n */\nilib.setAsPseudoLocale = function (localename) {\n   if (localename) {\n\t   ilib.pseudoLocales.push(localename)\n   }\n};\n\n/**\n * Reset the list of pseudo locales back to the default single locale of zxx-XX.\n */\nilib.clearPseudoLocales = function() {\n\tilib.pseudoLocales = [\"zxx-XX\"];\n};\n\n/**\n * Return the name of the platform\n * @private\n * @static\n * @return {string} string naming the platform\n */\nilib._getPlatform = function () {\n    if (!ilib._platform) {\n        if (typeof(environment) !== 'undefined') {\n            ilib._platform = \"rhino\";\n        } else if (typeof(process) !== 'undefined' || typeof(require) !== 'undefined') {\n            ilib._platform = \"nodejs\";\n        } else if (typeof(window) !== 'undefined') {\n            ilib._platform = (typeof(PalmSystem) !== 'undefined') ? \"webos\" : \"browser\";\n        } else {\n            ilib._platform = \"unknown\";\n        }\n    }    \n    return ilib._platform;\n};\n\n/**\n * Return true if the global variable is defined on this platform.\n * @private\n * @static\n * @return {boolean} true if the global variable is defined on this platform, false otherwise\n */\nilib._isGlobal = function(name) {\n    switch (ilib._getPlatform()) {\n        case \"rhino\":\n            var top = (function() {\n              return (typeof global === 'object') ? global : this;\n            })();\n            return typeof(top[name]) !== undefined;\n        case \"nodejs\":\n            var root = typeof(global) !== 'undefined' ? global : this;\n            return root && typeof(root[name]) !== undefined;\n            \n        default:\n            return typeof(window[name]) !== undefined;\n    }\n};\n\n/**\n * Sets the default locale for all of ilib. This locale will be used\n * when no explicit locale is passed to any ilib class. If the default\n * locale is not set, ilib will attempt to use the locale of the\n * environment it is running in, if it can find that. If not, it will\n * default to the locale \"en-US\".<p>\n * \n * Depends directive: !depends ilibglobal.js\n * \n * @static\n * @param {string|undefined|null} spec the locale specifier for the default locale\n */\nilib.setLocale = function (spec) {\n    if (typeof(spec) === 'string' || !spec) {\n        ilib.locale = spec;\n    }\n    // else ignore other data types, as we don't have the dependencies\n    // to look into them to find a locale\n};\n\n/**\n * Return the default locale for all of ilib if one has been set. This \n * locale will be used when no explicit locale is passed to any ilib \n * class. If the default\n * locale is not set, ilib will attempt to use the locale of the\n * environment it is running in, if it can find that. If not, it will\n * default to the locale \"en-US\".<p>\n * \n * Depends directive: !depends ilibglobal.js \n * \n * @static\n * @return {string} the locale specifier for the default locale\n */\nilib.getLocale = function () {\n    if (typeof(ilib.locale) !== 'string') {\n        if (typeof(navigator) !== 'undefined' && typeof(navigator.language) !== 'undefined') {\n            // running in a browser\n            ilib.locale = navigator.language;  // FF/Opera/Chrome/Webkit\n            if (!ilib.locale) {\n                // IE on Windows\n                var lang = typeof(navigator.browserLanguage) !== 'undefined' ? \n                    navigator.browserLanguage : \n                    (typeof(navigator.userLanguage) !== 'undefined' ? \n                        navigator.userLanguage : \n                        (typeof(navigator.systemLanguage) !== 'undefined' ?\n                            navigator.systemLanguage :\n                            undefined));\n                if (typeof(lang) !== 'undefined' && lang) {\n                    // for some reason, MS uses lower case region tags\n                    ilib.locale = lang.substring(0,3) + lang.substring(3,5).toUpperCase();\n                }\n            }\n        } else if (typeof(PalmSystem) !== 'undefined' && typeof(PalmSystem.locales) !== 'undefined') {\n            // webOS\n            if (typeof(PalmSystem.locales.UI) != 'undefined' && PalmSystem.locales.UI.length > 0) {\n                ilib.locale = PalmSystem.locales.UI;\n            }\n        } else if (typeof(environment) !== 'undefined' && typeof(environment.user) !== 'undefined') {\n            // running under rhino\n            if (typeof(environment.user.language) === 'string' && environment.user.language.length > 0) {\n                ilib.locale = environment.user.language;\n                if (typeof(environment.user.country) === 'string' && environment.user.country.length > 0) {\n                    ilib.locale += '-' + environment.user.country;\n                }\n            }\n        } else if (typeof(process) !== 'undefined' && typeof(process.env) !== 'undefined') {\n            // running under nodejs\n            var lang = process.env.LANG || process.env.LC_ALL;\n            // the LANG variable on unix is in the form \"lang_REGION.CHARSET\"\n            // where language and region are the correct ISO codes separated by\n            // an underscore. This translate it back to the BCP-47 form.\n            if (lang && lang !== 'undefined') {\n                ilib.locale = lang.substring(0,2).toLowerCase() + '-' + lang.substring(3,5).toUpperCase();\n            }\n        }\n             \n        ilib.locale = typeof(ilib.locale) === 'string' ? ilib.locale : 'en-US';\n    }\n    return ilib.locale;\n};\n\n/**\n * Sets the default time zone for all of ilib. This time zone will be used when\n * no explicit time zone is passed to any ilib class. If the default time zone\n * is not set, ilib will attempt to use the time zone of the\n * environment it is running in, if it can find that. If not, it will\n * default to the the UTC zone \"Etc/UTC\".<p>\n * \n * Depends directive: !depends ilibglobal.js\n * \n * @static\n * @param {string} tz the name of the time zone to set as the default time zone\n */\nilib.setTimeZone = function (tz) {\n    ilib.tz = tz || ilib.tz;\n};\n\n/**\n * Return the default time zone for all of ilib if one has been set. This \n * time zone will be used when no explicit time zone is passed to any ilib \n * class. If the default time zone\n * is not set, ilib will attempt to use the locale of the\n * environment it is running in, if it can find that. If not, it will\n * default to the the zone \"local\".<p>\n * \n * Depends directive: !depends ilibglobal.js\n * \n * @static\n * @return {string} the default time zone for ilib\n */\nilib.getTimeZone = function() {\n    if (typeof(ilib.tz) === 'undefined') {\n        if (typeof(navigator) !== 'undefined' && typeof(navigator.timezone) !== 'undefined') {\n            // running in a browser\n            if (navigator.timezone.length > 0) {\n                ilib.tz = navigator.timezone;\n            }\n        } else if (typeof(PalmSystem) !== 'undefined' && typeof(PalmSystem.timezone) !== 'undefined') {\n            // running in webkit on webOS\n            if (PalmSystem.timezone.length > 0) {\n                ilib.tz = PalmSystem.timezone;\n            }\n        } else if (typeof(environment) !== 'undefined' && typeof(environment.user) !== 'undefined') {\n            // running under rhino\n            if (typeof(environment.user.timezone) !== 'undefined' && environment.user.timezone.length > 0) {\n                ilib.tz = environment.user.timezone;\n            }\n        } else if (typeof(process) !== 'undefined' && typeof(process.env) !== 'undefined') {\n            // running in nodejs\n            if (process.env.TZ && process.env.TZ !== \"undefined\") {\n                ilib.tz = process.env.TZ;\n            }\n        }\n        \n        ilib.tz = ilib.tz || \"local\"; \n    }\n\n    return ilib.tz;\n};\n\n/**\n * Defines the interface for the loader class for ilib. The main method of the\n * loader object is loadFiles(), which loads a set of requested locale data files\n * from where-ever it is stored.\n * @interface\n */\nilib.Loader = function() {};\n\n/**\n * Load a set of files from where-ever it is stored.<p>\n * \n * This is the main function define a callback function for loading missing locale \n * data or resources.\n * If this copy of ilib is assembled without including the required locale data\n * or resources, then that data can be lazy loaded dynamically when it is \n * needed by calling this method. Each ilib class will first\n * check for the existence of data under ilib.data, and if it is not there, \n * it will attempt to load it by calling this method of the laoder, and then place\n * it there.<p>\n * \n * Suggested implementations of this method might load files \n * directly from disk under nodejs or rhino, or within web pages, to load \n * files from the server with XHR calls.<p>\n * \n * The first parameter to this method, paths, is an array of relative paths within \n * the ilib dir structure for the \n * requested data. These paths will already have the locale spec integrated \n * into them, so no further tweaking needs to happen to load the data. Simply\n * load the named files. The second\n * parameter tells the loader whether to load the files synchronously or asynchronously.\n * If the sync parameters is false, then the onLoad function must also be specified.\n * The third parameter gives extra parameters to the loader passed from the calling\n * code. This may contain any property/value pairs.  The last parameter, callback,\n * is a callback function to call when all of the data is finishing loading. Make\n * sure to call the callback with the context of \"this\" so that the caller has their \n * context back again.<p>\n * \n * The loader function must be able to operate either synchronously or asychronously. \n * If the loader function is called with an undefined callback function, it is\n * expected to load the data synchronously, convert it to javascript\n * objects, and return the array of json objects as the return value of the \n * function. If the loader \n * function is called with a callback function, it may load the data \n * synchronously or asynchronously (doesn't matter which) as long as it calls\n * the callback function with the data converted to a javascript objects\n * when it becomes available. If a particular file could not be loaded, the \n * loader function should put undefined into the corresponding entry in the\n * results array. \n * Note that it is important that all the data is loaded before the callback\n * is called.<p>\n * \n * An example implementation for nodejs might be:\n * \n * <pre>\n * var fs = require(\"fs\");\n * \n * var myLoader = function() {};\n * myLoader.prototype = new ilib.Loader();\n * myLoader.prototype.constructor = myLoader;\n * myLoader.prototype.loadFiles = function(paths, sync, params, callback) {\n *    if (sync) {\n *        var ret = [];\n *        // synchronous load -- just return the result\n *        paths.forEach(function (path) {\n *            var json = fs.readFileSync(path, \"utf-8\");\n *            ret.push(json ? JSON.parse(json) : undefined);\n *        });\n *        \n *        return ret;\n *    }\n *    this.callback = callback;\n *\n *    // asynchronous\n *    this.results = [];\n *    this._loadFilesAsync(paths);\n * }\n * myLoader.prototype._loadFilesAsync = function (paths) {\n *    if (paths.length > 0) {\n *        var file = paths.shift();\n *        fs.readFile(file, \"utf-8\", function(err, json) {\n *            this.results.push(err ? undefined : JSON.parse(json));\n *            // call self recursively so that the callback is only called at the end\n *            // when all the files are loaded sequentially\n *            if (paths.length > 0) {\n *                this._loadFilesAsync(paths);\n *            } else {\n *                this.callback(this.results);\n *            }\n *        });\n *     }\n * }\n * \n * // bind to \"this\" so that \"this\" is relative to your own instance\n * ilib.setLoaderCallback(new myLoader());\n * </pre>\n\n * @param {Array.<string>} paths An array of paths to load from wherever the files are stored \n * @param {Boolean} sync if true, load the files synchronously, and false means asynchronously\n * @param {Object} params an object with any extra parameters for the loader. These can be \n * anything. The caller of the ilib class passes these parameters in. Presumably, the code that\n * calls ilib and the code that provides the loader are together and can have a private \n * agreement between them about what the parameters should contain.\n * @param {function(Object)} callback function to call when the files are all loaded. The \n * parameter of the callback function is the contents of the files.\n */\nilib.Loader.prototype.loadFiles = function (paths, sync, params, callback) {};\n\n/**\n * Return all files available for loading using this loader instance.\n * This method returns an object where the properties are the paths to\n * directories where files are loaded from and the values are an array\n * of strings containing the relative paths under the directory of each\n * file that can be loaded.<p>\n * \n * Example:\n *  <pre>\n *  {\n *      \"/usr/share/javascript/ilib/locale\": [\n *          \"dateformats.json\",\n *          \"aa/dateformats.json\",\n *            \"af/dateformats.json\",\n *            \"agq/dateformats.json\",\n *            \"ak/dateformats.json\",\n *            ...\n *          \"zxx/dateformats.json\"\n *      ]\n *  }\n *  </pre>\n * @returns {Object} a hash containing directory names and\n * paths to file that can be loaded by this loader \n */\nilib.Loader.prototype.listAvailableFiles = function() {};\n\n/**\n * Return true if the file in the named path is available for loading using\n * this loader. The path may be given as an absolute path, in which case\n * only that file is checked, or as a relative path, in which case, the\n * relative path may appear underneath any of the directories that the loader\n * knows about.\n * @returns {boolean} true if the file in the named path is available for loading, and\n * false otherwise\n */\nilib.Loader.prototype.isAvailable = function(path) {};\n\n/**\n * Set the custom loader used to load ilib's locale data in your environment. \n * The instance passed in must implement the ilib.Loader interface. See the\n * ilib.Loader class documentation for more information about loaders. \n * \n * @static\n * @param {ilib.Loader} loader class to call to access the requested data.\n * @return {boolean} true if the loader was installed correctly, or false\n * if not\n */\nilib.setLoaderCallback = function(loader) {\n    // only a basic check\n    if ((typeof(loader) === 'object' && loader instanceof ilib.Loader) || \n            typeof(loader) === 'function' || typeof(loader) === 'undefined') {\n        // console.log(\"setting callback loader to \" + (loader ? loader.name : \"undefined\"));\n        ilib._load = loader;\n        return true;\n    }\n    return false;\n};\n\n/*\n * locale.js - Locale specifier definition\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js\n\n/**\n * @class\n * Create a new locale instance. Locales are specified either with a specifier string \n * that follows the BCP-47 convention (roughly: \"language-region-script-variant\") or \n * with 4 parameters that specify the language, region, variant, and script individually.<p>\n * \n * The language is given as an ISO 639-1 two-letter, lower-case language code. You\n * can find a full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes</a><p>\n * \n * The region is given as an ISO 3166-1 two-letter, upper-case region code. You can\n * find a full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2</a>.<p>\n * \n * The variant is any string that does not contain a dash which further differentiates\n * locales from each other.<p>\n * \n * The script is given as the ISO 15924 four-letter script code. In some locales,\n * text may be validly written in more than one script. For example, Serbian is often\n * written in both Latin and Cyrillic, though not usually mixed together. You can find a\n * full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/ISO_15924#List_of_codes\">http://en.wikipedia.org/wiki/ISO_15924#List_of_codes</a>.<p>\n * \n * As an example in ilib, the script can be used in the date formatter. Dates formatted \n * in Serbian could have day-of-week names or month names written in the Latin\n * or Cyrillic script. Often one script is default such that sr-SR-Latn is the same\n * as sr-SR so the script code \"Latn\" can be left off of the locale spec.<p> \n * \n * Each part is optional, and an empty string in the specifier before or after a \n * dash or as a parameter to the constructor denotes an unspecified value. In this\n * case, many of the ilib functions will treat the locale as generic. For example\n * the locale \"en-\" is equivalent to \"en\" and to \"en--\" and denotes a locale\n * of \"English\" with an unspecified region and variant, which typically matches\n * any region or variant.<p>\n * \n * Without any arguments to the constructor, this function returns the locale of\n * the host Javascript engine.<p>\n * \n * Depends directive: !depends locale.js\n * \n * @constructor\n * @param {?string|ilib.Locale=} language the ISO 639 2-letter code for the language, or a full \n * locale spec in BCP-47 format, or another ilib.Locale instance to copy from\n * @param {string=} region the ISO 3166 2-letter code for the region\n * @param {string=} variant the name of the variant of this locale, if any\n * @param {string=} script the ISO 15924 code of the script for this locale, if any\n */\nilib.Locale = function(language, region, variant, script) {\n\tif (typeof(region) === 'undefined') {\n\t\tvar spec = language || ilib.getLocale();\n\t\tif (typeof(spec) === 'string') {\n\t\t\tvar parts = spec.split('-');\n\t        for ( var i = 0; i < parts.length; i++ ) {\n\t        \tif (ilib.Locale._isLanguageCode(parts[i])) {\n\t    \t\t\t/** \n\t    \t\t\t * @private\n\t    \t\t\t * @type {string|undefined}\n\t    \t\t\t */\n\t        \t\tthis.language = parts[i];\n\t        \t} else if (ilib.Locale._isRegionCode(parts[i])) {\n\t    \t\t\t/** \n\t    \t\t\t * @private\n\t    \t\t\t * @type {string|undefined}\n\t    \t\t\t */\n\t        \t\tthis.region = parts[i];\n\t        \t} else if (ilib.Locale._isScriptCode(parts[i])) {\n\t    \t\t\t/** \n\t    \t\t\t * @private\n\t    \t\t\t * @type {string|undefined}\n\t    \t\t\t */\n\t        \t\tthis.script = parts[i];\n\t        \t} else {\n\t    \t\t\t/** \n\t    \t\t\t * @private\n\t    \t\t\t * @type {string|undefined}\n\t    \t\t\t */\n\t        \t\tthis.variant = parts[i];\n\t        \t}\n\t        }\n\t        this.language = this.language || undefined;\n\t        this.region = this.region || undefined;\n\t        this.script = this.script || undefined;\n\t        this.variant = this.variant || undefined;\n\t\t} else if (typeof(spec) === 'object') {\n\t        this.language = spec.language || undefined;\n\t        this.region = spec.region || undefined;\n\t        this.script = spec.script || undefined;\n\t        this.variant = spec.variant || undefined;\n\t\t}\n\t} else {\n\t\tif (language) {\n\t\t\tlanguage = language.trim();\n\t\t\tthis.language = language.length > 0 ? language.toLowerCase() : undefined;\n\t\t} else {\n\t\t\tthis.language = undefined;\n\t\t}\n\t\tif (region) {\n\t\t\tregion = region.trim();\n\t\t\tthis.region = region.length > 0 ? region.toUpperCase() : undefined;\n\t\t} else {\n\t\t\tthis.region = undefined;\n\t\t}\n\t\tif (variant) {\n\t\t\tvariant = variant.trim();\n\t\t\tthis.variant = variant.length > 0 ? variant : undefined;\n\t\t} else {\n\t\t\tthis.variant = undefined;\n\t\t}\n\t\tif (script) {\n\t\t\tscript = script.trim();\n\t\t\tthis.script = script.length > 0 ? script : undefined;\n\t\t} else {\n\t\t\tthis.script = undefined;\n\t\t}\n\t}\n\tthis._genSpec();\n};\n\n// from http://en.wikipedia.org/wiki/ISO_3166-1\nilib.Locale.a2toa3regmap = {\n\t\"AF\": \"AFG\",\n\t\"AX\": \"ALA\",\n\t\"AL\": \"ALB\",\n\t\"DZ\": \"DZA\",\n\t\"AS\": \"ASM\",\n\t\"AD\": \"AND\",\n\t\"AO\": \"AGO\",\n\t\"AI\": \"AIA\",\n\t\"AQ\": \"ATA\",\n\t\"AG\": \"ATG\",\n\t\"AR\": \"ARG\",\n\t\"AM\": \"ARM\",\n\t\"AW\": \"ABW\",\n\t\"AU\": \"AUS\",\n\t\"AT\": \"AUT\",\n\t\"AZ\": \"AZE\",\n\t\"BS\": \"BHS\",\n\t\"BH\": \"BHR\",\n\t\"BD\": \"BGD\",\n\t\"BB\": \"BRB\",\n\t\"BY\": \"BLR\",\n\t\"BE\": \"BEL\",\n\t\"BZ\": \"BLZ\",\n\t\"BJ\": \"BEN\",\n\t\"BM\": \"BMU\",\n\t\"BT\": \"BTN\",\n\t\"BO\": \"BOL\",\n\t\"BQ\": \"BES\",\n\t\"BA\": \"BIH\",\n\t\"BW\": \"BWA\",\n\t\"BV\": \"BVT\",\n\t\"BR\": \"BRA\",\n\t\"IO\": \"IOT\",\n\t\"BN\": \"BRN\",\n\t\"BG\": \"BGR\",\n\t\"BF\": \"BFA\",\n\t\"BI\": \"BDI\",\n\t\"KH\": \"KHM\",\n\t\"CM\": \"CMR\",\n\t\"CA\": \"CAN\",\n\t\"CV\": \"CPV\",\n\t\"KY\": \"CYM\",\n\t\"CF\": \"CAF\",\n\t\"TD\": \"TCD\",\n\t\"CL\": \"CHL\",\n\t\"CN\": \"CHN\",\n\t\"CX\": \"CXR\",\n\t\"CC\": \"CCK\",\n\t\"CO\": \"COL\",\n\t\"KM\": \"COM\",\n\t\"CG\": \"COG\",\n\t\"CD\": \"COD\",\n\t\"CK\": \"COK\",\n\t\"CR\": \"CRI\",\n\t\"CI\": \"CIV\",\n\t\"HR\": \"HRV\",\n\t\"CU\": \"CUB\",\n\t\"CW\": \"CUW\",\n\t\"CY\": \"CYP\",\n\t\"CZ\": \"CZE\",\n\t\"DK\": \"DNK\",\n\t\"DJ\": \"DJI\",\n\t\"DM\": \"DMA\",\n\t\"DO\": \"DOM\",\n\t\"EC\": \"ECU\",\n\t\"EG\": \"EGY\",\n\t\"SV\": \"SLV\",\n\t\"GQ\": \"GNQ\",\n\t\"ER\": \"ERI\",\n\t\"EE\": \"EST\",\n\t\"ET\": \"ETH\",\n\t\"FK\": \"FLK\",\n\t\"FO\": \"FRO\",\n\t\"FJ\": \"FJI\",\n\t\"FI\": \"FIN\",\n\t\"FR\": \"FRA\",\n\t\"GF\": \"GUF\",\n\t\"PF\": \"PYF\",\n\t\"TF\": \"ATF\",\n\t\"GA\": \"GAB\",\n\t\"GM\": \"GMB\",\n\t\"GE\": \"GEO\",\n\t\"DE\": \"DEU\",\n\t\"GH\": \"GHA\",\n\t\"GI\": \"GIB\",\n\t\"GR\": \"GRC\",\n\t\"GL\": \"GRL\",\n\t\"GD\": \"GRD\",\n\t\"GP\": \"GLP\",\n\t\"GU\": \"GUM\",\n\t\"GT\": \"GTM\",\n\t\"GG\": \"GGY\",\n\t\"GN\": \"GIN\",\n\t\"GW\": \"GNB\",\n\t\"GY\": \"GUY\",\n\t\"HT\": \"HTI\",\n\t\"HM\": \"HMD\",\n\t\"VA\": \"VAT\",\n\t\"HN\": \"HND\",\n\t\"HK\": \"HKG\",\n\t\"HU\": \"HUN\",\n\t\"IS\": \"ISL\",\n\t\"IN\": \"IND\",\n\t\"ID\": \"IDN\",\n\t\"IR\": \"IRN\",\n\t\"IQ\": \"IRQ\",\n\t\"IE\": \"IRL\",\n\t\"IM\": \"IMN\",\n\t\"IL\": \"ISR\",\n\t\"IT\": \"ITA\",\n\t\"JM\": \"JAM\",\n\t\"JP\": \"JPN\",\n\t\"JE\": \"JEY\",\n\t\"JO\": \"JOR\",\n\t\"KZ\": \"KAZ\",\n\t\"KE\": \"KEN\",\n\t\"KI\": \"KIR\",\n\t\"KP\": \"PRK\",\n\t\"KR\": \"KOR\",\n\t\"KW\": \"KWT\",\n\t\"KG\": \"KGZ\",\n\t\"LA\": \"LAO\",\n\t\"LV\": \"LVA\",\n\t\"LB\": \"LBN\",\n\t\"LS\": \"LSO\",\n\t\"LR\": \"LBR\",\n\t\"LY\": \"LBY\",\n\t\"LI\": \"LIE\",\n\t\"LT\": \"LTU\",\n\t\"LU\": \"LUX\",\n\t\"MO\": \"MAC\",\n\t\"MK\": \"MKD\",\n\t\"MG\": \"MDG\",\n\t\"MW\": \"MWI\",\n\t\"MY\": \"MYS\",\n\t\"MV\": \"MDV\",\n\t\"ML\": \"MLI\",\n\t\"MT\": \"MLT\",\n\t\"MH\": \"MHL\",\n\t\"MQ\": \"MTQ\",\n\t\"MR\": \"MRT\",\n\t\"MU\": \"MUS\",\n\t\"YT\": \"MYT\",\n\t\"MX\": \"MEX\",\n\t\"FM\": \"FSM\",\n\t\"MD\": \"MDA\",\n\t\"MC\": \"MCO\",\n\t\"MN\": \"MNG\",\n\t\"ME\": \"MNE\",\n\t\"MS\": \"MSR\",\n\t\"MA\": \"MAR\",\n\t\"MZ\": \"MOZ\",\n\t\"MM\": \"MMR\",\n\t\"NA\": \"NAM\",\n\t\"NR\": \"NRU\",\n\t\"NP\": \"NPL\",\n\t\"NL\": \"NLD\",\n\t\"NC\": \"NCL\",\n\t\"NZ\": \"NZL\",\n\t\"NI\": \"NIC\",\n\t\"NE\": \"NER\",\n\t\"NG\": \"NGA\",\n\t\"NU\": \"NIU\",\n\t\"NF\": \"NFK\",\n\t\"MP\": \"MNP\",\n\t\"NO\": \"NOR\",\n\t\"OM\": \"OMN\",\n\t\"PK\": \"PAK\",\n\t\"PW\": \"PLW\",\n\t\"PS\": \"PSE\",\n\t\"PA\": \"PAN\",\n\t\"PG\": \"PNG\",\n\t\"PY\": \"PRY\",\n\t\"PE\": \"PER\",\n\t\"PH\": \"PHL\",\n\t\"PN\": \"PCN\",\n\t\"PL\": \"POL\",\n\t\"PT\": \"PRT\",\n\t\"PR\": \"PRI\",\n\t\"QA\": \"QAT\",\n\t\"RE\": \"REU\",\n\t\"RO\": \"ROU\",\n\t\"RU\": \"RUS\",\n\t\"RW\": \"RWA\",\n\t\"BL\": \"BLM\",\n\t\"SH\": \"SHN\",\n\t\"KN\": \"KNA\",\n\t\"LC\": \"LCA\",\n\t\"MF\": \"MAF\",\n\t\"PM\": \"SPM\",\n\t\"VC\": \"VCT\",\n\t\"WS\": \"WSM\",\n\t\"SM\": \"SMR\",\n\t\"ST\": \"STP\",\n\t\"SA\": \"SAU\",\n\t\"SN\": \"SEN\",\n\t\"RS\": \"SRB\",\n\t\"SC\": \"SYC\",\n\t\"SL\": \"SLE\",\n\t\"SG\": \"SGP\",\n\t\"SX\": \"SXM\",\n\t\"SK\": \"SVK\",\n\t\"SI\": \"SVN\",\n\t\"SB\": \"SLB\",\n\t\"SO\": \"SOM\",\n\t\"ZA\": \"ZAF\",\n\t\"GS\": \"SGS\",\n\t\"SS\": \"SSD\",\n\t\"ES\": \"ESP\",\n\t\"LK\": \"LKA\",\n\t\"SD\": \"SDN\",\n\t\"SR\": \"SUR\",\n\t\"SJ\": \"SJM\",\n\t\"SZ\": \"SWZ\",\n\t\"SE\": \"SWE\",\n\t\"CH\": \"CHE\",\n\t\"SY\": \"SYR\",\n\t\"TW\": \"TWN\",\n\t\"TJ\": \"TJK\",\n\t\"TZ\": \"TZA\",\n\t\"TH\": \"THA\",\n\t\"TL\": \"TLS\",\n\t\"TG\": \"TGO\",\n\t\"TK\": \"TKL\",\n\t\"TO\": \"TON\",\n\t\"TT\": \"TTO\",\n\t\"TN\": \"TUN\",\n\t\"TR\": \"TUR\",\n\t\"TM\": \"TKM\",\n\t\"TC\": \"TCA\",\n\t\"TV\": \"TUV\",\n\t\"UG\": \"UGA\",\n\t\"UA\": \"UKR\",\n\t\"AE\": \"ARE\",\n\t\"GB\": \"GBR\",\n\t\"US\": \"USA\",\n\t\"UM\": \"UMI\",\n\t\"UY\": \"URY\",\n\t\"UZ\": \"UZB\",\n\t\"VU\": \"VUT\",\n\t\"VE\": \"VEN\",\n\t\"VN\": \"VNM\",\n\t\"VG\": \"VGB\",\n\t\"VI\": \"VIR\",\n\t\"WF\": \"WLF\",\n\t\"EH\": \"ESH\",\n\t\"YE\": \"YEM\",\n\t\"ZM\": \"ZMB\",\n\t\"ZW\": \"ZWE\"\n};\n\n\nilib.Locale.a1toa3langmap = {\n\t\"ab\": \"abk\",\n\t\"aa\": \"aar\",\n\t\"af\": \"afr\",\n\t\"ak\": \"aka\",\n\t\"sq\": \"sqi\",\n\t\"am\": \"amh\",\n\t\"ar\": \"ara\",\n\t\"an\": \"arg\",\n\t\"hy\": \"hye\",\n\t\"as\": \"asm\",\n\t\"av\": \"ava\",\n\t\"ae\": \"ave\",\n\t\"ay\": \"aym\",\n\t\"az\": \"aze\",\n\t\"bm\": \"bam\",\n\t\"ba\": \"bak\",\n\t\"eu\": \"eus\",\n\t\"be\": \"bel\",\n\t\"bn\": \"ben\",\n\t\"bh\": \"bih\",\n\t\"bi\": \"bis\",\n\t\"bs\": \"bos\",\n\t\"br\": \"bre\",\n\t\"bg\": \"bul\",\n\t\"my\": \"mya\",\n\t\"ca\": \"cat\",\n\t\"ch\": \"cha\",\n\t\"ce\": \"che\",\n\t\"ny\": \"nya\",\n\t\"zh\": \"zho\",\n\t\"cv\": \"chv\",\n\t\"kw\": \"cor\",\n\t\"co\": \"cos\",\n\t\"cr\": \"cre\",\n\t\"hr\": \"hrv\",\n\t\"cs\": \"ces\",\n\t\"da\": \"dan\",\n\t\"dv\": \"div\",\n\t\"nl\": \"nld\",\n\t\"dz\": \"dzo\",\n\t\"en\": \"eng\",\n\t\"eo\": \"epo\",\n\t\"et\": \"est\",\n\t\"ee\": \"ewe\",\n\t\"fo\": \"fao\",\n\t\"fj\": \"fij\",\n\t\"fi\": \"fin\",\n\t\"fr\": \"fra\",\n\t\"ff\": \"ful\",\n\t\"gl\": \"glg\",\n\t\"ka\": \"kat\",\n\t\"de\": \"deu\",\n\t\"el\": \"ell\",\n\t\"gn\": \"grn\",\n\t\"gu\": \"guj\",\n\t\"ht\": \"hat\",\n\t\"ha\": \"hau\",\n\t\"he\": \"heb\",\n\t\"hz\": \"her\",\n\t\"hi\": \"hin\",\n\t\"ho\": \"hmo\",\n\t\"hu\": \"hun\",\n\t\"ia\": \"ina\",\n\t\"id\": \"ind\",\n\t\"ie\": \"ile\",\n\t\"ga\": \"gle\",\n\t\"ig\": \"ibo\",\n\t\"ik\": \"ipk\",\n\t\"io\": \"ido\",\n\t\"is\": \"isl\",\n\t\"it\": \"ita\",\n\t\"iu\": \"iku\",\n\t\"ja\": \"jpn\",\n\t\"jv\": \"jav\",\n\t\"kl\": \"kal\",\n\t\"kn\": \"kan\",\n\t\"kr\": \"kau\",\n\t\"ks\": \"kas\",\n\t\"kk\": \"kaz\",\n\t\"km\": \"khm\",\n\t\"ki\": \"kik\",\n\t\"rw\": \"kin\",\n\t\"ky\": \"kir\",\n\t\"kv\": \"kom\",\n\t\"kg\": \"kon\",\n\t\"ko\": \"kor\",\n\t\"ku\": \"kur\",\n\t\"kj\": \"kua\",\n\t\"la\": \"lat\",\n\t\"lb\": \"ltz\",\n\t\"lg\": \"lug\",\n\t\"li\": \"lim\",\n\t\"ln\": \"lin\",\n\t\"lo\": \"lao\",\n\t\"lt\": \"lit\",\n\t\"lu\": \"lub\",\n\t\"lv\": \"lav\",\n\t\"gv\": \"glv\",\n\t\"mk\": \"mkd\",\n\t\"mg\": \"mlg\",\n\t\"ms\": \"msa\",\n\t\"ml\": \"mal\",\n\t\"mt\": \"mlt\",\n\t\"mi\": \"mri\",\n\t\"mr\": \"mar\",\n\t\"mh\": \"mah\",\n\t\"mn\": \"mon\",\n\t\"na\": \"nau\",\n\t\"nv\": \"nav\",\n\t\"nb\": \"nob\",\n\t\"nd\": \"nde\",\n\t\"ne\": \"nep\",\n\t\"ng\": \"ndo\",\n\t\"nn\": \"nno\",\n\t\"no\": \"nor\",\n\t\"ii\": \"iii\",\n\t\"nr\": \"nbl\",\n\t\"oc\": \"oci\",\n\t\"oj\": \"oji\",\n\t\"cu\": \"chu\",\n\t\"om\": \"orm\",\n\t\"or\": \"ori\",\n\t\"os\": \"oss\",\n\t\"pa\": \"pan\",\n\t\"pi\": \"pli\",\n\t\"fa\": \"fas\",\n\t\"pl\": \"pol\",\n\t\"ps\": \"pus\",\n\t\"pt\": \"por\",\n\t\"qu\": \"que\",\n\t\"rm\": \"roh\",\n\t\"rn\": \"run\",\n\t\"ro\": \"ron\",\n\t\"ru\": \"rus\",\n\t\"sa\": \"san\",\n\t\"sc\": \"srd\",\n\t\"sd\": \"snd\",\n\t\"se\": \"sme\",\n\t\"sm\": \"smo\",\n\t\"sg\": \"sag\",\n\t\"sr\": \"srp\",\n\t\"gd\": \"gla\",\n\t\"sn\": \"sna\",\n\t\"si\": \"sin\",\n\t\"sk\": \"slk\",\n\t\"sl\": \"slv\",\n\t\"so\": \"som\",\n\t\"st\": \"sot\",\n\t\"az\": \"azb\",\n\t\"es\": \"spa\",\n\t\"su\": \"sun\",\n\t\"sw\": \"swa\",\n\t\"ss\": \"ssw\",\n\t\"sv\": \"swe\",\n\t\"ta\": \"tam\",\n\t\"te\": \"tel\",\n\t\"tg\": \"tgk\",\n\t\"th\": \"tha\",\n\t\"ti\": \"tir\",\n\t\"bo\": \"bod\",\n\t\"tk\": \"tuk\",\n\t\"tl\": \"tgl\",\n\t\"tn\": \"tsn\",\n\t\"to\": \"ton\",\n\t\"tr\": \"tur\",\n\t\"ts\": \"tso\",\n\t\"tt\": \"tat\",\n\t\"tw\": \"twi\",\n\t\"ty\": \"tah\",\n\t\"ug\": \"uig\",\n\t\"uk\": \"ukr\",\n\t\"ur\": \"urd\",\n\t\"uz\": \"uzb\",\n\t\"ve\": \"ven\",\n\t\"vi\": \"vie\",\n\t\"vo\": \"vol\",\n\t\"wa\": \"wln\",\n\t\"cy\": \"cym\",\n\t\"wo\": \"wol\",\n\t\"fy\": \"fry\",\n\t\"xh\": \"xho\",\n\t\"yi\": \"yid\",\n\t\"yo\": \"yor\",\n\t\"za\": \"zha\",\n\t\"zu\": \"zul\"\n};\n\n/**\n * Tell whether or not the str does not start with a lower case ASCII char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is not a lower case ASCII char\n */\nilib.Locale._notLower = function(str) {\n\t// do this with ASCII only so we don't have to depend on the CType functions\n\tvar ch = str.charCodeAt(0);\n\treturn ch < 97 || ch > 122;\n};\n\n/**\n * Tell whether or not the str does not start with an upper case ASCII char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is a not an upper case ASCII char\n */\nilib.Locale._notUpper = function(str) {\n\t// do this with ASCII only so we don't have to depend on the CType functions\n\tvar ch = str.charCodeAt(0);\n\treturn ch < 65 || ch > 90;\n};\n\n/**\n * Tell whether or not the str does not start with a digit char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is a not an upper case ASCII char\n */\nilib.Locale._notDigit = function(str) {\n\t// do this with ASCII only so we don't have to depend on the CType functions\n\tvar ch = str.charCodeAt(0);\n\treturn ch < 48 || ch > 57;\n};\n\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 639 language code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\nilib.Locale._isLanguageCode = function(str) {\n\tif (typeof(str) === 'undefined' || str.length < 2 || str.length > 3) {\n\t\treturn false;\n\t}\n\n\tfor (var i = 0; i < str.length; i++) {\n\t\tif (ilib.Locale._notLower(str.charAt(i))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n};\n\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 3166 2-letter region code or M.49 3-digit region code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\nilib.Locale._isRegionCode = function (str) {\n\tif (typeof(str) === 'undefined' || str.length < 2 || str.length > 3) {\n\t\treturn false;\n\t}\n\t\n\tif (str.length === 2) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tif (ilib.Locale._notUpper(str.charAt(i))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tif (ilib.Locale._notDigit(str.charAt(i))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn true;\n};\n\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 639 language code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\nilib.Locale._isScriptCode = function(str)\n{\n\tif (typeof(str) === 'undefined' || str.length !== 4 || ilib.Locale._notUpper(str.charAt(0))) {\n\t\treturn false;\n\t}\n\t\n\tfor (var i = 1; i < 4; i++) {\n\t\tif (ilib.Locale._notLower(str.charAt(i))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n};\n\n/**\n * Return the ISO-3166 alpha3 equivalent region code for the given ISO 3166 alpha2\n * region code. If the given alpha2 code is not found, this function returns its\n * argument unchanged.\n * @static\n * @param {string|undefined} alpha2 the alpha2 code to map\n * @return {string|undefined} the alpha3 equivalent of the given alpha2 code, or the alpha2\n * parameter if the alpha2 value is not found\n */\nilib.Locale.regionAlpha2ToAlpha3 = function(alpha2) {\n\treturn ilib.Locale.a2toa3regmap[alpha2] || alpha2;\n};\n\n/**\n * Return the ISO-639 alpha3 equivalent language code for the given ISO 639 alpha1\n * language code. If the given alpha1 code is not found, this function returns its\n * argument unchanged.\n * @static\n * @param {string|undefined} alpha1 the alpha1 code to map\n * @return {string|undefined} the alpha3 equivalent of the given alpha1 code, or the alpha1\n * parameter if the alpha1 value is not found\n */\nilib.Locale.languageAlpha1ToAlpha3 = function(alpha1) {\n\treturn ilib.Locale.a1toa3langmap[alpha1] || alpha1;\n};\n\nilib.Locale.prototype = {\n\t/**\n\t * @private\n\t */\n\t_genSpec: function () {\n\t\tthis.spec = this.language || \"\";\n\t\t\n\t\tif (this.script) {\n\t\t\tif (this.spec.length > 0) {\n\t\t\t\tthis.spec += \"-\";\n\t\t\t}\n\t\t\tthis.spec += this.script;\n\t\t}\n\t\t\n\t\tif (this.region) {\n\t\t\tif (this.spec.length > 0) {\n\t\t\t\tthis.spec += \"-\";\n\t\t\t}\n\t\t\tthis.spec += this.region;\n\t\t}\n\t\t\n\t\tif (this.variant) {\n\t\t\tif (this.spec.length > 0) {\n\t\t\t\tthis.spec += \"-\";\n\t\t\t}\n\t\t\tthis.spec += this.variant;\n\t\t}\n\t},\n\n\t/**\n\t * Return the ISO 639 language code for this locale. \n\t * @return {string|undefined} the language code for this locale \n\t */\n\tgetLanguage: function() {\n\t\treturn this.language;\n\t},\n\t\n\t/**\n\t * Return the language of this locale as an ISO-639-alpha3 language code\n\t * @return {string|undefined} the alpha3 language code of this locale\n\t */\n\tgetLanguageAlpha3: function() {\n\t\treturn ilib.Locale.languageAlpha1ToAlpha3(this.language);\n\t},\n\t\n\t/**\n\t * Return the ISO 3166 region code for this locale.\n\t * @return {string|undefined} the region code of this locale\n\t */\n\tgetRegion: function() {\n\t\treturn this.region;\n\t},\n\t\n\t/**\n\t * Return the region of this locale as an ISO-3166-alpha3 region code\n\t * @return {string|undefined} the alpha3 region code of this locale\n\t */\n\tgetRegionAlpha3: function() {\n\t\treturn ilib.Locale.regionAlpha2ToAlpha3(this.region);\n\t},\n\t\n\t/**\n\t * Return the ISO 15924 script code for this locale\n\t * @return {string|undefined} the script code of this locale\n\t */\n\tgetScript: function () {\n\t\treturn this.script;\n\t},\n\t\n\t/**\n\t * Return the variant code for this locale\n\t * @return {string|undefined} the variant code of this locale, if any\n\t */\n\tgetVariant: function() {\n\t\treturn this.variant;\n\t},\n\t\n\t/**\n\t * Return the whole locale specifier as a string.\n\t * @return {string} the locale specifier\n\t */\n\tgetSpec: function() {\n\t\treturn this.spec;\n\t},\n\t\n\t/**\n\t * Express this locale object as a string. Currently, this simply calls the getSpec\n\t * function to represent the locale as its specifier.\n\t * \n\t * @return {string} the locale specifier\n\t */\n\ttoString: function() {\n\t\treturn this.getSpec();\n\t},\n\t\n\t/**\n\t * Return true if the the other locale is exactly equal to the current one.\n\t * @return {boolean} whether or not the other locale is equal to the current one \n\t */\n\tequals: function(other) {\n\t\treturn this.language === other.language &&\n\t\t\tthis.region === other.region &&\n\t\t\tthis.script === other.script &&\n\t\t\tthis.variant === other.variant;\n\t},\n\n\t/**\n\t * Return true if the current locale is the special pseudo locale.\n\t * @return {boolean} true if the current locale is the special pseudo locale\n\t */\n\tisPseudo: function () {\n\t\tvar localeName = this.language + \"-\" + this.region;\n\t\treturn ilib.pseudoLocales.indexOf(localeName) > -1;\n\t}\n};\n\n// static functions\n/**\n * @private\n */\nilib.Locale.locales = [\n\t\n];\n\n/**\n * Return the list of available locales that this iLib file was assembled\n * with. The list that this file was assembled with may be much smaller\n * than the list of all available locales in the iLib repository. The\n * assembly tool will automatically fill in the list.\n * \n * @return {Array.<string>} this is an array of locale specs for which \n * this iLib file has locale data for\n */\nilib.Locale.getAvailableLocales = function () {\n\treturn ilib.Locale.locales;\n};\n\n/*\n * localeinfo.js - Encode locale-specific defaults\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js locale.js\n\n// !data localeinfo\n\n/**\n * @class\n * Create a new locale info instance. Locale info instances give information about\n * the default settings for a particular locale. These settings may be overridden\n * by various parts of the code, and should be used as a fall-back setting of last\n * resort. <p>\n * \n * The optional options object holds extra parameters if they are necessary. The\n * current list of supported options are:\n * \n * <ul>\n * <li><i>onLoad</i> - a callback function to call when the locale info object is fully \n * loaded. When the onLoad option is given, the localeinfo object will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the \n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two.\n * \n * <li><i>sync</i> - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while. \n *\n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * \n * If this copy of ilib is pre-assembled and all the data is already available, \n * or if the data was already previously loaded, then this constructor will call\n * the onLoad callback immediately when the initialization is done. \n * If the onLoad option is not given, this class will only attempt to load any\n * missing locale data synchronously.\n * \n * Depends directive: !depends localeinfo.js\n * \n * @constructor\n * @see {ilib.setLoaderCallback} for information about registering a loader callback\n * function\n * @param {ilib.Locale|string=} locale the locale for which the info is sought, or undefined for\n * @param {Object=} options the locale for which the info is sought, or undefined for\n * the current locale\n */\nilib.LocaleInfo = function(locale, options) {\n\tvar sync = true,\n\t    loadParams = undefined;\n\t\n\t/* these are all the defaults. Essentially, en-US */\n\t/**\n\t  @private \n\t  @type {{\n\t\tscripts:Array.<string>,\n\t\ttimezone:string,\n\t\tunits:string,\n\t\tcalendar:string,\n\t\tclock:string,\n\t\tcurrency:string,\n\t\tfirstDayOfWeek:number,\n\t\tunitfmt: {long:string,short:string},\n\t\tnumfmt:Object.<{\n\t\t\tcurrencyFormats:Object.<{common:string,commonNegative:string,iso:string,isoNegative:string}>,\n\t\t\tscript:string,\n\t\t\tdecimalChar:string,\n\t\t\tgroupChar:string,\n\t\t\tprigroupSize:number,\n\t\t\tsecgroupSize:number,\n\t\t\tnegativenumFmt:string,\n\t\t\tpctFmt:string,\n\t\t\tnegativepctFmt:string,\n\t\t\tpctChar:string,\n\t\t\troundingMode:string,\n\t\t\texponential:string,\n\t\t\tdigits:string\n\t\t}>\n\t  }}\n\t*/\n\tthis.info = ilib.LocaleInfo.defaultInfo;\n\t\n\tswitch (typeof(locale)) {\n\t\tcase \"string\":\n\t\t\tthis.locale = new ilib.Locale(locale);\n\t\t\tbreak;\n\t\tdefault:\n\t\tcase \"undefined\":\n\t\t\tthis.locale = new ilib.Locale();\n\t\t\tbreak;\n\t\tcase \"object\":\n\t\t\tthis.locale = locale;\n\t\t\tbreak;\n\t}\n\t\n\tif (options) {\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tsync = (options.sync == true);\n\t\t}\n\t\t\n\t\tif (typeof(options.loadParams) !== 'undefined') {\n\t\t\tloadParams = options.loadParams;\n\t\t}\n\t}\n\n\tif (!ilib.LocaleInfo.cache) {\n\t\tilib.LocaleInfo.cache = {};\n\t}\n\n\tilib.loadData({\n\t\tobject: ilib.LocaleInfo, \n\t\tlocale: this.locale, \n\t\tname: \"localeinfo.json\", \n\t\tsync: sync, \n\t\tloadParams: loadParams, \n\t\tcallback: ilib.bind(this, function (info) {\n\t\t\tif (!info) {\n\t\t\t\tinfo = ilib.LocaleInfo.defaultInfo;\n\t\t\t\tvar spec = this.locale.getSpec().replace(/-/g, \"_\");\n\t\t\t\tilib.LocaleInfo.cache[spec] = info;\n\t\t\t}\n\t\t\tthis.info = info;\n\t\t\tif (options && typeof(options.onLoad) === 'function') {\n\t\t\t\toptions.onLoad(this);\n\t\t\t}\n\t\t})\n\t});\n};\n\nilib.LocaleInfo.defaultInfo = /** @type {{\n\tscripts:Array.<string>,\n\ttimezone:string,\n\tunits:string,\n\tcalendar:string,\n\tclock:string,\n\tcurrency:string,\n\tfirstDayOfWeek:number,\n\tunitfmt: {long:string,short:string},\n\tnumfmt:Object.<{\n\t\tcurrencyFormats:Object.<{\n\t\t\tcommon:string,\n\t\t\tcommonNegative:string,\n\t\t\tiso:string,\n\t\t\tisoNegative:string\n\t\t}>,\n\t\tscript:string,\n\t\tdecimalChar:string,\n\t\tgroupChar:string,\n\t\tprigroupSize:number,\n\t\tsecgroupSize:number,\n\t\tnegativenumFmt:string,\n\t\tpctFmt:string,\n\t\tnegativepctFmt:string,\n\t\tpctChar:string,\n\t\troundingMode:string,\n\t\texponential:string,\n\t\tdigits:string\n\t}>\n}}*/ ilib.data.localeinfo;\nilib.LocaleInfo.defaultInfo = ilib.LocaleInfo.defaultInfo || {\n\t\"scripts\": [\"Latn\"],\n    \"timezone\": \"Etc/UTC\",\n    \"units\": \"metric\",\n    \"calendar\": \"gregorian\",\n    \"clock\": \"24\",\n    \"currency\": \"USD\",\n    \"firstDayOfWeek\": 1,\n    \"numfmt\": {\n        \"currencyFormats\": {\n            \"common\": \"{s}{n}\",\n            \"commonNegative\": \"{s}-{n}\",\n            \"iso\": \"{s}{n}\",\n            \"isoNegative\": \"{s}-{n}\"\n        },\n        \"script\": \"Latn\",\n        \"decimalChar\": \",\",\n        \"groupChar\": \".\",\n        \"prigroupSize\": 3,\n        \"secgroupSize\": 0,\n        \"pctFmt\": \"{n}%\",\n        \"negativepctFmt\": \"-{n}%\",\n        \"pctChar\": \"%\",\n        \"roundingMode\": \"halfdown\",\n        \"exponential\": \"e\",\n        \"digits\": \"\"\n    }\n};\n\nilib.LocaleInfo.prototype = {\n    /**\n     * Return the name of the locale's language in English.\n     * @returns {string} the name of the locale's language in English\n     */\n    getLanguageName: function () {\n    \treturn this.info[\"language.name\"];\t\n    },\n    \n    /**\n     * Return the name of the locale's region in English. If the locale\n     * has no region, this returns undefined.\n     * \n     * @returns {string|undefined} the name of the locale's region in English\n     */\n    getRegionName: function () {\n    \treturn this.info[\"region.name\"];\t\n    },\n\n    /**\n\t * Return whether this locale commonly uses the 12- or the 24-hour clock.\n\t *  \n\t * @returns {string} \"12\" if the locale commonly uses a 12-hour clock, or \"24\"\n\t * if the locale commonly uses a 24-hour clock. \n\t */\n\tgetClock: function() {\n\t\treturn this.info.clock;\n\t},\n\n\t/**\n\t * Return the locale that this info object was created with.\n\t * @returns {ilib.Locale} The locale spec of the locale used to construct this info instance\n\t */\n\tgetLocale: function () {\n\t\treturn this.locale;\n\t},\n\t\n\t/**\n\t * Return the name of the measuring system that is commonly used in the given locale.\n\t * Valid values are \"uscustomary\", \"imperial\", and \"metric\".\n\t * \n\t * @returns {string} The name of the measuring system commonly used in the locale\n\t */\n\tgetUnits: function () {\n\t\treturn this.info.units;\n\t},\n        \n        getUnitFormat: function () {\n                return this.info.unitfmt;\n        },\n\t\n\t/**\n\t * Return the name of the calendar that is commonly used in the given locale.\n\t * \n\t * @returns {string} The name of the calendar commonly used in the locale\n\t */\n\tgetCalendar: function () {\n\t\treturn this.info.calendar;\n\t},\n\t\n\t/**\n\t * Return the day of week that starts weeks in the current locale. Days are still\n\t * numbered the standard way with 0 for Sunday through 6 for Saturday, but calendars \n\t * should be displayed and weeks calculated with the day of week returned from this \n\t * function as the first day of the week.\n\t * \n\t * @returns {number} the day of the week that starts weeks in the current locale.\n\t */\n\tgetFirstDayOfWeek: function () {\n\t\treturn this.info.firstDayOfWeek;\n\t},\n\t\n\t/**\n\t * Return the default time zone for this locale. Many locales span across multiple\n\t * time zones. In this case, the time zone with the largest population is chosen\n\t * to represent the locale. This is obviously not that accurate, but then again,\n\t * this method's return value should only be used as a default anyways.\n\t * @returns {string} the default time zone for this locale.\n\t */\n\tgetTimeZone: function () {\n\t\treturn this.info.timezone;\n\t},\n\t\n\t/**\n\t * Return the decimal separator for formatted numbers in this locale.\n\t * @returns {string} the decimal separator char\n\t */\n\tgetDecimalSeparator: function () {\n\t\treturn this.info.numfmt.decimalChar;\n\t},\n\t\n\t/**\n\t * Return the decimal separator for formatted numbers in this locale for native script.\n\t * @returns {string} the decimal separator char\n\t */\n\tgetNativeDecimalSeparator: function () {\n\t\treturn (this.info.native_numfmt && this.info.native_numfmt.decimalChar) || this.info.numfmt.decimalChar;\n\t},\n\t\n\t/**\n\t * Return the separator character used to separate groups of digits on the \n\t * integer side of the decimal character.\n\t * @returns {string} the grouping separator char\n\t */\n\tgetGroupingSeparator: function () {\n\t\treturn this.info.numfmt.groupChar;\n\t},\n\n\t/**\n\t * Return the separator character used to separate groups of digits on the \n\t * integer side of the decimal character for the native script if present other than the default script.\n\t * @returns {string} the grouping separator char\n\t */\n\tgetNativeGroupingSeparator: function () {\n\t\treturn (this.info.native_numfmt && this.info.native_numfmt.groupChar) || this.info.numfmt.groupChar;\n\t},\n\t\n\t/**\n\t * Return the minimum number of digits grouped together on the integer side \n\t * for the first (primary) group. \n\t * In western European cultures, groupings are in 1000s, so the number of digits\n\t * is 3. \n\t * @returns {number} the number of digits in a primary grouping, or 0 for no grouping\n\t */\n\tgetPrimaryGroupingDigits: function () {\n\t\treturn (typeof(this.info.numfmt.prigroupSize) !== 'undefined' && this.info.numfmt.prigroupSize) || 0;\n\t},\n\n\t/**\n\t * Return the minimum number of digits grouped together on the integer side\n\t * for the second or more (secondary) group.<p>\n\t *   \n\t * In western European cultures, all groupings are by 1000s, so the secondary\n\t * size should be 0 because there is no secondary size. In general, if this \n\t * method returns 0, then all groupings are of the primary size.<p> \n\t * \n\t * For some other cultures, the first grouping (primary)\n\t * is 3 and any subsequent groupings (secondary) are two. So, 100000 would be\n\t * written as: \"1,00,000\".\n\t * \n\t * @returns {number} the number of digits in a secondary grouping, or 0 for no \n\t * secondary grouping. \n\t */\n\tgetSecondaryGroupingDigits: function () {\n\t\treturn this.info.numfmt.secgroupSize || 0;\n\t},\n\n\t/**\n\t * Return the format template used to format percentages in this locale.\n\t * @returns {string} the format template for formatting percentages\n\t */\n\tgetPercentageFormat: function () {\n\t\treturn this.info.numfmt.pctFmt;\n\t},\n\n\t/**\n\t * Return the format template used to format percentages in this locale\n\t * with negative amounts.\n\t * @returns {string} the format template for formatting percentages\n\t */\n\tgetNegativePercentageFormat: function () {\n\t\treturn this.info.numfmt.negativepctFmt;\n\t},\n\n\t/**\n\t * Return the symbol used for percentages in this locale.\n\t * @returns {string} the symbol used for percentages in this locale\n\t */\n\tgetPercentageSymbol: function () {\n\t\treturn this.info.numfmt.pctChar || \"%\";\n\t},\n\n\t/**\n\t * Return the symbol used for exponential in this locale.\n\t * @returns {string} the symbol used for exponential in this locale\n\t */\n\tgetExponential: function () {\n\t\treturn this.info.numfmt.exponential;\n\t},\n\n\t/**\n\t * Return the symbol used for exponential in this locale for native script.\n\t * @returns {string} the symbol used for exponential in this locale for native script\n\t */\n\tgetNativeExponential: function () {\n\t\treturn (this.info.native_numfmt && this.info.native_numfmt.exponential) || this.info.numfmt.exponential;\n\t},\n\n\t/**\n\t * Return the symbol used for percentages in this locale for native script.\n\t * @returns {string} the symbol used for percentages in this locale for native script\n\t */\n\tgetNativePercentageSymbol: function () {\n\t\treturn (this.info.native_numfmt && this.info.native_numfmt.pctChar) || this.info.numfmt.pctChar || \"%\";\n\t\n\t},\n\t/**\n\t * Return the format template used to format negative numbers in this locale.\n\t * @returns {string} the format template for formatting negative numbers\n\t */\n\tgetNegativeNumberFormat: function () { \n\t\treturn this.info.numfmt.negativenumFmt;\n\t},\n\t\n\t/**\n\t * Return an object containing the format templates for formatting currencies\n\t * in this locale. The object has a number of properties in it that each are\n\t * a particular style of format. Normally, this contains a \"common\" and an \"iso\"\n\t * style, but may contain others in the future.\n\t * @returns {Object} an object containing the format templates for currencies\n\t */\n\tgetCurrencyFormats: function () {\n\t\treturn this.info.numfmt.currencyFormats;\n\t},\n\t\n\t/**\n\t * Return the currency that is legal in the locale, or which is most commonly \n\t * used in regular commerce.\n\t * @returns {string} the ISO 4217 code for the currency of this locale\n\t */\n\tgetCurrency: function () {\n\t\treturn this.info.currency;\n\t},\n\t\n\t/**\n\t * Return a string that describes the style of digits used by this locale.\n\t * Possible return values are:\n\t * <ul>\n\t * <li><i>western</i> - uses the regular western 10-based digits 0 through 9\n\t * <li><i>optional</i> - native 10-based digits exist, but in modern usage,\n\t * this locale most often uses western digits\n\t * <li><i>native</i> - native 10-based native digits exist and are used\n\t * regularly by this locale\n\t * <li><i>custom</i> - uses native digits by default that are not 10-based\n\t * </ul>\n\t * @returns {string} string that describes the style of digits used in this locale\n\t */\n\tgetDigitsStyle: function () {\n\t\tif (this.info.numfmt.useNative) {\n\t\t\treturn \"native\";\n\t\t}\n\t\tif (typeof(this.info.native_numfmt) !== 'undefined') {\n\t\t\treturn \"optional\";\n\t\t}\n\t\treturn \"western\";\n\t},\n\t\n\t/**\n\t * Return the digits of the default script if they are defined.\n\t * If not defined, the default should be the regular \"Arabic numerals\"\n\t * used in the Latin script. (0-9)\n\t * @returns {string|undefined} the digits used in the default script \n\t */\n\tgetDigits: function () {\n\t\treturn this.info.numfmt.digits;\n\t},\n\t\n\t/**\n\t * Return the digits of the native script if they are defined. \n\t * @returns {string|undefined} the digits used in the default script \n\t */\n\tgetNativeDigits: function () {\n\t\treturn (this.info.numfmt.useNative && this.info.numfmt.digits) || (this.info.native_numfmt && this.info.native_numfmt.digits);\n\t},\n\t\n\t/**\n\t * If this locale typically uses a different type of rounding for numeric\n\t * formatting other than halfdown, especially for currency, then it can be \n\t * specified in the localeinfo. If the locale uses the default, then this \n\t * method returns undefined. The locale's rounding method overrides the \n\t * rounding method for the currency itself, which can sometimes shared \n\t * between various locales so it is less specific.\n\t * @returns {string} the name of the rounding mode typically used in this\n\t * locale, or \"halfdown\" if the locale does not override the default\n\t */\n\tgetRoundingMode: function () {\n\t\treturn this.info.numfmt.roundingMode;\n\t},\n\t\n\t/**\n\t * Return the default script used to write text in the language of this \n\t * locale. Text for most languages is written in only one script, but there\n\t * are some languages where the text can be written in a number of scripts,\n\t * depending on a variety of things such as the region, ethnicity, religion, \n\t * etc. of the author. This method returns the default script for the\n\t * locale, in which the language is most commonly written.<p> \n\t * \n\t * The script is returned as an ISO 15924 4-letter code.\n\t * \n\t * @returns {string} the ISO 15924 code for the default script used to write\n\t * text in this locale \n\t */\n\tgetDefaultScript: function() {\n\t\treturn (this.info.scripts) ? this.info.scripts[0] : \"Latn\";\n\t},\n\t\n\t/**\n\t * Return the script used for the current locale. If the current locale\n\t * explicitly defines a script, then this script is returned. If not, then \n\t * the default script for the locale is returned.\n\t * \n\t * @see ilib.LocaleInfo.getDefaultScript\n\t * @returns {string} the ISO 15924 code for the script used to write\n\t * text in this locale\n\t */\n\tgetScript: function() {\n\t\treturn this.locale.getScript() || this.getDefaultScript(); \n\t},\n\t\n\t/**\n\t * Return an array of script codes which are used to write text in the current\n\t * language. Text for most languages is written in only one script, but there\n\t * are some languages where the text can be written in a number of scripts,\n\t * depending on a variety of things such as the region, ethnicity, religion, \n\t * etc. of the author. This method returns an array of script codes in which \n\t * the language is commonly written.\n\t * \n\t * @returns {Array.<string>} an array of ISO 15924 codes for the scripts used \n\t * to write text in this language\n\t */\n\tgetAllScripts: function() {\n\t\treturn this.info.scripts || [\"Latn\"];\n\t}\n};\n\n/*\n * date.js - Represent a date in any calendar. This class is subclassed for each calendar.\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends ilibglobal.js localeinfo.js */\n\n/**\n * @class\n * Construct a new date object. Each parameter is a numeric value, but its \n * accepted range can vary depending on the subclass of this date. For example,\n * Gregorian months can be from 1 to 12, whereas months in the Hebrew calendar\n * can be from 1 to 13.<p>\n * \n * Note that this really calls the newInstance factory method underneath in \n * order to instantiate the correct subclass of ilib.Date.\n * \n * Depends directive: !depends date.js\n * \n * @constructor\n * @param {Object=} options The date components to initialize this date with\n */\nilib.Date = function(options) {\n\tif (!options || typeof(options.noinstance) === 'undefined') {\n\t\treturn ilib.Date.newInstance(options);\n\t}\n};\n\n/**\n * Factory method to create a new instance of a date subclass.<p>\n * \n * The options parameter can be an object that contains the following\n * properties:\n * \n * <ul>\n * <li><i>type</i> - specify the type/calendar of the date desired. The\n * list of valid values changes depending on which calendars are \n * defined. When assembling your iliball.js, include those date type \n * you wish to use in your program or web page, and they will register \n * themselves with this factory method. The \"gregorian\",\n * and \"julian\" calendars are all included by default, as they are the\n * standard calendars for much of the world. If not specified, the type\n * of the date returned is the one that is appropriate for the locale.\n * This property may also be given as \"calendar\" instead of \"type\".\n * </ul>\n * \n * The options object is also passed down to the date constructor, and \n * thus can contain the the properties as the date object being instantiated.\n * See the documentation for {@link ilib.Date.GregDate}, and other\n * subclasses for more details on other parameter that may be passed in.<p>\n * \n * Please note that if you do not give the type parameter, this factory\n * method will create a date object that is appropriate for the calendar\n * that is most commonly used in the specified or current ilib locale. \n * For example, in Thailand, the most common calendar is the Thai solar \n * calendar. If the current locale is \"th-TH\" (Thai for Thailand) and you \n * use this factory method to construct a new date without specifying the\n * type, it will automatically give you back an instance of \n * {@link ilib.Date.ThaiSolarDate}. This is convenient because you do not \n * need to know which locales use which types of dates. In fact, you \n * should always use this factory method to make new date instances unless\n * you know that you specifically need a date in a particular calendar.<p>\n * \n * Also note that when you pass in the date components such as year, month,\n * day, etc., these components should be appropriate for the given date\n * being instantiated. That is, in our Thai example in the previous\n * paragraph, the year and such should be given as a Thai solar year, not\n * the Gregorian year that you get from the Javascript Date class. In\n * order to initialize a date instance when you don't know what subclass\n * will be instantiated for the locale, use a parameter such as \"unixtime\" \n * or \"julianday\" which are unambiguous and based on UTC time, instead of\n * the year/month/date date components. The date components for that UTC \n * time will be calculated and the time zone offset will be automatically \n * factored in.\n *  \n * @param {Object=} options options controlling the construction of this instance, or\n * undefined to use the default options\n * @return {ilib.Date} an instance of a calendar object of the appropriate type \n */\nilib.Date.newInstance = function(options) {\n\tvar locale = options && options.locale,\n\t\ttype = options && (options.type || options.calendar),\n\t\tcons;\n\n\tif (!locale) {\n\t\tlocale = new ilib.Locale();\t// default locale\n\t}\n\t\n\tif (!type) {\n\t\tvar info = new ilib.LocaleInfo(locale);\n\t\ttype = info.getCalendar();\n\t}\n\n\tcons = ilib.Date._constructors[type];\n\t\n\t// pass the same options through to the constructor so the subclass\n\t// has the ability to do something with if it needs to\n\treturn cons && new cons(options);\n};\n\n/**\n * Convert JavaScript Date objects and other types into native ilib Dates. This accepts any\n * string or number that can be translated by the JavaScript Date class,\n * (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse)\n * any JavaScript Date classed object, any ilib.Date subclass, an ilib.JulianDay object, an object\n * containing the normal options to initialize an ilib.Date instance, or null (will \n * return null or undefined if input is null or undefined). Normal output is \n * a standard native subclass of the ilib Date object as appropriate for the locale.\n * \n * @static\n * @private\n * @param  {ilib.Date|Object|ilib.JulianDay|Date|string|number=} inDate The input date object, string or Number.\n * @param  {ilib.String|string=} timezone timezone to use if a new date object is created\n * @return {ilib.Date|null|undefined} an ilib.Date subclass equivalent to the given inDate\n */\nilib.Date._dateToIlib = function(inDate, timezone) {\n\tif (typeof(inDate) === 'undefined' || inDate === null) {\n\t\treturn inDate;\n\t}\n\tif (inDate instanceof ilib.Date) {\n\t\treturn inDate;\n\t}\n\tif (inDate instanceof Date) {\n\t\treturn ilib.Date.newInstance({\n\t\t\tunixtime: inDate.getTime(),\n\t\t\ttimezone: timezone\n\t\t});\n\t}\n\tif (inDate instanceof ilib.JulianDay) {\n\t\treturn ilib.Date.newInstance({\n\t\t\tjd: inDate,\n\t\t\ttimezone: timezone\n\t\t});\n\t}\n\tif (typeof(inDate) === 'number') {\n\t\treturn ilib.Date.newInstance({\n\t\t\tunixtime: inDate,\n\t\t\ttimezone: timezone\n\t\t});\n\t}\n\tif (typeof(inDate) === 'object') {\n\t\treturn ilib.Date.newInstance(inDate);\n\t}\n\tif (typeof(inDate) === 'string') {\n\t\tinDate = new Date(inDate);\n\t}\n\treturn ilib.Date.newInstance({\n\t\tunixtime: inDate.getTime(),\n\t\ttimezone: timezone\n\t});\n};\n\n/* place for the subclasses to put their constructors so that the factory method\n * can find them. Do this to add your date after it's defined: \n * ilib.Date._constructors[\"mytype\"] = ilib.Date.MyTypeConstructor;\n */\nilib.Date._constructors = {};\n\nilib.Date.prototype = {\n\tgetType: function() {\n\t\treturn \"ilib.Date\";\n\t},\n\t\n\t/**\n\t * Return the unix time equivalent to this date instance. Unix time is\n\t * the number of milliseconds since midnight on Jan 1, 1970 UTC (Gregorian). This \n\t * method only returns a valid number for dates between midnight, \n\t * Jan 1, 1970 UTC (Gregorian) and Jan 19, 2038 at 3:14:07am UTC (Gregorian) when \n\t * the unix time runs out. If this instance encodes a date outside of that range, \n\t * this method will return -1. For date types that are not Gregorian, the point \n\t * in time represented by this date object will only give a return value if it\n\t * is in the correct range in the Gregorian calendar as given previously.\n\t * \n\t * @return {number} a number giving the unix time, or -1 if the date is outside the\n\t * valid unix time range\n\t */\n\tgetTime: function() {\n\t\treturn this.rd.getTime(); \n\t},\n\t\n\t/**\n\t * Return the extended unix time equivalent to this Gregorian date instance. Unix time is\n\t * the number of milliseconds since midnight on Jan 1, 1970 UTC. Traditionally unix time\n\t * (or the type \"time_t\" in C/C++) is only encoded with an unsigned 32 bit integer, and thus \n\t * runs out on Jan 19, 2038. However, most Javascript engines encode numbers well above \n\t * 32 bits and the Date object allows you to encode up to 100 million days worth of time \n\t * after Jan 1, 1970, and even more interestingly, 100 million days worth of time before\n\t * Jan 1, 1970 as well. This method returns the number of milliseconds in that extended \n\t * range. If this instance encodes a date outside of that range, this method will return\n\t * NaN.\n\t * \n\t * @return {number} a number giving the extended unix time, or Nan if the date is outside \n\t * the valid extended unix time range\n\t */\n\tgetTimeExtended: function() {\n\t\treturn this.rd.getTimeExtended();\n\t},\n\n\t/**\n\t * Set the time of this instance according to the given unix time. Unix time is\n\t * the number of milliseconds since midnight on Jan 1, 1970.\n\t * \n\t * @param {number} millis the unix time to set this date to in milliseconds \n\t */\n\tsetTime: function(millis) {\n\t\tthis.rd = this.newRd({\n\t\t\tunixtime: millis,\n\t\t\tcal: this.cal\n\t\t});\n\t\tthis._calcDateComponents();\n\t},\n\t\n\tgetDays: function() {\n\t\treturn this.day;\n\t},\n\tgetMonths: function() {\n\t\treturn this.month;\n\t},\n\tgetYears: function() {\n\t\treturn this.year;\n\t},\n\tgetHours: function() {\n\t\treturn this.hour;\n\t},\n\tgetMinutes: function() {\n\t\treturn this.minute;\n\t},\n\tgetSeconds: function() {\n\t\treturn this.second;\n\t},\n\tgetMilliseconds: function() {\n\t\treturn this.millisecond;\n\t},\n\n\tsetDays: function(day) {\n\t\tthis.day = parseInt(day, 10) || 1;\n\t\tthis.rd._setDateComponents(this);\n\t},\n\tsetMonths: function(month) {\n\t\tthis.month = parseInt(month, 10) || 1;\n\t\tthis.rd._setDateComponents(this);\n\t},\n\tsetYears: function(year) {\n\t\tthis.year = parseInt(year, 10) || 0;\n\t\tthis.rd._setDateComponents(this);\n\t},\n\t\n\tsetHours: function(hour) {\n\t\tthis.hour = parseInt(hour, 10) || 0;\n\t\tthis.rd._setDateComponents(this);\n\t},\n\tsetMinutes: function(minute) {\n\t\tthis.minute = parseInt(minute, 10) || 0;\n\t\tthis.rd._setDateComponents(this);\n\t},\n\tsetSeconds: function(second) {\n\t\tthis.second = parseInt(second, 10) || 0;\n\t\tthis.rd._setDateComponents(this);\n\t},\n\tsetMilliseconds: function(milli) {\n\t\tthis.millisecond = parseInt(milli, 10) || 0;\n\t\tthis.rd._setDateComponents(this);\n\t},\n\t\n\t/**\n\t * Return a new date instance in the current calendar that represents the first instance \n\t * of the given day of the week before the current date. The day of the week is encoded\n\t * as a number where 0 = Sunday, 1 = Monday, etc.\n\t * \n\t * @param {number} dow the day of the week before the current date that is being sought\n\t * @return {ilib.Date} the date being sought\n\t */\n\tbefore: function (dow) {\n\t\treturn this.cal.newDateInstance({\n\t\t\trd: this.rd.before(dow, this.offset),\n\t\t\ttimezone: this.timezone\n\t\t});\n\t},\n\t\n\t/**\n\t * Return a new date instance in the current calendar that represents the first instance \n\t * of the given day of the week after the current date. The day of the week is encoded\n\t * as a number where 0 = Sunday, 1 = Monday, etc.\n\t * \n\t * @param {number} dow the day of the week after the current date that is being sought\n\t * @return {ilib.Date} the date being sought\n\t */\n\tafter: function (dow) {\n\t\treturn this.cal.newDateInstance({\n\t\t\trd: this.rd.after(dow, this.offset),\n\t\t\ttimezone: this.timezone\n\t\t});\n\t},\n\n\t/**\n\t * Return a new Gregorian date instance that represents the first instance of the \n\t * given day of the week on or before the current date. The day of the week is encoded\n\t * as a number where 0 = Sunday, 1 = Monday, etc.\n\t * \n\t * @param {number} dow the day of the week on or before the current date that is being sought\n\t * @return {ilib.Date} the date being sought\n\t */\n\tonOrBefore: function (dow) {\n\t\treturn this.cal.newDateInstance({\n\t\t\trd: this.rd.onOrBefore(dow, this.offset),\n\t\t\ttimezone: this.timezone\n\t\t});\n\t},\n\n\t/**\n\t * Return a new Gregorian date instance that represents the first instance of the \n\t * given day of the week on or after the current date. The day of the week is encoded\n\t * as a number where 0 = Sunday, 1 = Monday, etc.\n\t * \n\t * @param {number} dow the day of the week on or after the current date that is being sought\n\t * @return {ilib.Date} the date being sought\n\t */\n\tonOrAfter: function (dow) {\n\t\treturn this.cal.newDateInstance({\n\t\t\trd: this.rd.onOrAfter(dow, this.offset),\n\t\t\ttimezone: this.timezone\n\t\t});\n\t},\n\t\n\t/**\n\t * Return a Javascript Date object that is equivalent to this date\n\t * object.\n\t * \n\t * @return {Date|undefined} a javascript Date object\n\t */\n\tgetJSDate: function() {\n\t\tvar unix = this.rd.getTimeExtended();\n\t\treturn isNaN(unix) ? undefined : new Date(unix); \n\t},\n\t\n\t/**\n\t * Return the Rata Die (fixed day) number of this date.\n\t * \n\t * @protected\n\t * @return {number} the rd date as a number\n\t */\n\tgetRataDie: function() {\n\t\treturn this.rd.getRataDie();\n\t},\n\t\n\t/**\n\t * Set the date components of this instance based on the given rd.\n\t * @protected\n\t * @param {number} rd the rata die date to set\n\t */\n\tsetRd: function (rd) {\n\t\tthis.rd = this.newRd({\n\t\t\trd: rd,\n\t\t\tcal: this.cal\n\t\t});\n\t\tthis._calcDateComponents();\n\t},\n\t\n\t/**\n\t * Return the Julian Day equivalent to this calendar date as a number.\n\t * \n\t * @return {number} the julian date equivalent of this date\n\t */\n\tgetJulianDay: function() {\n\t\treturn this.rd.getJulianDay();\n\t},\n\t\n\t/**\n\t * Set the date of this instance using a Julian Day.\n\t * @param {number|ilib.JulianDay} date the Julian Day to use to set this date\n\t */\n\tsetJulianDay: function (date) {\n\t\tthis.rd = this.newRd({\n\t\t\tjulianday: (typeof(date) === 'object') ? date.getDate() : date,\n\t\t\tcal: this.cal\n\t\t});\n\t\tthis._calcDateComponents();\n\t},\n\n\t/**\n\t * Return the time zone associated with this date, or \n\t * undefined if none was specified in the constructor.\n\t * \n\t * @return {string|undefined} the name of the time zone for this date instance\n\t */\n\tgetTimeZone: function() {\n\t\treturn this.timezone || \"local\";\n\t},\n\t\n\t/**\n\t * Set the time zone associated with this date.\n\t * @param {string=} tzName the name of the time zone to set into this date instance,\n\t * or \"undefined\" to unset the time zone \n\t */\n\tsetTimeZone: function (tzName) {\n\t\tif (!tzName || tzName === \"\") {\n\t\t\t// same as undefining it\n\t\t\tthis.timezone = undefined;\n\t\t\tthis.tz = undefined;\n\t\t} else if (typeof(tzName) === 'string') {\n\t\t\tthis.timezone = tzName;\n\t\t\tthis.tz = undefined;\n\t\t\t// assuming the same UTC time, but a new time zone, now we have to \n\t\t\t// recalculate what the date components are\n\t\t\tthis._calcDateComponents();\n\t\t}\n\t},\n\t\n\t/**\n\t * Return the rd number of the first Sunday of the given ISO year.\n\t * @protected\n\t * @param {number} year the year for which the first Sunday is being sought\n\t * @return {number} the rd of the first Sunday of the ISO year\n\t */\n\tfirstSunday: function (year) {\n\t\tvar firstDay = this.newRd({\n\t\t\tyear: year,\n\t\t\tmonth: 1,\n\t\t\tday: 1,\n\t\t\thour: 0,\n\t\t\tminute: 0,\n\t\t\tsecond: 0,\n\t\t\tmillisecond: 0,\n\t\t\tcal: this.cal\n\t\t});\n\t\tvar firstThu = this.newRd({\n\t\t\trd: firstDay.onOrAfter(4),\n\t\t\tcal: this.cal\n\t\t});\n\t\treturn firstThu.before(0);\n\t},\n\t\n\t/**\n\t * Return the ISO 8601 week number in the current year for the current date. The week\n\t * number ranges from 0 to 55, as some years have 55 weeks assigned to them in some\n\t * calendars.\n\t * \n\t * @return {number} the week number for the current date\n\t */\n\tgetWeekOfYear: function() {\n\t\tvar rd = Math.floor(this.rd.getRataDie());\n\t\tvar year = this._calcYear(rd + this.offset);\n\t\tvar yearStart = this.firstSunday(year);\n\t\tvar nextYear;\n\t\t\n\t\t// if we have a January date, it may be in this ISO year or the previous year\n\t\tif (rd < yearStart) {\n\t\t\tyearStart = this.firstSunday(year-1);\n\t\t} else {\n\t\t\t// if we have a late December date, it may be in this ISO year, or the next year\n\t\t\tnextYear = this.firstSunday(year+1);\n\t\t\tif (rd >= nextYear) {\n\t\t\t\tyearStart = nextYear;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn Math.floor((rd-yearStart)/7) + 1;\n\t},\n\t\n\t/**\n\t * Return the ordinal number of the week within the month. The first week of a month is\n\t * the first one that contains 4 or more days in that month. If any days precede this\n\t * first week, they are marked as being in week 0. This function returns values from 0\n\t * through 6.<p>\n\t * \n\t * The locale is a required parameter because different locales that use the same \n\t * Gregorian calendar consider different days of the week to be the beginning of\n\t * the week. This can affect the week of the month in which some days are located.\n\t * \n\t * @param {ilib.Locale|string} locale the locale or locale spec to use when figuring out \n\t * the first day of the week\n\t * @return {number} the ordinal number of the week within the current month\n\t */\n\tgetWeekOfMonth: function(locale) {\n\t\tvar li = new ilib.LocaleInfo(locale);\n\t\t\n\t\tvar first = this.newRd({\n\t\t\tyear: this._calcYear(this.rd.getRataDie()+this.offset),\n\t\t\tmonth: this.getMonths(),\n\t\t\tday: 1,\n\t\t\thour: 0,\n\t\t\tminute: 0,\n\t\t\tsecond: 0,\n\t\t\tmillisecond: 0,\n\t\t\tcal: this.cal\n\t\t});\n\t\tvar weekStart = first.onOrAfter(li.getFirstDayOfWeek());\n\t\t\n\t\tif (weekStart - first.getRataDie() > 3) {\n\t\t\t// if the first week has 4 or more days in it of the current month, then consider\n\t\t\t// that week 1. Otherwise, it is week 0. To make it week 1, move the week start\n\t\t\t// one week earlier.\n\t\t\tweekStart -= 7;\n\t\t}\n\t\treturn Math.floor((this.rd.getRataDie() - weekStart) / 7) + 1;\n\t}\n};\n\n/*\n * util/utils.js - Core utility routines\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js\n\n/**\n * If Function.prototype.bind does not exist in this JS engine, this\n * function reimplements it in terms of older JS functions.\n * bind() doesn't exist in many older browsers.\n * \n * @param {Object} scope object that the method should operate on\n * @param {function(...)} method method to call\n * @return {function(...)|undefined} function that calls the given method \n * in the given scope with all of its arguments properly attached, or\n * undefined if there was a problem with the arguments\n */\nilib.bind = function(scope, method/*, bound arguments*/){\n\tif (!scope || !method) {\n\t\treturn undefined;\n\t}\n\t\n\t/** @protected \n\t * @param {Arguments} inArrayLike\n\t * @param {number=} inOffset\n\t */\n\tfunction cloneArray(inArrayLike, inOffset) {\n\t\tvar arr = [];\n\t\tfor(var i = inOffset || 0, l = inArrayLike.length; i<l; i++){\n\t\t\tarr.push(inArrayLike[i]);\n\t\t}\n\t\treturn arr;\n\t}\n\n\tif (typeof(method) === 'function') {\n\t\tvar func, args = cloneArray(arguments, 2);\n\t\tif (typeof(method.bind) === 'function') {\n\t\t\tfunc = method.bind.apply(method, [scope].concat(args));\n\t\t} else {\n\t\t\tfunc = function() {\n\t\t\t\tvar nargs = cloneArray(arguments);\n\t\t\t\t// invoke with collected args\n\t\t\t\treturn method.apply(scope, args.concat(nargs));\n\t\t\t};\n\t\t}\n\t\treturn func;\n\t}\n\treturn undefined;\n};\n\n/**\n * Merge the properties of object2 into object1 in a deep manner and return a merged\n * object. If the property exists in both objects, the value in object2 will overwrite \n * the value in object1. If a property exists in object1, but not in object2, its value\n * will not be touched. If a property exists in object2, but not in object1, it will be \n * added to the merged result.<p>\n * \n * Name1 and name2 are for creating debug output only. They are not necessary.<p>\n * \n * Depends directive: !depends utils.js\n * \n * @param {*} object1 the object to merge into\n * @param {*} object2 the object to merge\n * @param {boolean=} replace if true, replace the array elements in object1 with those in object2.\n * If false, concatenate array elements in object1 with items in object2.\n * @param {string=} name1 name of the object being merged into\n * @param {string=} name2 name of the object being merged in\n * @return {Object} the merged object\n */\nilib.merge = function (object1, object2, replace, name1, name2) {\n\tvar prop = undefined,\n\t\tnewObj = {};\n\tfor (prop in object1) {\n\t\tif (prop && typeof(object1[prop]) !== 'undefined') {\n\t\t\tnewObj[prop] = object1[prop];\n\t\t}\n\t}\n\tfor (prop in object2) {\n\t\tif (prop && typeof(object2[prop]) !== 'undefined') {\n\t\t\tif (object1[prop] instanceof Array && object2[prop] instanceof Array) {\n\t\t\t\tif (typeof(replace) !== 'boolean' || !replace) {\n\t\t\t\t\tnewObj[prop] = new Array();\n\t\t\t\t\tnewObj[prop] = newObj[prop].concat(object1[prop]);\n\t\t\t\t\tnewObj[prop] = newObj[prop].concat(object2[prop]);\n\t\t\t\t} else {\n\t\t\t\t\tnewObj[prop] = object2[prop];\n\t\t\t\t}\n\t\t\t} else if (typeof(object1[prop]) === 'object' && typeof(object2[prop]) === 'object') {\n\t\t\t\tnewObj[prop] = ilib.merge(object1[prop], object2[prop], replace);\n\t\t\t} else {\n\t\t\t\t// for debugging. Used to determine whether or not json files are overriding their parents unnecessarily\n\t\t\t\tif (name1 && name2 && newObj[prop] == object2[prop]) {\n\t\t\t\t\tconsole.log(\"Property \" + prop + \" in \" + name1 + \" is being overridden by the same value in \" + name2);\n\t\t\t\t}\n\t\t\t\tnewObj[prop] = object2[prop];\n\t\t\t}\n\t\t}\n\t}\n\treturn newObj;\n};\n\n/**\n * Find and merge all the locale data for a particular prefix in the given locale\n * and return it as a single javascript object. This merges the data in the \n * correct order:\n * \n * <ol>\n * <li>shared data (usually English)\n * <li>data for language\n * <li>data for language + region\n * <li>data for language + region + script\n * <li>data for language + region + script + variant\n * </ol>\n * \n * It is okay for any of the above to be missing. This function will just skip the \n * missing data. However, if everything except the shared data is missing, this \n * function returns undefined, allowing the caller to go and dynamically load the\n * data instead.\n *  \n * @param {string} prefix prefix under ilib.data of the data to merge\n * @param {ilib.Locale} locale locale of the data being sought\n * @param {boolean=} replaceArrays if true, replace the array elements in object1 with those in object2.\n * If false, concatenate array elements in object1 with items in object2.\n * @param {boolean=} returnOne if true, only return the most locale-specific data. If false,\n * merge all the relevant locale data together.\n * @return {Object?} the merged locale data\n */\nilib.mergeLocData = function (prefix, locale, replaceArrays, returnOne) {\n\tvar data = undefined;\n\tvar loc = locale || new ilib.Locale();\n\tvar foundLocaleData = false;\n\tvar property = prefix;\n\tvar mostSpecific;\n\n\tdata = ilib.data[prefix] || {};\n\n\tmostSpecific = data;\n\n\tif (loc.getLanguage()) {\n\t\tproperty = prefix + '_' + loc.getLanguage();\n\t\tif (ilib.data[property]) {\n\t\t\tfoundLocaleData = true;\n\t\t\tdata = ilib.merge(data, ilib.data[property], replaceArrays);\n\t\t\tmostSpecific = ilib.data[property];\n\t\t}\n\t}\n\t\n\tif (loc.getRegion()) {\n\t\tproperty = prefix + '_' + loc.getRegion();\n\t\tif (ilib.data[property]) {\n\t\t\tfoundLocaleData = true;\n\t\t\tdata = ilib.merge(data, ilib.data[property], replaceArrays);\n\t\t\tmostSpecific = ilib.data[property];\n\t\t}\n\t}\n\t\n\tif (loc.getLanguage()) {\n\t\tproperty = prefix + '_' + loc.getLanguage();\n\t\t\n\t\tif (loc.getScript()) {\n\t\t\tproperty = prefix + '_' + loc.getLanguage() + '_' + loc.getScript();\n\t\t\tif (ilib.data[property]) {\n\t\t\t\tfoundLocaleData = true;\n\t\t\t\tdata = ilib.merge(data, ilib.data[property], replaceArrays);\n\t\t\t\tmostSpecific = ilib.data[property];\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (loc.getRegion()) {\n\t\t\tproperty = prefix + '_' + loc.getLanguage() + '_' + loc.getRegion();\n\t\t\tif (ilib.data[property]) {\n\t\t\t\tfoundLocaleData = true;\n\t\t\t\tdata = ilib.merge(data, ilib.data[property], replaceArrays);\n\t\t\t\tmostSpecific = ilib.data[property];\n\t\t\t}\n\t\t}\t\t\n\t}\n\t\n\tif (loc.getRegion() && loc.getVariant()) {\n\t\tproperty = prefix + '_' + loc.getLanguage() + '_' + loc.getVariant();\n\t\tif (ilib.data[property]) {\n\t\t\tfoundLocaleData = true;\n\t\t\tdata = ilib.merge(data, ilib.data[property], replaceArrays);\n\t\t\tmostSpecific = ilib.data[property];\n\t\t}\n\t}\n\n\tif (loc.getLanguage() && loc.getScript() && loc.getRegion()) {\n\t\tproperty = prefix + '_' + loc.getLanguage() + '_' + loc.getScript() + '_' + loc.getRegion();\n\t\tif (ilib.data[property]) {\n\t\t\tfoundLocaleData = true;\n\t\t\tdata = ilib.merge(data, ilib.data[property], replaceArrays);\n\t\t\tmostSpecific = ilib.data[property];\n\t\t}\n\t}\n\n\tif (loc.getLanguage() && loc.getRegion() && loc.getVariant()) {\n\t\tproperty = prefix + '_' + loc.getLanguage() + '_' + loc.getRegion() + '_' + loc.getVariant();\n\t\tif (ilib.data[property]) {\n\t\t\tfoundLocaleData = true;\n\t\t\tdata = ilib.merge(data, ilib.data[property], replaceArrays);\n\t\t\tmostSpecific = ilib.data[property];\n\t\t}\n\t}\n\n\tif (loc.getLanguage() && loc.getScript() && loc.getRegion() && loc.getVariant()) {\n\t\tproperty = prefix + '_' + loc.getLanguage() + '_' + loc.getScript() + '_' + loc.getRegion() + '_' + loc.getVariant();\n\t\tif (ilib.data[property]) {\n\t\t\tfoundLocaleData = true;\n\t\t\tdata = ilib.merge(data, ilib.data[property], replaceArrays);\n\t\t\tmostSpecific = ilib.data[property];\n\t\t}\n\t}\n\t\n\treturn foundLocaleData ? (returnOne ? mostSpecific : data) : undefined;\n};\n\n/**\n * Return an array of relative path names for the\n * files that represent the data for the given locale.<p>\n * \n * Note that to prevent the situation where a directory for\n * a language exists next to the directory for a region where\n * the language code and region code differ only by case, the \n * plain region directories are located under the special \n * \"undefined\" language directory which has the ISO code \"und\".\n * The reason is that some platforms have case-insensitive \n * file systems, and you cannot have 2 directories with the \n * same name which only differ by case. For example, \"es\" is\n * the ISO 639 code for the language \"Spanish\" and \"ES\" is\n * the ISO 3166 code for the region \"Spain\", so both the\n * directories cannot exist underneath \"locale\". The region\n * therefore will be loaded from \"und/ES\" instead.<p>  \n * \n * <h4>Variations</h4>\n * \n * With only language and region specified, the following\n * sequence of paths will be generated:<p>\n * \n * <pre>\n * language\n * und/region\n * language/region\n * </pre>\n * \n * With only language and script specified:<p>\n * \n * <pre>\n * language\n * language/script\n * </pre>\n * \n * With only script and region specified:<p>\n * \n * <pre>\n * und/region  \n * </pre>\n * \n * With only region and variant specified:<p>\n * \n * <pre>\n * und/region\n * region/variant\n * </pre>\n * \n * With only language, script, and region specified:<p>\n * \n * <pre>\n * language\n * und/region\n * language/script\n * language/region\n * language/script/region\n * </pre>\n * \n * With only language, region, and variant specified:<p>\n * \n * <pre>\n * language\n * und/region\n * language/region\n * region/variant\n * language/region/variant\n * </pre>\n * \n * With all parts specified:<p>\n * \n * <pre>\n * language\n * und/region\n * language/script\n * language/region\n * region/variant\n * language/script/region\n * language/region/variant\n * language/script/region/variant\n * </pre>\n * \n * @param {ilib.Locale} locale load the files for this locale\n * @param {string?} name the file name of each file to load without\n * any path\n * @return {Array.<string>} An array of relative path names\n * for the files that contain the locale data\n */\nilib.getLocFiles = function(locale, name) {\n\tvar dir = \"\";\n\tvar files = [];\n\tvar filename = name || \"resources.json\";\n\tvar loc = locale || new ilib.Locale();\n\t\n\tvar language = loc.getLanguage();\n\tvar region = loc.getRegion();\n\tvar script = loc.getScript();\n\tvar variant = loc.getVariant();\n\t\n\tfiles.push(filename); // generic shared file\n\t\n\tif (language) {\n\t\tdir = language + \"/\";\n\t\tfiles.push(dir + filename);\n\t}\n\t\n\tif (region) {\n\t\tdir = \"und/\" + region + \"/\";\n\t\tfiles.push(dir + filename);\n\t}\n\t\n\tif (language) {\n\t\tif (script) {\n\t\t\tdir = language + \"/\" + script + \"/\";\n\t\t\tfiles.push(dir + filename);\n\t\t}\n\t\tif (region) {\n\t\t\tdir = language + \"/\" + region + \"/\";\n\t\t\tfiles.push(dir + filename);\n\t\t}\n\t}\n\t\n\tif (region && variant) {\n\t\tdir = \"und/\" + region + \"/\" + variant + \"/\";\n\t\tfiles.push(dir + filename);\n\t}\n\n\tif (language && script && region) {\n\t\tdir = language + \"/\" + script + \"/\" + region + \"/\";\n\t\tfiles.push(dir + filename);\n\t}\n\n\tif (language && region && variant) {\n\t\tdir = language + \"/\" + region + \"/\" + variant + \"/\";\n\t\tfiles.push(dir + filename);\n\t}\n\n\tif (language && script && region && variant) {\n\t\tdir = language + \"/\" + script + \"/\" + region + \"/\" + variant + \"/\";\n\t\tfiles.push(dir + filename);\n\t}\n\t\n\treturn files;\n};\n\n/**\n * Return true if the given object has no properties.<p>\n * \n * Depends directive: !depends utils.js\n * \n * @param {Object} obj the object to check\n * @return {boolean} true if the given object has no properties, false otherwise\n */\nilib.isEmpty = function (obj) {\n\tvar prop = undefined;\n\t\n\tif (!obj) {\n\t\treturn true;\n\t}\n\t\n\tfor (prop in obj) {\n\t\tif (prop && typeof(obj[prop]) !== 'undefined') {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\n\n/**\n * @private\n */\nilib.hashCode = function(obj) {\n\tvar hash = 0;\n\t\n\tfunction addHash(hash, newValue) {\n\t\t// co-prime numbers creates a nicely distributed hash\n\t\thash *= 65543;\n\t\thash += newValue;\n\t\thash %= 2147483647; \n\t\treturn hash;\n\t}\n\t\n\tfunction stringHash(str) {\n\t\tvar hash = 0;\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\thash = addHash(hash, str.charCodeAt(i));\n\t\t}\n\t\treturn hash;\n\t}\n\t\n\tswitch (typeof(obj)) {\n\t\tcase 'undefined':\n\t\t\thash = 0;\n\t\t\tbreak;\n\t\tcase 'string':\n\t\t\thash = stringHash(obj);\n\t\t\tbreak;\n\t\tcase 'function':\n\t\tcase 'number':\n\t\tcase 'xml':\n\t\t\thash = stringHash(String(obj));\n\t\t\tbreak;\n\t\tcase 'boolean':\n\t\t\thash = obj ? 1 : 0;\n\t\t\tbreak;\n\t\tcase 'object':\n\t\t\tvar props = [];\n\t\t\tfor (var p in obj) {\n\t\t\t\tif (obj.hasOwnProperty(p)) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// make sure the order of the properties doesn't matter\n\t\t\tprops.sort();\n\t\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\t\thash = addHash(hash, stringHash(props[i]));\n\t\t\t\thash = addHash(hash, ilib.hashCode(obj[props[i]]));\n\t\t\t}\n\t\t\tbreak;\n\t}\n\t\n\treturn hash;\n};\n\n\n/**\n * Load data using the new loader object or via the old function callback.\n * @private\n */\nilib._callLoadData = function (files, sync, params, callback) {\n\t// console.log(\"ilib._callLoadData called\");\n\tif (typeof(ilib._load) === 'function') {\n\t\t// console.log(\"ilib._callLoadData: calling as a regular function\");\n\t\treturn ilib._load(files, sync, params, callback);\n\t} else if (typeof(ilib._load) === 'object' && ilib._load instanceof ilib.Loader) {\n\t\t// console.log(\"ilib._callLoadData: calling as an object\");\n\t\treturn ilib._load.loadFiles(files, sync, params, callback);\n\t}\n\t\n\t// console.log(\"ilib._callLoadData: not calling. Type is \" + typeof(ilib._load) + \" and instanceof says \" + (ilib._load instanceof ilib.Loader));\n\treturn undefined;\n};\n\n/**\n * Find locale data or load it in. If the data with the given name is preassembled, it will\n * find the data in ilib.data. If the data is not preassembled but there is a loader function,\n * this function will call it to load the data. Otherwise, the callback will be called with\n * undefined as the data. This function will create a cache under the given class object.\n * If data was successfully loaded, it will be set into the cache so that future access to \n * the same data for the same locale is much quicker.<p>\n * \n * The parameters can specify any of the following properties:<p>\n * \n * <ul>\n * <li><i>name</i> - String. The name of the file being loaded. Default: resources.json\n * <li><i>object</i> - Object. The class attempting to load data. The cache is stored inside of here.\n * <li><i>locale</i> - ilib.Locale. The locale for which data is loaded. Default is the current locale.\n * <li><i>nonlocale</i> - boolean. If true, the data being loaded is not locale-specific.\n * <li><i>type</i> - String. Type of file to load. This can be \"json\" or \"other\" type. Default: \"json\" \n * <li><i>replace</i> - boolean. When merging json objects, this parameter controls whether to merge arrays\n * or have arrays replace each other. If true, arrays in child objects replace the arrays in parent \n * objects. When false, the arrays in child objects are concatenated with the arrays in parent objects.  \n * <li><i>loadParams</i> - Object. An object with parameters to pass to the loader function\n * <li><i>sync</i> - boolean. Whether or not to load the data synchronously\n * <li><i>callback</i> - function(?)=. callback Call back function to call when the data is available.\n * Data is not returned from this method, so a callback function is mandatory.\n * </ul>\n * \n * @param {Object} params Parameters configuring how to load the files (see above)\n */\nilib.loadData = function(params) {\n\tvar name = \"resources.json\",\n\t\tobject = undefined, \n\t\tlocale = new ilib.Locale(ilib.getLocale()), \n\t\tsync = false, \n\t\ttype = undefined,\n\t\tloadParams = {},\n\t\tcallback = undefined,\n\t\tnonlocale = false,\n\t\treplace = false,\n\t\tbasename;\n\t\n\tif (!params || typeof(params.callback) !== 'function') {\n\t\treturn;\n\t}\n\n\tif (params.name) {\n\t\tname = params.name;\n\t}\n\tif (params.object) {\n\t\tobject = params.object;\n\t}\n\tif (params.locale) {\n\t\tlocale = (typeof(params.locale) === 'string') ? new ilib.Locale(params.locale) : params.locale;\n\t}\t\t\t\n\tif (params.type) {\n\t\ttype = params.type;\n\t}\n\tif (params.loadParams) {\n\t\tloadParams = params.loadParams;\n\t}\n\tif (params.sync) {\n\t\tsync = params.sync;\n\t}\n\tif (params.nonlocale) {\n\t\tnonlocale = !!params.nonlocale;\n\t}\n\tif (typeof(params.replace) === 'boolean') {\n\t\treplace = params.replace;\n\t}\n\t\n\tcallback = params.callback;\n\t\n\tif (object && !object.cache) {\n\t\tobject.cache = {};\n\t}\n\t\n\tif (!type) {\n\t\tvar dot = name.lastIndexOf(\".\");\n\t\ttype = (dot !== -1) ? name.substring(dot+1) : \"text\";\n\t}\n\n\tvar spec = ((!nonlocale && locale.getSpec().replace(/-/g, '_')) || \"root\") + \",\" + name + \",\" + String(ilib.hashCode(loadParams));\n\tif (!object || typeof(object.cache[spec]) === 'undefined') {\n\t\tvar data, returnOne = (loadParams && loadParams.returnOne);\n\t\t\n\t\tif (type === \"json\") {\n\t\t\t// console.log(\"type is json\");\n\t\t\tbasename = name.substring(0, name.lastIndexOf(\".\"));\n\t\t\tif (nonlocale) {\n\t\t\t\tbasename = basename.replace(/\\//g, '.').replace(/[\\\\\\+\\-]/g, \"_\");\n\t\t\t\tdata = ilib.data[basename];\n\t\t\t} else {\n\t\t\t\tdata = ilib.mergeLocData(basename, locale, replace, returnOne);\n\t\t\t}\n\t\t\tif (data) {\n\t\t\t\t// console.log(\"found assembled data\");\n\t\t\t\tif (object) {\n\t\t\t\t\tobject.cache[spec] = data;\n\t\t\t\t}\n\t\t\t\tcallback(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// console.log(\"ilib._load is \" + typeof(ilib._load));\n\t\tif (typeof(ilib._load) !== 'undefined') {\n\t\t\t// the data is not preassembled, so attempt to load it dynamically\n\t\t\tvar files = nonlocale ? [ name || \"resources.json\" ] : ilib.getLocFiles(locale, name);\n\t\t\tif (type !== \"json\") {\n\t\t\t\tloadParams.returnOne = true;\n\t\t\t}\n\t\t\t\n\t\t\tilib._callLoadData(files, sync, loadParams, ilib.bind(this, function(arr) {\n\t\t\t\tif (type === \"json\") {\n\t\t\t\t\tdata = ilib.data[basename] || {};\n\t\t\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\t\t\tif (typeof(arr[i]) !== 'undefined') {\n\t\t\t\t\t\t\tdata = loadParams.returnOne ? arr[i] : ilib.merge(data, arr[i], replace);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (object) {\n\t\t\t\t\t\tobject.cache[spec] = data;\n\t\t\t\t\t}\n\t\t\t\t\tcallback(data);\n\t\t\t\t} else {\n\t\t\t\t\tvar i = arr.length-1; \n\t\t\t\t\twhile (i > -1 && !arr[i]) {\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t\tif (i > -1) {\n\t\t\t\t\t\tif (object) {\n\t\t\t\t\t\t\tobject.cache[spec] = arr[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallback(arr[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\t// no data other than the generic shared data\n\t\t\tif (type === \"json\") {\n\t\t\t\tdata = ilib.data[basename];\n\t\t\t}\n\t\t\tif (object && data) {\n\t\t\t\tobject.cache[spec] = data;\n\t\t\t}\n\t\t\tcallback(data);\n\t\t}\n\t} else {\n\t\tcallback(object.cache[spec]);\n\t}\n};\n\n/*\n * util/math.js - Misc math utility routines\n * \n * Copyright © 2013, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js\n\n/**\n * Return the sign of the given number. If the sign is negative, this function\n * returns -1. If the sign is positive or zero, this function returns 1.\n * @static\n * @param {number} num the number to test\n * @return {number} -1 if the number is negative, and 1 otherwise\n */\nilib.signum = function (num) {\n\tvar n = num;\n\tif (typeof(num) === 'string') {\n\t\tn = parseInt(num, 10);\n\t} else if (typeof(num) !== 'number') {\n\t\treturn 1;\n\t}\n\treturn (n < 0) ? -1 : 1;\n};\n\n\n/**\n * @protected\n */\nilib._roundFnc = {\n\t/**\n\t * @static\n\t * @protected\n\t * @param {number} num number to round\n\t * @return {number} rounded number\n\t */\n\tfloor: function (num) {\n\t\treturn Math.floor(num);\n\t},\n\t\n\t/**\n\t * @static\n\t * @protected\n\t * @param {number} num number to round\n\t * @return {number} rounded number\n\t */\n\tceiling: function (num) {\n\t\treturn Math.ceil(num);\n\t},\n\t\n\t/**\n\t * @static\n\t * @protected\n\t * @param {number} num number to round\n\t * @return {number} rounded number\n\t */\n\tdown: function (num) {\n\t\treturn (num < 0) ? Math.ceil(num) : Math.floor(num);\n\t},\n\t\n\t/**\n\t * @static\n\t * @protected\n\t * @param {number} num number to round\n\t * @return {number} rounded number\n\t */\n\tup: function (num) {\n\t\treturn (num < 0) ? Math.floor(num) : Math.ceil(num);\n\t},\n\t\n\t/**\n\t * @static\n\t * @protected\n\t * @param {number} num number to round\n\t * @return {number} rounded number\n\t */\n\thalfup: function (num) {\n\t\treturn (num < 0) ? Math.ceil(num - 0.5) : Math.floor(num + 0.5);\n\t},\n\t\n\t/**\n\t * @static\n\t * @protected\n\t * @param {number} num number to round\n\t * @return {number} rounded number\n\t */\n\thalfdown: function (num) {\n\t\treturn (num < 0) ? Math.floor(num + 0.5) : Math.ceil(num - 0.5);\n\t},\n\t\n\t/**\n\t * @static\n\t * @protected\n\t * @param {number} num number to round\n\t * @return {number} rounded number\n\t */\n\thalfeven: function (num) {\n\t\treturn (Math.floor(num) % 2 === 0) ? Math.ceil(num - 0.5) : Math.floor(num + 0.5);\n\t},\n\t\n\t/**\n\t * @static\n\t * @protected\n\t * @param {number} num number to round\n\t * @return {number} rounded number\n\t */\n\thalfodd: function (num) {\n\t\treturn (Math.floor(num) % 2 !== 0) ? Math.ceil(num - 0.5) : Math.floor(num + 0.5);\n\t}\n};\n\n/**\n * Do a proper modulo function. The Javascript % operator will give the truncated\n * division algorithm, but for calendrical calculations, we need the Euclidean\n * division algorithm where the remainder of any division, whether the dividend\n * is negative or not, is always a positive number in the range [0, modulus).<p>\n * \n * Depends directive: !depends utils.js\n * \n * @param {number} dividend the number being divided\n * @param {number} modulus the number dividing the dividend. This should always be a positive number.\n * @return the remainder of dividing the dividend by the modulus.  \n */\nilib.mod = function (dividend, modulus) {\n\tif (modulus == 0) {\n\t\treturn 0;\n\t}\n\tvar x = dividend % modulus;\n\treturn (x < 0) ? x + modulus : x;\n};\n\n/**\n * Do a proper adjusted modulo function. The Javascript % operator will give the truncated\n * division algorithm, but for calendrical calculations, we need the Euclidean\n * division algorithm where the remainder of any division, whether the dividend\n * is negative or not, is always a positive number in the range (0, modulus]. The adjusted\n * modulo function differs from the regular modulo function in that when the remainder is\n * zero, the modulus should be returned instead.<p>\n * \n * Depends directive: !depends utils.js\n * \n * @param {number} dividend the number being divided\n * @param {number} modulus the number dividing the dividend. This should always be a positive number.\n * @return the remainder of dividing the dividend by the modulus.  \n */\nilib.amod = function (dividend, modulus) {\n\tif (modulus == 0) {\n\t\treturn 0;\n\t}\n\tvar x = dividend % modulus;\n\treturn (x <= 0) ? x + modulus : x;\n};\n\n/*\n * strings.js - ilib string subclass definition\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js util/utils.js locale.js util/math.js\n\n// !data plurals\n\n/**\n * @class\n * Create a new string instance. This string inherits from the Javascript\n * String class, and adds two more methods, fmt and fmtChoice. It can be\n * used anywhere that a normal Javascript string is used. The formatting\n * methods are of course most useful when localizing strings in an app\n * or web site in combination with the ilib.ResBundle class.<p>\n * \n * Depends directive: !depends strings.js\n * \n * @constructor\n * @param {string|ilib.String=} string initialize this instance with this string \n */\nilib.String = function (string) {\n\tif (typeof(string) === 'object') {\n\t\tif (string instanceof ilib.String) {\n\t\t\tthis.str = string.str;\t\n\t\t} else {\n\t\t\tthis.str = string.toString();\n\t\t}\n\t} else if (typeof(string) === 'string') {\n\t\tthis.str = new String(string);\n\t} else {\n\t\tthis.str = \"\";\n\t}\n\tthis.length = this.str.length;\n\tthis.cpLength = -1;\n\tthis.localeSpec = ilib.getLocale();\n};\n\n/**\n * Return true if the given character is a Unicode surrogate character,\n * either high or low.\n * \n * @private\n * @static\n * @param {string} ch character to check\n * @return {boolean} true if the character is a surrogate\n */\nilib.String._isSurrogate = function (ch) {\n\tvar n = ch.charCodeAt(0);\n\treturn ((n >= 0xDC00 && n <= 0xDFFF) || (n >= 0xD800 && n <= 0xDBFF));\n};\n\n/**\n * Convert a UCS-4 code point to a Javascript string. The codepoint can be any valid \n * UCS-4 Unicode character, including supplementary characters. Standard Javascript\n * only supports supplementary characters using the UTF-16 encoding, which has \n * values in the range 0x0000-0xFFFF. String.fromCharCode() will only\n * give you a string containing 16-bit characters, and will not properly convert \n * the code point for a supplementary character (which has a value > 0xFFFF) into \n * two UTF-16 surrogate characters. Instead, it will just just give you whatever\n * single character happens to be the same as your code point modulo 0x10000, which\n * is almost never what you want.<p> \n * \n * Similarly, that means if you use String.charCodeAt()\n * you will only retrieve a 16-bit value, which may possibly be a single\n * surrogate character that is part of a surrogate pair representing a character\n * in the supplementary plane. It will not give you a code point. Use \n * ilib.String.codePointAt() to access code points in a string, or use \n * an iterator to walk through the code points in a string. \n * \n * @static\n * @param {number} codepoint UCS-4 code point to convert to a character\n * @return {string} a string containing the character represented by the codepoint\n */\nilib.String.fromCodePoint = function (codepoint) {\n\tif (codepoint < 0x10000) {\n\t\treturn String.fromCharCode(codepoint);\n\t} else {\n\t\tvar high = Math.floor(codepoint / 0x10000) - 1;\n\t\tvar low = codepoint & 0xFFFF;\n\t\t\n\t\treturn String.fromCharCode(0xD800 | ((high & 0x000F) << 6) |  ((low & 0xFC00) >> 10)) +\n\t\t\tString.fromCharCode(0xDC00 | (low & 0x3FF));\n\t}\n};\n\n/**\n * Convert the character or the surrogate pair at the given\n * index into the intrinsic Javascript string to a Unicode \n * UCS-4 code point.\n * \n * @param {string} str string to get the code point from\n * @param {number} index index into the string\n * @return {number} code point of the character at the\n * given index into the string\n */\nilib.String.toCodePoint = function(str, index) {\n\tif (!str || str.length === 0) {\n\t\treturn -1;\n\t}\n\tvar code = -1, high = str.charCodeAt(index);\n\tif (high >= 0xD800 && high <= 0xDBFF) {\n\t\tif (str.length > index+1) {\n\t\t\tvar low = str.charCodeAt(index+1);\n\t\t\tif (low >= 0xDC00 && low <= 0xDFFF) {\n\t\t\t\tcode = (((high & 0x3C0) >> 6) + 1) << 16 |\n\t\t\t\t\t(((high & 0x3F) << 10) | (low & 0x3FF));\n\t\t\t}\n\t\t}\n\t} else {\n\t\tcode = high;\n\t}\n\t\n\treturn code;\n};\n\n/**\n * Load the plural the definitions of plurals for the locale.\n * @param {boolean=} sync\n * @param {ilib.Locale|string=} locale\n * @param {Object=} loadParams\n * @param {function(*)=} onLoad\n */\nilib.String.loadPlurals = function (sync, locale, loadParams, onLoad) {\n\tvar loc;\n\tif (locale) {\n\t\tloc = (typeof(locale) === 'string') ? new ilib.Locale(locale) : locale;\n\t} else {\n\t\tloc = new ilib.Locale(ilib.getLocale());\n\t}\n\tvar spec = loc.getLanguage();\n\tif (!ilib.data[\"plurals_\" + spec]) {\n\t\tilib.loadData({\n\t\t\tname: \"plurals.json\",\n\t\t\tobject: ilib.String,\n\t\t\tlocale: loc,\n\t\t\tsync: sync,\n\t\t\tloadParams: loadParams,\n\t\t\tcallback: /** @type function(Object=):undefined */ ilib.bind(this, /** @type function() */ function(plurals) {\n\t\t\t\tif (!plurals) {\n\t\t\t\t\tilib.String.cache[spec] = {};\n\t\t\t\t}\n\t\t\t\tilib.data[\"plurals_\" + spec] = plurals || {};\n\t\t\t\tif (onLoad && typeof(onLoad) === 'function') {\n\t\t\t\t\tonLoad(ilib.data[\"plurals_\" + spec]);\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t} else {\n\t\tif (onLoad && typeof(onLoad) === 'function') {\n\t\t\tonLoad(ilib.data[\"plurals_\" + spec]);\n\t\t}\n\t}\n};\n\n/**\n * @private\n * @static\n */\nilib.String._fncs = {\n\t/**\n\t * @private\n\t * @param {Object} obj\n\t * @return {string|undefined}\n\t */\n\tfirstProp: function (obj) {\n\t\tfor (var p in obj) {\n\t\t\tif (p && obj[p]) {\n\t\t\t\treturn p;\n\t\t\t}\n\t\t}\n\t\treturn undefined; // should never get here\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} obj\n\t * @param {number} n\n\t * @return {?}\n\t */\n\tgetValue: function (obj, n) {\n\t\tif (typeof(obj) === 'object') {\n\t\t\tvar subrule = ilib.String._fncs.firstProp(obj);\n\t\t\treturn ilib.String._fncs[subrule](obj[subrule], n);\n\t\t} else if (typeof(obj) === 'string') {\n\t\t\treturn n;\n\t\t} else {\n\t\t\treturn obj;\n\t\t}\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {number} n\n\t * @param {Array.<number|Array.<number>>} range\n\t * @return {boolean}\n\t */\n\tmatchRangeContinuous: function(n, range) {\n\t\tfor (var num in range) {\n\t\t\tif (typeof(num) !== 'undefined' && typeof(range[num]) !== 'undefined') {\n\t\t\t\tvar obj = /** @type {Object|null|undefined} */ range[num];\n\t\t\t\tif (typeof(obj) === 'number') {\n\t\t\t\t\tif (n === range[num]) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else if (Object.prototype.toString.call(obj) === '[object Array]') {\n\t\t\t\t\tif (n >= obj[0] && n <= obj[1]) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * @private\n\t * @param {number} n\n\t * @param {Array.<number|Array.<number>>} range\n\t * @return {boolean}\n\t */\n\tmatchRange: function(n, range) {\n\t\tif (Math.floor(n) !== n) {\n\t\t\treturn false;\n\t\t}\n\t\treturn ilib.String._fncs.matchRangeContinuous(n, range);\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {boolean}\n\t */\n\tis: function(rule, n) {\n\t\tvar left = ilib.String._fncs.getValue(rule[0], n);\n\t\tvar right = ilib.String._fncs.getValue(rule[1], n);\n\t\treturn left == right;\n\t\t// return ilib.String._fncs.getValue(rule[0]) == ilib.String._fncs.getValue(rule[1]);\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {boolean}\n\t */\n\tisnot: function(rule, n) {\n\t\treturn ilib.String._fncs.getValue(rule[0], n) != ilib.String._fncs.getValue(rule[1], n);\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {boolean}\n\t */\n\tinrange: function(rule, n) {\n\t\treturn ilib.String._fncs.matchRange(ilib.String._fncs.getValue(rule[0], n), rule[1]);\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {boolean}\n\t */\n\tnotin: function(rule, n) {\n\t\treturn !ilib.String._fncs.matchRange(ilib.String._fncs.getValue(rule[0], n), rule[1]);\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {boolean}\n\t */\n\twithin: function(rule, n) {\n\t\treturn ilib.String._fncs.matchRangeContinuous(ilib.String._fncs.getValue(rule[0], n), rule[1]);\t\t\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {number}\n\t */\n\tmod: function(rule, n) {\n\t\treturn ilib.mod(ilib.String._fncs.getValue(rule[0], n), ilib.String._fncs.getValue(rule[1], n));\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {number}\n\t */\n\tn: function(rule, n) {\n\t\treturn n;\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {boolean}\n\t */\n\tor: function(rule, n) {\n\t\treturn ilib.String._fncs.getValue(rule[0], n) || ilib.String._fncs.getValue(rule[1], n);\n\t},\n\t\n\t/**\n\t * @private\n\t * @param {Object} rule\n\t * @param {number} n\n\t * @return {boolean}\n\t */\n\tand: function(rule, n) {\n\t\treturn ilib.String._fncs.getValue(rule[0], n) && ilib.String._fncs.getValue(rule[1], n);\n\t}\n};\n\nilib.String.prototype = {\n\t/**\n\t * Return the length of this string in characters. This function defers to the regular\n\t * Javascript string class in order to perform the length function. Please note that this\n\t * method is a real method, whereas the length property of Javascript strings is \n\t * implemented by native code and appears as a property.<p>\n\t * \n\t * Example:\n\t * \n\t * <pre>\n\t * var str = new ilib.String(\"this is a string\");\n\t * console.log(\"String is \" + str._length() + \" characters long.\");\n\t * </pre>\n\t * @private\n\t */\n\t_length: function () {\n\t\treturn this.str.length;\n\t},\n\t\n\t/**\n\t * Format this string instance as a message, replacing the parameters with \n\t * the given values.<p>\n\t * \n\t * The string can contain any text that a regular Javascript string can\n\t * contain. Replacement parameters have the syntax:\n\t * \n\t * <pre>\n\t * {name}\n\t * </pre>\n\t * \n\t * Where \"name\" can be any string surrounded by curly brackets. The value of \n\t * \"name\" is taken from the parameters argument.<p>\n\t * \n\t * Example:\n\t * \n\t * <pre>\n\t * var str = new ilib.String(\"There are {num} objects.\");\n\t * console.log(str.format({\n\t *   num: 12\n\t * });\n\t * </pre>\n\t * \n\t * Would give the output:\n\t * \n\t * <pre>\n\t * There are 12 objects.\n\t * </pre>\n\t * \n\t * If a property is missing from the parameter block, the replacement\n\t * parameter substring is left untouched in the string, and a different\n\t * set of parameters may be applied a second time. This way, different\n\t * parts of the code may format different parts of the message that they\n\t * happen to know about.<p>\n\t * \n\t * Example:\n\t * \n\t * <pre>\n\t * var str = new ilib.String(\"There are {num} objects in the {container}.\");\n\t * console.log(str.format({\n\t *   num: 12\n\t * });\n\t * </pre>\n\t * \n\t * Would give the output:<p>\n\t * \n\t * <pre>\n\t * There are 12 objects in the {container}.\n\t * </pre>\n\t * \n\t * The result can then be formatted again with a different parameter block that\n\t * specifies a value for the container property.\n\t * \n\t * @param params a Javascript object containing values for the replacement \n\t * parameters in the current string\n\t * @return a new ilib.String instance with as many replacement parameters filled\n\t * out as possible with real values.\n\t */\n\tformat: function (params) {\n\t\tvar formatted = this.str;\n\t\tif (params) {\n\t\t\tvar regex;\n\t\t\tfor (var p in params) {\n\t\t\t\tif (typeof(params[p]) !== 'undefined') {\n\t\t\t\t\tregex = new RegExp(\"\\{\"+p+\"\\}\", \"g\");\n\t\t\t\t\tformatted = formatted.replace(regex, params[p]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn formatted.toString();\n\t},\n\t\n\t/**\n\t * Format a string as one of a choice of strings dependent on the value of\n\t * a particular argument index.<p>\n\t * \n\t * The syntax of the choice string is as follows. The string contains a\n\t * series of choices separated by a vertical bar character \"|\". Each choice\n\t * has a value or range of values to match followed by a hash character \"#\"\n\t * followed by the string to use if the variable matches the criteria.<p>\n\t * \n\t * Example string:\n\t * \n\t * <pre>\n\t * var num = 2;\n\t * var str = new ilib.String(\"0#There are no objects.|1#There is one object.|2#There are {number} objects.\");\n\t * console.log(str.formatChoice(num, {\n\t *   number: num\n\t * }));\n\t * </pre>\n\t * \n\t * Gives the output:\n\t * \n\t * <pre>\n\t * \"There are 2 objects.\"\n\t * </pre>\n\t * \n\t * The strings to format may contain replacement variables that will be formatted\n\t * using the format() method above and the params argument as a source of values\n\t * to use while formatting those variables.<p>\n\t * \n\t * If the criterion for a particular choice is empty, that choice will be used\n\t * as the default one for use when none of the other choice's criteria match.<p>\n\t * \n\t * Example string:\n\t * \n\t * <pre>\n\t * var num = 22;\n\t * var str = new ilib.String(\"0#There are no objects.|1#There is one object.|#There are {number} objects.\");\n\t * console.log(str.formatChoice(num, {\n\t *   number: num\n\t * }));\n\t * </pre>\n\t * \n\t * Gives the output:\n\t * \n\t * <pre>\n\t * \"There are 22 objects.\"\n\t * </pre>\n\t * \n\t * If multiple choice patterns can match a given argument index, the first one \n\t * encountered in the string will be used. If no choice patterns match the \n\t * argument index, then the default choice will be used. If there is no default\n\t * choice defined, then this method will return an empty string.<p>\n\t * \n\t * <b>Special Syntax</b><p>\n\t * \n\t * For any choice format string, all of the patterns in the string should be\n\t * of a single type: numeric, boolean, or string/regexp. The type of the \n\t * patterns is determined by the type of the argument index parameter.<p>\n\t * \n\t * If the argument index is numeric, then some special syntax can be used \n\t * in the patterns to match numeric ranges.<p>\n\t * \n\t * <ul>\n\t * <li><i>&gt;x</i> - match any number that is greater than x \n\t * <li><i>&gt;=x</i> - match any number that is greater than or equal to x\n\t * <li><i>&lt;x</i> - match any number that is less than x\n\t * <li><i>&lt;=x</i> - match any number that is less than or equal to x\n\t * <li><i>start-end</i> - match any number in the range [start,end)\n\t * <li><i>zero</i> - match any number in the class \"zero\". (See below for\n\t * a description of number classes.)\n\t * <li><i>one</i> - match any number in the class \"one\"\n\t * <li><i>two</i> - match any number in the class \"two\"\n\t * <li><i>few</i> - match any number in the class \"few\"\n\t * <li><i>many</i> - match any number in the class \"many\"\n\t * </ul>\n\t * \n\t * A number class defines a set of numbers that receive a particular syntax\n\t * in the strings. For example, in Slovenian, integers ending in the digit\n\t * \"1\" are in the \"one\" class, including 1, 21, 31, ... 101, 111, etc.\n\t * Similarly, integers ending in the digit \"2\" are in the \"two\" class. \n\t * Integers ending in the digits \"3\" or \"4\" are in the \"few\" class, and\n\t * every other integer is handled by the default string.<p>\n\t * \n\t * The definition of what numbers are included in a class is locale-dependent.\n\t * They are defined in the data file plurals.json. If your string is in a\n\t * different locale than the default for ilib, you should call the setLocale()\n\t * method of the string instance before calling this method.<p> \n\t * \n\t * <b>Other Pattern Types</b><p>\n\t * \n\t * If the argument index is a boolean, the string values \"true\" and \"false\" \n\t * may appear as the choice patterns.<p>\n\t * \n\t * If the argument index is of type string, then the choice patterns may contain\n\t * regular expressions, or static strings as degenerate regexps.\n\t * \n\t * @param {*} argIndex The index into the choice array of the current parameter\n\t * @param {Object} params The hash of parameter values that replace the replacement \n\t * variables in the string\n\t * @throws \"syntax error in choice format pattern: \" if there is a syntax error\n\t * @return {string} the formatted string\n\t */\n\tformatChoice: function(argIndex, params) {\n\t\tvar choices = this.str.split(\"|\");\n\t\tvar type = typeof(argIndex);\n\t\tvar limits = [];\n\t\tvar strings = [];\n\t\tvar i;\n\t\tvar parts;\n\t\tvar limit;\n\t\tvar arg;\n\t\tvar result = undefined;\n\t\tvar defaultCase = \"\";\n\t\n\t\tif (this.str.length === 0) {\n\t\t\t// nothing to do\n\t\t\treturn \"\";\n\t\t}\n\t\t\n\t\t// first parse all the choices\n\t\tfor (i = 0; i < choices.length; i++) {\t\t\n\t\t\tparts = choices[i].split(\"#\");\t\t\n\t\t\tif (parts.length > 2) {\n\t\t\t\tlimits[i] = parts[0];\n\t\t\t\tparts = parts.shift();\t\t\t\n\t\t\t\tstrings[i] = parts.join(\"#\");\n\t\t\t} else if (parts.length === 2) {\n\t\t\t\tlimits[i] = parts[0];\n\t\t\t\tstrings[i] = parts[1];\n\t\t\t} else {\n\t\t\t\t// syntax error\n\t\t\t\tthrow \"syntax error in choice format pattern: \" + choices[i];\n\t\t\t}\t\t\n\t\t}\n\t\t\n\t\t// then apply the argument index\n\t\tfor (i = 0; i < limits.length; i++) {\n\t\t\tif (limits[i].length === 0) {\n\t\t\t\t// this is default case\n\t\t\t\tdefaultCase = new ilib.String(strings[i]);\t\t\t\n\t\t\t} else {\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\targ = parseInt(argIndex, 10);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (limits[i].substring(0,2) === \"<=\") {\t\t\t\t\t\t\n\t\t\t\t\t\t\tlimit = parseFloat(limits[i].substring(2));\n\t\t\t\t\t\t\tif (arg <= limit) {\n\t\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (limits[i].substring(0,2) === \">=\") {\t\t\t\t\t\t\n\t\t\t\t\t\t\tlimit = parseFloat(limits[i].substring(2));\n\t\t\t\t\t\t\tif (arg >= limit) {\n\t\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (limits[i].charAt(0) === \"<\") {\t\t\t\t\t\t\n\t\t\t\t\t\t\tlimit = parseFloat(limits[i].substring(1));\n\t\t\t\t\t\t\tif (arg < limit) {\n\t\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (limits[i].charAt(0) === \">\") {\t\t\t\t\t\t\n\t\t\t\t\t\t\tlimit = parseFloat(limits[i].substring(1));\n\t\t\t\t\t\t\tif (arg > limit) {\n\t\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.locale = this.locale || new ilib.Locale(this.localeSpec);\n\t\t\t\t\t\t\tswitch (limits[i]) {\n\t\t\t\t\t\t\t\tcase \"zero\":\n\t\t\t\t\t\t\t\tcase \"one\":\n\t\t\t\t\t\t\t\tcase \"two\":\n\t\t\t\t\t\t\t\tcase \"few\":\n\t\t\t\t\t\t\t\tcase \"many\":\n\t\t\t\t\t\t\t\t\t// CLDR locale-dependent number classes\n\t\t\t\t\t\t\t\t\tvar ruleset = ilib.data[\"plurals_\" + this.locale.getLanguage()];\n\t\t\t\t\t\t\t\t\tif (ruleset) {\n\t\t\t\t\t\t\t\t\t\tvar rule = ruleset[limits[i]];\n\t\t\t\t\t\t\t\t\t\tif (ilib.String._fncs.getValue(rule, arg)) {\n\t\t\t\t\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar dash = limits[i].indexOf(\"-\");\n\t\t\t\t\t\t\t\t\tif (dash !== -1) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// range\n\t\t\t\t\t\t\t\t\t\tvar start = limits[i].substring(0, dash);\n\t\t\t\t\t\t\t\t\t\tvar end = limits[i].substring(dash+1);\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (arg >= parseInt(start, 10) && arg <= parseInt(end, 10)) {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (arg === parseInt(limits[i], 10)) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// exact amount\n\t\t\t\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'boolean':\t\t\t\t\t\n\t\t\t\t\t\tif (limits[i] === \"true\" && argIndex === true) {\t\t\t\t\t\t\n\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t} else if (limits[i] === \"false\" && argIndex === false) {\t\t\t\t\t\t\n\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'string':\t\t\t\t\t\n\t\t\t\t\t\tvar regexp = new RegExp(limits[i], \"i\");\n\t\t\t\t\t\tif (regexp.test(argIndex)) {\n\t\t\t\t\t\t\tresult = new ilib.String(strings[i]);\n\t\t\t\t\t\t\ti = limits.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\tthrow \"syntax error: fmtChoice parameter for the argument index cannot be an object\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!result) {\t\t\n\t\t\tresult = defaultCase || new ilib.String(\"\");\n\t\t}\n\t\t\n\t\tresult = result.format(params);\n\t\t\n\t\treturn result.toString();\n\t},\n\t\n\t// delegates\n\t/**\n\t * Same as String.toString()\n\t * @return {string} this instance as regular Javascript string\n\t */\n\ttoString: function () {\n\t\treturn this.str.toString();\n\t},\n\t\n\t/**\n\t * Same as String.valueOf()\n\t * @return {string} this instance as a regular Javascript string\n\t */\n\tvalueOf: function () {\n\t\treturn this.str.valueOf();\n\t},\n\t\n\t/**\n\t * Same as String.charAt()\n\t * @param {number} index the index of the character being sought\n\t * @return {ilib.String} the character at the given index\n\t */\n\tcharAt: function(index) {\n\t\treturn new ilib.String(this.str.charAt(index));\n\t},\n\t\n\t/**\n\t * Same as String.charCodeAt(). This only reports on \n\t * 2-byte UCS-2 Unicode values, and does not take into\n\t * account supplementary characters encoded in UTF-16.\n\t * If you would like to take account of those characters,\n\t * use codePointAt() instead.\n\t * @param {number} index the index of the character being sought\n\t * @return {number} the character code of the character at the \n\t * given index in the string \n\t */\n\tcharCodeAt: function(index) {\n\t\treturn this.str.charCodeAt(index);\n\t},\n\t\n\t/**\n\t * Same as String.concat()\n\t * @param {string} strings strings to concatenate to the current one\n\t * @return {ilib.String} a concatenation of the given strings\n\t */\n\tconcat: function(strings) {\n\t\treturn new ilib.String(this.str.concat(strings));\n\t},\n\t\n\t/**\n\t * Same as String.indexOf()\n\t * @param {string} searchValue string to search for\n\t * @param {number} start index into the string to start searching, or\n\t * undefined to search the entire string\n\t * @return {number} index into the string of the string being sought,\n\t * or -1 if the string is not found \n\t */\n\tindexOf: function(searchValue, start) {\n\t\treturn this.str.indexOf(searchValue, start);\n\t},\n\t\n\t/**\n\t * Same as String.lastIndexOf()\n\t * @param {string} searchValue string to search for\n\t * @param {number} start index into the string to start searching, or\n\t * undefined to search the entire string\n\t * @return {number} index into the string of the string being sought,\n\t * or -1 if the string is not found \n\t */\n\tlastIndexOf: function(searchValue, start) {\n\t\treturn this.str.lastIndexOf(searchValue, start);\n\t},\n\t\n\t/**\n\t * Same as String.match()\n\t * @param {string} regexp the regular expression to match\n\t * @return {Array.<string>} an array of matches\n\t */\n\tmatch: function(regexp) {\n\t\treturn this.str.match(regexp);\n\t},\n\t\n\t/**\n\t * Same as String.replace()\n\t * @param {string} searchValue a regular expression to search for\n\t * @param {string} newValue the string to replace the matches with\n\t * @return {ilib.String} a new string with all the matches replaced\n\t * with the new value\n\t */\n\treplace: function(searchValue, newValue) {\n\t\treturn new ilib.String(this.str.replace(searchValue, newValue));\n\t},\n\t\n\t/**\n\t * Same as String.search()\n\t * @param {string} regexp the regular expression to search for\n\t * @return {number} position of the match, or -1 for no match\n\t */\n\tsearch: function(regexp) {\n\t\treturn this.str.search(regexp);\n\t},\n\t\n\t/**\n\t * Same as String.slice()\n\t * @param {number} start first character to include in the string\n\t * @param {number} end include all characters up to, but not including\n\t * the end character\n\t * @return {ilib.String} a slice of the current string\n\t */\n\tslice: function(start, end) {\n\t\treturn new ilib.String(this.str.slice(start, end));\n\t},\n\t\n\t/**\n\t * Same as String.split()\n\t * @param {string} separator regular expression to match to find\n\t * separations between the parts of the text\n\t * @param {number} limit maximum number of items in the final \n\t * output array. Any items beyond that limit will be ignored.\n\t * @return {Array.<string>} the parts of the current string split \n\t * by the separator\n\t */\n\tsplit: function(separator, limit) {\n\t\treturn this.str.split(separator, limit);\n\t},\n\t\n\t/**\n\t * Same as String.substr()\n\t * @param {number} start the index of the character that should \n\t * begin the returned substring\n\t * @param {number} length the number of characters to return after\n\t * the start character.\n\t * @return {ilib.String} the requested substring \n\t */\n\tsubstr: function(start, length) {\n\t\treturn new ilib.String(this.str.substr(start, length));\n\t},\n\t\n\t/**\n\t * Same as String.substring()\n\t * @param {number} from the index of the character that should \n\t * begin the returned substring\n\t * @param {number} to the index where to stop the extraction. If\n\t * omitted, extracts the rest of the string\n\t * @return {ilib.String} the requested substring \n\t */\n\tsubstring: function(from, to) {\n\t\treturn this.str.substring(from, to);\n\t},\n\t\n\t/**\n\t * Same as String.toLowerCase(). Note that this method is\n\t * not locale-sensitive. \n\t * @return {ilib.String} a string with the first character\n\t * lower-cased\n\t */\n\ttoLowerCase: function() {\n\t\treturn this.str.toLowerCase();\n\t},\n\t\n\t/**\n\t * Same as String.toUpperCase(). Note that this method is\n\t * not locale-sensitive. Use toLocaleUpperCase() instead\n\t * to get locale-sensitive behaviour. \n\t * @return {ilib.String} a string with the first character\n\t * upper-cased\n\t */\n\ttoUpperCase: function() {\n\t\treturn this.str.toUpperCase();\n\t},\n\t\n\t/**\n\t * Convert the character or the surrogate pair at the given\n\t * index into the string to a Unicode UCS-4 code point.\n\t * @protected\n\t * @param {number} index index into the string\n\t * @return {number} code point of the character at the\n\t * given index into the string\n\t */\n\t_toCodePoint: function (index) {\n\t\treturn ilib.String.toCodePoint(this.str, index);\n\t},\n\t\n\t/**\n\t * Call the callback with each character in the string one at \n\t * a time, taking care to step through the surrogate pairs in \n\t * the UTF-16 encoding properly.<p>\n\t * \n\t * The standard Javascript String's charAt() method only\n\t * returns a particular 16-bit character in the \n\t * UTF-16 encoding scheme.\n\t * If the index to charAt() is pointing to a low- or \n\t * high-surrogate character,\n\t * it will return the surrogate character rather \n\t * than the the character \n\t * in the supplementary planes that the two surrogates together \n\t * encode. This function will call the callback with the full\n\t * character, making sure to join two  \n\t * surrogates into one character in the supplementary planes\n\t * where necessary.<p>\n\t * \n\t * @param {function(string)} callback a callback function to call with each\n\t * full character in the current string\n\t */\n\tforEach: function(callback) {\n\t\tif (typeof(callback) === 'function') {\n\t\t\tvar it = this.charIterator();\n\t\t\twhile (it.hasNext()) {\n\t\t\t\tcallback(it.next());\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Call the callback with each numeric code point in the string one at \n\t * a time, taking care to step through the surrogate pairs in \n\t * the UTF-16 encoding properly.<p>\n\t * \n\t * The standard Javascript String's charCodeAt() method only\n\t * returns information about a particular 16-bit character in the \n\t * UTF-16 encoding scheme.\n\t * If the index to charCodeAt() is pointing to a low- or \n\t * high-surrogate character,\n\t * it will return the code point of the surrogate character rather \n\t * than the code point of the character \n\t * in the supplementary planes that the two surrogates together \n\t * encode. This function will call the callback with the full\n\t * code point of each character, making sure to join two  \n\t * surrogates into one code point in the supplementary planes.<p>\n\t * \n\t * @param {function(string)} callback a callback function to call with each\n\t * code point in the current string\n\t */\n\tforEachCodePoint: function(callback) {\n\t\tif (typeof(callback) === 'function') {\n\t\t\tvar it = this.iterator();\n\t\t\twhile (it.hasNext()) {\n\t\t\t\tcallback(it.next());\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Return an iterator that will step through all of the characters\n\t * in the string one at a time and return their code points, taking \n\t * care to step through the surrogate pairs in UTF-16 encoding \n\t * properly.<p>\n\t * \n\t * The standard Javascript String's charCodeAt() method only\n\t * returns information about a particular 16-bit character in the \n\t * UTF-16 encoding scheme.\n\t * If the index is pointing to a low- or high-surrogate character,\n\t * it will return a code point of the surrogate character rather \n\t * than the code point of the character \n\t * in the supplementary planes that the two surrogates together \n\t * encode.<p>\n\t * \n\t * The iterator instance returned has two methods, hasNext() which\n\t * returns true if the iterator has more code points to iterate through,\n\t * and next() which returns the next code point as a number.<p>\n\t * \n\t * @return {Object} an iterator \n\t * that iterates through all the code points in the string\n\t */\n\titerator: function() {\n\t\t/**\n\t\t * @constructor\n\t\t */\n\t\tfunction _iterator (istring) {\n\t\t\tthis.index = 0;\n\t\t\tthis.hasNext = function () {\n\t\t\t\treturn (this.index < istring.str.length);\n\t\t\t};\n\t\t\tthis.next = function () {\n\t\t\t\tif (this.index < istring.str.length) {\n\t\t\t\t\tvar num = istring._toCodePoint(this.index);\n\t\t\t\t\tthis.index += ((num > 0xFFFF) ? 2 : 1);\n\t\t\t\t} else {\n\t\t\t\t\tnum = -1;\n\t\t\t\t}\n\t\t\t\treturn num;\n\t\t\t};\n\t\t};\n\t\treturn new _iterator(this);\n\t},\n\n\t/**\n\t * Return an iterator that will step through all of the characters\n\t * in the string one at a time, taking \n\t * care to step through the surrogate pairs in UTF-16 encoding \n\t * properly.<p>\n\t * \n\t * The standard Javascript String's charAt() method only\n\t * returns information about a particular 16-bit character in the \n\t * UTF-16 encoding scheme.\n\t * If the index is pointing to a low- or high-surrogate character,\n\t * it will return that surrogate character rather \n\t * than the surrogate pair which represents a character \n\t * in the supplementary planes.<p>\n\t * \n\t * The iterator instance returned has two methods, hasNext() which\n\t * returns true if the iterator has more characters to iterate through,\n\t * and next() which returns the next character.<p>\n\t * \n\t * @return {Object} an iterator \n\t * that iterates through all the characters in the string\n\t */\n\tcharIterator: function() {\n\t\t/**\n\t\t * @constructor\n\t\t */\n\t\tfunction _chiterator (istring) {\n\t\t\tthis.index = 0;\n\t\t\tthis.hasNext = function () {\n\t\t\t\treturn (this.index < istring.str.length);\n\t\t\t};\n\t\t\tthis.next = function () {\n\t\t\t\tvar ch;\n\t\t\t\tif (this.index < istring.str.length) {\n\t\t\t\t\tch = istring.str.charAt(this.index);\n\t\t\t\t\tif (ilib.String._isSurrogate(ch) && \n\t\t\t\t\t\t\tthis.index+1 < istring.str.length && \n\t\t\t\t\t\t\tilib.String._isSurrogate(istring.str.charAt(this.index+1))) {\n\t\t\t\t\t\tthis.index++;\n\t\t\t\t\t\tch += istring.str.charAt(this.index);\n\t\t\t\t\t}\n\t\t\t\t\tthis.index++;\n\t\t\t\t}\n\t\t\t\treturn ch;\n\t\t\t};\n\t\t};\n\t\treturn new _chiterator(this);\n\t},\n\t\n\t/**\n\t * Return the code point at the given index when the string is viewed \n\t * as an array of code points. If the index is beyond the end of the\n\t * array of code points or if the index is negative, -1 is returned.\n\t * @param {number} index index of the code point \n\t * @return {number} code point of the character at the given index into\n\t * the string\n\t */\n\tcodePointAt: function (index) {\n\t\tif (index < 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tvar count,\n\t\t\tit = this.iterator(),\n\t\t\tch;\n\t\tfor (count = index; count >= 0 && it.hasNext(); count--) {\n\t\t\tch = it.next();\n\t\t}\n\t\treturn (count < 0) ? ch : -1;\n\t},\n\t\n\t/**\n\t * Set the locale to use when processing choice formats. The locale\n\t * affects how number classes are interpretted. In some cultures,\n\t * the limit \"few\" maps to \"any integer that ends in the digits 2 to 9\" and\n\t * in yet others, \"few\" maps to \"any integer that ends in the digits\n\t * 3 or 4\".\n\t * @param {ilib.Locale|string} locale locale to use when processing choice\n\t * formats with this string\n\t * @param {boolean=} sync [optional] whether to load the locale data synchronously \n\t * or not\n\t * @param {Object=} loadParams [optional] parameters to pass to the loader function\n\t * @param {function(*)=} onLoad [optional] function to call when the loading is done\n\t */\n\tsetLocale: function (locale, sync, loadParams, onLoad) {\n\t\tif (typeof(locale) === 'object') {\n\t\t\tthis.locale = locale;\n\t\t} else {\n\t\t\tthis.localeSpec = locale;\n\t\t\tthis.locale = new ilib.Locale(locale);\n\t\t}\n\t\t\n\t\tilib.String.loadPlurals(typeof(sync) !== 'undefined' ? sync : true, this.locale, loadParams, onLoad);\n\t},\n\n\t/**\n\t * Return the locale to use when processing choice formats. The locale\n\t * affects how number classes are interpretted. In some cultures,\n\t * the limit \"few\" maps to \"any integer that ends in the digits 2 to 9\" and\n\t * in yet others, \"few\" maps to \"any integer that ends in the digits\n\t * 3 or 4\".\n\t * @return {string} localespec to use when processing choice\n\t * formats with this string\n\t */\n\tgetLocale: function () {\n\t\treturn (this.locale ? this.locale.getSpec() : this.localeSpec) || ilib.getLocale();\n\t},\n\n\t/**\n\t * Return the number of code points in this string. This may be different\n\t * than the number of characters, as the UTF-16 encoding that Javascript\n\t * uses for its basis returns surrogate pairs separately. Two 2-byte \n\t * surrogate characters together make up one character/code point in \n\t * the supplementary character planes. If your string contains no\n\t * characters in the supplementary planes, this method will return the\n\t * same thing as the length() method.\n\t * @return {number} the number of code points in this string\n\t */\n\tcodePointLength: function () {\n\t\tif (this.cpLength === -1) {\n\t\t\tvar it = this.iterator();\n\t\t\tthis.cpLength = 0;\n\t\t\twhile (it.hasNext()) { \n\t\t\t\tthis.cpLength++;\n\t\t\t\tit.next();\n\t\t\t};\n\t\t}\n\t\treturn this.cpLength;\t\n\t}\n};\n/*\n * calendar.js - Represent a calendar object.\n * \n * Copyright © 2012, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends\nilibglobal.js\nlocale.js\nlocaleinfo.js\n*/\n\n/**\n * Interface that all calendars must implement.\n * \n * Depends directive: !depends calendar.js\n * \n * @interface\n * @protected\n */\nilib.Cal = function() {\n};\n\n/**\n * Factory method to create a new instance of a calendar subclass.<p>\n * \n * The options parameter can be an object that contains the following\n * properties:\n * \n * <ul>\n * <li><i>type</i> - specify the type of the calendar desired. The\n * list of valid values changes depending on which calendars are \n * defined. When assembling your iliball.js, include those calendars \n * you wish to use in your program or web page, and they will register \n * themselves with this factory method. The \"official\", \"gregorian\",\n * and \"julian\" calendars are all included by default, as they are the\n * standard calendars for much of the world.\n * <li><i>locale</i> - some calendars vary depending on the locale.\n * For example, the \"official\" calendar transitions from a Julian-style\n * calendar to a Gregorian-style calendar on a different date for\n * each country, as the governments of those countries decided to\n * adopt the Gregorian calendar at different times. \n * </ul>\n * \n * If a locale is specified, but no type, then the calendar that is default for\n * the locale will be instantiated and returned. If neither the type nor\n * the locale are specified, then the calendar for the default locale will\n * be used. \n * \n * @param {Object=} options options controlling the construction of this instance, or\n * undefined to use the default options\n * @return {ilib.Cal} an instance of a calendar object of the appropriate type\n */\nilib.Cal.newInstance = function (options) {\n\tvar locale = options && options.locale,\n\ttype = options && options.type,\n\tcons;\n\n\tif (!locale) {\n\t\tlocale = new ilib.Locale();\t// default locale\n\t}\n\t\n\tif (!type) {\n\t\tvar info = new ilib.LocaleInfo(locale);\n\t\ttype = info.getCalendar();\n\t}\n\t\n\tcons = ilib.Cal._constructors[type];\n\t\n\t// pass the same options through to the constructor so the subclass\n\t// has the ability to do something with if it needs to\n\treturn cons && new cons(options);\n};\n\n/* place for the subclasses to put their constructors so that the factory method\n * can find them. Do this to add your calendar after it's defined: \n * ilib.Cal._constructors[\"mytype\"] = ilib.Cal.MyTypeConstructor;\n */\nilib.Cal._constructors = {};\n\n/**\n * Return an array of known calendar types that the factory method can instantiate.\n * \n * @return {Array.<string>} an array of calendar types\n */\nilib.Cal.getCalendars = function () {\n\tvar arr = [],\n\t\tc;\n\t\n\tfor (c in ilib.Cal._constructors) {\n\t\tif (c && ilib.Cal._constructors[c]) {\n\t\t\tarr.push(c); // code like a pirate\n\t\t}\n\t}\n\t\n\treturn arr;\n};\n\nilib.Cal.prototype = {\n\t/**\n\t * Return the type of this calendar.\n\t * \n\t * @return {string} the name of the type of this calendar \n\t */\n\tgetType: function() {\n\t\tthrow \"Cannot call methods of abstract class ilib.Cal\";\n\t},\n\t\n\t/**\n\t * Return the number of months in the given year. The number of months in a year varies\n\t * for some luni-solar calendars because in some years, an extra month is needed to extend the \n\t * days in a year to an entire solar year. The month is represented as a 1-based number\n\t * where 1=first month, 2=second month, etc.\n\t * \n\t * @param {number} year a year for which the number of months is sought\n\t * @return {number} The number of months in the given year\n\t */\n\tgetNumMonths: function(year) {\n\t\tthrow \"Cannot call methods of abstract class ilib.Cal\";\n\t},\n\t\n\t/**\n\t * Return the number of days in a particular month in a particular year. This function\n\t * can return a different number for a month depending on the year because of things\n\t * like leap years.\n\t * \n\t * @param {number} month the month for which the length is sought\n\t * @param {number} year the year within which that month can be found\n\t * @return {number} the number of days within the given month in the given year\n\t */\n\tgetMonLength: function(month, year) {\n\t\tthrow \"Cannot call methods of abstract class ilib.Cal\";\n\t},\n\t\n\t/**\n\t * Return true if the given year is a leap year in this calendar.\n\t * The year parameter may be given as a number.\n\t * \n\t * @param {number} year the year for which the leap year information is being sought\n\t * @return {boolean} true if the given year is a leap year\n\t */\n\tisLeapYear: function(year) {\n\t\tthrow \"Cannot call methods of abstract class ilib.Cal\";\n\t}\n};\n\n/*\n * julianday.js - A Julian date object.\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends locale.js */\n\n/**\n * @class\n * A Julian Day class. A Julian Day is a date based on the Julian Day count\n * of time invented by Joseph Scaliger in 1583 for use with astronomical calculations. \n * Do not confuse it with a date in the Julian calendar, which it has very\n * little in common with. The naming is unfortunately close, and comes from history.<p>\n * \n * Depends directive: !depends julianday.js\n * \n * @constructor\n * @param {number} num the Julian Day expressed as a floating point number \n */\nilib.JulianDay = function(num) {\n\tthis.jd = num;\n\tthis.days = Math.floor(this.jd);\n\tthis.frac = num - this.days;\n};\n\nilib.JulianDay.prototype = {\n\t/**\n\t * Return the integral portion of this Julian Day instance. This corresponds to\n\t * the number of days since the beginning of the epoch.\n\t * \n\t * @return {number} the integral portion of this Julian Day\n\t */\n\tgetDays: function() {\n\t\treturn this.days;\n\t},\n\t\n\t/**\n\t * Set the date of this Julian Day instance.\n\t * \n\t * @param {number} days the julian date expressed as a floating point number\n\t */\n\tsetDays: function(days) {\n\t\tthis.days = Math.floor(days);\n\t\tthis.jd = this.days + this.frac;\n\t},\n\t\n\t/**\n\t * Return the fractional portion of this Julian Day instance. This portion \n\t * corresponds to the time of day for the instance.\n\t */\n\tgetDayFraction: function() {\n\t\treturn this.frac;\n\t},\n\t\n\t/**\n\t * Set the fractional part of the Julian Day. The fractional part represents\n\t * the portion of a fully day. Julian dates start at noon, and proceed until\n\t * noon of the next day. That would mean midnight is represented as a fractional\n\t * part of 0.5.\n\t * \n\t * @param {number} fraction The fractional part of the Julian date\n\t */\n\tsetDayFraction: function(fraction) {\n\t\tvar t = Math.floor(fraction);\n\t\tthis.frac = fraction - t;\n\t\tthis.jd = this.days + this.frac;\n\t},\n\t\n\t/** \n\t * Return the Julian Day expressed as a floating point number.\n\t * @return {number} the Julian Day as a number\n\t */\n\tgetDate: function () {\n\t\treturn this.jd;\n\t},\n\t\n\t/**\n\t * Set the date of this Julian Day instance.\n\t * \n\t * @param {number} num the numeric Julian Day to set into this instance\n\t */\n\tsetDate: function (num) {\n\t\tthis.jd = num;\n\t},\n\t\n\t/**\n\t * Add an offset to the current date instance. The offset should be expressed in\n\t * terms of Julian days. That is, each integral unit represents one day of time, and\n\t * fractional part represents a fraction of a regular 24-hour day.\n\t * \n\t * @param {number} offset an amount to add (or subtract) to the current result instance.\n\t */\n\taddDate: function(offset) {\n\t\tif (typeof(offset) === 'number') {\n\t\t\tthis.jd += offset;\n\t\t\tthis.days = Math.floor(this.jd);\n\t\t\tthis.frac = this.jd - this.days;\n\t\t}\n\t}\n};\n\n/*\n * gregorian.js - Represent a Gregorian calendar object.\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* !depends calendar.js locale.js date.js julianday.js util/utils.js util/math.js */\n\n/**\n * @class\n * Construct a new Gregorian calendar object. This class encodes information about\n * a Gregorian calendar.<p>\n * \n * Depends directive: !depends gregorian.js\n * \n * @constructor\n * @implements ilib.Cal\n */\nilib.Cal.Gregorian = function() {\n\tthis.type = \"gregorian\";\n};\n\n/**\n * the lengths of each month \n * @private\n * @const\n * @type Array.<number> \n */\nilib.Cal.Gregorian.monthLengths = [\n\t31,  /* Jan */\n\t28,  /* Feb */\n\t31,  /* Mar */\n\t30,  /* Apr */\n\t31,  /* May */\n\t30,  /* Jun */\n\t31,  /* Jul */\n\t31,  /* Aug */\n\t30,  /* Sep */\n\t31,  /* Oct */\n\t30,  /* Nov */\n\t31   /* Dec */\n];\n\n/**\n * Return the number of months in the given year. The number of months in a year varies\n * for some luni-solar calendars because in some years, an extra month is needed to extend the \n * days in a year to an entire solar year. The month is represented as a 1-based number\n * where 1=first month, 2=second month, etc.\n * \n * @param {number} year a year for which the number of months is sought\n * @return {number} The number of months in the given year\n */\nilib.Cal.Gregorian.prototype.getNumMonths = function(year) {\n\treturn 12;\n};\n\n/**\n * Return the number of days in a particular month in a particular year. This function\n * can return a different number for a month depending on the year because of things\n * like leap years.\n * \n * @param {number} month the month for which the length is sought\n * @param {number} year the year within which that month can be found\n * @return {number} the number of days within the given month in the given year\n */\nilib.Cal.Gregorian.prototype.getMonLength = function(month, year) {\n\tif (month !== 2 || !this.isLeapYear(year)) {\n\t\treturn ilib.Cal.Gregorian.monthLengths[month-1];\n\t} else {\n\t\treturn 29;\n\t}\n};\n\n/**\n * Return true if the given year is a leap year in the Gregorian calendar.\n * The year parameter may be given as a number, or as a GregDate object.\n * @param {number|ilib.Date.GregDate} year the year for which the leap year information is being sought\n * @return {boolean} true if the given year is a leap year\n */\nilib.Cal.Gregorian.prototype.isLeapYear = function(year) {\n\tvar y = (typeof(year) === 'number' ? year : year.getYears());\n\tvar centuries = ilib.mod(y, 400);\n\treturn (ilib.mod(y, 4) === 0 && centuries !== 100 && centuries !== 200 && centuries !== 300);\n};\n\n/**\n * Return the type of this calendar.\n * \n * @return {string} the name of the type of this calendar \n */\nilib.Cal.Gregorian.prototype.getType = function() {\n\treturn this.type;\n};\n\n/**\n * Return a date instance for this calendar type using the given\n * options.\n * @param {Object} options options controlling the construction of \n * the date instance\n * @return {ilib.Date} a date appropriate for this calendar type\n */\nilib.Cal.Gregorian.prototype.newDateInstance = function (options) {\n\treturn new ilib.Date.GregDate(options);\n};\n\n/* register this calendar for the factory method */\nilib.Cal._constructors[\"gregorian\"] = ilib.Cal.Gregorian;\n\n/*\n * ratadie.js - Represent the RD date number in the calendar\n * \n * Copyright © 2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends \nutil/utils.js\nutil/math.js\njulianday.js \n*/\n\n/**\n * @class\n * Construct a new RD date number object. The constructor parameters can \n * contain any of the following properties:\n * \n * <ul>\n * <li><i>unixtime<i> - sets the time of this instance according to the given \n * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.\n * \n * <li><i>julianday</i> - sets the time of this instance according to the given\n * Julian Day instance or the Julian Day given as a float\n * \n * <li><i>cycle</i> - any integer giving the number of 60-year cycle in which the date is located.\n * If the cycle is not given but the year is, it is assumed that the year parameter is a fictitious \n * linear count of years since the beginning of the epoch, much like other calendars. This linear\n * count is never used. If both the cycle and year are given, the year is wrapped to the range 0 \n * to 60 and treated as if it were a year in the regular 60-year cycle.\n * \n * <li><i>year</i> - any integer, including 0\n * \n * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.\n * \n * <li><i>day</i> - 1 to 31\n * \n * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation \n * is always done with an unambiguous 24 hour representation\n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>second</i> - 0 to 59\n * \n * <li><i>millisecond</i> - 0 to 999\n * \n * <li><i>parts</i> - 0 to 1079. Specify the halaqim parts of an hour. Either specify \n * the parts or specify the minutes, seconds, and milliseconds, but not both. This is only used\n * in the Hebrew calendar. \n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.\n * </ul>\n *\n * If the constructor is called with another date instance instead of\n * a parameter block, the other instance acts as a parameter block and its\n * settings are copied into the current instance.<p>\n * \n * If the constructor is called with no arguments at all or if none of the \n * properties listed above are present, then the RD is calculate based on \n * the current date at the time of instantiation. <p>\n * \n * If any of the properties from <i>year</i> through <i>millisecond</i> are not\n * specified in the params, it is assumed that they have the smallest possible\n * value in the range for the property (zero or one).<p>\n * \n * Depends directive: !depends ratadie.js\n * \n * @private\n * @constructor\n * @param {Object=} params parameters that govern the settings and behaviour of this RD date\n */\nilib.Date.RataDie = function(params) {\n\tif (params) {\n\t\tif (typeof(params.date) !== 'undefined') {\n\t\t\t// accept JS Date classes or strings\n\t\t\tvar date = params.date;\n\t\t\tif (!(date instanceof Date)) {\n\t\t\t\tdate = new Date(date); // maybe a string initializer?\n\t\t\t}\n\t\t\tthis._setTime(date.getTime());\n\t\t} else if (typeof(params.unixtime) !== 'undefined') {\n\t\t\tthis._setTime(parseInt(params.unixtime, 10));\n\t\t} else if (typeof(params.julianday) !== 'undefined') {\n\t\t\t// JD time is defined to be UTC\n\t\t\tthis._setJulianDay(parseFloat(params.julianday));\n\t\t} else if (params.year || params.month || params.day || params.hour ||\n\t\t\t\tparams.minute || params.second || params.millisecond || params.parts || params.cycle) {\n\t\t\tthis._setDateComponents(params);\n\t\t} else if (typeof(params.rd) !== 'undefined') {\n\t\t\tthis.rd = (typeof(params.rd) === 'object' && params.rd instanceof ilib.Date.RataDie) ? params.rd.rd : params.rd;\n\t\t}\n\t}\n\t\n\t/**\n\t * @type {number} the Rata Die number of this date for this calendar type\n\t */\n\tif (typeof(this.rd) === 'undefined') {\n\t\tvar now = new Date();\n\t\tthis._setTime(now.getTime());\n\t}\n};\n\n/**\n * @private\n * @const\n * @type {number}\n */\nilib.Date.RataDie.gregorianEpoch = 1721424.5;\n\nilib.Date.RataDie.prototype = {\n\t/**\n\t * @protected\n\t * @const\n\t * @type {number}\n\t * the difference between a zero Julian day and the zero Gregorian date. \n\t */\n\tepoch: ilib.Date.RataDie.gregorianEpoch,\n\t\n\t/**\n\t * Set the RD of this instance according to the given unix time. Unix time is\n\t * the number of milliseconds since midnight on Jan 1, 1970.\n\t *\n\t * @protected\n\t * @param {number} millis the unix time to set this date to in milliseconds \n\t */\n\t_setTime: function(millis) {\n\t\t// 2440587.5 is the julian day of midnight Jan 1, 1970, UTC (Gregorian)\n\t\tthis._setJulianDay(2440587.5 + millis / 86400000);\n\t},\n\n\t/**\n\t * Set the date of this instance using a Julian Day.\n\t * @protected\n\t * @param {number} date the Julian Day to use to set this date\n\t */\n\t_setJulianDay: function (date) {\n\t\tvar jd = (typeof(date) === 'number') ? new ilib.JulianDay(date) : date;\n\t\t// round to the nearest millisecond\n\t\tthis.rd = ilib._roundFnc.halfup((jd.getDate() - this.epoch) * 86400000) / 86400000;\n\t},\n\n\t/**\n\t * Return the rd number of the particular day of the week on or before the \n\t * given rd. eg. The Sunday on or before the given rd.\n\t * @protected\n\t * @param {number} rd the rata die date of the reference date\n\t * @param {number} dayOfWeek the day of the week that is being sought relative \n\t * to the current date\n\t * @return {number} the rd of the day of the week\n\t */\n\t_onOrBefore: function(rd, dayOfWeek) {\n\t\treturn rd - ilib.mod(Math.floor(rd) - dayOfWeek - 2, 7);\n\t},\n\t\n\t/**\n\t * Return the rd number of the particular day of the week on or before the current rd.\n\t * eg. The Sunday on or before the current rd. If the offset is given, the calculation\n\t * happens in wall time instead of UTC. UTC time may be a day before or day behind \n\t * wall time, so it it would give the wrong day of the week if this calculation was\n\t * done in UTC time when the caller really wanted wall time. Even though the calculation\n\t * may be done in wall time, the return value is nonetheless always given in UTC.\n\t * @param {number} dayOfWeek the day of the week that is being sought relative \n\t * to the current date\n\t * @param {number=} offset RD offset for the time zone. Zero is assumed if this param is\n\t * not given\n\t * @return {number} the rd of the day of the week\n\t */\n\tonOrBefore: function(dayOfWeek, offset) {\n\t\toffset = offset || 0;\n\t\treturn this._onOrBefore(this.rd + offset, dayOfWeek) - offset;\n\t},\n\t\n\t/**\n\t * Return the rd number of the particular day of the week on or before the current rd.\n\t * eg. The Sunday on or before the current rd. If the offset is given, the calculation\n\t * happens in wall time instead of UTC. UTC time may be a day before or day behind \n\t * wall time, so it it would give the wrong day of the week if this calculation was\n\t * done in UTC time when the caller really wanted wall time. Even though the calculation\n\t * may be done in wall time, the return value is nonetheless always given in UTC.\n\t * @param {number} dayOfWeek the day of the week that is being sought relative \n\t * to the reference date\n\t * @param {number=} offset RD offset for the time zone. Zero is assumed if this param is\n\t * not given\n\t * @return {number} the day of the week\n\t */\n\tonOrAfter: function(dayOfWeek, offset) {\n\t\toffset = offset || 0;\n\t\treturn this._onOrBefore(this.rd+6+offset, dayOfWeek) - offset;\n\t},\n\t\n\t/**\n\t * Return the rd number of the particular day of the week before the current rd.\n\t * eg. The Sunday before the current rd. If the offset is given, the calculation\n\t * happens in wall time instead of UTC. UTC time may be a day before or day behind \n\t * wall time, so it it would give the wrong day of the week if this calculation was\n\t * done in UTC time when the caller really wanted wall time. Even though the calculation\n\t * may be done in wall time, the return value is nonetheless always given in UTC.\n\t * @param {number} dayOfWeek the day of the week that is being sought relative \n\t * to the reference date\n\t * @param {number=} offset RD offset for the time zone. Zero is assumed if this param is\n\t * not given\n\t * @return {number} the day of the week\n\t */\n\tbefore: function(dayOfWeek, offset) {\n\t\toffset = offset || 0;\n\t\treturn this._onOrBefore(this.rd-1+offset, dayOfWeek) - offset;\n\t},\n\t\n\t/**\n\t * Return the rd number of the particular day of the week after the current rd.\n\t * eg. The Sunday after the current rd. If the offset is given, the calculation\n\t * happens in wall time instead of UTC. UTC time may be a day before or day behind \n\t * wall time, so it it would give the wrong day of the week if this calculation was\n\t * done in UTC time when the caller really wanted wall time. Even though the calculation\n\t * may be done in wall time, the return value is nonetheless always given in UTC.\n\t * @param {number} dayOfWeek the day of the week that is being sought relative \n\t * to the reference date\n\t * @param {number=} offset RD offset for the time zone. Zero is assumed if this param is\n\t * not given\n\t * @return {number} the day of the week\n\t */\n\tafter: function(dayOfWeek, offset) {\n\t\toffset = offset || 0;\n\t\treturn this._onOrBefore(this.rd+7+offset, dayOfWeek) - offset;\n\t},\n\n\t/**\n\t * Return the unix time equivalent to this Gregorian date instance. Unix time is\n\t * the number of milliseconds since midnight on Jan 1, 1970 UTC. This method only\n\t * returns a valid number for dates between midnight, Jan 1, 1970 and  \n\t * Jan 19, 2038 at 3:14:07am when the unix time runs out. If this instance \n\t * encodes a date outside of that range, this method will return -1.\n\t * \n\t * @return {number} a number giving the unix time, or -1 if the date is outside the\n\t * valid unix time range\n\t */\n\tgetTime: function() {\n\t\t// earlier than Jan 1, 1970\n\t\t// or later than Jan 19, 2038 at 3:14:07am\n\t\tvar jd = this.getJulianDay();\n\t\tif (jd < 2440587.5 || jd > 2465442.634803241) { \n\t\t\treturn -1;\n\t\t}\n\t\n\t\t// avoid the rounding errors in the floating point math by only using\n\t\t// the whole days from the rd, and then calculating the milliseconds directly\n\t\treturn Math.round((jd - 2440587.5) * 86400000);\n\t},\n\n\t/**\n\t * Return the extended unix time equivalent to this Gregorian date instance. Unix time is\n\t * the number of milliseconds since midnight on Jan 1, 1970 UTC. Traditionally unix time\n\t * (or the type \"time_t\" in C/C++) is only encoded with a unsigned 32 bit integer, and thus \n\t * runs out on Jan 19, 2038. However, most Javascript engines encode numbers well above \n\t * 32 bits and the Date object allows you to encode up to 100 million days worth of time \n\t * after Jan 1, 1970, and even more interestingly 100 million days worth of time before\n\t * Jan 1, 1970 as well. This method returns the number of milliseconds in that extended \n\t * range. If this instance encodes a date outside of that range, this method will return\n\t * NaN.\n\t * \n\t * @return {number} a number giving the extended unix time, or NaN if the date is outside \n\t * the valid extended unix time range\n\t */\n\tgetTimeExtended: function() {\n\t\tvar jd = this.getJulianDay();\n\t\t\n\t\t// test if earlier than Jan 1, 1970 - 100 million days\n\t\t// or later than Jan 1, 1970 + 100 million days\n\t\tif (jd < -97559412.5 || jd > 102440587.5) { \n\t\t\treturn NaN;\n\t\t}\n\t\n\t\t// avoid the rounding errors in the floating point math by only using\n\t\t// the whole days from the rd, and then calculating the milliseconds directly\n\t\treturn Math.round((jd - 2440587.5) * 86400000);\n\t},\n\n\t/**\n\t * Return the Julian Day equivalent to this calendar date as a number.\n\t * This returns the julian day in UTC.\n\t * \n\t * @return {number} the julian date equivalent of this date\n\t */\n\tgetJulianDay: function() {\n\t\treturn this.rd + this.epoch;\n\t},\n\n\t/**\n\t * Return the Rata Die (fixed day) number of this RD date.\n\t * \n\t * @return {number} the rd date as a number\n\t */\n\tgetRataDie: function() {\n\t\treturn this.rd;\n\t}\n};\n\n/*\n * gregratadie.js - Represent the RD date number in the Gregorian calendar\n * \n * Copyright © 2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends \ndate.js\ncalendar/gregorian.js\ncalendar/ratadie.js\nutil/utils.js\nutil/math.js\njulianday.js \n*/\n\n/**\n * @class\n * Construct a new Gregorian RD date number object. The constructor parameters can \n * contain any of the following properties:\n * \n * <ul>\n * <li><i>unixtime<i> - sets the time of this instance according to the given \n * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.\n * \n * <li><i>julianday</i> - sets the time of this instance according to the given\n * Julian Day instance or the Julian Day given as a float\n * \n * <li><i>year</i> - any integer, including 0\n * \n * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.\n * \n * <li><i>day</i> - 1 to 31\n * \n * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation \n * is always done with an unambiguous 24 hour representation\n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>second</i> - 0 to 59\n * \n * <li><i>millisecond</i> - 0 to 999\n * \n * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.\n * </ul>\n *\n * If the constructor is called with another Gregorian date instance instead of\n * a parameter block, the other instance acts as a parameter block and its\n * settings are copied into the current instance.<p>\n * \n * If the constructor is called with no arguments at all or if none of the \n * properties listed above are present, then the RD is calculate based on \n * the current date at the time of instantiation. <p>\n * \n * If any of the properties from <i>year</i> through <i>millisecond</i> are not\n * specified in the params, it is assumed that they have the smallest possible\n * value in the range for the property (zero or one).<p>\n * \n * Depends directive: !depends gregratadie.js\n * \n * @private\n * @constructor\n * @extends ilib.Date.RataDie\n * @param {Object=} params parameters that govern the settings and behaviour of this Gregorian RD date\n */\nilib.Date.GregRataDie = function(params) {\n\tthis.cal = params && params.cal || new ilib.Cal.Gregorian();\n\t/** @type {number|undefined} */\n\tthis.rd = undefined;\n\tilib.Date.RataDie.call(this, params);\n};\n\nilib.Date.GregRataDie.prototype = new ilib.Date.RataDie();\nilib.Date.GregRataDie.prototype.parent = ilib.Date.RataDie;\nilib.Date.GregRataDie.prototype.constructor = ilib.Date.GregRataDie;\n\n/**\n * the cumulative lengths of each month, for a non-leap year \n * @private\n * @const\n * @type Array.<number>\n */\nilib.Date.GregRataDie.cumMonthLengths = [\n    0,   /* Jan */\n\t31,  /* Feb */\n\t59,  /* Mar */\n\t90,  /* Apr */\n\t120, /* May */\n\t151, /* Jun */\n\t181, /* Jul */\n\t212, /* Aug */\n\t243, /* Sep */\n\t273, /* Oct */\n\t304, /* Nov */\n\t334, /* Dec */\n\t365\n];\n\n/**\n * the cumulative lengths of each month, for a leap year \n * @private\n * @const\n * @type Array.<number>\n */\nilib.Date.GregRataDie.cumMonthLengthsLeap = [\n\t0,   /* Jan */\n\t31,  /* Feb */\n\t60,  /* Mar */\n\t91,  /* Apr */\n\t121, /* May */\n\t152, /* Jun */\n\t182, /* Jul */\n\t213, /* Aug */\n\t244, /* Sep */\n\t274, /* Oct */\n\t305, /* Nov */\n\t335, /* Dec */\n\t366\n];\n\n/**\n * Calculate the Rata Die (fixed day) number of the given date.\n * \n * @private\n * @param {Object} date the date components to calculate the RD from\n */\nilib.Date.GregRataDie.prototype._setDateComponents = function(date) {\n\tvar year = parseInt(date.year, 10) || 0;\n\tvar month = parseInt(date.month, 10) || 1;\n\tvar day = parseInt(date.day, 10) || 1;\n\tvar hour = parseInt(date.hour, 10) || 0;\n\tvar minute = parseInt(date.minute, 10) || 0;\n\tvar second = parseInt(date.second, 10) || 0;\n\tvar millisecond = parseInt(date.millisecond, 10) || 0;\n\n\tvar years = 365 * (year - 1) +\n\t\tMath.floor((year-1)/4) -\n\t\tMath.floor((year-1)/100) +\n\t\tMath.floor((year-1)/400);\n\t\n\tvar dayInYear = (month > 1 ? ilib.Date.GregRataDie.cumMonthLengths[month-1] : 0) +\n\t\tday +\n\t\t(ilib.Cal.Gregorian.prototype.isLeapYear.call(this.cal, year) && month > 2 ? 1 : 0);\n\tvar rdtime = (hour * 3600000 +\n\t\tminute * 60000 +\n\t\tsecond * 1000 +\n\t\tmillisecond) / \n\t\t86400000; \n\t/*\n\tdebug(\"getRataDie: converting \" +  JSON.stringify(this));\n\tdebug(\"getRataDie: year is \" +  years);\n\tdebug(\"getRataDie: day in year is \" +  dayInYear);\n\tdebug(\"getRataDie: rdtime is \" +  rdtime);\n\tdebug(\"getRataDie: rd is \" +  (years + dayInYear + rdtime));\n\t*/\n\t\n\t/**\n\t * @type {number|undefined} the RD number of this Gregorian date\n\t */\n\tthis.rd = years + dayInYear + rdtime;\n};\n\n/**\n * Return the rd number of the particular day of the week on or before the \n * given rd. eg. The Sunday on or before the given rd.\n * @private\n * @param {number} rd the rata die date of the reference date\n * @param {number} dayOfWeek the day of the week that is being sought relative \n * to the current date\n * @return {number} the rd of the day of the week\n */\nilib.Date.GregRataDie.prototype._onOrBefore = function(rd, dayOfWeek) {\n\treturn rd - ilib.mod(Math.floor(rd) - dayOfWeek, 7);\n};\n\n/*\n * timezone.js - Definition of a time zone class\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n!depends \nilibglobal.js \nlocale.js\nlocaleinfo.js\nutil/utils.js\nutil/math.js\ncalendar/gregratadie.js\n*/\n\n// !data localeinfo zoneinfo\n\n/**\n * @class\n * Create a time zone instance. \n * \n * This class reports and transforms\n * information about particular time zones.<p>\n * \n * The options parameter may contain any of the following properties:\n * \n * <ul>\n * <li><i>id</i> - The id of the requested time zone such as \"Europe/London\" or \n * \"America/Los_Angeles\". These are taken from the IANA time zone database. (See\n * http://www.iana.org/time-zones for more information.) <p>\n * \n * There is one special \n * time zone that is not taken from the IANA database called simply \"local\". In\n * this case, this class will attempt to discover the current time zone and\n * daylight savings time settings by calling standard Javascript classes to \n * determine the offsets from UTC. \n * \n * <li><i>locale</i> - The locale for this time zone.\n * \n * <li><i>offset</i> - Choose the time zone based on the offset from UTC given in\n * number of minutes (negative is west, positive is east).\n * \n * <li><i>onLoad</i> - a callback function to call when the data is fully \n * loaded. When the onLoad option is given, this class will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the data is loaded, the onLoad function is called with the current \n * instance as a parameter. \n * \n * <li><i>sync</i> - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while.\n *  \n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * \n * There is currently no way in the ECMAscript\n * standard to tell which exact time zone is currently in use. Choosing the\n * id \"locale\" or specifying an explicit offset will not give a specific time zone, \n * as it is impossible to tell with certainty which zone the offsets \n * match.<p>\n * \n * When the id \"local\" is given or the offset option is specified, this class will\n * have the following behaviours:\n * <ul>\n * <li>The display name will always be given as the RFC822 style, no matter what\n * style is requested\n * <li>The id will also be returned as the RFC822 style display name\n * <li>When the offset is explicitly given, this class will assume the time zone \n * does not support daylight savings time, and the offsets will be calculated \n * the same way year round.\n * <li>When the offset is explicitly given, the inDaylightSavings() method will \n * always return false.\n * <li>When the id \"local\" is given, this class will attempt to determine the \n * daylight savings time settings by examining the offset from UTC on Jan 1\n * and June 1 of the current year. If they are different, this class assumes\n * that the local time zone uses DST. When the offset for a particular date is\n * requested, it will use the built-in Javascript support to determine the \n * offset for that date.\n * </ul> \n * \n * If a more specific time zone is \n * needed with display names and known start/stop times for DST, use the \"id\" \n * property instead to specify the time zone exactly. You can perhaps ask the\n * user which time zone they prefer so that your app does not need to guess.<p>\n * \n * If the id and the offset are both not given, the default time zone for the \n * locale is retrieved from\n * the locale info. If the locale is not specified, the default locale for the\n * library is used.<p>\n * \n * Because this class was designed for use in web sites, and the vast majority\n * of dates and times being formatted are recent date/times, this class is simplified\n * by not implementing historical time zones. That is, when governments change the \n * time zone rules for a particular zone, only the latest such rule is implemented \n * in this class. That means that determining the offset for a date that is prior \n * to the last change may give the wrong result. Historical time zone calculations\n * may be implemented in a later version of iLib if there is enough demand for it,\n * but it would entail a much larger set of time zone data that would have to be\n * loaded.  \n * \n * Depends directive: !depends timezone.js\n * \n * @constructor\n * @param {Object} options Options guiding the construction of this time zone instance\n */\nilib.TimeZone = function(options) {\n\tthis.sync = true;\n\tthis.locale = new ilib.Locale();\n\tthis.isLocal = false;\n\t\n\tif (options) {\n\t\tif (options.locale) {\n\t\t\tthis.locale = (typeof(options.locale) === 'string') ? new ilib.Locale(options.locale) : options.locale;\n\t\t}\n\t\t\n\t\tif (options.id) {\n\t\t\tvar id = options.id.toString();\n\t\t\tif (id === 'local') {\n\t\t\t\tthis.isLocal = true;\n\t\t\t\t\n\t\t\t\t// use standard Javascript Date to figure out the time zone offsets\n\t\t\t\tvar now = new Date(), \n\t\t\t\t\tjan1 = new Date(now.getFullYear(), 0, 1),  // months in std JS Date object are 0-based\n\t\t\t\t\tjun1 = new Date(now.getFullYear(), 5, 1);\n\t\t\t\t\n\t\t\t\t// Javascript's method returns the offset backwards, so we have to\n\t\t\t\t// take the negative to get the correct offset\n\t\t\t\tthis.offsetJan1 = -jan1.getTimezoneOffset();\n\t\t\t\tthis.offsetJun1 = -jun1.getTimezoneOffset();\n\t\t\t\t// the offset of the standard time for the time zone is always the one that is closest \n\t\t\t\t// to negative infinity of the two, no matter whether you are in the northern or southern \n\t\t\t\t// hemisphere, east or west\n\t\t\t\tthis.offset = Math.min(this.offsetJan1, this.offsetJun1);\n\t\t\t}\n\t\t\tthis.id = id;\n\t\t} else if (options.offset) {\n\t\t\tthis.offset = (typeof(options.offset) === 'string') ? parseInt(options.offset, 10) : options.offset;\n\t\t\tthis.id = this.getDisplayName(undefined, undefined);\n\t\t}\n\t\t\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tthis.sync = !!options.sync;\n\t\t}\n\t\t\n\t\tthis.loadParams = options.loadParams;\n\t\tthis.onLoad = options.onLoad;\n\t}\n\n\t//console.log(\"timezone: locale is \" + this.locale);\n\t\n\tif (!this.id) {\n\t\tnew ilib.LocaleInfo(this.locale, {\n\t\t\tsync: this.sync,\n\t\t\tonLoad: ilib.bind(this, function (li) {\n\t\t\t\tthis.id = li.getTimeZone() || \"Etc/UTC\";\n\t\t\t\tthis._loadtzdata();\n\t\t\t})\n\t\t});\n\t} else {\n\t\tthis._loadtzdata();\n\t}\n\n\t//console.log(\"localeinfo is: \" + JSON.stringify(this.locinfo));\n\t//console.log(\"id is: \" + JSON.stringify(this.id));\n};\n\n/*\n * Explanation of the compressed time zone info properties.\n * {\n *     \"o\": \"8:0\",      // offset from UTC\n *     \"f\": \"W{c}T\",    // standard abbreviation. For time zones that observe DST, the {c} replacement is replaced with the \n *                      // letter in the e.c or s.c properties below \n *     \"e\": {           // info about the end of DST\n *         \"j\": 78322.5 // Julian day when the transition happens. Either specify the \"j\" property or all of the \"m\", \"r\", and \n *                      // \"t\" properties, but not both sets.\n *         \"m\": 3,      // month that it ends\n *         \"r\": \"l0\",   // rule for the day it ends \"l\" = \"last\", numbers are Sun=0 through Sat=6. Other syntax is \"0>7\". \n *                      // This means the 0-day (Sun) after the 7th of the month. Other possible operators are <, >, <=, >=\n *         \"t\": \"2:0\",  // time of day that the DST turns off, hours:minutes\n *         \"c\": \"S\"     // character to replace into the abbreviation for standard time \n *     },\n *     \"s\": {           // info about the start of DST\n *         \"j\": 78189.5 // Julian day when the transition happens. Either specify the \"j\" property or all of the \"m\", \"r\", and \n *                      // \"t\" properties, but not both sets.\n *         \"m\": 10,     // month that it starts\n *         \"r\": \"l0\",   // rule for the day it starts \"l\" = \"last\", numbers are Sun=0 through Sat=6. Other syntax is \"0>7\".\n *                      // This means the 0-day (Sun) after the 7th of the month. Other possible operators are <, >, <=, >=\n *         \"t\": \"2:0\",  // time of day that the DST turns on, hours:minutes\n *         \"v\": \"1:0\",  // amount of time saved in hours:minutes\n *         \"c\": \"D\"     // character to replace into the abbreviation for daylight time\n *     },\n *     \"c\": \"AU\",       // ISO code for the country that contains this time zone\n *     \"n\": \"W. Australia {c} Time\"\n *                      // long English name of the zone. The {c} replacement is for the word \"Standard\" or \"Daylight\" as appropriate\n * }\n */\nilib.TimeZone.prototype._loadtzdata = function () {\n\t// console.log(\"id is: \" + JSON.stringify(this.id));\n\t// console.log(\"zoneinfo is: \" + JSON.stringify(ilib.data.zoneinfo[this.id]));\n\tif (!ilib.data.zoneinfo[this.id] && typeof(this.offset) === 'undefined') {\n\t\tilib.loadData({\n\t\t\tobject: ilib.TimeZone, \n\t\t\tnonlocale: true,\t// locale independent \n\t\t\tname: \"zoneinfo/\" + this.id + \".json\", \n\t\t\tsync: this.sync, \n\t\t\tloadParams: this.loadParams, \n\t\t\tcallback: ilib.bind(this, function (tzdata) {\n\t\t\t\tif (tzdata && !ilib.isEmpty(tzdata)) {\n\t\t\t\t\tilib.data.zoneinfo[this.id] = tzdata;\n\t\t\t\t}\n\t\t\t\tthis._initZone();\n\t\t\t})\n\t\t});\n\t} else {\n\t\tthis._initZone();\n\t}\n};\n\nilib.TimeZone.prototype._initZone = function() {\n\t/** \n\t * @private\n\t * @type {{o:string,f:string,e:Object.<{m:number,r:string,t:string,z:string}>,s:Object.<{m:number,r:string,t:string,z:string,v:string,c:string}>,c:string,n:string}} \n\t */\n\tthis.zone = ilib.data.zoneinfo[this.id];\n\tif (!this.zone && typeof(this.offset) === 'undefined') {\n\t\tthis.id = \"Etc/UTC\";\n\t\tthis.zone = ilib.data.zoneinfo[this.id];\n\t}\n\t\n\tthis._calcDSTSavings();\n\t\n\tif (typeof(this.offset) === 'undefined' && this.zone.o) {\n\t\tvar offsetParts = this._offsetStringToObj(this.zone.o);\n\t\t/**\n\t\t * @private\n\t\t * @type {number} raw offset from UTC without DST, in minutes\n\t\t */\n\t\tthis.offset = (Math.abs(offsetParts.h || 0) * 60 + (offsetParts.m || 0)) * ilib.signum(offsetParts.h || 0);\n\t}\n\t\n\tif (this.onLoad && typeof(this.onLoad) === 'function') {\n\t\tthis.onLoad(this);\n\t}\n};\n\nilib.data.timezone = {};\n\n/**\n * Return an array of available zone ids that the constructor knows about.\n * The country parameter is optional. If it is not given, all time zones will\n * be returned. If it specifies a country code, then only time zones for that\n * country will be returned.\n * \n * @param {string} country country code for which time zones are being sought\n * @return {Array.<string>} an array of zone id strings\n */\nilib.TimeZone.getAvailableIds = function (country) {\n\tvar tz, ids = [];\n\t\n\tif (!ilib.data.timezone.list) {\n\t\tilib.data.timezone.list = [];\n\t\tif (ilib._load instanceof ilib.Loader) {\n\t\t\tvar hash = ilib._load.listAvailableFiles();\n\t\t\tfor (var dir in hash) {\n\t\t\t\tvar files = hash[dir];\n\t\t\t\tif (typeof(files) === 'object' && files instanceof Array) {\n\t\t\t\t\tfiles.forEach(function (filename) {\n\t\t\t\t\t\tif (filename && filename.match(/^zoneinfo/)) {\n\t\t\t\t\t\t\tilib.data.timezone.list.push(filename.replace(/^zoneinfo\\//, \"\").replace(/\\.json$/, \"\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (tz in ilib.data.zoneinfo) {\n\t\t\t\tif (ilib.data.zoneinfo[tz]) {\n\t\t\t\t\tilib.data.timezone.list.push(tz);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (!country) {\n\t\t// special zone meaning \"the local time zone according to the JS engine we are running upon\"\n\t\tids.push(\"local\");\n\t\tfor (tz in ilib.data.timezone.list) {\n\t\t\tif (ilib.data.timezone.list[tz]) {\n\t\t\t\tids.push(ilib.data.timezone.list[tz]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (!ilib.data.zoneinfo.zonetab) {\n\t\t\tilib.loadData({\n\t\t\t\tobject: ilib.TimeZone, \n\t\t\t\tnonlocale: true,\t// locale independent \n\t\t\t\tname: \"zoneinfo/zonetab.json\", \n\t\t\t\tsync: true, \n\t\t\t\tcallback: ilib.bind(this, function (tzdata) {\n\t\t\t\t\tif (tzdata) {\n\t\t\t\t\t\tilib.data.zoneinfo.zonetab = tzdata;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\t\tids = ilib.data.zoneinfo.zonetab[country];\n\t}\n\t\n\treturn ids;\n};\n\n/**\n * Return the id used to uniquely identify this time zone.\n * @return {string} a unique id for this time zone\n */\nilib.TimeZone.prototype.getId = function () {\n\treturn this.id.toString();\n};\n\n/**\n * Return the abbreviation that is used for the current time zone on the given date.\n * The date may be in DST or during standard time, and many zone names have different\n * abbreviations depending on whether or not the date is falls within DST.<p>\n * \n * There are two styles that are supported:\n * \n * <ol>\n * <li>standard - returns the 3 to 5 letter abbreviation of the time zone name such \n * as \"CET\" for \"Central European Time\" or \"PDT\" for \"Pacific Daylight Time\"\n * <li>rfc822 - returns an RFC 822 style time zone specifier, which specifies more\n * explicitly what the offset is from UTC\n * <li>long - returns the long name of the zone in English\n * </ol>\n *  \n * @param {ilib.Date=} date a date to determine if it is in daylight time or standard time\n * @param {string=} style one of \"standard\" or \"rfc822\". Default if not specified is \"standard\"\n * @return {string} the name of the time zone, abbreviated according to the style \n */\nilib.TimeZone.prototype.getDisplayName = function (date, style) {\n\tstyle = (this.isLocal || typeof(this.zone) === 'undefined') ? \"rfc822\" : (style || \"standard\");\n\tswitch (style) {\n\t\tdefault:\n\t\tcase 'standard':\n\t\t\tif (this.zone.f && this.zone.f !== \"zzz\") {\n\t\t\t\tif (this.zone.f.indexOf(\"{c}\") !== -1) {\n\t\t\t\t\tvar letter = \"\";\n\t\t\t\t\tletter = this.inDaylightTime(date) ? this.zone.s && this.zone.s.c : this.zone.e && this.zone.e.c; \n\t\t\t\t\tvar temp = new ilib.String(this.zone.f);\n\t\t\t\t\treturn temp.format({c: letter || \"\"});\n\t\t\t\t}\n\t\t\t\treturn this.zone.f;\n\t\t\t} \n\t\t\tvar temp = \"GMT\" + this.zone.o;\n\t\t\tif (this.inDaylightTime(date)) {\n\t\t\t\ttemp += \"+\" + this.zone.s.v;\n\t\t\t}\n\t\t\treturn temp;\n\t\t\tbreak;\n\t\tcase 'rfc822':\n\t\t\tvar offset = this.getOffset(date), // includes the DST if applicable\n\t\t\t\tret = \"UTC\",\n\t\t\t\thour = offset.h || 0,\n\t\t\t\tminute = offset.m || 0;\n\t\t\t\n\t\t\tif (hour !== 0) {\n\t\t\t\tret += (hour > 0) ? \"+\" : \"-\";\n\t\t\t\tif (Math.abs(hour) < 10) {\n\t\t\t\t\tret += \"0\";\n\t\t\t\t}\n\t\t\t\tret += (hour < 0) ? -hour : hour;\n\t\t\t\tif (minute < 10) {\n\t\t\t\t\tret += \"0\";\n\t\t\t\t}\n\t\t\t\tret += minute;\n\t\t\t}\n\t\t\treturn ret; \n\t\tcase 'long':\n\t\t\tif (this.zone.n) {\n\t\t\t\tif (this.zone.n.indexOf(\"{c}\") !== -1) {\n\t\t\t\t\tvar str = this.inDaylightTime(date) ? \"Daylight\" : \"Standard\"; \n\t\t\t\t\tvar temp = new ilib.String(this.zone.n);\n\t\t\t\t\treturn temp.format({c: str || \"\"});\n\t\t\t\t}\n\t\t\t\treturn this.zone.n;\n\t\t\t}\n\t\t\tvar temp = \"GMT\" + this.zone.o;\n\t\t\tif (this.inDaylightTime(date)) {\n\t\t\t\ttemp += \"+\" + this.zone.s.v;\n\t\t\t}\n\t\t\treturn temp;\n\t\t\tbreak;\n\t}\n};\n\n/**\n * Convert the offset string to an object with an h, m, and possibly s property\n * to indicate the hours, minutes, and seconds.\n * \n * @private\n * @param {string} str the offset string to convert to an object\n * @return {Object.<{h:number,m:number,s:number}>} an object giving the offset for the zone at \n * the given date/time, in hours, minutes, and seconds\n */\nilib.TimeZone.prototype._offsetStringToObj = function (str) {\n\tvar offsetParts = (typeof(str) === 'string') ? str.split(\":\") : [],\n\t\tret = {h:0},\n\t\ttemp;\n\t\n\tif (offsetParts.length > 0) {\n\t\tret.h = parseInt(offsetParts[0], 10);\n\t\tif (offsetParts.length > 1) {\n\t\t\ttemp = parseInt(offsetParts[1], 10);\n\t\t\tif (temp) {\n\t\t\t\tret.m = temp;\n\t\t\t}\n\t\t\tif (offsetParts.length > 2) {\n\t\t\t\ttemp = parseInt(offsetParts[2], 10);\n\t\t\t\tif (temp) {\n\t\t\t\t\tret.s = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ret;\n};\n\n/**\n * Returns the offset of this time zone from UTC at the given date/time. If daylight saving \n * time is in effect at the given date/time, this method will return the offset value \n * adjusted by the amount of daylight saving.\n * @param {ilib.Date=} date the date for which the offset is needed\n * @return {Object.<{h:number,m:number}>} an object giving the offset for the zone at \n * the given date/time, in hours, minutes, and seconds  \n */\nilib.TimeZone.prototype.getOffset = function (date) {\n\tif (!date) {\n\t\treturn this.getRawOffset();\n\t}\n\tvar offset = this.getOffsetMillis(date)/60000;\n\t\n\tvar hours = ilib._roundFnc.down(offset/60),\n\t\tminutes = Math.abs(offset) - Math.abs(hours)*60;\n\n\tvar ret = {\n\t\th: hours\n\t};\n\tif (minutes != 0) {\n\t\tret.m = minutes;\n\t}\n\treturn ret;\n};\n\n/**\n * Returns the offset of this time zone from UTC at the given date/time expressed in \n * milliseconds. If daylight saving \n * time is in effect at the given date/time, this method will return the offset value \n * adjusted by the amount of daylight saving. Negative numbers indicate offsets west\n * of UTC and conversely, positive numbers indicate offset east of UTC.\n *  \n * @param {ilib.Date=} date the date for which the offset is needed, or null for the\n * present date\n * @return {number} the number of milliseconds of offset from UTC that the given date is\n */\nilib.TimeZone.prototype.getOffsetMillis = function (date) {\n\tvar ret;\n\t\n\t// check if the dst property is defined -- the intrinsic JS Date object doesn't work so\n\t// well if we are in the overlap time at the end of DST\n\tif (this.isLocal && typeof(date.dst) === 'undefined') {\n\t\tvar d = (!date) ? new Date() : new Date(date.getTime());\n\t\treturn -d.getTimezoneOffset() * 60000;\n\t} \n\t\n\tret = this.offset;\n\t\n\tif (date && this.inDaylightTime(date)) {\n\t\tret += this.dstSavings;\n\t}\n\t\n\treturn ret * 60000;\n};\n\n/**\n * Return the offset in milliseconds when the date has an RD number in wall\n * time rather than in UTC time.\n * @protected\n * @param date the date to check in wall time\n * @returns {number} the number of milliseconds of offset from UTC that the given date is\n */\nilib.TimeZone.prototype._getOffsetMillisWallTime = function (date) {\n\tvar ret;\n\t\n\tret = this.offset;\n\t\n\tif (date && this.inDaylightTime(date, true)) {\n\t\tret += this.dstSavings;\n\t}\n\t\n\treturn ret * 60000;\n};\n\n/**\n * Returns the offset of this time zone from UTC at the given date/time. If daylight saving \n * time is in effect at the given date/time, this method will return the offset value \n * adjusted by the amount of daylight saving.\n * @param {ilib.Date=} date the date for which the offset is needed\n * @return {string} the offset for the zone at the given date/time as a string in the \n * format \"h:m:s\" \n */\nilib.TimeZone.prototype.getOffsetStr = function (date) {\n\tvar offset = this.getOffset(date),\n\t\tret;\n\t\n\tret = offset.h;\n\tif (typeof(offset.m) !== 'undefined') {\n\t\tret += \":\" + offset.m;\n\t\tif (typeof(offset.s) !== 'undefined') {\n\t\t\tret += \":\" + offset.s;\n\t\t}\n\t} else {\n\t\tret += \":0\";\n\t}\n\t\n\treturn ret;\n};\n\n/**\n * Gets the offset from UTC for this time zone.\n * @return {Object.<{h:number,m:number,s:number}>} an object giving the offset from \n * UTC for this time zone, in hours, minutes, and seconds \n */\nilib.TimeZone.prototype.getRawOffset = function () {\n\tvar hours = ilib._roundFnc.down(this.offset/60),\n\t\tminutes = Math.abs(this.offset) - Math.abs(hours)*60;\n\t\n\tvar ret = {\n\t\th: hours\n\t};\n\tif (minutes != 0) {\n\t\tret.m = minutes;\n\t}\n\treturn ret;\n};\n\n/**\n * Gets the offset from UTC for this time zone expressed in milliseconds. Negative numbers\n * indicate zones west of UTC, and positive numbers indicate zones east of UTC.\n * \n * @return {number} an number giving the offset from \n * UTC for this time zone in milliseconds \n */\nilib.TimeZone.prototype.getRawOffsetMillis = function () {\n\treturn this.offset * 60000;\n};\n\n/**\n * Gets the offset from UTC for this time zone without DST savings.\n * @return {string} the offset from UTC for this time zone, in the format \"h:m:s\" \n */\nilib.TimeZone.prototype.getRawOffsetStr = function () {\n\tvar off = this.getRawOffset();\n\treturn off.h + \":\" + (off.m || \"0\");\n};\n\n/**\n * Return the amount of time in hours:minutes that the clock is advanced during\n * daylight savings time.\n * @return {Object.<{h:number,m:number,s:number}>} the amount of time that the \n * clock advances for DST in hours, minutes, and seconds \n */\nilib.TimeZone.prototype.getDSTSavings = function () {\n\tif (this.isLocal) {\n\t\t// take the absolute because the difference in the offsets may be positive or\n\t\t// negative, depending on the hemisphere\n\t\tvar savings = Math.abs(this.offsetJan1 - this.offsetJun1);\n\t\tvar hours = ilib._roundFnc.down(savings/60),\n\t\t\tminutes = savings - hours*60;\n\t\treturn {\n\t\t\th: hours,\n\t\t\tm: minutes\n\t\t};\n\t} else if (this.zone && this.zone.s) {\n\t\treturn this._offsetStringToObj(this.zone.s.v);\t// this.zone.start.savings\n\t}\n\treturn {h:0};\n};\n\n/**\n * Return the amount of time in hours:minutes that the clock is advanced during\n * daylight savings time.\n * @return {string} the amount of time that the clock advances for DST in the\n * format \"h:m:s\"\n */\nilib.TimeZone.prototype.getDSTSavingsStr = function () {\n\tif (this.isLocal) {\n\t\tvar savings = this.getDSTSavings();\n\t\treturn savings.h + \":\" + savings.m;\n\t} else if (typeof(this.offset) !== 'undefined' && this.zone && this.zone.s) {\n\t\treturn this.zone.s.v;\t// this.zone.start.savings\n\t}\n\treturn \"0:0\";\n};\n\n/**\n * return the rd of the start of DST transition for the given year\n * @protected\n * @param {Object} rule set of rules\n * @param {number} year year to check\n * @return {number} the rd of the start of DST for the year\n */\nilib.TimeZone.prototype._calcRuleStart = function (rule, year) {\n\tvar type = \"=\", \n\t\tweekday = 0, \n\t\tday, \n\t\trefDay, \n\t\tcal, \n\t\thour = 0, \n\t\tminute = 0, \n\t\tsecond = 0,\n\t\ttime,\n\t\ti;\n\t\n\tif (typeof(rule.j) !== 'undefined') {\n\t\trefDay = new ilib.Date.GregRataDie({\n\t\t\tjulianday: rule.j\n\t\t});\n\t} else {\n\t\tif (rule.r.charAt(0) == 'l' || rule.r.charAt(0) == 'f') {\n\t\t\tcal = ilib.Cal.newInstance({type: \"gregorian\"});\n\t\t\ttype = rule.r.charAt(0);\n\t\t\tweekday = parseInt(rule.r.substring(1), 10);\n\t\t\tday = (type === 'l') ? cal.getMonLength(rule.m, year) : 1;\n\t\t\t//console.log(\"_calcRuleStart: Calculating the \" + \n\t\t\t//\t\t(rule.r.charAt(0) == 'f' ? \"first \" : \"last \") + weekday + \n\t\t\t//\t\t\" of month \" + rule.m);\n\t\t} else {\n\t\t\ti = rule.r.indexOf('<');\n\t\t\tif (i == -1) {\n\t\t\t\ti = rule.r.indexOf('>');\n\t\t\t}\n\t\t\t\n\t\t\tif (i != -1) {\n\t\t\t\ttype = rule.r.charAt(i);\n\t\t\t\tweekday = parseInt(rule.r.substring(0, i), 10);\n\t\t\t\tday = parseInt(rule.r.substring(i+1), 10); \n\t\t\t\t//console.log(\"_calcRuleStart: Calculating the \" + weekday + \n\t\t\t\t//\t\ttype + day + \" of month \" + rule.m);\n\t\t\t} else {\n\t\t\t\tday = parseInt(rule.r, 10);\n\t\t\t\t//console.log(\"_calcRuleStart: Calculating the \" + day + \" of month \" + rule.m);\n\t\t\t}\n\t\t}\n\t\n\t\tif (rule.t) {\n\t\t\ttime = rule.t.split(\":\");\n\t\t\thour = parseInt(time[0], 10);\n\t\t\tif (time.length > 1) {\n\t\t\t\tminute = parseInt(time[1], 10);\n\t\t\t\tif (time.length > 2) {\n\t\t\t\t\tsecond = parseInt(time[2], 10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log(\"calculating rd of \" + year + \"/\" + rule.m + \"/\" + day);\n\t\trefDay = new ilib.Date.GregRataDie({\n\t\t\tyear: year, \n\t\t\tmonth: rule.m, \n\t\t\tday: day, \n\t\t\thour: hour, \n\t\t\tminute: minute, \n\t\t\tsecond: second\n\t\t});\n\t}\n\t//console.log(\"refDay is \" + JSON.stringify(refDay));\n\tvar d = refDay.getRataDie();\n\t\n\tswitch (type) {\n\t\tcase 'l':\n\t\tcase '<':\n\t\t\t//console.log(\"returning \" + refDay.onOrBefore(rd, weekday));\n\t\t\td = refDay.onOrBefore(weekday); \n\t\t\tbreak;\n\t\tcase 'f':\n\t\tcase '>':\n\t\t\t//console.log(\"returning \" + refDay.onOrAfterRd(rd, weekday));\n\t\t\td = refDay.onOrAfter(weekday); \n\t\t\tbreak;\n\t}\n\treturn d;\n};\n\n/**\n * @private\n */\nilib.TimeZone.prototype._calcDSTSavings = function () {\n\tvar saveParts = this.getDSTSavings();\n\t\n\t/**\n\t * @private\n\t * @type {number} savings in minutes when DST is in effect \n\t */\n\tthis.dstSavings = (Math.abs(saveParts.h || 0) * 60 + (saveParts.m || 0)) * ilib.signum(saveParts.h || 0);\n};\n\n/**\n * @private\n */\nilib.TimeZone.prototype._getDSTStartRule = function (year) {\n\t// TODO: update this when historic/future zones are supported\n\treturn this.zone.s;\n};\n\n/**\n * @private\n */\nilib.TimeZone.prototype._getDSTEndRule = function (year) {\n\t// TODO: update this when historic/future zones are supported\n\treturn this.zone.e;\n};\n\n/**\n * Returns whether or not the given date is in daylight saving time for the current\n * zone. Note that daylight savings time is observed for the summer. Because\n * the seasons are reversed, daylight savings time in the southern hemisphere usually\n * runs from the end of the year through New Years into the first few months of the\n * next year. This method will correctly calculate the start and end of DST for any\n * location.\n * \n * @param {ilib.Date=} date a date for which the info about daylight time is being sought,\n * or undefined to tell whether we are currently in daylight savings time\n * @param {boolean=} wallTime if true, then the given date is in wall time. If false or\n * undefined, it is in the usual UTC time.\n * @return {boolean} true if the given date is in DST for the current zone, and false\n * otherwise.\n */\nilib.TimeZone.prototype.inDaylightTime = function (date, wallTime) {\n\tvar rd, startRd, endRd;\n\n\tif (this.isLocal) {\n\t\t// check if the dst property is defined -- the intrinsic JS Date object doesn't work so\n\t\t// well if we are in the overlap time at the end of DST, so we have to work around that\n\t\t// problem by adding in the savings ourselves\n\t\tvar offset = 0;\n\t\tif (typeof(date.dst) !== 'undefined' && !date.dst) {\n\t\t\toffset = this.dstSavings * 60000;\n\t\t}\n\t\t\n\t\tvar d = new Date(date ? date.getTimeExtended() + offset: undefined);\n\t\t// the DST offset is always the one that is closest to positive infinity, no matter \n\t\t// if you are in the northern or southern hemisphere, east or west\n\t\tvar dst = Math.max(this.offsetJan1, this.offsetJun1);\n\t\treturn (-d.getTimezoneOffset() === dst);\n\t}\n\t\n\tif (!date) {\n\t\tdate = new ilib.Date.GregDate(); // right now\n\t} else if (!(date instanceof ilib.Date.GregDate)) {\n\t\t// convert to Gregorian so that we can tell if it is in DST or not\n\t\tdate = new ilib.Date.GregDate({\n\t\t\tjulianday: date.getJulianDay(),\n\t\t\ttimezone: date.getTimeZone()\n\t\t});\n\t}\n\t\n\t// if we aren't using daylight time in this zone for the given year, then we are \n\t// not in daylight time\n\tif (!this.useDaylightTime(date.year)) {\n\t\treturn false;\n\t}\n\t\n\t// this should be a Gregorian RD number now, in UTC\n\trd = date.rd.getRataDie();\n\t\n\t// these calculate the start/end in local wall time\n\tvar startrule = this._getDSTStartRule(date.year);\n\tvar endrule = this._getDSTEndRule(date.year);\n\tstartRd = this._calcRuleStart(startrule, date.year);\n\tendRd = this._calcRuleStart(endrule, date.year);\n\t\n\tif (wallTime) {\n\t\t// rd is in wall time, so we have to make sure to skip the missing time\n\t\t// at the start of DST when standard time ends and daylight time begins\n\t\tstartRd += this.dstSavings/1440;\n\t} else {\n\t\t// rd is in UTC, so we have to convert the start/end to UTC time so \n\t\t// that they can be compared directly to the UTC rd number of the date\n\t\t\n\t\t// when DST starts, time is standard time already, so we only have\n\t\t// to subtract the offset to get to UTC and not worry about the DST savings\n\t\tstartRd -= this.offset/1440;  \n\t\t\n\t\t// when DST ends, time is in daylight time already, so we have to\n\t\t// subtract the DST savings to get back to standard time, then the\n\t\t// offset to get to UTC\n\t\tendRd -= (this.offset + this.dstSavings)/1440;\n\t}\n\t\n\t// In the northern hemisphere, the start comes first some time in spring (Feb-Apr), \n\t// then the end some time in the fall (Sept-Nov). In the southern\n\t// hemisphere, it is the other way around because the seasons are reversed. Standard\n\t// time is still in the winter, but the winter months are May-Aug, and daylight \n\t// savings time usually starts Aug-Oct of one year and runs through Mar-May of the \n\t// next year.\n\tif (rd < endRd && endRd - rd <= this.dstSavings/1440 && typeof(date.dst) === 'boolean') {\n\t\t// take care of the magic overlap time at the end of DST\n\t\treturn date.dst;\n\t}\n\tif (startRd < endRd) {\n\t\t// northern hemisphere\n\t\treturn (rd >= startRd && rd < endRd) ? true : false;\n\t} \n\t// southern hemisphere\n\treturn (rd >= startRd || rd < endRd) ? true : false;\n};\n\n/**\n * Returns true if this time zone switches to daylight savings time at some point\n * in the year, and false otherwise.\n * @param {number} year Whether or not the time zone uses daylight time in the given year. If\n * this parameter is not given, the current year is assumed.\n * @return {boolean} true if the time zone uses daylight savings time\n */\nilib.TimeZone.prototype.useDaylightTime = function (year) {\n\t\n\t// this zone uses daylight savings time iff there is a rule defining when to start\n\t// and when to stop the DST\n\treturn (this.isLocal && this.offsetJan1 !== this.offsetJun1) ||\n\t\t(typeof(this.zone) !== 'undefined' && \n\t\ttypeof(this.zone.s) !== 'undefined' && \n\t\ttypeof(this.zone.e) !== 'undefined');\n};\n\n/**\n * Returns the ISO 3166 code of the country for which this time zone is defined.\n * @return {string} the ISO 3166 code of the country for this zone\n */\nilib.TimeZone.prototype.getCountry = function () {\n\treturn this.zone.c;\n};\n/*\n * resources.js - Resource bundle definition\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js locale.js localeinfo.js strings.js util/utils.js\n\n// !data pseudomap\n\n/**\n * @class\n * Create a new resource bundle instance. The resource bundle loads strings\n * appropriate for a particular locale and provides them via the getString \n * method.<p>\n * \n * The options object may contain any (or none) of the following properties:\n * \n * <ul>\n * <li><i>locale</i> - The locale of the strings to load. If not specified, the default\n * locale is the the default for the web page or app in which the bundle is \n * being loaded.\n * \n * <li><i>name</i> - Base name of the resource bundle to load. If not specified the default\n * base name is \"resources\".\n * \n * <li><i>type</i> - Name the type of strings this bundle contains. Valid values are \n * \"xml\", \"html\", \"text\", or \"raw\". The default is \"text\". If the type is \"xml\" or \"html\",\n * then XML/HTML entities and tags are not pseudo-translated. During a real translation, \n * HTML character entities are translated to their corresponding characters in a source\n * string before looking that string up in the translations. Also, the characters \"<\", \">\",\n * and \"&\" are converted to entities again in the output, but characters are left as they\n * are. If the type is \"xml\", \"html\", or \"text\" types, then the replacement parameter names\n * are not pseudo-translated as well so that the output can be used for formatting with \n * the ilib.String class. If the type is raw, all characters are pseudo-translated, \n * including replacement parameters as well as XML/HTML tags and entities.\n * \n * <li><i>lengthen</i> - when pseudo-translating the string, tell whether or not to \n * automatically lengthen the string to simulate \"long\" languages such as German\n * or French. This is a boolean value. Default is false.\n * \n * <li><i>missing</i> - what to do when a resource is missing. The choices are:\n * <ul>\n *   <li><i>source</i> - return the source string unchanged\n *   <li><i>pseudo</i> - return the pseudo-translated source string, translated to the\n *   script of the locale if the mapping is available, or just the default Latin \n *   pseudo-translation if not\n *   <li><i>empty</i> - return the empty string \n * </ul>\n * The default behaviour is the same as before, which is to return the source string\n * unchanged.\n * \n * <li><i>onLoad</i> - a callback function to call when the resources are fully \n * loaded. When the onLoad option is given, this class will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the \n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two. \n * \n * <li>sync - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while. \n *\n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * \n * The locale option may be given as a locale spec string or as an \n * ilib.Locale object. If the locale option is not specified, then strings for\n * the default locale will be loaded.<p> \n * \n * The name option can be used to put groups of strings together in a\n * single bundle. The strings will then appear together in a JS object in\n * a JS file that can be included before the ilib.<p>\n * \n * A resource bundle with a particular name is actually a set of bundles\n * that are each specific to a language, a language plus a region, etc. \n * All bundles with the same base name should\n * contain the same set of source strings, but with different translations for \n * the given locale. The user of the bundle does not need to be aware of \n * the locale of the bundle, as long as it contains values for the strings \n * it needs.<p>\n * \n * Strings in bundles for a particular locale are inherited from parent bundles\n * that are more generic. In general, the hierarchy is as follows (from \n * least locale-specific to most locale-specific):\n * \n * <ol>\n * <li> language\n * <li> region\n * <li> language_script\n * <li> language_region\n * <li> region_variant\n * <li> language_script_region\n * <li> language_region_variant\n * <li> language_script_region_variant\n * </ol>\n * \n * That is, if the translation for a string does not exist in the current\n * locale, the more-generic parent locale is searched for the string. In the\n * worst case scenario, the string is not found in the base locale's strings. \n * In this case, the missing option guides this class on what to do. If\n * the missing option is \"source\", then the original source is returned as \n * the translation. If it is \"empty\", the empty string is returned. If it\n * is \"pseudo\", then the pseudo-translated string that is appropriate for\n * the default script of the locale is returned.<p> \n * \n * This allows developers to create code with new or changed strings in it and check in that\n * code without waiting for the translations to be done first. The translated\n * version of the app or web site will still function properly, but will show \n * a spurious untranslated string here and there until the translations are \n * done and also checked in.<p>   \n *  \n * The base is whatever language your developers use to code in. For\n * a German web site, strings in the source code may be written in German \n * for example. Often this base is English, as many web sites are coded in\n * English, but that is not required.<p>\n * \n * The strings can be extracted with the ilib localization tool (which will be\n * shipped at some future time.) Once the strings\n * have been translated, the set of translated files can be generated with the\n * same tool. The output from the tool can be used as input to the ResBundle\n * object. It is up to the web page or app to make sure the JS file that defines\n * the bundle is included before creating the ResBundle instance.<p>\n * \n * A special locale \"zxx-XX\" is used as the pseudo-translation locale because\n * zxx means \"no linguistic information\" in the ISO 639 standard, and the region \n * code XX is defined to be user-defined in the ISO 3166 standard. \n * Pseudo-translation is a locale where the translations are generated on\n * the fly based on the contents of the source string. Characters in the source \n * string are replaced with other characters and returned. \n * \n * Example. If the source string is:\n * \n * <pre>\n * \"This is a string\"\n * </pre>\n * \n * then the pseudo-translated version might look something like this: \n * \n * <pre>\n * \"Ţħïş ïş á şţřïñĝ\"\n * </pre>\n * <p>\n * \n * Pseudo-translation can be used to test that your app or web site is translatable\n * before an actual translation has happened. These bugs can then be fixed \n * before the translation starts, avoiding an explosion of bugs later when\n * each language's tester registers the same bug complaining that the same \n * string is not translated. When pseudo-localizing with\n * the Latin script, this allows the strings to be readable in the UI in the \n * source language (if somewhat funky-looking), \n * so that a tester can easily verify that the string is properly externalized \n * and loaded from a resource bundle without the need to be able to read a\n * foreign language.<p> \n * \n * If one of a list of script tags is given in the pseudo-locale specifier, then the\n * pseudo-localization can map characters to very rough transliterations of\n * characters in the given script. For example, zxx-Hebr-XX maps strings to\n * Hebrew characters, which can be used to test your UI in a right-to-left\n * language to catch bidi bugs before a translation is done. Currently, the\n * list of target scripts includes Hebrew (Hebr), Chinese Simplified Han (Hans),\n * and Cyrillic (Cyrl) with more to be added later. If no script is explicitly\n * specified in the locale spec, or if the script is not supported,\n * then the default mapping maps Latin base characters to accented versions of\n * those Latin characters as in the example above.\n *  \n * When the \"lengthen\" property is set to true in the options, the \n * pseudotranslation code will add digits to the end of the string to simulate\n * the lengthening that occurs when translating to other languages. The above \n * example will come out like this:\n * \n * <pre>\n * \"Ţħïş ïş á şţřïñĝ76543210\"\n * </pre>\n * \n * The string is lengthened according to the length of the source string. If\n * the source string is less than 20 characters long, the string is lengthened \n * by 50%. If the source string is 20-40 \n * characters long, the string is lengthened by 33%. If te string is greater\n * than 40 characters long, the string is lengthened by 20%.<p>\n * \n * The pseudotranslation always ends a string with the digit \"0\". If you do\n * not see the digit \"0\" in the UI for your app, you know that truncation\n * has occurred, and the number you see at the end of the string tells you \n * how many characters were truncated.<p>\n * \n * Depends directive: !depends resources.js\n * \n * @constructor\n * @param {?Object} options Options controlling how the bundle is created\n */\nilib.ResBundle = function (options) {\n\tvar lookupLocale, spec;\n\t\n\tthis.locale = new ilib.Locale();\t// use the default locale\n\tthis.baseName = \"strings\";\n\tthis.type = \"text\";\n\tthis.loadParams = {};\n\tthis.missing = \"source\";\n\tthis.sync = true;\n\t\n\tif (options) {\n\t\tif (options.locale) {\n\t\t\tthis.locale = (typeof(options.locale) === 'string') ? \n\t\t\t\t\tnew ilib.Locale(options.locale) :\n\t\t\t\t\toptions.locale;\n\t\t}\n\t\tif (options.name) {\n\t\t\tthis.baseName = options.name;\n\t\t}\n\t\tif (options.type) {\n\t\t\tthis.type = options.type;\n\t\t}\n\t\tthis.lengthen = options.lengthen || false;\n\t\t\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tthis.sync = (options.sync == true);\n\t\t}\n\t\t\n\t\tif (typeof(options.loadParams) !== 'undefined') {\n\t\t\tthis.loadParams = options.loadParams;\n\t\t}\n\t\tif (typeof(options.missing) !== 'undefined') {\n\t\t\tif (options.missing === \"pseudo\" || options.missing === \"empty\") {\n\t\t\t\tthis.missing = options.missing;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.map = {};\n\n\tif (!ilib.ResBundle[this.baseName]) {\n\t\tilib.ResBundle[this.baseName] = {};\n\t}\n\n\tlookupLocale = this.locale.isPseudo() ? new ilib.Locale(\"en-US\") : this.locale;\n\n\tilib.loadData({\n\t\tobject: ilib.ResBundle[this.baseName], \n\t\tlocale: lookupLocale, \n\t\tname: this.baseName + \".json\", \n\t\tsync: this.sync, \n\t\tloadParams: this.loadParams, \n\t\tcallback: ilib.bind(this, function (map) {\n\t\t\tif (!map) {\n\t\t\t\tmap = ilib.data[this.baseName] || {};\n\t\t\t\tspec = lookupLocale.getSpec().replace(/-/g, '_');\n\t\t\t\tilib.ResBundle[this.baseName].cache[spec] = map;\n\t\t\t}\n\t\t\tthis.map = map;\n\t\t\tif (this.locale.isPseudo()) {\n\t\t\t\tif (!ilib.ResBundle.pseudomap) {\n\t\t\t\t\tilib.ResBundle.pseudomap = {};\n\t\t\t\t}\n\t\n\t\t\t\tthis._loadPseudo(this.locale, options.onLoad);\n\t\t\t} else if (this.missing === \"pseudo\") {\n\t\t\t\tif (!ilib.ResBundle.pseudomap) {\n\t\t\t\t\tilib.ResBundle.pseudomap = {};\n\t\t\t\t}\n\t\n\t\t\t\tnew ilib.LocaleInfo(this.locale, {\n\t\t\t\t\tsync: this.sync,\n\t\t\t\t\tloadParams: this.loadParams,\n\t\t\t\t\tonLoad: ilib.bind(this, function (li) {\n\t\t\t\t\t\tvar pseudoLocale = new ilib.Locale(\"zxx\", \"XX\", undefined, li.getDefaultScript());\n\t\t\t\t\t\tthis._loadPseudo(pseudoLocale, options.onLoad);\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (options && typeof(options.onLoad) === 'function') {\n\t\t\t\t\toptions.onLoad(this);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t});\n\n\t// console.log(\"Merged resources \" + this.locale.toString() + \" are: \" + JSON.stringify(this.map));\n\t//if (!this.locale.isPseudo() && ilib.isEmpty(this.map)) {\n\t//\tconsole.log(\"Resources for bundle \" + this.baseName + \" locale \" + this.locale.toString() + \" are not available.\");\n\t//}\n};\n\nilib.ResBundle.defaultPseudo = ilib.data.pseudomap || {\n\t\"a\": \"à\",\n\t\"e\": \"ë\",\n\t\"i\": \"í\",\n\t\"o\": \"õ\",\n\t\"u\": \"ü\",\n\t\"y\": \"ÿ\",\n\t\"A\": \"Ã\",\n\t\"E\": \"Ë\",\n\t\"I\": \"Ï\",\n\t\"O\": \"Ø\",\n\t\"U\": \"Ú\",\n\t\"Y\": \"Ŷ\"\n};\n\nilib.ResBundle.prototype = {\n    /**\n     * @protected\n     */\n    _loadPseudo: function (pseudoLocale, onLoad) {\n\t\tilib.loadData({\n\t\t\tobject: ilib.ResBundle.pseudomap, \n\t\t\tlocale: pseudoLocale, \n\t\t\tname: \"pseudomap.json\", \n\t\t\tsync: this.sync, \n\t\t\tloadParams: this.loadParams, \n\t\t\tcallback: ilib.bind(this, function (map) {\n\t\t\t\tif (!map || ilib.isEmpty(map)) {\n\t\t\t\t\tmap = ilib.ResBundle.defaultPseudo;\n\t\t\t\t\tvar spec = pseudoLocale.getSpec().replace(/-/g, '_');\n\t\t\t\t\tilib.ResBundle.pseudomap.cache[spec] = map;\n\t\t\t\t}\n\t\t\t\tthis.pseudomap = map;\n\t\t\t\tif (typeof(onLoad) === 'function') {\n\t\t\t\t\tonLoad(this);\n\t\t\t\t}\t\n\t\t\t})\n\t\t});\n    },\n    \n\t/**\n\t * Return the locale of this resource bundle.\n\t * @return {ilib.Locale} the locale of this resource bundle object \n\t */\n\tgetLocale: function () {\n\t\treturn this.locale;\n\t},\n\t\n\t/**\n\t * Return the name of this resource bundle. This corresponds to the name option\n\t * given to the constructor.\n\t * @return {string} name of the the current instance\n\t */\n\tgetName: function () {\n\t\treturn this.baseName;\n\t},\n\t\n\t/**\n\t * Return the type of this resource bundle. This corresponds to the type option\n\t * given to the constructor.\n\t * @return {string} type of the the current instance\n\t */\n\tgetType: function () {\n\t\treturn this.type;\n\t},\n\n\t/*\n\t * @private\n\t * Pseudo-translate a string\n\t */\n\tpseudo: function (str) {\n\t\tif (!str) {\n\t\t\treturn undefined;\n\t\t}\n\t\tvar ret = \"\", i;\n\t\tfor (i = 0; i < str.length; i++) {\n\t\t\tif (this.type !== \"raw\") {\n\t\t\t\tif (this.type === \"html\" || this.type === \"xml\") {\n\t\t\t\t\tif (str.charAt(i) === '<') {\n\t\t\t\t\t\tret += str.charAt(i++);\n\t\t\t\t\t\twhile (i < str.length && str.charAt(i) !== '>') {\n\t\t\t\t\t\t\tret += str.charAt(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < str.length) {\n\t\t\t\t\t\t\tret += str.charAt(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (str.charAt(i) === '&') {\n\t\t\t\t\t\tret += str.charAt(i++);\n\t\t\t\t\t\twhile (i < str.length && str.charAt(i) !== ';' && str.charAt(i) !== ' ') {\n\t\t\t\t\t\t\tret += str.charAt(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < str.length) {\n\t\t\t\t\t\t\tret += str.charAt(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i < str.length) { \n\t\t\t\t\tif (str.charAt(i) === '{') {\n\t\t\t\t\t\tret += str.charAt(i++);\n\t\t\t\t\t\twhile (i < str.length && str.charAt(i) !== '}') {\n\t\t\t\t\t\t\tret += str.charAt(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < str.length) {\n\t\t\t\t\t\t\tret += str.charAt(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret += this.pseudomap[str.charAt(i)] || str.charAt(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tret += this.pseudomap[str.charAt(i)] || str.charAt(i);\n\t\t\t}\n\t\t}\n\t\tif (this.lengthen) {\n\t\t\tvar add;\n\t\t\tif (ret.length <= 20) {\n\t\t\t\tadd = Math.round(ret.length / 2);\n\t\t\t} else if (ret.length > 20 && ret.length <= 40) {\n\t\t\t\tadd = Math.round(ret.length / 3);\n\t\t\t} else {\n\t\t\t\tadd = Math.round(ret.length / 5);\n\t\t\t}\n\t\t\tfor (i = add-1; i >= 0; i--) {\n\t\t\t\tret += (i % 10);\n\t\t\t}\n\t\t}\n\t\tif (this.locale.getScript() === \"Hans\" || this.locale.getScript() === \"Hant\" ||\n\t\t\t\tthis.locale.getScript() === \"Hani\" ||\n\t\t\t\tthis.locale.getScript() === \"Hrkt\" || this.locale.getScript() === \"Jpan\" ||\n\t\t\t\tthis.locale.getScript() === \"Hira\" || this.locale.getScript() === \"Kana\" ) {\n\t\t\t// simulate Asian languages by getting rid of all the spaces\n\t\t\tret = ret.replace(/ /g, \"\");\n\t\t}\n\t\treturn ret;\n\t},\n\t\n\t/*\n\t * @private\n\t * Escape html characters in the output.\n\t */\n\tescapeXml: function (str) {\n\t\tstr = str.replace(/&/g, '&amp;');\n\t\tstr = str.replace(/</g, '&lt;');\n\t\tstr = str.replace(/>/g, '&gt;');\n\t\treturn str;\n\t},\n\n\t/*\n\t * @private\n\t * @param {string} str the string to unescape\n\t */\n\tunescapeXml: function (str) {\n\t\tstr = str.replace(/&amp;/g, '&');\n\t\tstr = str.replace(/&lt;/g, '<');\n\t\tstr = str.replace(/&gt;/g, '>');\n\t\treturn str;\n\t},\n\t\n\t/*\n\t * @private\n\t * Create a key name out of a source string. All this does so far is \n\t * compress sequences of white space into a single space on the assumption\n\t * that this doesn't really change the meaning of the string, and therefore\n\t * all such strings that compress to the same thing should share the same\n\t * translation.\n\t * @param {string} source the source string to make a key out of\n\t */\n\tmakeKey: function (source) {\n\t\tvar key = source.replace(/\\s+/gm, ' ');\n\t\treturn (this.type === \"xml\" || this.type === \"html\") ? this.unescapeXml(key) : key;\n\t},\n\t\n\t/**\n\t * Return a localized string. If the string is not found in the loaded set of\n\t * resources, the original source string is returned. If the key is not given,\n\t * then the source string itself is used as the key. In the case where the \n\t * source string is used as the key, the whitespace is compressed down to 1 space\n\t * each, and the whitespace at the beginning and end of the string is trimmed.<p>\n\t * \n\t * The escape mode specifies what type of output you are escaping the returned\n\t * string for. Modes are similar to the types: \n\t * \n\t * <ul>\n\t * <li>\"html\" -- prevents HTML injection by escaping the characters &lt &gt; and &amp;\n\t * <li>\"xml\" -- currently same as \"html\" mode\n\t * <li>\"js\" -- prevents breaking Javascript syntax by backslash escaping all quote and \n\t * double-quote characters\n\t * <li>\"attribute\" -- meant for HTML attribute values. Currently this is the same as\n\t * \"js\" escape mode.\n\t * <li>\"default\" -- use the type parameter from the constructor as the escape mode as well\n\t * <li>\"none\" or undefined -- no escaping at all.\n\t * </ul>\n\t * \n\t * The type parameter of the constructor specifies what type of strings this bundle\n\t * is operating upon. This allows pseudo-translation and automatic key generation\n\t * to happen properly by telling this class how to parse the string. The escape mode \n\t * for this method is different in that it specifies how this string will be used in \n\t * the calling code and therefore how to escape it properly.<p> \n\t * \n\t * For example, a section of Javascript code may be constructing an HTML snippet in a \n\t * string to add to the web page. In this case, the type parameter in the constructor should\n\t * be \"html\" so that the source string can be parsed properly, but the escape mode should\n\t * be \"js\" so that the output string can be used in Javascript without causing syntax\n\t * errors.\n\t * \n\t * @param {?string=} source the source string to translate\n\t * @param {?string=} key optional name of the key, if any\n\t * @param {?string=} escapeMode escape mode, if any\n\t * @return {ilib.String|undefined} the translation of the given source/key or undefined \n\t * if the translation is not found and the source is undefined \n\t */\n\tgetString: function (source, key, escapeMode) {\n\t\tif (!source && !key) return new ilib.String(\"\");\n\n\t\tvar trans;\n\t\tif (this.locale.isPseudo()) {\n\t\t\tvar str = source ? source : this.map[key];\n\t\t\ttrans = this.pseudo(str || key);\n\t\t} else {\n\t\t\tvar keyName = key || this.makeKey(source);\n\t\t\tif (typeof(this.map[keyName]) !== 'undefined') {\n\t\t\t\ttrans = this.map[keyName];\n\t\t\t} else if (this.missing === \"pseudo\") {\n\t\t\t\ttrans = this.pseudo(source || key);\n\t\t\t} else if (this.missing === \"empty\") {\n\t\t\t\ttrans = \"\";\n\t\t\t} else {\n\t\t\t\ttrans = source;\n\t\t\t}\n\t\t}\n\n\t\tif (escapeMode && escapeMode !== \"none\") {\n\t\t\tif (escapeMode == \"default\") {\n\t\t\t\tescapeMode = this.type;\n\t\t\t}\n\t\t\tif (escapeMode === \"xml\" || escapeMode === \"html\") {\n\t\t\t\ttrans = this.escapeXml(trans);\n\t\t\t} else if (escapeMode == \"js\" || escapeMode === \"attribute\") {\n\t\t\t\ttrans = trans.replace(/'/g, \"\\\\\\'\").replace(/\"/g, \"\\\\\\\"\");\n\t\t\t}\n\t\t}\n\t\tif (trans === undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tvar ret = new ilib.String(trans);\n\t\t\tret.setLocale(this.locale.getSpec(), true, this.loadParams); // no callback\n\t\t\treturn ret;\n\t\t}\n\t},\n\t\n\t/**\n\t * Return true if the current bundle contains a translation for the given key and\n\t * source. The\n\t * getString method will always return a string for any given key and source \n\t * combination, so it cannot be used to tell if a translation exists. Either one\n\t * or both of the source and key must be specified. If both are not specified,\n\t * this method will return false.\n\t * \n\t * @param {?string=} source source string to look up\n\t * @param {?string=} key key to look up\n\t * @return {boolean} true if this bundle contains a translation for the key, and \n\t * false otherwise\n\t */\n\tcontainsKey: function(source, key) {\n\t\tif (typeof(source) === 'undefined' && typeof(key) === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar keyName = key || this.makeKey(source);\n\t\treturn typeof(this.map[keyName]) !== 'undefined';\n\t},\n\t\n\t/**\n\t * Return the merged resources as an entire object. When loading resources for a\n\t * locale that are not just a set of translated strings, but instead an entire \n\t * structured javascript object, you can gain access to that object via this call. This method\n\t * will ensure that all the of the parts of the object are correct for the locale.<p>\n\t * \n\t * For pre-assembled data, it starts by loading <i>ilib.data[name]</i>, where \n\t * <i>name</i> is the base name for this set of resources. Then, it successively \n\t * merges objects in the base data using progressively more locale-specific data. \n\t * It loads it in this order from <i>ilib.data</i>:\n\t * \n\t * <ol>\n\t * <li> language\n\t * <li> region\n\t * <li> language_script\n\t * <li> language_region\n\t * <li> region_variant\n\t * <li> language_script_region\n\t * <li> language_region_variant\n\t * <li> language_script_region_variant\n\t * </ol>\n\t * \n\t * For dynamically loaded data, the code attempts to load the same sequence as\n\t * above, but with slash path separators instead of underscores.<p>\n\t *  \n\t * Loading the resources this way allows the program to share resources between all\n\t * locales that share a common language, region, or script. As a \n\t * general rule-of-thumb, resources should be as generic as possible in order to\n\t * cover as many locales as possible.\n\t * \n\t * @return {Object} returns the object that is the basis for this resources instance\n\t */\n\tgetResObj: function () {\n\t\treturn this.map;\n\t}\n};\n\n/*\n * util/jsutils.js - Misc utilities to work around Javascript engine differences\n * \n * Copyright © 2013-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js\n\n/**\n * Perform a shallow copy of the source object to the target object. This only \n * copies the assignments of the source properties to the target properties, \n * but not recursively from there.<p>\n * \n * Depends directive: !depends utils.js\n * \n * @static\n * @param {Object} source the source object to copy properties from\n * @param {Object} target the target object to copy properties into\n */\nilib.shallowCopy = function (source, target) {\n\tvar prop = undefined;\n\tif (source && target) {\n\t\tfor (prop in source) {\n\t\t\tif (prop !== undefined && typeof(source[prop]) !== 'undefined') {\n\t\t\t\ttarget[prop] = source[prop];\n\t\t\t}\n\t\t}\n\t}\n};\n\n/** [Need Comment]\n * \n */\nilib.deepCopy = function(from, to) {\n\tvar prop;\n\n\tfor (prop in from) {\n\t\tif (prop) {\n\t\t\tif (typeof(from[prop]) === 'object') {\n\t\t\t\tto[prop] ={};\n\t\t\t\tilib.deepCopy(from[prop], to[prop]);\n\t\t\t} else {\n\t\t\t\tto[prop] = from[prop];\n\t\t\t}\n\t\t}\n\t}\n\treturn to;\n};\n\n/**\n * Map a string to the given set of alternate characters. If the target set\n * does not contain a particular character in the input string, then that\n * character will be copied to the output unmapped.\n * \n * @static\n * @param {string} str a string to map to an alternate set of characters\n * @param {Array.<string>|Object} map a mapping to alternate characters\n * @return {string} the source string where each character is mapped to alternate characters\n */\nilib.mapString = function (str, map) {\n\tvar mapped = \"\";\n\tif (map && str) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tvar c = str.charAt(i); // TODO use a char iterator?\n\t\t\tmapped += map[c] || c; \n\t\t}\n\t} else {\n\t\tmapped = str;\n\t}\n\treturn mapped;\n};\n\n/**\n * Check if an object is a member of the given array. If this javascript engine\n * support indexOf, it is used directly. Otherwise, this function implements it\n * itself. The idea is to make sure that you can use the quick indexOf if it is\n * available, but use a slower implementation in older engines as well.\n * \n * @static\n * @param {Array.<Object>} array array to search\n * @param {Object} obj object being sought. This should be of the same type as the\n * members of the array being searched. If not, this function will not return\n * any results.\n * @return {number} index of the object in the array, or -1 if it is not in the array.\n */\nilib.indexOf = function(array, obj) {\n\tif (!array || !obj) {\n\t\treturn -1;\n\t}\n\tif (typeof(array.indexOf) === 'function') {\n\t\treturn array.indexOf(obj);\n\t} else {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t        if (array[i] === obj) {\n\t            return i;\n\t        }\n\t    }\n\t    return -1;\n\t}\n};\n\n/**\n * @static\n * Convert a string into the hexadecimal representation\n * of the Unicode characters in that string.\n * \n * @param {string} string The string to convert\n * @param {number=} limit the number of digits to use to represent the character (1 to 8)\n * @return {string} a hexadecimal representation of the\n * Unicode characters in the input string\n */\nilib.toHexString = function(string, limit) {\n\tvar i, \n\t\tresult = \"\", \n\t\tlim = (limit && limit < 9) ? limit : 4;\n\t\n\tif (!string) {\n\t\treturn \"\";\n\t}\n\tfor (i = 0; i < string.length; i++) {\n\t\tvar ch = string.charCodeAt(i).toString(16);\n\t\tresult += \"00000000\".substring(0, lim-ch.length) + ch;\n\t}\n\treturn result.toUpperCase();\n};\n\n/*\n * datefmt.js - Date formatter definition\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n!depends \nilibglobal.js \nlocale.js \ndate.js \nstrings.js \nresources.js \ncalendar.js\nlocaleinfo.js\ntimezone.js\ncalendar/gregorian.js\nutil/jsutils.js\n*/\n\n// !data dateformats sysres\n\n/**\n * @class\n * Create a new date formatter instance. The date formatter is immutable once\n * it is created, but can format as many different dates as needed with the same\n * options. Create different date formatter instances for different purposes\n * and then keep them cached for use later if you have more than one date to\n * format.<p>\n * \n * The options may contain any of the following properties:\n * \n * <ul>\n * <li><i>locale</i> - locale to use when formatting the date/time. If the locale is\n * not specified, then the default locale of the app or web page will be used.\n * \n * <li><i>calendar</i> - the type of calendar to use for this format. The value should\n * be a sting containing the name of the calendar. Currently, the supported\n * types are \"gregorian\", \"julian\", \"arabic\", \"hebrew\", or \"chinese\". If the\n * calendar is not specified, then the default calendar for the locale is used. When the\n * calendar type is specified, then the format method must be called with an instance of\n * the appropriate date type. (eg. Gregorian calendar means that the format method must \n * be called with a GregDate instance.)\n *  \n * <li><i>timezone</i> - time zone to use when formatting times. This may be a time zone\n * instance or a time zone specifier from the IANA list of time zone database names \n * (eg. \"America/Los_Angeles\"), \n * the string \"local\", or a string specifying the offset in RFC 822 format. The IANA\n * list of time zone names can be viewed at \n * <a href=\"http://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">this page</a>.\n * If the time zone is given as \"local\", the offset from UTC as given by\n * the Javascript system is used. If the offset is given as an RFC 822 style offset\n * specifier, it will parse that string and use the resulting offset. If the time zone\n * is not specified, the\n * default time zone for the locale is used. If both the date object and this formatter\n * instance contain time zones and those time zones are different from each other, the \n * formatter will calculate the offset between the time zones and subtract it from the \n * date before formatting the result for the current time zone. The theory is that a date\n * object that contains a time zone specifies a specific instant in time that is valid\n * around the world, whereas a date object without one is a local time and can only be\n * used for doing things in the local time zone of the user.\n * \n * <li><i>type</i> - Specify whether this formatter should format times only, dates only, or\n * both times and dates together. Valid values are \"time\", \"date\", and \"datetime\". Note that\n * in some locales, the standard format uses the order \"time followed by date\" and in others, \n * the order is exactly opposite, so it is better to create a single \"datetime\" formatter \n * than it is to create a time formatter and a date formatter separately and concatenate the \n * results. A \"datetime\" formatter will get the order correct for the locale.<p>\n * \n * The default type if none is specified in with the type option is \"date\".\n * \n * <li><i>length</i> - Specify the length of the format to use. The length is the approximate size of the \n * formatted string.\n * \n * <ul>\n * <li><i>short</i> - use a short representation of the time. This is the most compact format possible for the locale.\n * <li><i>medium</i> - use a medium length representation of the time. This is a slightly longer format.\n * <li><i>long</i> - use a long representation of the time. This is a fully specified format, but some of the textual \n * components may still be abbreviated\n * <li><i>full</i> - use a full representation of the time. This is a fully specified format where all the textual \n * components are spelled out completely\n * </ul>\n * \n * eg. The \"short\" format for an en_US date may be \"MM/dd/yy\", whereas the long format might be \"d MMM, yyyy\". In the long\n * format, the month name is textual instead of numeric and is longer, the year is 4 digits instead of 2, and the format \n * contains slightly more spaces and formatting characters.<p>\n * \n * Note that the length parameter does not specify which components are to be formatted. Use the \"date\" and the \"time\"\n * properties to specify the components. Also, very few of the components of a time format differ according to the length,\n * so this property has little to no affect on time formatting.\n * \n * <li><i>date</i> - This property tells\n * which components of a date format to use. For example,\n * sometimes you may wish to format a date that only contains the month and date\n * without the year, such as when displaying a person's yearly birthday. The value\n * of this property allows you to specify only those components you want to see in the\n * final output, ordered correctly for the locale. <p>\n * \n * Valid values are:\n * \n * <ul>\n * <li><i>dmwy</i> - format all components, weekday, date, month, and year\n * <li><i>dmy</i> - format only date, month, and year\n * <li><i>dmw</i> - format only weekday, date, and month\n * <li><i>dm</i> - format only date and month\n * <li><i>my</i> - format only month and year\n * <li><i>dw</i> - format only the weekday and date\n * <li><i>d</i> - format only the date\n * <li><i>m</i> - format only the month, in numbers for shorter lengths, and letters for \n * longer lengths\n * <li><i>n</i> - format only the month, in letters only for all lengths\n * <li><i>y</i> - format only the year\n * </ul>\n * Default components, if this property is not specified, is \"dmy\". This property may be specified\n * but has no affect if the current formatter is for times only.\n * \n * <li><i>time</i> - This property gives which components of a time format to use. The time will be formatted \n * correctly for the locale with only the time components requested. For example, a clock might only display \n * the hour and minute and not need the seconds or the am/pm component. In this case, the time property should be set \n * to \"hm\". <p>\n * \n * Valid values for this property are:\n * \n * <ul>\n * <li><i>ahmsz</i> - format the hours, minutes, seconds, am/pm (if using a 12 hour clock), and the time zone\n * <li><i>ahms</i> - format the hours, minutes, seconds, and am/pm (if using a 12 hour clock)\n * <li><i>hmsz</i> - format the hours, minutes, seconds, and the time zone\n * <li><i>hms</i> - format the hours, minutes, and seconds\n * <li><i>ahmz</i> - format the hours, minutes, am/pm (if using a 12 hour clock), and the time zone\n * <li><i>ahm</i> - format the hours, minutes, and am/pm (if using a 12 hour clock)\n * <li><i>hmz</i> - format the hours, minutes, and the time zone\n * <li><i>ah</i> - format only the hours and am/pm if using a 12 hour clock\n * <li><i>hm</i> - format only the hours and minutes\n * <li><i>ms</i> - format only the minutes and seconds\n * <li><i>h</i> - format only the hours\n * <li><i>m</i> - format only the minutes\n * <li><i>s</i> - format only the seconds\n * </ul>\n * \n * If you want to format a length of time instead of a particular instant\n * in time, use the duration formatter object (ilib.DurFmt) instead because this\n * formatter is geared towards instants. A date formatter will make sure that each component of the \n * time is within the normal range\n * for that component. That is, the minutes will always be between 0 and 59, no matter\n * what is specified in the date to format. A duration format will allow the number\n * of minutes to exceed 59 if, for example, you were displaying the length of\n * a movie of 198 minutes.<p>\n * \n * Default value if this property is not specified is \"hma\".\n * \n * <li><i>clock</i> - specify that the time formatter should use a 12 or 24 hour clock. \n * Valid values are \"12\" and \"24\".<p>\n * \n * In some locales, both clocks are used. For example, in en_US, the general populace uses\n * a 12 hour clock with am/pm, but in the US military or in nautical or aeronautical or \n * scientific writing, it is more common to use a 24 hour clock. This property allows you to\n * construct a formatter that overrides the default for the locale.<p>\n * \n * If this property is not specified, the default is to use the most widely used convention\n * for the locale.\n *  \n * <li><i>template</i> - use the given template string as a fixed format when formatting \n * the date/time. Valid codes to use in a template string are as follows:\n * \n * <ul>\n * <li><i>a</i> - am/pm marker\n * <li><i>d</i> - 1 or 2 digit date of month, not padded\n * <li><i>dd</i> - 1 or 2 digit date of month, 0 padded to 2 digits\n * <li><i>O</i> - ordinal representation of the date of month (eg. \"1st\", \"2nd\", etc.)\n * <li><i>D</i> - 1 to 3 digit day of year\n * <li><i>DD</i> - 1 to 3 digit day of year, 0 padded to 2 digits\n * <li><i>DDD</i> - 1 to 3 digit day of year, 0 padded to 3 digits\n * <li><i>M</i> - 1 or 2 digit month number, not padded\n * <li><i>MM</i> - 1 or 2 digit month number, 0 padded to 2 digits\n * <li><i>N</i> - 1 character month name abbreviation\n * <li><i>NN</i> - 2 character month name abbreviation\n * <li><i>MMM</i> - 3 character month month name abbreviation\n * <li><i>MMMM</i> - fully spelled out month name\n * <li><i>yy</i> - 2 digit year\n * <li><i>yyyy</i> - 4 digit year\n * <li><i>E</i> - day-of-week name, abbreviated to a single character\n * <li><i>EE</i> - day-of-week name, abbreviated to a max of 2 characters\n * <li><i>EEE</i> - day-of-week name, abbreviated to a max of 3 characters\n * <li><i>EEEE</i> - day-of-week name fully spelled out \n * <li><i>G</i> - era designator\n * <li><i>w</i> - week number in year\n * <li><i>ww</i> - week number in year, 0 padded to 2 digits\n * <li><i>W</i> - week in month\n * <li><i>h</i> - hour (1 to 12)\n * <li><i>hh</i> - hour (1 to 12), 0 padded to 2 digits\n * <li><i>k</i> - hour (1 to 24)\n * <li><i>kk</i> - hour (1 to 24), 0 padded to 2 digits\n * <li><i>H</i> - hour (0 to 23)\n * <li><i>HH</i> - hour (0 to 23), 0 padded to 2 digits\n * <li><i>K</i> - hour (0 to 11)\n * <li><i>KK</i> - hour (0 to 11), 0 padded to 2 digits\n * <li><i>m</i> - minute in hour\n * <li><i>mm</i> - minute in hour, 0 padded to 2 digits\n * <li><i>s</i> - second in minute\n * <li><i>ss</i> - second in minute, 0 padded to 2 digits\n * <li><i>S</i> - millisecond (1 to 3 digits)\n * <li><i>SSS</i> - millisecond, 0 padded to 3 digits\n * <li><i>z</i> - general time zone\n * <li><i>Z</i> - RFC 822 time zone\n * </ul>\n * \n * <li><i>useNative</i> - the flag used to determine whether to use the native script settings \n * for formatting the numbers.\n *\n * <li><i>meridiems</i> - string that specifies what style of meridiems to use with this \n * format. The choices are \"default\" and \"chinese\". The \"default\" style is the simple AM/PM,\n * and the \"chinese\" style uses 7 different meridiems corresponding to the various parts of \n * the day. The default if not specified is \"default\", even for the Chinese locales. \n *\n * <li><i>onLoad</i> - a callback function to call when the date format object is fully \n * loaded. When the onLoad option is given, the DateFmt object will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the \n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two.\n * \n * <li><i>sync</i> - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while.\n *  \n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * \n * Any substring containing letters within single or double quotes will be used \n * as-is in the final output and will not be interpretted for codes as above.<p>\n * \n * Example: a date format in Spanish might be given as: \"'El' d. 'de' MMMM\", where\n * the 'El' and the 'de' are left as-is in the output because they are quoted. Typical \n * output for this example template might be, \"El 5. de Mayo\".\n * \n * The following options will be used when formatting a date/time with an explicit\n * template:\n * \n * <ul>\n * <li>locale - the locale is only used for \n * translations of things like month names or day-of-week names.\n * <li>calendar - used to translate a date instance into date/time component values \n * that can be formatted into the template\n * <li>timezone - used to figure out the offset to add or subtract from the time to\n * get the final time component values\n * <li>clock - used to figure out whether to format times with a 12 or 24 hour clock.\n * If this option is specified, it will override the hours portion of a time format.\n * That is, \"hh\" is switched with \"HH\" and \"kk\" is switched with \"KK\" as appropriate. \n * If this option is not specified, the 12/24 code in the template will dictate whether \n * to use the 12 or 24 clock, and the 12/24 default in the locale will be ignored.\n * </ul>\n * \n * All other options will be ignored and their corresponding getter methods will\n * return the empty string.<p>\n * \n * Depends directive: !depends datefmt.js\n * \n * @constructor\n * @param {Object} options options governing the way this date formatter instance works\n */\nilib.DateFmt = function(options) {\n\tvar arr, i, bad, \n\t\tsync = true, \n\t\tloadParams = undefined;\n\t\n\tthis.locale = new ilib.Locale();\n\tthis.type = \"date\";\n\tthis.length = \"s\";\n\tthis.dateComponents = \"dmy\";\n\tthis.timeComponents = \"ahm\";\n\tthis.meridiems = \"default\";\n\t\n\tif (options) {\n\t\tif (options.locale) {\n\t\t\tthis.locale = (typeof(options.locale) === 'string') ? new ilib.Locale(options.locale) : options.locale;\n\t\t}\n\t\t\n\t\tif (options.type) {\n\t\t\tif (options.type === 'date' || options.type === 'time' || options.type === 'datetime') {\n\t\t\t\tthis.type = options.type;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (options.calendar) {\n\t\t\tthis.calName = options.calendar;\n\t\t}\n\t\t\n\t\tif (options.length) {\n\t\t\tif (options.length === 'short' ||\n\t\t\t\toptions.length === 'medium' ||\n\t\t\t\toptions.length === 'long' ||\n\t\t\t\toptions.length === 'full') {\n\t\t\t\t// only use the first char to save space in the json files\n\t\t\t\tthis.length = options.length.charAt(0);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (options.date) {\n\t\t\tarr = options.date.split(\"\");\n\t\t\tarr.sort(function (left, right) {\n\t\t\t\treturn (left < right) ? -1 : ((right < left) ? 1 : 0);\n\t\t\t});\n\t\t\tbad = false;\n\t\t\tfor (i = 0; i < arr.length; i++) {\n\t\t\t\tif (arr[i] !== 'd' && arr[i] !== 'm' && arr[i] !== 'y' && arr[i] !== 'w' && arr[i] !== 'n') {\n\t\t\t\t\tbad = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!bad) {\n\t\t\t\tthis.dateComponents = arr.join(\"\");\n\t\t\t}\n\t\t}\n\n\t\tif (options.time) {\n\t\t\tarr = options.time.split(\"\");\n\t\t\tarr.sort(function (left, right) {\n\t\t\t\treturn (left < right) ? -1 : ((right < left) ? 1 : 0);\n\t\t\t});\n\t\t\tthis.badTime = false;\n\t\t\tfor (i = 0; i < arr.length; i++) {\n\t\t\t\tif (arr[i] !== 'h' && arr[i] !== 'm' && arr[i] !== 's' && arr[i] !== 'a' && arr[i] !== 'z') {\n\t\t\t\t\tthis.badTime = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.badTime) {\n\t\t\t\tthis.timeComponents = arr.join(\"\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (options.clock && (options.clock === '12' || options.clock === '24')) {\n\t\t\tthis.clock = options.clock;\n\t\t}\n\t\t\n\t\tif (options.template) {\n\t\t\t// many options are not useful when specifying the template directly, so zero\n\t\t\t// them out.\n\t\t\tthis.type = \"\";\n\t\t\tthis.length = \"\";\n\t\t\tthis.dateComponents = \"\";\n\t\t\tthis.timeComponents = \"\";\n\t\t\t\n\t\t\tthis.template = options.template;\n\t\t}\n\t\t\n\t\tif (options.timezone) {\n\t\t\tif (options.timezone instanceof ilib.TimeZone) {\n\t\t\t\tthis.tz = options.timezone;\n\t\t\t} else {\n\t\t\t\tthis.tz = new ilib.TimeZone({\n\t\t\t\t\tlocale: this.locale, \n\t\t\t\t\tid: options.timezone\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (options.locale) {\n\t\t\t// if an explicit locale was given, then get the time zone for that locale\n\t\t\tthis.tz = new ilib.TimeZone({\n\t\t\t\tlocale: this.locale\n\t\t\t});\n\t\t} // else just assume time zone \"local\"\n\t\t\n\t\tif (typeof(options.useNative) === 'boolean') {\n\t\t\tthis.useNative = options.useNative;\n\t\t}\n\t\t\n\t\tif (typeof(options.meridiems) !== 'undefined' && options.meridiems === \"chinese\") {\n\t\t\tthis.meridiems = options.meridiems;\n\t\t}\n\t\t\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tsync = (options.sync === true);\n\t\t}\n\t\t\n\t\tloadParams = options.loadParams;\n\t}\n\n\tif (!ilib.DateFmt.cache) {\n\t\tilib.DateFmt.cache = {};\n\t}\n\n\tnew ilib.LocaleInfo(this.locale, {\n\t\tsync: sync,\n\t\tloadParams: loadParams, \n\t\tonLoad: ilib.bind(this, function (li) {\n\t\t\tthis.locinfo = li;\n\t\t\t\n\t\t\t// get the default calendar name from the locale, and if the locale doesn't define\n\t\t\t// one, use the hard-coded gregorian as the last resort\n\t\t\tthis.calName = this.calName || this.locinfo.getCalendar() || \"gregorian\";\n\t\t\tthis.cal = ilib.Cal.newInstance({\n\t\t\t\ttype: this.calName\n\t\t\t});\n\t\t\tif (!this.cal) {\n\t\t\t\tthis.cal = new ilib.Cal.Gregorian();\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (this.timeComponents &&\n\t\t\t\t\t(this.clock === '24' || \n\t\t\t\t\t(!this.clock && this.locinfo.getClock() === \"24\"))) {\n\t\t\t\t// make sure we don't have am/pm in 24 hour mode unless the user specifically\n\t\t\t\t// requested it in the time component option\n\t\t\t\tthis.timeComponents = this.timeComponents.replace(\"a\", \"\");\n\t\t\t}\n\t\t\t*/\n\n\t\t\t// load the strings used to translate the components\n\t\t\tnew ilib.ResBundle({\n\t\t\t\tlocale: this.locale,\n\t\t\t\tname: \"sysres\",\n\t\t\t\tsync: sync,\n\t\t\t\tloadParams: loadParams, \n\t\t\t\tonLoad: ilib.bind(this, function (rb) {\n\t\t\t\t\tthis.sysres = rb;\n\t\t\t\t\t\n\t\t\t\t\tif (!this.template) {\n\t\t\t\t\t\tilib.loadData({\n\t\t\t\t\t\t\tobject: ilib.DateFmt, \n\t\t\t\t\t\t\tlocale: this.locale, \n\t\t\t\t\t\t\tname: \"dateformats.json\", \n\t\t\t\t\t\t\tsync: sync, \n\t\t\t\t\t\t\tloadParams: loadParams, \n\t\t\t\t\t\t\tcallback: ilib.bind(this, function (formats) {\n\t\t\t\t\t\t\t\tif (!formats) {\n\t\t\t\t\t\t\t\t\tformats = ilib.data.dateformats || ilib.DateFmt.defaultFmt;\n\t\t\t\t\t\t\t\t\tvar spec = this.locale.getSpec().replace(/-/g, '_');\n\t\t\t\t\t\t\t\t\tilib.DateFmt.cache[spec] = formats;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof(this.clock) === 'undefined') {\n\t\t\t\t\t\t\t\t\t// default to the locale instead\n\t\t\t\t\t\t\t\t\tthis.clock = this.locinfo.getClock();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._initTemplate(formats);\n\t\t\t\t\t\t\t\tthis._massageTemplate();\n\t\t\t\t\t\t\t\tif (options && typeof(options.onLoad) === 'function') {\n\t\t\t\t\t\t\t\t\toptions.onLoad(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._massageTemplate();\n\t\t\t\t\t\tif (options && typeof(options.onLoad) === 'function') {\n\t\t\t\t\t\t\toptions.onLoad(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\t\n\t\t})\n\t});\n};\n\n// used in getLength\nilib.DateFmt.lenmap = {\n\t\"s\": \"short\",\n\t\"m\": \"medium\",\n\t\"l\": \"long\",\n\t\"f\": \"full\"\n};\n\nilib.DateFmt.zeros = \"0000\";\n\nilib.DateFmt.defaultFmt = {\n\t\"gregorian\": {\n\t\t\"order\": \"{date} {time}\",\n\t\t\"date\": {\n\t\t\t\"dmwy\": \"EEE d/MM/yyyy\",\n\t\t\t\"dmy\": \"d/MM/yyyy\",\n\t\t\t\"dmw\": \"EEE d/MM\",\n\t\t\t\"dm\": \"d/MM\",\n\t\t\t\"my\": \"MM/yyyy\",\n\t\t\t\"dw\": \"EEE d\",\n\t\t\t\"d\": \"dd\",\n\t\t\t\"m\": \"MM\",\n\t\t\t\"y\": \"yyyy\",\n\t\t\t\"n\": \"NN\",\n\t\t\t\"w\": \"EEE\"\n\t\t},\n\t\t\"time\": {\n\t\t\t\"12\": \"h:mm:ssa\",\n\t\t\t\"24\": \"H:mm:ss\"\n\t\t},\n\t\t\"range\": {\n\t\t\t\"c00\": \"{st} - {et}, {sd}/{sm}/{sy}\",\n\t\t\t\"c01\": \"{sd}/{sm} {st} - {ed}/{em} {et}, {sy}\",\n\t\t\t\"c02\": \"{sd}/{sm} {st} - {ed}/{em} {et}, {sy}\",\n\t\t\t\"c03\": \"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}\",\n\t\t\t\"c10\": \"{sd}-{ed}/{sm}/{sy}\",\n\t\t\t\"c11\": \"{sd}/{sm} - {ed}/{em} {sy}\",\n\t\t\t\"c12\": \"{sd}/{sm}/{sy} - {ed}/{em}/{ey}\",\n\t\t\t\"c20\": \"{sm}/{sy} - {em}/{ey}\",\n\t\t\t\"c30\": \"{sy} - {ey}\"\n\t\t}\n\t},\n\t\"islamic\": \"gregorian\",\n\t\"hebrew\": \"gregorian\",\n\t\"julian\": \"gregorian\",\n\t\"buddhist\": \"gregorian\",\n\t\"persian\": \"gregorian\",\n\t\"persian-algo\": \"gregorian\",\n\t\"han\": \"gregorian\"\n};\n\n/**\n* @static\n* @private\n*/\nilib.DateFmt.monthNameLenMap = {\n\t\"short\" : \"N\",\n\t\"medium\": \"NN\",\n\t\"long\":   \"MMM\",\n\t\"full\":   \"MMMM\"\n};\n\n/**\n* @static\n* @private\n*/\nilib.DateFmt.weekDayLenMap = {\n\t\"short\" : \"E\",\n\t\"medium\": \"EE\",\n\t\"long\":   \"EEE\",\n\t\"full\":   \"EEEE\"\n};\n\nilib.DateFmt.prototype = {\n\t/**\n\t * @protected\n\t */\n\t_initTemplate: function (formats) {\n\t\tif (formats[this.calName]) {\n\t\t\t/** \n\t\t\t * @private\n\t\t\t * @type {{order:(string|{s:string,m:string,l:string,f:string}),date:Object.<string, (string|{s:string,m:string,l:string,f:string})>,time:Object.<string,(string|{s:string,m:string,l:string,f:string})>,range:Object.<string, (string|{s:string,m:string,l:string,f:string})>}}\n\t\t\t */\n\t\t\tthis.formats = formats[this.calName];\n\t\t\tif (typeof(this.formats) === \"string\") {\n\t\t\t\t// alias to another calendar type\n\t\t\t\tthis.formats = formats[this.formats];\n\t\t\t}\n\t\t\t\n\t\t\tthis.template = \"\";\n\t\t\t\n\t\t\tswitch (this.type) {\n\t\t\t\tcase \"datetime\":\n\t\t\t\t\tthis.template = (this.formats && this._getLengthFormat(this.formats.order, this.length)) || \"{date} {time}\";\n\t\t\t\t\tthis.template = this.template.replace(\"{date}\", this._getFormat(this.formats.date, this.dateComponents, this.length) || \"\");\n\t\t\t\t\tthis.template = this.template.replace(\"{time}\", this._getFormat(this.formats.time[this.clock], this.timeComponents, this.length) || \"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"date\":\n\t\t\t\t\tthis.template = this._getFormat(this.formats.date, this.dateComponents, this.length);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"time\":\n\t\t\t\t\tthis.template = this._getFormat(this.formats.time[this.clock], this.timeComponents, this.length);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow \"No formats available for calendar \" + this.calName + \" in locale \" + this.locale.toString();\n\t\t}\n\t},\n\t\n\t/**\n\t * @protected\n\t */\n\t_massageTemplate: function () {\n\t\tvar i;\n\t\t\n\t\tif (this.clock && this.template) {\n\t\t\t// explicitly set the hours to the requested type\n\t\t\tvar temp = \"\";\n\t\t\tswitch (this.clock) {\n\t\t\t\tcase \"24\":\n\t\t\t\t\tfor (i = 0; i < this.template.length; i++) {\n\t\t\t\t\t\tif (this.template.charAt(i) == \"'\") {\n\t\t\t\t\t\t\ttemp += this.template.charAt(i++);\n\t\t\t\t\t\t\twhile (i < this.template.length && this.template.charAt(i) !== \"'\") {\n\t\t\t\t\t\t\t\ttemp += this.template.charAt(i++);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (i < this.template.length) {\n\t\t\t\t\t\t\t\ttemp += this.template.charAt(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.template.charAt(i) == 'K') {\n\t\t\t\t\t\t\ttemp += 'k';\n\t\t\t\t\t\t} else if (this.template.charAt(i) == 'h') {\n\t\t\t\t\t\t\ttemp += 'H';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttemp += this.template.charAt(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.template = temp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"12\":\n\t\t\t\t\tfor (i = 0; i < this.template.length; i++) {\n\t\t\t\t\t\tif (this.template.charAt(i) == \"'\") {\n\t\t\t\t\t\t\ttemp += this.template.charAt(i++);\n\t\t\t\t\t\t\twhile (i < this.template.length && this.template.charAt(i) !== \"'\") {\n\t\t\t\t\t\t\t\ttemp += this.template.charAt(i++);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (i < this.template.length) {\n\t\t\t\t\t\t\t\ttemp += this.template.charAt(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.template.charAt(i) == 'k') {\n\t\t\t\t\t\t\ttemp += 'K';\n\t\t\t\t\t\t} else if (this.template.charAt(i) == 'H') {\n\t\t\t\t\t\t\ttemp += 'h';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttemp += this.template.charAt(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.template = temp;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// tokenize it now for easy formatting\n\t\tthis.templateArr = this._tokenize(this.template);\n\n\t\tvar digits;\n\t\t// set up the mapping to native or alternate digits if necessary\n\t\tif (typeof(this.useNative) === \"boolean\") {\n\t\t\tif (this.useNative) {\n\t\t\t\tdigits = this.locinfo.getNativeDigits();\n\t\t\t\tif (digits) {\n\t\t\t\t\tthis.digits = digits;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this.locinfo.getDigitsStyle() === \"native\") {\n\t\t\tdigits = this.locinfo.getNativeDigits();\n\t\t\tif (digits) {\n\t\t\t\tthis.useNative = true;\n\t\t\t\tthis.digits = digits;\n\t\t\t}\n\t\t}\n\t},\n    \n\t/**\n\t * Convert the template into an array of date components separated by formatting chars.\n\t * @protected\n\t * @param {string} template Format template to tokenize into components\n\t * @return {Array.<string>} a tokenized array of date format components\n\t */\n\t_tokenize: function (template) {\n\t\tvar i = 0, start, ch, letter, arr = [];\n\t\t\n\t\t// console.log(\"_tokenize: tokenizing template \" + template);\n\t\tif (template) {\n\t\t\twhile (i < template.length) {\n\t\t\t\tch = template.charAt(i);\n\t\t\t\tstart = i;\n\t\t\t\tif (ch === \"'\") {\n\t\t\t\t\t// console.log(\"found quoted string\");\n\t\t\t\t\ti++;\n\t\t\t\t\t// escaped string - push as-is, then dequote later\n\t\t\t\t\twhile (i < template.length && template.charAt(i) !== \"'\") {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < template.length) {\n\t\t\t\t\t\ti++;\t// grab the other quote too\n\t\t\t\t\t}\n\t\t\t\t} else if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {\n\t\t\t\t\tletter = template.charAt(i);\n\t\t\t\t\t// console.log(\"found letters \" + letter);\n\t\t\t\t\twhile (i < template.length && ch === letter) {\n\t\t\t\t\t\tch = template.charAt(++i);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(\"found other\");\n\t\t\t\t\twhile (i < template.length && ch !== \"'\" && (ch < 'a' || ch > 'z') && (ch < 'A' || ch > 'Z')) {\n\t\t\t\t\t\tch = template.charAt(++i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tarr.push(template.substring(start,i));\n\t\t\t\t// console.log(\"start is \" + start + \" i is \" + i + \" and substr is \" + template.substring(start,i));\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t},\n                          \n\t/**\n\t * @protected\n\t * @param {Object.<string, (string|{s:string,m:string,l:string,f:string})>} obj Object to search\n\t * @param {string} components Format components to search\n\t * @param {string} length Length of the requested format\n\t * @return {string|undefined} the requested format\n\t */\n\t_getFormat: function getFormat(obj, components, length) {\n\t\tif (typeof(components) !== 'undefined' && obj[components]) {\n\t\t\treturn this._getLengthFormat(obj[components], length);\n\t\t}\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * @protected\n\t * @param {(string|{s:string,m:string,l:string,f:string})} obj Object to search\n\t * @param {string} length Length of the requested format\n\t * @return {(string|undefined)} the requested format\n\t */\n\t_getLengthFormat: function getLengthFormat(obj, length) {\n\t\tif (typeof(obj) === 'string') {\n\t\t\treturn obj;\n\t\t} else if (obj[length]) {\n\t\t\treturn obj[length];\n\t\t}\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * Return the locale used with this formatter instance.\n\t * @return {ilib.Locale} the ilib.Locale instance for this formatter\n\t */\n\tgetLocale: function() {\n\t\treturn this.locale;\n\t},\n\t\n\t/**\n\t * Return the template string that is used to format date/times for this\n\t * formatter instance. This will work, even when the template property is not explicitly \n\t * given in the options to the constructor. Without the template option, the constructor \n\t * will build the appropriate template according to the options and use that template\n\t * in the format method. \n\t * \n\t * @return {string} the format template for this formatter\n\t */\n\tgetTemplate: function() {\n\t\treturn this.template;\n\t},\n\t\n\t/**\n\t * Return the type of this formatter. The type is a string that has one of the following\n\t * values: \"time\", \"date\", \"datetime\".\n\t * @return {string} the type of the formatter\n\t */\n\tgetType: function() {\n\t\treturn this.type;\n\t},\n\t\n\t/**\n\t * Return the name of the calendar used to format date/times for this\n\t * formatter instance.\n\t * @return {string} the name of the calendar used by this formatter\n\t */\n\tgetCalendar: function () {\n\t\treturn this.cal.getType();\n\t},\n\t\n\t/**\n\t * Return the length used to format date/times in this formatter. This is either the\n\t * value of the length option to the constructor, or the default value.\n\t * \n\t * @return {string} the length of formats this formatter returns\n\t */\n\tgetLength: function () {\n\t\treturn ilib.DateFmt.lenmap[this.length] || \"\";\n\t},\n\t\n\t/**\n\t * Return the date components that this formatter formats. This is either the \n\t * value of the date option to the constructor, or the default value. If this\n\t * formatter is a time-only formatter, this method will return the empty \n\t * string. The date component letters may be specified in any order in the \n\t * constructor, but this method will reorder the given components to a standard \n\t * order.\n\t * \n\t * @return {string} the date components that this formatter formats\n\t */\n\tgetDateComponents: function () {\n\t\treturn this.dateComponents || \"\";\n\t},\n\n\t/**\n\t * Return the time components that this formatter formats. This is either the \n\t * value of the time option to the constructor, or the default value. If this\n\t * formatter is a date-only formatter, this method will return the empty \n\t * string. The time component letters may be specified in any order in the \n\t * constructor, but this method will reorder the given components to a standard \n\t * order.\n\t * \n\t * @return {string} the time components that this formatter formats\n\t */\n\tgetTimeComponents: function () {\n\t\treturn this.timeComponents || \"\";\n\t},\n\n\t/**\n\t * Return the time zone used to format date/times for this formatter\n\t * instance.\n\t * @return a string naming the time zone\n\t */\n\tgetTimeZone: function () {\n\t\t// Lazy load the time zone. If it wasn't explicitly set up before, set \n\t\t// it up now, but use the \n\t\t// default TZ for the locale. This way, if the caller never uses the\n\t\t// time zone in their format, we never have to load up a TimeZone\n\t\t// instance into this formatter.\n\t\tif (!this.tz) {\n\t\t\tthis.tz = new ilib.TimeZone({id: ilib.getTimeZone()});\n\t\t}\n\t\treturn this.tz;\n\t},\n\t/**\n\t * Return the clock option set in the constructor. If the clock option was\n\t * not given, the default from the locale is returned instead.\n\t * @return {string} \"12\" or \"24\" depending on whether this formatter uses\n\t * the 12-hour or 24-hour clock\n\t */\n\tgetClock: function () {\n\t\treturn this.clock || this.locinfo.getClock();\n\t},\n\t\n\t/**\n\t * @private\n\t */\n\t_getTemplate: function (prefix, calendar) {\n\t\tif (calendar !== \"gregorian\") {\n\t\t\treturn prefix + \"-\" + calendar;\n\t\t}\n\t\treturn prefix;\n\t},\n\n\t/**\n\t * Returns an array of the months of the year, formatted to the optional length specified.\n\t * i.e. ...getMonthsOfYear() OR ...getMonthsOfYear({length: \"short\"})\n\t * <p>\n\t * The options parameter may contain any of the following properties:\n\t * \n\t * <ul>\n\t * <li><i>length</i> - length of the names of the months being sought. This may be one of\n\t * \"short\", \"medium\", \"long\", or \"full\"\n\t * <li><i>date</i> - retrieve the names of the months in the date of the given date\n\t * <li><i>year</i> - retrieve the names of the months in the given year. In some calendars,\n\t * the months have different names depending if that year is a leap year or not.\n\t * </ul>\n\t * \n\t * @param  {Object=} options an object-literal that contains any of the above properties\n\t * @return {Array} an array of the names of all of the months of the year in the current calendar\n\t */\n\tgetMonthsOfYear: function(options) {\n\t\tvar length = (options && options.length) || this.getLength(),\n\t\t\ttemplate = ilib.DateFmt.monthNameLenMap[length],\n\t\t\tmonths = [undefined],\n\t\t\tdate,\n\t\t\tmonthCount;\n\t\t\n\t\tif (options) {\n\t\t\tif (options.date) {\n\t\t\t\tdate = ilib.Date._dateToIlib(options.date); \t\n\t\t\t}\n\t\t\t\n\t\t\tif (options.year) {\n\t\t\t\tdate = ilib.Date.newInstance({year: options.year, month: 1, day: 1, type: this.cal.getType()});\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!date) {\n\t\t\tdate = this.cal.newDateInstance();\n\t\t}\n\n\t\tmonthCount = this.cal.getNumMonths(date.getYears());\n\t\tfor (var i = 1; i <= monthCount; i++) {\n\t\t\tmonths[i] = this.sysres.getString(this._getTemplate(template + i, this.cal.getType())).toString();\n\t\t}\n\t\treturn months;\n\t},\n\n\t/**\n\t * Returns an array of the days of the week, formatted to the optional length specified.\n\t * i.e. ...getDaysOfWeek() OR ...getDaysOfWeek({length: \"short\"})\n\t * <p>\n\t * The options parameter may contain any of the following properties:\n\t * \n\t * <ul>\n\t * <li><i>length</i> - length of the names of the months being sought. This may be one of\n\t * \"short\", \"medium\", \"long\", or \"full\"\n\t * </ul>\n\t * @param  {Object=} options an object-literal that contains one key \n\t *                   \"length\" with the standard length strings\n\t * @return {Array} an array of all of the names of the days of the week\n\t */\n\tgetDaysOfWeek: function(options) {\n\t\tvar length = (options && options.length) || this.getLength(),\n\t\t\ttemplate = ilib.DateFmt.weekDayLenMap[length],\n\t\t\tdays = [];\n\t\tfor (var i = 0; i < 7; i++) {\n\t\t\tdays[i] = this.sysres.getString(this._getTemplate(template + i, this.cal.getType())).toString();\n\t\t}\n\t\treturn days;\n\t},\n\n\t\n\t/**\n\t * Convert this formatter to a string representation by returning the\n\t * format template. This method delegates to getTemplate.\n\t * \n\t * @return {string} the format template\n\t */\n\ttoString: function() {\n\t\treturn this.getTemplate();\n\t},\n\t\n\t/*\n\t * @private\n\t * Left pad the str to the given length of digits with zeros\n\t * @param {string} str the string to pad\n\t * @param {number} length the desired total length of the output string, padded \n\t */\n\t_pad: function (str, length) {\n\t\tif (typeof(str) !== 'string') {\n\t\t\tstr = \"\" + str;\n\t\t}\n\t\tvar start = 0;\n\t\tif (str.charAt(0) === '-') {\n\t\t\tstart++;\n\t\t}\n\t\treturn (str.length >= length+start) ? str : str.substring(0, start) + ilib.DateFmt.zeros.substring(0,length-str.length+start) + str.substring(start);\n\t},\n\t\n\t/*\n\t * @private\n\t * Format a date according to a sequence of components. \n\t * @param {ilib.Date} date a date/time object to format\n\t * @param {Array.<string>} templateArr an array of components to format\n\t * @return {string} the formatted date\n\t */\n\t_formatTemplate: function (date, templateArr) {\n\t\tvar i, key, temp, tz, str = \"\";\n\t\tfor (i = 0; i < templateArr.length; i++) {\n\t\t\tswitch (templateArr[i]) {\n\t\t\t\tcase 'd':\n\t\t\t\t\tstr += (date.day || 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'dd':\n\t\t\t\t\tstr += this._pad(date.day || \"1\", 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'yy':\n\t\t\t\t\ttemp = \"\" + ((date.year || 0) % 100);\n\t\t\t\t\tstr += this._pad(temp, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'yyyy':\n\t\t\t\t\tstr += this._pad(date.year || \"0\", 4);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'M':\n\t\t\t\t\tstr += (date.month || 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'MM':\n\t\t\t\t\tstr += this._pad(date.month || \"1\", 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'h':\n\t\t\t\t\ttemp = (date.hour || 0) % 12;\n\t\t\t\t\tif (temp == 0) {\n\t\t\t\t\t\ttemp = \"12\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += temp; \n\t\t\t\t\tbreak;\n\t\t\t\tcase 'hh':\n\t\t\t\t\ttemp = (date.hour || 0) % 12;\n\t\t\t\t\tif (temp == 0) {\n\t\t\t\t\t\ttemp = \"12\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += this._pad(temp, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'K':\n\t\t\t\t\ttemp = (date.hour || 0) % 12;\n\t\t\t\t\tstr += temp; \n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KK':\n\t\t\t\t\ttemp = (date.hour || 0) % 12;\n\t\t\t\t\tstr += this._pad(temp, 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'H':\n\t\t\t\t\tstr += (date.hour || \"0\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'HH':\n\t\t\t\t\tstr += this._pad(date.hour || \"0\", 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'k':\n\t\t\t\t\tstr += (date.hour == 0 ? \"24\" : date.hour);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'kk':\n\t\t\t\t\ttemp = (date.hour == 0 ? \"24\" : date.hour);\n\t\t\t\t\tstr += this._pad(temp, 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'm':\n\t\t\t\t\tstr += (date.minute || \"0\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mm':\n\t\t\t\t\tstr += this._pad(date.minute || \"0\", 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tstr += (date.minute || \"0\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ss':\n\t\t\t\t\tstr += this._pad(date.second || \"0\", 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tstr += (date.millisecond || \"0\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'SSS':\n\t\t\t\t\tstr += this._pad(date.millisecond || \"0\", 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'N':\n\t\t\t\tcase 'NN':\n\t\t\t\tcase 'MMM':\n\t\t\t\tcase 'MMMM':\n\t\t\t\t\tkey = templateArr[i] + (date.month || 1);\n\t\t\t\t\tstr += (this.sysres.getString(undefined, key + \"-\" + this.calName) || this.sysres.getString(undefined, key));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'E':\n\t\t\t\tcase 'EE':\n\t\t\t\tcase 'EEE':\n\t\t\t\tcase 'EEEE':\n\t\t\t\t\tkey = templateArr[i] + date.getDayOfWeek();\n\t\t\t\t\t//console.log(\"finding \" + key + \" in the resources\");\n\t\t\t\t\tstr += (this.sysres.getString(undefined, key + \"-\" + this.calName) || this.sysres.getString(undefined, key));\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'a':\n\t\t\t\t\tif (this.meridiems === \"chinese\") {\n\t\t\t\t\t\tif (date.hour < 6) {\n\t\t\t\t\t\t\tkey = \"azh0\";\t// before dawn\n\t\t\t\t\t\t} else if (date.hour < 9) {\n\t\t\t\t\t\t\tkey = \"azh1\";\t// morning\n\t\t\t\t\t\t} else if (date.hour < 12) {\n\t\t\t\t\t\t\tkey = \"azh2\";\t// late morning/day before noon\n\t\t\t\t\t\t} else if (date.hour < 13) {\n\t\t\t\t\t\t\tkey = \"azh3\";\t// noon hour/midday\n\t\t\t\t\t\t} else if (date.hour < 18) {\n\t\t\t\t\t\t\tkey = \"azh4\";\t// afternoon\n\t\t\t\t\t\t} else if (date.hour < 21) {\n\t\t\t\t\t\t\tkey = \"azh5\";\t// evening time/dusk\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tkey = \"azh6\";\t// night time\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkey = date.hour < 12 ? \"a0\" : \"a1\";\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"finding \" + key + \" in the resources\");\n\t\t\t\t\tstr += (this.sysres.getString(undefined, key + \"-\" + this.calName) || this.sysres.getString(undefined, key));\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'w':\n\t\t\t\t\tstr += date.getWeekOfYear();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ww':\n\t\t\t\t\tstr += this._pad(date.getWeekOfYear(), 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'D':\n\t\t\t\t\tstr += date.getDayOfYear();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'DD':\n\t\t\t\t\tstr += this._pad(date.getDayOfYear(), 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'DDD':\n\t\t\t\t\tstr += this._pad(date.getDayOfYear(), 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'W':\n\t\t\t\t\tstr += date.getWeekOfMonth(this.locale);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'G':\n\t\t\t\t\tkey = \"G\" + date.getEra();\n\t\t\t\t\tstr += (this.sysres.getString(undefined, key + \"-\" + this.calName) || this.sysres.getString(undefined, key));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'O':\n\t\t\t\t\ttemp = this.sysres.getString(\"1#1st|2#2nd|3#3rd|21#21st|22#22nd|23#23rd|31#31st|#{num}th\", \"ordinalChoice\");\n\t\t\t\t\tstr += temp.formatChoice(date.day, {num: date.day});\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'z': // general time zone\n\t\t\t\t\ttz = this.getTimeZone(); // lazy-load the tz\n\t\t\t\t\tstr += tz.getDisplayName(date, \"standard\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Z': // RFC 822 time zone\n\t\t\t\t\ttz = this.getTimeZone(); // lazy-load the tz\n\t\t\t\t\tstr += tz.getDisplayName(date, \"rfc822\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tstr += templateArr[i].replace(/'/g, \"\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this.digits) {\n\t\t\tstr = ilib.mapString(str, this.digits);\n\t\t}\n\t\treturn str;\n\t},\n\t\n\t/**\n\t * Format a particular date instance according to the settings of this\n\t * formatter object. The type of the date instance being formatted must \n\t * correspond exactly to the calendar type with which this formatter was \n\t * constructed. If the types are not compatible, this formatter will\n\t * produce bogus results.\n\t * \n\t * @param {Date|Number|String|ilib.Date|ilib.JulianDay|null|undefined} dateLike a date-like object to format\n\t * @return {string} the formatted version of the given date instance\n\t */\n\tformat: function (dateLike) {\n\t\tvar thisZoneName = this.tz && this.tz.getId() || \"local\";\n\n\t\tvar date = ilib.Date._dateToIlib(dateLike, thisZoneName);\n\t\t\n\t\tif (!date.getCalendar || !(date instanceof ilib.Date)) {\n\t\t\tthrow \"Wrong date type passed to ilib.DateFmt.format()\";\n\t\t}\n\t\t\n\t\tvar dateZoneName = date.timezone || \"local\";\n\t\t\n\t\t// convert to the time zone of this formatter before formatting\n\t\tif (dateZoneName !== thisZoneName || date.getCalendar() !== this.calName) {\n\t\t\t// console.log(\"Differing time zones date: \" + dateZoneName + \" and fmt: \" + thisZoneName + \". Converting...\");\n\t\t\t// this will recalculate the date components based on the new time zone\n\t\t\t// and/or convert a date in another calendar to the current calendar before formatting it\n\t\t\tvar newDate = ilib.Date.newInstance({\n\t\t\t\ttype: this.calName,\n\t\t\t\ttimezone: thisZoneName,\n\t\t\t\tjulianday: date.getJulianDay()\n\t\t\t});\n\t\t\t\n\t\t\tdate = newDate;\n\t\t}\n\t\treturn this._formatTemplate(date, this.templateArr);\n\t},\n\t\n\t/**\n\t * Return a string that describes a date relative to the given \n\t * reference date. The string returned is text that for the locale that\n\t * was specified when the formatter instance was constructed.<p>\n\t * \n\t * The date can be in the future relative to the reference date or in\n\t * the past, and the formatter will generate the appropriate string.<p>\n\t * \n\t * The text used to describe the relative reference depends on the length\n\t * of time between the date and the reference. If the time was in the\n\t * past, it will use the \"ago\" phrase, and in the future, it will use\n\t * the \"in\" phrase. Examples:<p>\n\t * \n\t * <ul>\n\t * <li>within a minute: either \"X seconds ago\" or \"in X seconds\"\n\t * <li>within an hour: either \"X minutes ago\" or \"in X minutes\"\n\t * <li>within a day: either \"X hours ago\" or \"in X hours\"\n\t * <li>within 2 weeks: either \"X days ago\" or \"in X days\"\n\t * <li>within 12 weeks (~3 months): either \"X weeks ago\" or \"in X weeks\"\n\t * <li>within two years: either \"X months ago\" or \"in X months\"\n\t * <li>longer than 2 years: \"X years ago\" or \"in X years\"\n\t * </ul>\n\t * \n\t * @param {Date|Number|String|ilib.Date|ilib.JulianDay|null|undefined} reference a date that the date parameter should be relative to\n\t * @param {Date|Number|String|ilib.Date|ilib.JulianDay|null|undefined} date a date being formatted\n\t * @throws \"Wrong calendar type\" when the start or end dates are not the same\n\t * calendar type as the formatter itself\n\t * @return {string} the formatted relative date\n\t */\n\tformatRelative: function(reference, date) {\n\t\treference = ilib.Date._dateToIlib(reference);\n\t\tdate = ilib.Date._dateToIlib(date);\n\t\t\n\t\tvar referenceRd, dateRd, fmt, time, diff, num;\n\t\t\n\t\tif (typeof(reference) !== 'object' || !reference.getCalendar || reference.getCalendar() !== this.calName ||\n\t\t\ttypeof(date) !== 'object' || !date.getCalendar || date.getCalendar() !== this.calName) {\n\t\t\tthrow \"Wrong calendar type\";\n\t\t}\n\t\t\n\t\treferenceRd = reference.getRataDie();\n\t\tdateRd = date.getRataDie();\n\t\t\n\t\tif (dateRd < referenceRd) {\n\t\t\tdiff = referenceRd - dateRd;\n\t\t\tfmt = this.sysres.getString(\"{duration} ago\");\n\t\t} else {\n\t\t\tdiff = dateRd - referenceRd;\n\t\t\tfmt = this.sysres.getString(\"in {duration}\");\n\t\t}\n\t\t\n\t\tif (diff < 0.000694444) {\n\t\t\tnum = Math.round(diff * 86400);\n\t\t\tswitch (this.length) {\n\t\t\t\tcase 's':\n\t\t\t\t\ttime = this.sysres.getString(\"#{num}s\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'm':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 se|#{num} sec\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 sec|#{num} sec\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\tcase 'f':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 second|#{num} seconds\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (diff < 0.041666667) {\n\t\t\tnum = Math.round(diff * 1440);\n\t\t\tswitch (this.length) {\n\t\t\t\tcase 's':\n\t\t\t\t\ttime = this.sysres.getString(\"#{num}m\", \"durationShortMinutes\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'm':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 mi|#{num} min\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 min|#{num} min\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\tcase 'f':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 minute|#{num} minutes\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (diff < 1) {\n\t\t\tnum = Math.round(diff * 24);\n\t\t\tswitch (this.length) {\n\t\t\t\tcase 's':\n\t\t\t\t\ttime = this.sysres.getString(\"#{num}h\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'm':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 hr|#{num} hrs\", \"durationMediumHours\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 hr|#{num} hrs\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\tcase 'f':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 hour|#{num} hours\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (diff < 14) {\n\t\t\tnum = Math.round(diff);\n\t\t\tswitch (this.length) {\n\t\t\t\tcase 's':\n\t\t\t\t\ttime = this.sysres.getString(\"#{num}d\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'm':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 dy|#{num} dys\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 day|#{num} days\", \"durationLongDays\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\tcase 'f':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 day|#{num} days\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (diff < 84) {\n\t\t\tnum = Math.round(diff/7);\n\t\t\tswitch (this.length) {\n\t\t\t\tcase 's':\n\t\t\t\t\ttime = this.sysres.getString(\"#{num}w\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'm':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 wk|#{num} wks\", \"durationMediumWeeks\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 wk|#{num} wks\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\tcase 'f':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 week|#{num} weeks\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (diff < 730) {\n\t\t\tnum = Math.round(diff/30.4);\n\t\t\tswitch (this.length) {\n\t\t\t\tcase 's':\n\t\t\t\t\ttime = this.sysres.getString(\"#{num}m\", \"durationShortMonths\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'm':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 mo|#{num} mos\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 mon|#{num} mons\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\tcase 'f':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 month|#{num} months\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tnum = Math.round(diff/365);\n\t\t\tswitch (this.length) {\n\t\t\t\tcase 's':\n\t\t\t\t\ttime = this.sysres.getString(\"#{num}y\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'm':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 yr|#{num} yrs\", \"durationMediumYears\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 yr|#{num} yrs\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\tcase 'f':\n\t\t\t\t\ttime = this.sysres.getString(\"1#1 year|#{num} years\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn fmt.format({duration: time.formatChoice(num, {num: num})});\n\t}\n};\n\n/*\n * datefmt.js - Date formatter definition\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n!depends \nilibglobal.js \nlocale.js \ndate.js \nstrings.js \ncalendar.js\nlocaleinfo.js\ntimezone.js\ndatefmt.js\ncalendar/gregorian.js\nutil/jsutils.js\n*/\n\n// !data dateformats sysres\n\n/**\n * @class\n * Create a new date range formatter instance. The date range formatter is immutable once\n * it is created, but can format as many different date ranges as needed with the same\n * options. Create different date range formatter instances for different purposes\n * and then keep them cached for use later if you have more than one range to\n * format.<p>\n * \n * The options may contain any of the following properties:\n * \n * <ul>\n * <li><i>locale</i> - locale to use when formatting the date/times in the range. If the \n * locale is not specified, then the default locale of the app or web page will be used.\n * \n * <li><i>calendar</i> - the type of calendar to use for this format. The value should\n * be a sting containing the name of the calendar. Currently, the supported\n * types are \"gregorian\", \"julian\", \"arabic\", \"hebrew\", or \"chinese\". If the\n * calendar is not specified, then the default calendar for the locale is used. When the\n * calendar type is specified, then the format method must be called with an instance of\n * the appropriate date type. (eg. Gregorian calendar means that the format method must \n * be called with a GregDate instance.)\n *  \n * <li><i>timezone</i> - time zone to use when formatting times. This may be a time zone\n * instance or a time zone specifier string in RFC 822 format. If not specified, the\n * default time zone for the locale is used.\n * \n * <li><i>length</i> - Specify the length of the format to use as a string. The length \n * is the approximate size of the formatted string.\n * \n * <ul>\n * <li><i>short</i> - use a short representation of the time. This is the most compact format possible for the locale.\n * <li><i>medium</i> - use a medium length representation of the time. This is a slightly longer format.\n * <li><i>long</i> - use a long representation of the time. This is a fully specified format, but some of the textual \n * components may still be abbreviated. (eg. \"Tue\" instead of \"Tuesday\")\n * <li><i>full</i> - use a full representation of the time. This is a fully specified format where all the textual \n * components are spelled out completely.\n * </ul>\n * \n * eg. The \"short\" format for an en_US range may be \"MM/yy - MM/yy\", whereas the long format might be \n * \"MMM, yyyy - MMM, yyyy\". In the long format, the month name is textual instead of numeric \n * and is longer, the year is 4 digits instead of 2, and the format contains slightly more \n * spaces and formatting characters.<p>\n * \n * Note that the length parameter does not specify which components are to be formatted. The\n * components that are formatted depend on the length of time in the range.\n * \n * <li><i>clock</i> - specify that formatted times should use a 12 or 24 hour clock if the\n * format happens to include times. Valid values are \"12\" and \"24\".<p>\n * \n * In some locales, both clocks are used. For example, in en_US, the general populace uses\n * a 12 hour clock with am/pm, but in the US military or in nautical or aeronautical or \n * scientific writing, it is more common to use a 24 hour clock. This property allows you to\n * construct a formatter that overrides the default for the locale.<p>\n * \n * If this property is not specified, the default is to use the most widely used convention\n * for the locale.\n * <li>onLoad - a callback function to call when the date range format object is fully \n * loaded. When the onLoad option is given, the DateRngFmt object will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the \n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two. \n * \n * <li>sync - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while.\n *  \n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * <p>\n * \n * Depends directive: !depends daterangefmt.js\n * \n * @constructor\n * @param {Object} options options governing the way this date range formatter instance works\n */\nilib.DateRngFmt = function(options) {\n\tvar sync = true;\n\tvar loadParams = undefined;\n\tthis.locale = new ilib.Locale();\n\tthis.length = \"s\";\n\t\n\tif (options) {\n\t\tif (options.locale) {\n\t\t\tthis.locale = (typeof(options.locale) === 'string') ? new ilib.Locale(options.locale) : options.locale;\n\t\t}\n\t\t\n\t\tif (options.calendar) {\n\t\t\tthis.calName = options.calendar;\n\t\t}\n\t\t\n\t\tif (options.length) {\n\t\t\tif (options.length === 'short' ||\n\t\t\t\toptions.length === 'medium' ||\n\t\t\t\toptions.length === 'long' ||\n\t\t\t\toptions.length === 'full') {\n\t\t\t\t// only use the first char to save space in the json files\n\t\t\t\tthis.length = options.length.charAt(0);\n\t\t\t}\n\t\t}\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tsync = (options.sync == true);\n\t\t}\n\t\t\n\t\tloadParams = options.loadParams;\n\t}\n\t\n\tvar opts = {};\n\tilib.shallowCopy(options, opts);\n\topts.sync = sync;\n\topts.loadParams = loadParams;\n\t\n\t/**\n\t * @private\n\t */\n\topts.onLoad = ilib.bind(this, function (fmt) {\n\t\tthis.dateFmt = fmt;\n\t\tif (fmt) {\n\t\t\tthis.locinfo = this.dateFmt.locinfo;\n\n\t\t\t// get the default calendar name from the locale, and if the locale doesn't define\n\t\t\t// one, use the hard-coded gregorian as the last resort\n\t\t\tthis.calName = this.calName || this.locinfo.getCalendar() || \"gregorian\";\n\t\t\tthis.cal = ilib.Cal.newInstance({\n\t\t\t\ttype: this.calName\n\t\t\t});\n\t\t\tif (!this.cal) {\n\t\t\t\tthis.cal = new ilib.Cal.Gregorian();\n\t\t\t}\n\t\t\t\n\t\t\tthis.timeTemplate = this.dateFmt._getFormat(this.dateFmt.formats.time[this.dateFmt.clock], this.dateFmt.timeComponents, this.length) || \"hh:mm\";\n\t\t\tthis.timeTemplateArr = this.dateFmt._tokenize(this.timeTemplate);\n\t\t\t\n\t\t\tif (options && typeof(options.onLoad) === 'function') {\n\t\t\t\toptions.onLoad(this);\n\t\t\t}\n\t\t}\n\t});\n\n\t// delegate a bunch of the formatting to this formatter\n\tnew ilib.DateFmt(opts);\n};\n\nilib.DateRngFmt.prototype = {\n\t/**\n\t * Return the locale used with this formatter instance.\n\t * @return {ilib.Locale} the ilib.Locale instance for this formatter\n\t */\n\tgetLocale: function() {\n\t\treturn this.locale;\n\t},\n\t\n\t/**\n\t * Return the name of the calendar used to format date/times for this\n\t * formatter instance.\n\t * @return {string} the name of the calendar used by this formatter\n\t */\n\tgetCalendar: function () {\n\t\treturn this.dateFmt.getCalendar();\n\t},\n\t\n\t/**\n\t * Return the length used to format date/times in this formatter. This is either the\n\t * value of the length option to the constructor, or the default value.\n\t * \n\t * @return {string} the length of formats this formatter returns\n\t */\n\tgetLength: function () {\n\t\treturn ilib.DateFmt.lenmap[this.length] || \"\";\n\t},\n\t\n\t/**\n\t * Return the time zone used to format date/times for this formatter\n\t * instance.\n\t * @return {ilib.TimeZone} a string naming the time zone\n\t */\n\tgetTimeZone: function () {\n\t\treturn this.dateFmt.getTimeZone();\n\t},\n\t\n\t/**\n\t * Return the clock option set in the constructor. If the clock option was\n\t * not given, the default from the locale is returned instead.\n\t * @return {string} \"12\" or \"24\" depending on whether this formatter uses\n\t * the 12-hour or 24-hour clock\n\t */\n\tgetClock: function () {\n\t\treturn this.dateFmt.getClock();\n\t},\n\t\n\t/**\n\t * Format a date/time range according to the settings of the current\n\t * formatter. The range is specified as being from the \"start\" date until\n\t * the \"end\" date. <p>\n\t * \n\t * The template that the date/time range uses depends on the\n\t * length of time between the dates, on the premise that a long date range\n\t * which is too specific is not useful. For example, when giving\n\t * the dates of the 100 Years War, in most situations it would be more \n\t * appropriate to format the range as \"1337 - 1453\" than to format it as \n\t * \"10:37am November 9, 1337 - 4:37pm July 17, 1453\", as the latter format \n\t * is much too specific given the length of time that the range represents.\n\t * If a very specific, but long, date range really is needed, the caller \n\t * should format two specific dates separately and put them \n\t * together as you might with other normal strings.<p>\n\t * \n\t * The format used for a date range contains the following date components,\n\t * where the order of those components is rearranged and the component values \n\t * are translated according to each locale:\n\t * \n\t * <ul>\n\t * <li>within 3 days: the times of day, dates, months, and years\n\t * <li>within 730 days (2 years): the dates, months, and years\n\t * <li>within 3650 days (10 years): the months and years\n\t * <li>longer than 10 years: the years only \n\t * </ul>\n\t * \n\t * In general, if any of the date components share a value between the\n\t * start and end date, that component is only given once. For example,\n\t * if the range is from November 15, 2011 to November 26, 2011, the \n\t * start and end dates both share the same month and year. The \n\t * range would then be formatted as \"November 15-26, 2011\". <p>\n\t * \n\t * If you want to format a length of time instead of a particular range of\n\t * time (for example, the length of an event rather than the specific start time\n\t * and end time of that event), then use a duration formatter instance \n\t * (ilib.DurFmt) instead. The formatRange method will make sure that each component \n\t * of the date/time is within the normal range for that component. For example, \n\t * the minutes will always be between 0 and 59, no matter what is specified in \n\t * the date to format, because that is the normal range for minutes. A duration \n\t * format will allow the number of minutes to exceed 59. For example, if you \n\t * were displaying the length of a movie that is 198 minutes long, the minutes\n\t * component of a duration could be 198.<p>\n\t * \n\t * @param {ilib.Date} start the starting date/time of the range. This must be of \n\t * the same calendar type as the formatter itself. \n\t * @param {ilib.Date} end the ending date/time of the range. This must be of the \n\t * same calendar type as the formatter itself.\n\t * @throws \"Wrong calendar type\" when the start or end dates are not the same\n\t * calendar type as the formatter itself\n\t * @return {string} a date range formatted for the locale\n\t */\n\tformat: function (start, end) {\n\t\tvar startRd, endRd, fmt = \"\", yearTemplate, monthTemplate, dayTemplate;\n\t\t\n\t\tif (typeof(start) !== 'object' || !start.getCalendar || start.getCalendar() !== this.calName ||\n\t\t\ttypeof(end) !== 'object' || !end.getCalendar || end.getCalendar() !== this.calName) {\n\t\t\tthrow \"Wrong calendar type\";\n\t\t}\n\t\t\n\t\tstartRd = start.getRataDie();\n\t\tendRd = end.getRataDie();\n\t\t\n\t\t// \n\t\t// legend:\n\t\t// c00 - difference is less than 3 days. Year, month, and date are same, but time is different\n\t\t// c01 - difference is less than 3 days. Year and month are same but date and time are different\n\t\t// c02 - difference is less than 3 days. Year is same but month, date, and time are different. (ie. it straddles a month boundary)\n\t\t// c03 - difference is less than 3 days. Year, month, date, and time are all different. (ie. it straddles a year boundary)\n\t\t// c10 - difference is less than 2 years. Year and month are the same, but date is different.\n\t\t// c11 - difference is less than 2 years. Year is the same, but month, date, and time are different.\n\t\t// c12 - difference is less than 2 years. All fields are different. (ie. straddles a year boundary)\n\t\t// c20 - difference is less than 10 years. All fields are different.\n\t\t// c30 - difference is more than 10 years. All fields are different.\n\t\t//\n\t\t\n\t\tif (endRd - startRd < 3) {\n\t\t\tif (start.year === end.year) {\n\t\t\t\tif (start.month === end.month) {\n\t\t\t\t\tif (start.day === end.day) {\n\t\t\t\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c00\", this.length));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c01\", this.length));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c02\", this.length));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c03\", this.length));\n\t\t\t}\n\t\t} else if (endRd - startRd < 730) {\n\t\t\tif (start.year === end.year) {\n\t\t\t\tif (start.month === end.month) {\n\t\t\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c10\", this.length));\n\t\t\t\t} else {\n\t\t\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c11\", this.length));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c12\", this.length));\n\t\t\t}\n\t\t} else if (endRd - startRd < 3650) {\n\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c20\", this.length));\n\t\t} else {\n\t\t\tfmt = new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range, \"c30\", this.length));\n\t\t}\n\n\t\tyearTemplate = this.dateFmt._tokenize(this.dateFmt._getFormat(this.dateFmt.formats.date, \"y\", this.length) || \"yyyy\");\n\t\tmonthTemplate = this.dateFmt._tokenize(this.dateFmt._getFormat(this.dateFmt.formats.date, \"m\", this.length) || \"MM\");\n\t\tdayTemplate = this.dateFmt._tokenize(this.dateFmt._getFormat(this.dateFmt.formats.date, \"d\", this.length) || \"dd\");\n\t\t\n\t\t/*\n\t\tconsole.log(\"fmt is \" + fmt.toString());\n\t\tconsole.log(\"year template is \" + yearTemplate);\n\t\tconsole.log(\"month template is \" + monthTemplate);\n\t\tconsole.log(\"day template is \" + dayTemplate);\n\t\t*/\n\t\t\n\t\treturn fmt.format({\n\t\t\tsy: this.dateFmt._formatTemplate(start, yearTemplate),\n\t\t\tsm: this.dateFmt._formatTemplate(start, monthTemplate),\n\t\t\tsd: this.dateFmt._formatTemplate(start, dayTemplate),\n\t\t\tst: this.dateFmt._formatTemplate(start, this.timeTemplateArr),\n\t\t\tey: this.dateFmt._formatTemplate(end, yearTemplate),\n\t\t\tem: this.dateFmt._formatTemplate(end, monthTemplate),\n\t\t\ted: this.dateFmt._formatTemplate(end, dayTemplate),\n\t\t\tet: this.dateFmt._formatTemplate(end, this.timeTemplateArr)\n\t\t});\n\t}\n};\n\n/*\n * util/search.js - Misc search utility routines\n * \n * Copyright © 2013, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js\n\n/**\n * Binary search a sorted array for a particular target value.\n * If the exact value is not found, it returns the index of the smallest \n * entry that is greater than the given target value.<p> \n * \n * The comparator\n * parameter is a function that knows how to compare elements of the \n * array and the target. The function should return a value greater than 0\n * if the array element is greater than the target, a value less than 0 if\n * the array element is less than the target, and 0 if the array element \n * and the target are equivalent.<p>\n * \n * If the comparator function is not specified, this function assumes\n * the array and the target are numeric values and should be compared \n * as such.<p>\n * \n * Depends directive: !depends utils.js\n * \n * @static\n * @param {*} target element being sought \n * @param {Array} arr the array being searched\n * @param {?function(*,*)=} comparator a comparator that is appropriate for comparing two entries\n * in the array  \n * @return the index of the array into which the value would fit if \n * inserted, or -1 if given array is not an array or the target is not \n * a number\n */\nilib.bsearch = function(target, arr, comparator) {\n\tif (typeof(arr) === 'undefined' || !arr || typeof(target) === 'undefined') {\n\t\treturn -1;\n\t}\n\t\n\tvar high = arr.length - 1,\n\t\tlow = 0,\n\t\tmid = 0,\n\t\tvalue,\n\t\tcmp = comparator || ilib.bsearch.numbers;\n\t\n\twhile (low <= high) {\n\t\tmid = Math.floor((high+low)/2);\n\t\tvalue = cmp(arr[mid], target);\n\t\tif (value > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else if (value < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\t\n\treturn low;\n};\n\n/**\n * Returns whether or not the given element is greater than, less than,\n * or equal to the given target.<p>\n * \n * @private\n * @static\n * @param {number} element the element being tested\n * @param {number} target the target being sought\n */\nilib.bsearch.numbers = function(element, target) {\n\treturn element - target;\n};\n\n/**\n * Do a bisection search of a function for a particular target value.<p> \n * \n * The function to search is a function that takes a numeric parameter, \n * does calculations, and returns gives a numeric result. The \n * function should should be smooth and not have any discontinuities \n * between the low and high values of the parameter.\n *  \n * Depends directive: !depends utils.js\n * \n * @static\n * @param {number} target value being sought\n * @param {number} low the lower bounds to start searching\n * @param {number} high the upper bounds to start searching\n * @param {number} precision minimum precision to support. Use 0 if you want to use the default.\n * @param {?function(number)=} func function to search \n * @return an approximation of the input value to the function that gives the desired\n * target output value, correct to within the error range of Javascript floating point \n * arithmetic, or NaN if there was some error\n */\nilib.bisectionSearch = function(target, low, high, precision, func) {\n\tif (typeof(target) !== 'number' || \n\t\t\ttypeof(low) !== 'number' || \n\t\t\ttypeof(high) !== 'number' || \n\t\t\ttypeof(func) !== 'function') {\n\t\treturn NaN;\n\t}\n\t\n\tvar mid = 0,\n\t\tvalue,\n\t\tpre = precision > 0 ? precision : 1e-13;\n\t\n\tfunction compareSignificantDigits(a, b) {\n\t\tvar leftParts = a.toExponential().split('e');\n\t\tvar rightParts = b.toExponential().split('e');\n\t\tvar left = new Number(leftParts[0]);\n\t\tvar right = new Number(rightParts[0]);\n\t\t\n\t\treturn leftParts[1] === rightParts[1] && Math.abs(left - right) < pre; \n\t}\n\t\n\tdo {\n\t\tmid = (high+low)/2;\n\t\tvalue = func(mid);\n\t\tif (value > target) {\n\t\t\thigh = mid;\n\t\t} else if (value < target) {\n\t\t\tlow = mid;\n\t\t}\n\t} while (high - low > pre);\n\t\n\treturn mid;\n};\n\n\n/*\n * gregoriandate.js - Represent a date in the Gregorian calendar\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends \ndate.js \ncalendar/gregorian.js \nutil/utils.js\nutil/search.js\nutil/math.js\nlocaleinfo.js \njulianday.js\ncalendar/gregratadie.js\ntimezone.js\n*/\n\n/**\n * @class\n * Construct a new Gregorian date object. The constructor parameters can \n * contain any of the following properties:\n * \n * <ul>\n * <li><i>unixtime<i> - sets the time of this instance according to the given \n * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.\n * \n * <li><i>julianday</i> - sets the time of this instance according to the given\n * Julian Day instance or the Julian Day given as a float\n * \n * <li><i>year</i> - any integer, including 0\n * \n * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.\n * \n * <li><i>day</i> - 1 to 31\n * \n * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation \n * is always done with an unambiguous 24 hour representation\n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>second</i> - 0 to 59\n * \n * <li><i>millisecond</i> - 0 to 999\n * \n * <li><i>dst</i> - boolean used to specify whether the given time components are\n * intended to be in daylight time or not. This is only used in the overlap\n * time when transitioning from DST to standard time, and the time components are \n * ambiguous. Otherwise at all other times of the year, this flag is ignored.\n * If you specify the date using unix time (UTC) or a julian day, then the time is\n * already unambiguous and this flag does not need to be specified.\n * <p>\n * For example, in the US, the transition out of daylight savings time \n * in 2014 happens at Nov 2, 2014 2:00am Daylight Time, when the time falls \n * back to Nov 2, 2014 1:00am Standard Time. If you give a date/time components as \n * \"Nov 2, 2014 1:30am\", then there are two 1:30am times in that day, and you would \n * have to give the standard flag to indicate which of those two you mean. \n * (dst=true means daylight time, dst=false means standard time).   \n * \n * <li><i>timezone</i> - the ilib.TimeZone instance or time zone name as a string \n * of this gregorian date. The date/time is kept in the local time. The time zone\n * is used later if this date is formatted according to a different time zone and\n * the difference has to be calculated, or when the date format has a time zone\n * component in it.\n * \n * <li><i>locale</i> - locale for this gregorian date. If the time zone is not \n * given, it can be inferred from this locale. For locales that span multiple\n * time zones, the one with the largest population is chosen as the one that \n * represents the locale.\n * \n * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.\n * </ul>\n *\n * If the constructor is called with another Gregorian date instance instead of\n * a parameter block, the other instance acts as a parameter block and its\n * settings are copied into the current instance.<p>\n * \n * If the constructor is called with no arguments at all or if none of the \n * properties listed above \n * from <i>unixtime</i> through <i>millisecond</i> are present, then the date \n * components are \n * filled in with the current date at the time of instantiation. Note that if\n * you do not give the time zone when defaulting to the current time and the \n * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the\n * time zone will default to UTC (\"Universal Time, Coordinated\" or \"Greenwich \n * Mean Time\").<p>\n * \n * If any of the properties from <i>year</i> through <i>millisecond</i> are not\n * specified in the params, it is assumed that they have the smallest possible\n * value in the range for the property (zero or one).<p>\n * \n * Depends directive: !depends gregoriandate.js\n * \n * @constructor\n * @extends ilib.Date\n * @param {Object=} params parameters that govern the settings and behaviour of this Gregorian date\n */\nilib.Date.GregDate = function(params) {\n\tthis.cal = new ilib.Cal.Gregorian();\n\tthis.timezone = \"local\";\n\n\tif (params) {\n\t\tif (params.locale) {\n\t\t\tthis.locale = (typeof(params.locale) === 'string') ? new ilib.Locale(params.locale) : params.locale;\n\t\t\tvar li = new ilib.LocaleInfo(this.locale);\n\t\t\tthis.timezone = li.getTimeZone(); \n\t\t}\n\t\tif (params.timezone) {\n\t\t\tthis.timezone = params.timezone.toString();\n\t\t}\n\t\t\n\t\tif (params.year || params.month || params.day || params.hour ||\n\t\t\t\tparams.minute || params.second || params.millisecond ) {\n\t\t\tthis.year = parseInt(params.year, 10) || 0;\n\t\t\tthis.month = parseInt(params.month, 10) || 1;\n\t\t\tthis.day = parseInt(params.day, 10) || 1;\n\t\t\tthis.hour = parseInt(params.hour, 10) || 0;\n\t\t\tthis.minute = parseInt(params.minute, 10) || 0;\n\t\t\tthis.second = parseInt(params.second, 10) || 0;\n\t\t\tthis.millisecond = parseInt(params.millisecond, 10) || 0;\n\t\t\tif (typeof(params.dst) === 'boolean') {\n\t\t\t\tthis.dst = params.dst;\n\t\t\t}\n\t\t\tthis.rd = this.newRd(params);\n\t\t\t\n\t\t\t// add the time zone offset to the rd to convert to UTC\n\t\t\tthis.offset = 0;\n\t\t\tif (this.timezone === \"local\" && typeof(params.dst) === 'undefined') {\n\t\t\t\t// if dst is defined, the intrinsic Date object has no way of specifying which version of a time you mean\n\t\t\t\t// in the overlap time at the end of DST. Do you mean the daylight 1:30am or the standard 1:30am? In this\n\t\t\t\t// case, use the ilib calculations below, which can distinguish between the two properly\n\t\t\t\tvar d = new Date(this.year, this.month-1, this.day, this.hour, this.minute, this.second, this.millisecond);\n\t\t\t\tthis.offset = -d.getTimezoneOffset() / 1440;\n\t\t\t} else {\n\t\t\t\tif (!this.tz) {\n\t\t\t\t\tthis.tz = new ilib.TimeZone({id: this.timezone});\n\t\t\t\t}\n\t\t\t\t// getOffsetMillis requires that this.year, this.rd, and this.dst \n\t\t\t\t// are set in order to figure out which time zone rules apply and \n\t\t\t\t// what the offset is at that point in the year\n\t\t\t\tthis.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;\n\t\t\t}\n\t\t\tif (this.offset !== 0) {\n\t\t\t\tthis.rd = this.newRd({\n\t\t\t\t\trd: this.rd.getRataDie() - this.offset\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} \n\n\tif (!this.rd) {\n\t\tthis.rd = this.newRd(params);\n\t\tthis._calcDateComponents();\n\t}\n};\n\nilib.Date.GregDate.prototype = new ilib.Date({noinstance: true});\nilib.Date.GregDate.prototype.parent = ilib.Date;\nilib.Date.GregDate.prototype.constructor = ilib.Date.GregDate;\n\n/**\n * Return a new RD for this date type using the given params.\n * @private\n * @param {Object=} params the parameters used to create this rata die instance\n * @returns {ilib.Date.RataDie} the new RD instance for the given params\n */\nilib.Date.GregDate.prototype.newRd = function (params) {\n\treturn new ilib.Date.GregRataDie(params);\n};\n\n/**\n * Calculates the Gregorian year for a given rd number.\n * @private\n * @static\n */\nilib.Date.GregDate._calcYear = function(rd) {\n\tvar days400,\n\t\tdays100,\n\t\tdays4,\n\t\tyears400,\n\t\tyears100,\n\t\tyears4,\n\t\tyears1,\n\t\tyear;\n\n\tyears400 = Math.floor((rd - 1) / 146097);\n\tdays400 = ilib.mod((rd - 1), 146097);\n\tyears100 = Math.floor(days400 / 36524);\n\tdays100 = ilib.mod(days400, 36524);\n\tyears4 = Math.floor(days100 / 1461);\n\tdays4 = ilib.mod(days100, 1461);\n\tyears1 = Math.floor(days4 / 365);\n\t\n\tyear = 400 * years400 + 100 * years100 + 4 * years4 + years1;\n\tif (years100 !== 4 && years1 !== 4) {\n\t\tyear++;\n\t}\n\treturn year;\n};\n\n/**\n * @private\n */\nilib.Date.GregDate.prototype._calcYear = function(rd) {\n\treturn ilib.Date.GregDate._calcYear(rd);\n};\n\n/**\n * Calculate the date components for the current time zone\n * @private\n */\nilib.Date.GregDate.prototype._calcDateComponents = function () {\n\tif (this.timezone === \"local\" && this.rd.getRataDie() >= 719163 && this.rd.getRataDie() <= 744018.134803241) {\n\t\t// console.log(\"using js Date to calculate offset\");\n\t\t// use the intrinsic JS Date object to do the tz conversion for us, which \n\t\t// guarantees that it follows the system tz database settings \n\t\tvar d = new Date(this.rd.getTime());\n\t\n\t\t/**\n\t\t * Year in the Gregorian calendar.\n\t\t * @type number\n\t\t */\n\t\tthis.year = d.getFullYear();\n\t\t\n\t\t/**\n\t\t * The month number, ranging from 1 (January) to 12 (December).\n\t\t * @type number\n\t\t */\n\t\tthis.month = d.getMonth()+1;\n\t\t\n\t\t/**\n\t\t * The day of the month. This ranges from 1 to 31.\n\t\t * @type number\n\t\t */\n\t\tthis.day = d.getDate();\n\t\t\n\t\t/**\n\t\t * The hour of the day. This can be a number from 0 to 23, as times are\n\t\t * stored unambiguously in the 24-hour clock.\n\t\t * @type number\n\t\t */\n\t\tthis.hour = d.getHours();\n\t\t\n\t\t/**\n\t\t * The minute of the hours. Ranges from 0 to 59.\n\t\t * @type number\n\t\t */\n\t\tthis.minute = d.getMinutes();\n\t\t\n\t\t/**\n\t\t * The second of the minute. Ranges from 0 to 59.\n\t\t * @type number\n\t\t */\n\t\tthis.second = d.getSeconds();\n\t\t\n\t\t/**\n\t\t * The millisecond of the second. Ranges from 0 to 999.\n\t\t * @type number\n\t\t */\n\t\tthis.millisecond = d.getMilliseconds();\n\t\t\n\t\tthis.offset = -d.getTimezoneOffset() / 1440;\n\t} else {\n\t\t// console.log(\"using ilib to calculate offset. tz is \" + this.timezone);\n\t\t// console.log(\"GregDate._calcDateComponents: date is \" + JSON.stringify(this) + \" parent is \" + JSON.stringify(this.parent) + \" and parent.parent is \" + JSON.stringify(this.parent.parent));\n\t\tif (typeof(this.offset) === \"undefined\") {\n\t\t\t// console.log(\"calculating offset\");\n\t\t\tthis.year = this._calcYear(this.rd.getRataDie());\n\t\t\t\n\t\t\t// now offset the RD by the time zone, then recalculate in case we were \n\t\t\t// near the year boundary\n\t\t\tif (!this.tz) {\n\t\t\t\tthis.tz = new ilib.TimeZone({id: this.timezone});\n\t\t\t}\n\t\t\tthis.offset = this.tz.getOffsetMillis(this) / 86400000;\n\t\t// } else {\n\t\t\t// console.log(\"offset is already defined somehow. type is \" + typeof(this.offset));\n\t\t\t// console.trace(\"Stack is this one\");\n\t\t}\n\t\t// console.log(\"offset is \" + this.offset);\n\t\tvar rd = this.rd.getRataDie();\n\t\tif (this.offset !== 0) {\n\t\t\trd += this.offset;\n\t\t}\n\t\tthis.year = this._calcYear(rd);\n\t\t\n\t\tvar yearStartRd = this.newRd({\n\t\t\tyear: this.year,\n\t\t\tmonth: 1,\n\t\t\tday: 1,\n\t\t\tcal: this.cal\n\t\t});\n\t\t\n\t\t// remainder is days into the year\n\t\tvar remainder = rd - yearStartRd.getRataDie() + 1;\n\t\t\n\t\tvar cumulative = ilib.Cal.Gregorian.prototype.isLeapYear.call(this.cal, this.year) ? \n\t\t\tilib.Date.GregRataDie.cumMonthLengthsLeap : \n\t\t\tilib.Date.GregRataDie.cumMonthLengths; \n\t\t\n\t\tthis.month = ilib.bsearch(Math.floor(remainder), cumulative);\n\t\tremainder = remainder - cumulative[this.month-1];\n\t\t\n\t\tthis.day = Math.floor(remainder);\n\t\tremainder -= this.day;\n\t\t// now convert to milliseconds for the rest of the calculation\n\t\tremainder = Math.round(remainder * 86400000);\n\t\t\n\t\tthis.hour = Math.floor(remainder/3600000);\n\t\tremainder -= this.hour * 3600000;\n\t\t\n\t\tthis.minute = Math.floor(remainder/60000);\n\t\tremainder -= this.minute * 60000;\n\t\t\n\t\tthis.second = Math.floor(remainder/1000);\n\t\tremainder -= this.second * 1000;\n\t\t\n\t\tthis.millisecond = Math.floor(remainder);\n\t}\n};\n\n/**\n * Return the day of the week of this date. The day of the week is encoded\n * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.\n * \n * @return {number} the day of the week\n */\nilib.Date.GregDate.prototype.getDayOfWeek = function() {\n\tvar rd = Math.floor(this.rd.getRataDie() + (this.offset || 0));\n\treturn ilib.mod(rd, 7);\n};\n\n/**\n * Return the ordinal day of the year. Days are counted from 1 and proceed linearly up to \n * 365, regardless of months or weeks, etc. That is, January 1st is day 1, and \n * December 31st is 365 in regular years, or 366 in leap years.\n * @return {number} the ordinal day of the year\n */\nilib.Date.GregDate.prototype.getDayOfYear = function() {\n\tvar cumulativeMap = this.cal.isLeapYear(this.year) ? \n\t\tilib.Date.GregRataDie.cumMonthLengthsLeap : \n\t\tilib.Date.GregRataDie.cumMonthLengths; \n\t\t\n\treturn cumulativeMap[this.month-1] + this.day;\n};\n\n/**\n * Return the era for this date as a number. The value for the era for Gregorian \n * calendars is -1 for \"before the common era\" (BCE) and 1 for \"the common era\" (CE). \n * BCE dates are any date before Jan 1, 1 CE. In the proleptic Gregorian calendar, \n * there is a year 0, so any years that are negative or zero are BCE. In the Julian\n * calendar, there is no year 0. Instead, the calendar goes straight from year -1 to \n * 1.\n * @return {number} 1 if this date is in the common era, -1 if it is before the \n * common era \n */\nilib.Date.GregDate.prototype.getEra = function() {\n\treturn (this.year < 1) ? -1 : 1;\n};\n\n/**\n * Return the name of the calendar that governs this date.\n * \n * @return {string} a string giving the name of the calendar\n */\nilib.Date.GregDate.prototype.getCalendar = function() {\n\treturn \"gregorian\";\n};\n\n// register with the factory method\nilib.Date._constructors[\"gregorian\"] = ilib.Date.GregDate;\n/*\n * thaisolar.js - Represent a Thai solar calendar object.\n * \n * Copyright © 2013-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* !depends calendar.js locale.js date.js julianday.js calendar/gregorian.js util/utils.js util/math.js */\n\n/**\n * @class\n * Construct a new Thai solar calendar object. This class encodes information about\n * a Thai solar calendar.<p>\n * \n * Depends directive: !depends thaisolar.js\n * \n * @constructor\n * @implements ilib.Cal\n */\nilib.Cal.ThaiSolar = function() {\n\tthis.type = \"thaisolar\";\n};\n\nilib.Cal.ThaiSolar.prototype = new ilib.Cal.Gregorian();\nilib.Cal.ThaiSolar.prototype.parent = ilib.Cal.Gregorian;\nilib.Cal.ThaiSolar.prototype.constructor = ilib.Cal.ThaiSolar;\n\n/**\n * Return true if the given year is a leap year in the Thai solar calendar.\n * The year parameter may be given as a number, or as a ThaiSolarDate object.\n * @param {number|ilib.Date.ThaiSolarDate} year the year for which the leap year information is being sought\n * @return {boolean} true if the given year is a leap year\n */\nilib.Cal.ThaiSolar.prototype.isLeapYear = function(year) {\n\tvar y = (typeof(year) === 'number' ? year : year.getYears());\n\ty -= 543;\n\tvar centuries = ilib.mod(y, 400);\n\treturn (ilib.mod(y, 4) === 0 && centuries !== 100 && centuries !== 200 && centuries !== 300);\n};\n\n/**\n * Return a date instance for this calendar type using the given\n * options.\n * @param {Object} options options controlling the construction of \n * the date instance\n * @return {ilib.Date} a date appropriate for this calendar type\n */\nilib.Cal.ThaiSolar.prototype.newDateInstance = function (options) {\n\treturn new ilib.Date.ThaiSolarDate(options);\n};\n\n/* register this calendar for the factory method */\nilib.Cal._constructors[\"thaisolar\"] = ilib.Cal.ThaiSolar;\n/*\n * thaisolardate.js - Represent a date in the ThaiSolar calendar\n * \n * Copyright © 2013-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends \ndate.js \ncalendar/gregorian.js \nutil/jsutils.js\n*/\n\n/**\n * @class\n * Construct a new Thai solar date object. The constructor parameters can \n * contain any of the following properties:\n * \n * <ul>\n * <li><i>unixtime<i> - sets the time of this instance according to the given \n * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.\n * \n * <li><i>julianday</i> - sets the time of this instance according to the given\n * Julian Day instance or the Julian Day given as a float\n * \n * <li><i>year</i> - any integer, including 0\n * \n * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.\n * \n * <li><i>day</i> - 1 to 31\n * \n * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation \n * is always done with an unambiguous 24 hour representation\n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>second</i> - 0 to 59\n * \n * <li><i>millisecond</i> - 0 to 999\n * \n * <li><i>timezone</i> - the ilib.TimeZone instance or time zone name as a string \n * of this Thai solar date. The date/time is kept in the local time. The time zone\n * is used later if this date is formatted according to a different time zone and\n * the difference has to be calculated, or when the date format has a time zone\n * component in it.\n * \n * <li><i>locale</i> - locale for this Thai solar date. If the time zone is not \n * given, it can be inferred from this locale. For locales that span multiple\n * time zones, the one with the largest population is chosen as the one that \n * represents the locale. \n * </ul>\n *\n * If the constructor is called with another Thai solar date instance instead of\n * a parameter block, the other instance acts as a parameter block and its\n * settings are copied into the current instance.<p>\n * \n * If the constructor is called with no arguments at all or if none of the \n * properties listed above \n * from <i>unixtime</i> through <i>millisecond</i> are present, then the date \n * components are \n * filled in with the current date at the time of instantiation. Note that if\n * you do not give the time zone when defaulting to the current time and the \n * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the\n * time zone will default to UTC (\"Universal Time, Coordinated\" or \"Greenwich \n * Mean Time\").<p>\n * \n * If any of the properties from <i>year</i> through <i>millisecond</i> are not\n * specified in the params, it is assumed that they have the smallest possible\n * value in the range for the property (zero or one).<p>\n * \n * Depends directive: !depends thaisolardate.js\n * \n * @constructor\n * @extends ilib.Date.GregDate\n * @param {Object=} params parameters that govern the settings and behaviour of this Thai solar date\n */\nilib.Date.ThaiSolarDate = function(params) {\n\tvar p = params;\n\tif (params) {\n\t\t// there is 198327 days difference between the Thai solar and \n\t\t// Gregorian epochs which is equivalent to 543 years\n\t\tp = {};\n\t\tilib.shallowCopy(params, p);\n\t\tif (typeof(p.year) !== 'undefined') {\n\t\t\tp.year -= 543;\t\n\t\t}\n\t\tif (typeof(p.rd) !== 'undefined') {\n\t\t\tp.rd -= 198327;\n\t\t}\n\t}\n\tthis.rd = undefined; // clear these out so that the GregDate constructor can set it\n\tthis.offset = undefined;\n\t//console.log(\"ThaiSolarDate.constructor: date is \" + JSON.stringify(this) + \" parent is \" + JSON.stringify(this.parent) + \" and parent.parent is \" + JSON.stringify(this.parent.parent));\n\tilib.Date.GregDate.call(this, p);\n\tthis.cal = new ilib.Cal.ThaiSolar();\n\t// make sure the year is set correctly\n\tif (params && typeof(params.year) !== 'undefined') {\n\t\tthis.year = parseInt(params.year, 10);\n\t}\n};\n\nilib.Date.ThaiSolarDate.prototype = new ilib.Date.GregDate();\nilib.Date.ThaiSolarDate.prototype.parent = ilib.Date.GregDate.prototype;\nilib.Date.ThaiSolarDate.prototype.constructor = ilib.Date.ThaiSolarDate;\n\n/**\n * the difference between a zero Julian day and the zero Thai Solar date.\n * This is some 543 years before the start of the Gregorian epoch. \n * @private\n * @const\n * @type number\n */\nilib.Date.ThaiSolarDate.epoch = 1523097.5;\n\n/**\n * Calculate the date components for the current time zone\n * @protected\n */\nilib.Date.ThaiSolarDate.prototype._calcDateComponents = function () {\n\t// there is 198327 days difference between the Thai solar and \n\t// Gregorian epochs which is equivalent to 543 years\n\t// console.log(\"ThaiSolarDate._calcDateComponents: date is \" + JSON.stringify(this) + \" parent is \" + JSON.stringify(this.parent) + \" and parent.parent is \" + JSON.stringify(this.parent.parent));\n\tthis.parent._calcDateComponents.call(this);\n\tthis.year += 543;\n};\n\n/**\n * Return the Rata Die (fixed day) number of this date.\n * \n * @protected\n * @return {number} the rd date as a number\n */\nilib.Date.ThaiSolarDate.prototype.getRataDie = function() {\n\t// there is 198327 days difference between the Thai solar and \n\t// Gregorian epochs which is equivalent to 543 years\n\treturn this.rd.getRataDie() + 198327;\n};\n\n/**\n * Return a new Gregorian date instance that represents the first instance of the \n * given day of the week before the current date. The day of the week is encoded\n * as a number where 0 = Sunday, 1 = Monday, etc.\n * \n * @param {number} dow the day of the week before the current date that is being sought\n * @return {ilib.Date} the date being sought\n */\nilib.Date.ThaiSolarDate.prototype.before = function (dow) {\n\treturn this.cal.newDateInstance({\n\t\trd: this.rd.before(dow, this.offset) + 198327,\n\t\ttimezone: this.timezone\n\t});\n};\n\n/**\n * Return a new Gregorian date instance that represents the first instance of the \n * given day of the week after the current date. The day of the week is encoded\n * as a number where 0 = Sunday, 1 = Monday, etc.\n * \n * @param {number} dow the day of the week after the current date that is being sought\n * @return {ilib.Date} the date being sought\n */\nilib.Date.ThaiSolarDate.prototype.after = function (dow) {\n\treturn this.cal.newDateInstance({\n\t\trd: this.rd.after(dow, this.offset) + 198327,\n\t\ttimezone: this.timezone\n\t});\n};\n\n/**\n * Return a new Gregorian date instance that represents the first instance of the \n * given day of the week on or before the current date. The day of the week is encoded\n * as a number where 0 = Sunday, 1 = Monday, etc.\n * \n * @param {number} dow the day of the week on or before the current date that is being sought\n * @return {ilib.Date} the date being sought\n */\nilib.Date.ThaiSolarDate.prototype.onOrBefore = function (dow) {\n\treturn this.cal.newDateInstance({\n\t\trd: this.rd.onOrBefore(dow, this.offset) + 198327,\n\t\ttimezone: this.timezone\n\t});\n};\n\n/**\n * Return a new Gregorian date instance that represents the first instance of the \n * given day of the week on or after the current date. The day of the week is encoded\n * as a number where 0 = Sunday, 1 = Monday, etc.\n * \n * @param {number} dow the day of the week on or after the current date that is being sought\n * @return {ilib.Date} the date being sought\n */\nilib.Date.ThaiSolarDate.prototype.onOrAfter = function (dow) {\n\treturn this.cal.newDateInstance({\n\t\trd: this.rd.onOrAfter(dow, this.offset) + 198327,\n\t\ttimezone: this.timezone\n\t});\n};\n\n/**\n * Return the name of the calendar that governs this date.\n * \n * @return {string} a string giving the name of the calendar\n */\nilib.Date.ThaiSolarDate.prototype.getCalendar = function() {\n\treturn \"thaisolar\";\n};\n\n//register with the factory method\nilib.Date._constructors[\"thaisolar\"] = ilib.Date.ThaiSolarDate;\n\n\n/*\n * astro.js - Static functions to support astronomical calculations\n * \n * Copyright © 2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends\nilibglobal.js\ndate.js\ncalendar/gregoriandate.js\ncalendar/gregratadie.js\n*/\n\n// !data astro\n\n/*\n * These routines were derived from a public domain set of JavaScript \n * functions for positional astronomy by John Walker of Fourmilab, \n * September 1999.\n */\n\n/**\n * Load in all the data needed for astrological calculations.\n * \n * @param {boolean} sync\n * @param {*} loadParams\n * @param {function(*)|undefined} callback\n */\nilib.Date.initAstro = function(sync, loadParams, callback) {\n\tif (!ilib.data.astro) {\n\t\tilib.loadData({\n\t\t\tname: \"astro.json\", // countries in their own language \n\t\t\tlocale: \"-\", // only need to load the root file \n\t\t\tnonLocale: true,\n\t\t\tsync: sync, \n\t\t\tloadParams: loadParams, \n\t\t\tcallback: ilib.bind(this, /** @type function() */ function(astroData) {\n\t\t\t\t/** \n\t\t\t\t * @type {{\n\t\t\t\t *  \t_EquinoxpTerms:Array.<number>, \n\t\t\t\t *  \t_JDE0tab1000:Array.<number>, \n\t\t\t\t *  \t_JDE0tab2000:Array.<number>, \n\t\t\t\t *  \t_deltaTtab:Array.<number>,\n\t\t\t\t *  \t_oterms:Array.<number>,\n\t\t\t\t *  \t_nutArgMult:Array.<number>, \n\t\t\t\t *  \t_nutArgCoeff:Array.<number>, \n\t\t\t\t *  \t_nutCoeffA:Array.<number>,\n\t\t\t\t *  \t_nutCoeffB:Array.<number>,\n\t\t\t\t *  \t_coeff19th:Array.<number>,\n\t\t\t\t *  \t_coeff18th:Array.<number>,\n\t\t\t\t *  \t_solarLongCoeff:Array.<number>, \n\t\t\t\t *  \t_solarLongMultipliers:Array.<number>, \n\t\t\t\t *  \t_solarLongAddends:Array.<number>, \n\t\t\t\t *  \t_meanMoonCoeff:Array.<number>,\n\t\t\t\t *  \t_elongationCoeff:Array.<number>,\n\t\t\t\t *  \t_solarAnomalyCoeff:Array.<number>,\n\t\t\t\t *  \t_lunarAnomalyCoeff:Array.<number>,\n\t\t\t\t *  \t_moonFromNodeCoeff:Array.<number>,\n\t\t\t\t *  \t_eCoeff:Array.<number>,\n\t\t\t\t *  \t_lunarElongationLongCoeff:Array.<number>,\n\t\t\t\t *  \t_solarAnomalyLongCoeff:Array.<number>,\n\t\t\t\t *  \t_lunarAnomalyLongCoeff:Array.<number>,\n\t\t\t\t *  \t_moonFromNodeLongCoeff:Array.<number>,\n\t\t\t\t *  \t_sineCoeff:Array.<number>,\n\t\t\t\t *  \t_nmApproxCoeff:Array.<number>,\n\t\t\t\t *  \t_nmCapECoeff:Array.<number>,\n\t\t\t\t *  \t_nmSolarAnomalyCoeff:Array.<number>,\n\t\t\t\t *  \t_nmLunarAnomalyCoeff:Array.<number>,\n\t\t\t\t *  \t_nmMoonArgumentCoeff:Array.<number>,\n\t\t\t\t *  \t_nmCapOmegaCoeff:Array.<number>,\n\t\t\t\t *  \t_nmEFactor:Array.<number>,\n\t\t\t\t *  \t_nmSolarCoeff:Array.<number>,\n\t\t\t\t *  \t_nmLunarCoeff:Array.<number>,\n\t\t\t\t *  \t_nmMoonCoeff:Array.<number>,\n\t\t\t\t *  \t_nmSineCoeff:Array.<number>,\n\t\t\t\t *  \t_nmAddConst:Array.<number>,\n\t\t\t\t *  \t_nmAddCoeff:Array.<number>,\n\t\t\t\t *  \t_nmAddFactor:Array.<number>,\n\t\t\t\t *  \t_nmExtra:Array.<number>\n\t\t\t\t *  }}\n\t\t\t\t */ \t\n\t\t\t \tilib.data.astro = astroData;\n\t\t\t\tif (callback && typeof(callback) === 'function') {\n\t\t\t\t\tcallback(astroData);\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t} else {\n\t\tif (callback && typeof(callback) === 'function') {\n\t\t\tcallback(ilib.data.astro);\n\t\t}\n\t}\n};\n\n/**\n * Convert degrees to radians.\n * \n * @static\n * @param {number} d angle in degrees\n * @return {number} angle in radians \n */\nilib.Date._dtr = function(d) {\n\treturn (d * Math.PI) / 180.0;\n};\n\n/**\n * Convert radians to degrees.\n * \n * @static\n * @param {number} r angle in radians\n * @return {number} angle in degrees \n */\nilib.Date._rtd = function(r) {\n\treturn (r * 180.0) / Math.PI;\n};\n\n/**\n * Return the cosine of an angle given in degrees.\n * @static\n * @param {number} d angle in degrees\n * @return {number} cosine of the angle.\n */  \nilib.Date._dcos = function(d) {\n\treturn Math.cos(ilib.Date._dtr(d));\n};\n\n/**\n * Return the sine of an angle given in degrees.\n * @static\n * @param {number} d angle in degrees\n * @return {number} sine of the angle.\n */  \nilib.Date._dsin = function(d) {\n\treturn Math.sin(ilib.Date._dtr(d));\n};\n\n/**\n * Return the tan of an angle given in degrees.\n * @static\n * @param {number} d angle in degrees\n * @return {number} tan of the angle.\n */  \nilib.Date._dtan = function(d) {\n\treturn Math.tan(ilib.Date._dtr(d));\n};\n\n/**\n * Range reduce angle in degrees.\n * \n * @static\n * @param {number} a angle to reduce\n * @return {number} the reduced angle  \n */\nilib.Date._fixangle = function(a) {\n\treturn a - 360.0 * (Math.floor(a / 360.0));\n};\n\n/**\n * Range reduce angle in radians.\n * \n * @static\n * @param {number} a angle to reduce\n * @return {number} the reduced angle  \n */\nilib.Date._fixangr = function(a) {\n\treturn a - (2 * Math.PI) * (Math.floor(a / (2 * Math.PI)));\n};\n\n/**\n * Determine the Julian Ephemeris Day of an equinox or solstice.  The \"which\" \n * argument selects the item to be computed:\n * \n * <ul>\n * <li>0   March equinox\n * <li>1   June solstice\n * <li>2   September equinox\n * <li>3   December solstice\n * </ul>\n * \n * @static\n * @param {number} year Gregorian year to calculate for\n * @param {number} which Which equinox or solstice to calculate\n */\nilib.Date._equinox = function(year, which) {\n\tvar deltaL, i, j, JDE0, JDE, JDE0tab, S, T, W, Y;\n\n\t/*  Initialize terms for mean equinox and solstices.  We\n\t    have two sets: one for years prior to 1000 and a second\n\t    for subsequent years.  */\n\n\tif (year < 1000) {\n\t\tJDE0tab = ilib.data.astro._JDE0tab1000;\n\t\tY = year / 1000;\n\t} else {\n\t\tJDE0tab = ilib.data.astro._JDE0tab2000;\n\t\tY = (year - 2000) / 1000;\n\t}\n\n\tJDE0 = JDE0tab[which][0] + (JDE0tab[which][1] * Y)\n\t\t\t+ (JDE0tab[which][2] * Y * Y) + (JDE0tab[which][3] * Y * Y * Y)\n\t\t\t+ (JDE0tab[which][4] * Y * Y * Y * Y);\n\n\t//document.debug.log.value += \"JDE0 = \" + JDE0 + \"\\n\";\n\n\tT = (JDE0 - 2451545.0) / 36525;\n\t//document.debug.log.value += \"T = \" + T + \"\\n\";\n\tW = (35999.373 * T) - 2.47;\n\t//document.debug.log.value += \"W = \" + W + \"\\n\";\n\tdeltaL = 1 + (0.0334 * ilib.Date._dcos(W)) + (0.0007 * ilib.Date._dcos(2 * W));\n\t//document.debug.log.value += \"deltaL = \" + deltaL + \"\\n\";\n\n\t//  Sum the periodic terms for time T\n\n\tS = 0;\n\tj = 0;\n\tfor (i = 0; i < 24; i++) {\n\t\tS += ilib.data.astro._EquinoxpTerms[j]\n\t\t\t\t* ilib.Date._dcos(ilib.data.astro._EquinoxpTerms[j + 1] + (ilib.data.astro._EquinoxpTerms[j + 2] * T));\n\t\tj += 3;\n\t}\n\n\t//document.debug.log.value += \"S = \" + S + \"\\n\";\n\t//document.debug.log.value += \"Corr = \" + ((S * 0.00001) / deltaL) + \"\\n\";\n\n\tJDE = JDE0 + ((S * 0.00001) / deltaL);\n\n\treturn JDE;\n};\n\n/* \n * The table of observed Delta T values at the beginning of\n * years from 1620 through 2014 as found in astro.json is taken from\n * http://www.staff.science.uu.nl/~gent0113/deltat/deltat.htm\n * and\n * ftp://maia.usno.navy.mil/ser7/deltat.data\n */\n\n/**  \n * Determine the difference, in seconds, between dynamical time and universal time.\n * \n * @static\n * @param {number} year to calculate the difference for\n * @return {number} difference in seconds between dynamical time and universal time  \n */\nilib.Date._deltat = function (year) {\n\tvar dt, f, i, t;\n\n\tif ((year >= 1620) && (year <= 2014)) {\n\t\ti = Math.floor(year - 1620);\n\t\tf = (year - 1620) - i; /* Fractional part of year */\n\t\tdt = ilib.data.astro._deltaTtab[i] + ((ilib.data.astro._deltaTtab[i + 1] - ilib.data.astro._deltaTtab[i]) * f);\n\t} else {\n\t\tt = (year - 2000) / 100;\n\t\tif (year < 948) {\n\t\t\tdt = 2177 + (497 * t) + (44.1 * t * t);\n\t\t} else {\n\t\t\tdt = 102 + (102 * t) + (25.3 * t * t);\n\t\t\tif ((year > 2000) && (year < 2100)) {\n\t\t\t\tdt += 0.37 * (year - 2100);\n\t\t\t}\n\t\t}\n\t}\n\treturn dt;\n};\n\n/**\n * Calculate the obliquity of the ecliptic for a given\n * Julian date.  This uses Laskar's tenth-degree\n * polynomial fit (J. Laskar, Astronomy and\n * Astrophysics, Vol. 157, page 68 [1986]) which is\n * accurate to within 0.01 arc second between AD 1000\n * and AD 3000, and within a few seconds of arc for\n * +/-10000 years around AD 2000.  If we're outside the\n * range in which this fit is valid (deep time) we\n * simply return the J2000 value of the obliquity, which\n * happens to be almost precisely the mean.\n * \n * @static\n * @param {number} jd Julian Day to calculate the obliquity for\n * @return {number} the obliquity\n */\nilib.Date._obliqeq = function (jd) {\n\tvar eps, u, v, i;\n\n \tv = u = (jd - 2451545.0) / 3652500.0;\n\n \teps = 23 + (26 / 60.0) + (21.448 / 3600.0);\n\n \tif (Math.abs(u) < 1.0) {\n \t\tfor (i = 0; i < 10; i++) {\n \t\t\teps += (ilib.data.astro._oterms[i] / 3600.0) * v;\n \t\t\tv *= u;\n \t\t}\n \t}\n \treturn eps;\n};\n\n/**\n * Return the position of the sun.  We return\n * intermediate values because they are useful in a\n * variety of other contexts.\n * @static\n * @param {number} jd find the position of sun on this Julian Day\n * @return {Object} the position of the sun and many intermediate\n * values\n */\nilib.Date._sunpos = function(jd) {\n\tvar ret = {}, \n\t\tT, T2, T3, Omega, epsilon, epsilon0;\n\n\tT = (jd - 2451545.0) / 36525.0;\n\t//document.debug.log.value += \"Sunpos.  T = \" + T + \"\\n\";\n\tT2 = T * T;\n\tT3 = T * T2;\n\tret.meanLongitude = ilib.Date._fixangle(280.46646 + 36000.76983 * T + 0.0003032 * T2);\n\t//document.debug.log.value += \"ret.meanLongitude = \" + ret.meanLongitude + \"\\n\";\n\tret.meanAnomaly = ilib.Date._fixangle(357.52911 + (35999.05029 * T) - 0.0001537 * T2 - 0.00000048 * T3);\n\t//document.debug.log.value += \"ret.meanAnomaly = \" + ret.meanAnomaly + \"\\n\";\n\tret.eccentricity = 0.016708634 - 0.000042037 * T - 0.0000001267 * T2;\n\t//document.debug.log.value += \"e = \" + e + \"\\n\";\n\tret.equationOfCenter = ((1.914602 - 0.004817 * T - 0.000014 * T2) * ilib.Date._dsin(ret.meanAnomaly))\n\t\t\t+ ((0.019993 - 0.000101 * T) * ilib.Date._dsin(2 * ret.meanAnomaly))\n\t\t\t+ (0.000289 * ilib.Date._dsin(3 * ret.meanAnomaly));\n\t//document.debug.log.value += \"ret.equationOfCenter = \" + ret.equationOfCenter + \"\\n\";\n\tret.sunLongitude = ret.meanLongitude + ret.equationOfCenter;\n\t//document.debug.log.value += \"ret.sunLongitude = \" + ret.sunLongitude + \"\\n\";\n\t//ret.sunAnomaly = ret.meanAnomaly + ret.equationOfCenter;\n\t//document.debug.log.value += \"ret.sunAnomaly = \" + ret.sunAnomaly + \"\\n\";\n\t// ret.sunRadius = (1.000001018 * (1 - (ret.eccentricity * ret.eccentricity))) / (1 + (ret.eccentricity * ilib.Date._dcos(ret.sunAnomaly)));\n\t//document.debug.log.value += \"ret.sunRadius = \" + ret.sunRadius + \"\\n\";\n\tOmega = 125.04 - (1934.136 * T);\n\t//document.debug.log.value += \"Omega = \" + Omega + \"\\n\";\n\tret.apparentLong = ret.sunLongitude + (-0.00569) + (-0.00478 * ilib.Date._dsin(Omega));\n\t//document.debug.log.value += \"ret.apparentLong = \" + ret.apparentLong + \"\\n\";\n\tepsilon0 = ilib.Date._obliqeq(jd);\n\t//document.debug.log.value += \"epsilon0 = \" + epsilon0 + \"\\n\";\n\tepsilon = epsilon0 + (0.00256 * ilib.Date._dcos(Omega));\n\t//document.debug.log.value += \"epsilon = \" + epsilon + \"\\n\";\n\t//ret.rightAscension = ilib.Date._fixangle(ilib.Date._rtd(Math.atan2(ilib.Date._dcos(epsilon0) * ilib.Date._dsin(ret.sunLongitude), ilib.Date._dcos(ret.sunLongitude))));\n\t//document.debug.log.value += \"ret.rightAscension = \" + ret.rightAscension + \"\\n\";\n\t// ret.declination = ilib.Date._rtd(Math.asin(ilib.Date._dsin(epsilon0) * ilib.Date._dsin(ret.sunLongitude)));\n\t////document.debug.log.value += \"ret.declination = \" + ret.declination + \"\\n\";\n\tret.inclination = ilib.Date._fixangle(23.4392911 - 0.013004167 * T - 0.00000016389 * T2 + 0.0000005036 * T3);\n\tret.apparentRightAscension = ilib.Date._fixangle(ilib.Date._rtd(Math.atan2(ilib.Date._dcos(epsilon) * ilib.Date._dsin(ret.apparentLong), ilib.Date._dcos(ret.apparentLong))));\n\t//document.debug.log.value += \"ret.apparentRightAscension = \" + ret.apparentRightAscension + \"\\n\";\n\t//ret.apparentDeclination = ilib.Date._rtd(Math.asin(ilib.Date._dsin(epsilon) * ilib.Date._dsin(ret.apparentLong)));\n\t//document.debug.log.value += \"ret.apparentDecliation = \" + ret.apparentDecliation + \"\\n\";\n\n\t// Angular quantities are expressed in decimal degrees\n\treturn ret;\n};\n\n/**\n * Calculate the nutation in longitude, deltaPsi, and obliquity, \n * deltaEpsilon for a given Julian date jd. Results are returned as an object\n * giving deltaPsi and deltaEpsilon in degrees.\n * \n * @static\n * @param {number} jd calculate the nutation of this Julian Day\n * @return {Object} the deltaPsi and deltaEpsilon of the nutation\n */\nilib.Date._nutation = function(jd) {\n\tvar i, j, \n\t\tt = (jd - 2451545.0) / 36525.0, \n\t\tt2, t3, to10, \n\t\tta = [], \n\t\tdp = 0, \n\t\tde = 0, \n\t\tang,\n\t\tret = {};\n\n\tt3 = t * (t2 = t * t);\n\n\t/*\n\t * Calculate angles. The correspondence between the elements of our array\n\t * and the terms cited in Meeus are:\n\t * \n\t * ta[0] = D ta[0] = M ta[2] = M' ta[3] = F ta[4] = \\Omega\n\t * \n\t */\n\n\tta[0] = ilib.Date._dtr(297.850363 + 445267.11148 * t - 0.0019142 * t2 + t3 / 189474.0);\n\tta[1] = ilib.Date._dtr(357.52772 + 35999.05034 * t - 0.0001603 * t2 - t3 / 300000.0);\n\tta[2] = ilib.Date._dtr(134.96298 + 477198.867398 * t + 0.0086972 * t2 + t3 / 56250.0);\n\tta[3] = ilib.Date._dtr(93.27191 + 483202.017538 * t - 0.0036825 * t2 + t3 / 327270);\n\tta[4] = ilib.Date._dtr(125.04452 - 1934.136261 * t + 0.0020708 * t2 + t3 / 450000.0);\n\n\t/*\n\t * Range reduce the angles in case the sine and cosine functions don't do it\n\t * as accurately or quickly.\n\t */\n\n\tfor (i = 0; i < 5; i++) {\n\t\tta[i] = ilib.Date._fixangr(ta[i]);\n\t}\n\n\tto10 = t / 10.0;\n\tfor (i = 0; i < 63; i++) {\n\t\tang = 0;\n\t\tfor (j = 0; j < 5; j++) {\n\t\t\tif (ilib.data.astro._nutArgMult[(i * 5) + j] != 0) {\n\t\t\t\tang += ilib.data.astro._nutArgMult[(i * 5) + j] * ta[j];\n\t\t\t}\n\t\t}\n\t\tdp += (ilib.data.astro._nutArgCoeff[(i * 4) + 0] + ilib.data.astro._nutArgCoeff[(i * 4) + 1] * to10) * Math.sin(ang);\n\t\tde += (ilib.data.astro._nutArgCoeff[(i * 4) + 2] + ilib.data.astro._nutArgCoeff[(i * 4) + 3] * to10) * Math.cos(ang);\n\t}\n\n\t/*\n\t * Return the result, converting from ten thousandths of arc seconds to\n\t * radians in the process.\n\t */\n\n\tret.deltaPsi = dp / (3600.0 * 10000.0);\n\tret.deltaEpsilon = de / (3600.0 * 10000.0);\n\n\treturn ret;\n};\n\n/**\n * Returns the equation of time as a fraction of a day.\n * \n * @static\n * @param {number} jd the Julian Day of the day to calculate for\n * @return {number} the equation of time for the given day  \n */\nilib.Date._equationOfTime = function(jd) {\n\tvar alpha, deltaPsi, E, epsilon, L0, tau, pos;\n\n\t// 2451545.0 is the Julian day of J2000 epoch\n\t// 365250.0 is the number of days in a Julian millenium\n\ttau = (jd - 2451545.0) / 365250.0;\n\t//console.log(\"equationOfTime.  tau = \" + tau);\n\tL0 = 280.4664567 + (360007.6982779 * tau) + (0.03032028 * tau * tau)\n\t\t\t+ ((tau * tau * tau) / 49931)\n\t\t\t+ (-((tau * tau * tau * tau) / 15300))\n\t\t\t+ (-((tau * tau * tau * tau * tau) / 2000000));\n\t//console.log(\"L0 = \" + L0);\n\tL0 = ilib.Date._fixangle(L0);\n\t//console.log(\"L0 = \" + L0);\n\tpos = ilib.Date._sunpos(jd);\n\talpha = pos.apparentRightAscension;\n\t//console.log(\"alpha = \" + alpha);\n\tvar nut = ilib.Date._nutation(jd);\n\tdeltaPsi = nut.deltaPsi;\n\t//console.log(\"deltaPsi = \" + deltaPsi);\n\tepsilon = ilib.Date._obliqeq(jd) + nut.deltaEpsilon;\n\t//console.log(\"epsilon = \" + epsilon);\n\t//console.log(\"L0 - 0.0057183 = \" + (L0 - 0.0057183));\n\t//console.log(\"L0 - 0.0057183 - alpha = \" + (L0 - 0.0057183 - alpha));\n\t//console.log(\"deltaPsi * cos(epsilon) = \" + deltaPsi * ilib.Date._dcos(epsilon));\n\t\n\tE = L0 - 0.0057183 - alpha + deltaPsi * ilib.Date._dcos(epsilon);\n\t// if alpha and L0 are in different quadrants, then renormalize\n\t// so that the difference between them is in the right range\n\tif (E > 180) {\n\t\tE -= 360;\n\t}\n\t//console.log(\"E = \" + E);\n\t// E = E - 20.0 * (Math.floor(E / 20.0));\n\tE = E * 4;\n\t//console.log(\"Efixed = \" + E);\n\tE = E / (24 * 60);\n\t//console.log(\"Eday = \" + E);\n\n\treturn E;\n};\n\n/**\n * @private\n * @static\n */\nilib.Date._poly = function(x, coefficients) {\n\tvar result = coefficients[0];\n\tvar xpow = x;\n\tfor (var i = 1; i < coefficients.length; i++) {\n\t\tresult += coefficients[i] * xpow;\n\t\txpow *= x;\n\t}\n\treturn result;\n};\n\n/**\n * Calculate the UTC RD from the local RD given \"zone\" number of minutes\n * worth of offset.\n * \n * @static\n * @param {number} local RD of the locale time, given in any calendar\n * @param {number} zone number of minutes of offset from UTC for the time zone \n * @return {number} the UTC equivalent of the local RD\n */\nilib.Date._universalFromLocal = function(local, zone) {\n\treturn local - zone / 1440;\n};\n\n/**\n * Calculate the local RD from the UTC RD given \"zone\" number of minutes\n * worth of offset.\n * \n * @static\n * @param {number} local RD of the locale time, given in any calendar\n * @param {number} zone number of minutes of offset from UTC for the time zone \n * @return {number} the UTC equivalent of the local RD\n */\nilib.Date._localFromUniversal = function(local, zone) {\n\treturn local + zone / 1440;\n};\n\n/**\n * @private\n * @static\n * @param {number} c julian centuries of the date to calculate\n * @return {number} the aberration\n */\nilib.Date._aberration = function(c) {\n\treturn 9.74e-05 * ilib.Date._dcos(177.63 + 35999.01847999999 * c) - 0.005575;\n};\n\n/**\n * @private\n *\nilib.data.astro._nutCoeffA = [124.90, -1934.134, 0.002063];\nilib.data.astro._nutCoeffB = [201.11, 72001.5377, 0.00057];\n*/\n\n/**\n * @private\n * @static\n * @param {number} c julian centuries of the date to calculate\n * @return {number} the nutation for the given julian century in radians\n */\nilib.Date._nutation2 = function(c) {\n\tvar a = ilib.Date._poly(c, ilib.data.astro._nutCoeffA);\n\tvar b = ilib.Date._poly(c, ilib.data.astro._nutCoeffB);\n\t// return -0.0000834 * ilib.Date._dsin(a) - 0.0000064 * ilib.Date._dsin(b);\n\treturn -0.004778 * ilib.Date._dsin(a) - 0.0003667 * ilib.Date._dsin(b);\n};\n\n\n/**\n * @static\n * @private\n */\nilib.Date._ephemerisCorrection = function(jd) {\n\tvar year = ilib.Date.GregDate._calcYear(jd - 1721424.5);\n\t\n\tif (1988 <= year && year <= 2019) {\n\t\treturn (year - 1933) / 86400;\n\t}\n\t\n\tif (1800 <= year && year <= 1987) {\n\t\tvar jul1 = new ilib.Date.GregRataDie({\n\t\t\tyear: year,\n\t\t\tmonth: 7,\n\t\t\tday: 1,\n\t\t\thour: 0,\n\t\t\tminute: 0,\n\t\t\tsecond: 0\n\t\t});\n\t\t// 693596 is the rd of Jan 1, 1900\n\t\tvar theta = (jul1.getRataDie() - 693596) / 36525;\n\t\treturn ilib.Date._poly(theta, (1900 <= year) ? ilib.data.astro._coeff19th : ilib.data.astro._coeff18th);\n\t}\n\t\n\tif (1620 <= year && year <= 1799) {\n\t\tyear -= 1600;\n\t\treturn (196.58333 - 4.0675 * year + 0.0219167 * year * year) / 86400;\n\t}\n\t\n\t// 660724 is the rd of Jan 1, 1810\n\tvar jan1 = new ilib.Date.GregRataDie({\n\t\tyear: year,\n\t\tmonth: 1,\n\t\tday: 1,\n\t\thour: 0,\n\t\tminute: 0,\n\t\tsecond: 0\n\t});\n\t// var x = 0.5 + (jan1.getRataDie() - 660724);\n\tvar x = 0.5 + (jan1.getRataDie() - 660724);\n\t\n\treturn ((x * x / 41048480) - 15) / 86400;\n};\n\n/**\n * @static\n * @private\n */\nilib.Date._ephemerisFromUniversal = function(jd) {\n\treturn jd + ilib.Date._ephemerisCorrection(jd);\n};\n\n/**\n * @static\n * @private\n */\nilib.Date._universalFromEphemeris = function(jd) {\n\treturn jd - ilib.Date._ephemerisCorrection(jd);\n};\n\n/**\n * @static\n * @private\n */\nilib.Date._julianCenturies = function(jd) {\n\t// 2451545.0 is the Julian day of J2000 epoch\n\t// 730119.5 is the Gregorian RD of J2000 epoch\n\t// 36525.0 is the number of days in a Julian century\n\treturn (ilib.Date._ephemerisFromUniversal(jd) - 2451545.0) / 36525.0;\n};\n\n/**\n * Calculate the solar longitude\n * \n * @static\n * @param {number} jd julian day of the date to calculate the longitude for \n * @return {number} the solar longitude in degrees\n */\nilib.Date._solarLongitude = function(jd) {\n\tvar c = ilib.Date._julianCenturies(jd),\n\t\tlongitude = 0,\n\t\tlen = ilib.data.astro._solarLongCoeff.length,\n\t\trow;\n\t\n\tfor (var i = 0; i < len; i++) {\n\t\tlongitude += ilib.data.astro._solarLongCoeff[i] * \n\t\t\tilib.Date._dsin(ilib.data.astro._solarLongAddends[i] + ilib.data.astro._solarLongMultipliers[i] * c);\n\t}\n\tlongitude *= 5.729577951308232e-06;\n\tlongitude += 282.77718340000001 + 36000.769537439999 * c;\n\tlongitude += ilib.Date._aberration(c) + ilib.Date._nutation2(c);\n\treturn ilib.Date._fixangle(longitude);\n};\n\n/**\n * @static\n * @protected\n * @param {number} jd\n * @return {number}\n */\nilib.Date._lunarLongitude = function (jd) {\n\tvar c = ilib.Date._julianCenturies(jd),\n\t    meanMoon = ilib.Date._fixangle(ilib.Date._poly(c, ilib.data.astro._meanMoonCoeff)),\n\t    elongation = ilib.Date._fixangle(ilib.Date._poly(c, ilib.data.astro._elongationCoeff)),\n\t    solarAnomaly = ilib.Date._fixangle(ilib.Date._poly(c, ilib.data.astro._solarAnomalyCoeff)),\n\t    lunarAnomaly = ilib.Date._fixangle(ilib.Date._poly(c, ilib.data.astro._lunarAnomalyCoeff)),\n\t    moonNode = ilib.Date._fixangle(ilib.Date._poly(c, ilib.data.astro._moonFromNodeCoeff)),\n\t    e = ilib.Date._poly(c, ilib.data.astro._eCoeff);\n\t\n\tvar sum = 0;\n\tfor (var i = 0; i < ilib.data.astro._lunarElongationLongCoeff.length; i++) {\n\t\tvar x = ilib.data.astro._solarAnomalyLongCoeff[i];\n\n\t\tsum += ilib.data.astro._sineCoeff[i] * Math.pow(e, Math.abs(x)) * \n\t\t\tilib.Date._dsin(ilib.data.astro._lunarElongationLongCoeff[i] * elongation + x * solarAnomaly + \n\t\t\t\tilib.data.astro._lunarAnomalyLongCoeff[i] * lunarAnomaly + \n\t\t\t\tilib.data.astro._moonFromNodeLongCoeff[i] * moonNode);\n\t}\n\tvar longitude = sum / 1000000;\n\tvar venus = 3958.0 / 1000000 * ilib.Date._dsin(119.75 + c * 131.84899999999999);\n\tvar jupiter = 318.0 / 1000000 * ilib.Date._dsin(53.090000000000003 + c * 479264.28999999998);\n\tvar flatEarth = 1962.0 / 1000000 * ilib.Date._dsin(meanMoon - moonNode);\n\t\n\treturn ilib.Date._fixangle(meanMoon + longitude + venus + jupiter + flatEarth + ilib.Date._nutation2(c));\n};\n\n/**\n * @static\n * @param {number} n\n * @return {number} julian day of the n'th new moon\n */\nilib.Date._newMoonTime = function(n) {\n\tvar k = n - 24724;\n\tvar c = k / 1236.8499999999999;\n\tvar approx = ilib.Date._poly(c, ilib.data.astro._nmApproxCoeff);\n\tvar capE = ilib.Date._poly(c, ilib.data.astro._nmCapECoeff);\n\tvar solarAnomaly = ilib.Date._poly(c, ilib.data.astro._nmSolarAnomalyCoeff);\n\tvar lunarAnomaly = ilib.Date._poly(c, ilib.data.astro._nmLunarAnomalyCoeff);\n\tvar moonArgument = ilib.Date._poly(c, ilib.data.astro._nmMoonArgumentCoeff);\n\tvar capOmega = ilib.Date._poly(c, ilib.data.astro._nmCapOmegaCoeff);\n\tvar correction = -0.00017 * ilib.Date._dsin(capOmega);\n\tfor (var i = 0; i < ilib.data.astro._nmSineCoeff.length; i++) {\n\t\tcorrection = correction + ilib.data.astro._nmSineCoeff[i] * Math.pow(capE, ilib.data.astro._nmEFactor[i]) * \n\t\tilib.Date._dsin(ilib.data.astro._nmSolarCoeff[i] * solarAnomaly + \n\t\t\t\tilib.data.astro._nmLunarCoeff[i] * lunarAnomaly + \n\t\t\t\tilib.data.astro._nmMoonCoeff[i] * moonArgument);\n\t}\n\tvar additional = 0;\n\tfor (var i = 0; i < ilib.data.astro._nmAddConst.length; i++) {\n\t\tadditional = additional + ilib.data.astro._nmAddFactor[i] * \n\t\tilib.Date._dsin(ilib.data.astro._nmAddConst[i] + ilib.data.astro._nmAddCoeff[i] * k);\n\t}\n\tvar extra = 0.000325 * ilib.Date._dsin(ilib.Date._poly(c, ilib.data.astro._nmExtra));\n\treturn ilib.Date._universalFromEphemeris(approx + correction + extra + additional + ilib.Date.RataDie.gregorianEpoch);\n};\n\n/**\n * @static\n * @param {number} jd\n * @return {number}\n */\nilib.Date._lunarSolarAngle = function(jd) {\n\tvar lunar = ilib.Date._lunarLongitude(jd);\n\tvar solar = ilib.Date._solarLongitude(jd)\n\treturn ilib.Date._fixangle(lunar - solar);\n};\n\n/**\n * @static\n * @param {number} jd\n * @return {number}\n */\nilib.Date._newMoonBefore = function (jd) {\n\tvar phase = ilib.Date._lunarSolarAngle(jd);\n\t// 11.450086114414322 is the julian day of the 0th full moon\n\t// 29.530588853000001 is the average length of a month\n\tvar guess = Math.round((jd - 11.450086114414322 - ilib.Date.RataDie.gregorianEpoch) / 29.530588853000001 - phase / 360) - 1;\n\tvar current, last;\n\tcurrent = last = ilib.Date._newMoonTime(guess);\n\twhile (current < jd) {\n\t\tguess++;\n\t\tlast = current;\n\t\tcurrent = ilib.Date._newMoonTime(guess);\n\t}\n\treturn last;\n};\n\n/**\n * @static\n * @param {number} jd\n * @return {number}\n */\nilib.Date._newMoonAtOrAfter = function (jd) {\n\tvar phase = ilib.Date._lunarSolarAngle(jd);\n\t// 11.450086114414322 is the julian day of the 0th full moon\n\t// 29.530588853000001 is the average length of a month\n\tvar guess = Math.round((jd - 11.450086114414322 - ilib.Date.RataDie.gregorianEpoch) / 29.530588853000001 - phase / 360);\n\tvar current;\n\twhile ((current = ilib.Date._newMoonTime(guess)) < jd) {\n\t\tguess++;\n\t}\n\treturn current;\n};\n\n/**\n * @static\n * @param {number} jd JD to calculate from\n * @param {number} longitude longitude to seek \n * @returns {number} the JD of the next time that the solar longitude \n * is a multiple of the given longitude\n */\nilib.Date._nextSolarLongitude = function(jd, longitude) {\n\tvar rate = 365.242189 / 360.0;\n\tvar tau = jd + rate * ilib.Date._fixangle(longitude - ilib.Date._solarLongitude(jd));\n\tvar start = Math.max(jd, tau - 5.0);\n\tvar end = tau + 5.0;\n\t\n\treturn ilib.bisectionSearch(0, start, end, 1e-6, function (l) {\n\t\treturn 180 - ilib.Date._fixangle(ilib.Date._solarLongitude(l) - longitude);\n\t});\n};\n\n/**\n * Floor the julian day to midnight of the current julian day.\n * \n * @static\n * @protected\n * @param {number} jd the julian to round\n * @return {number} the jd floored to the midnight of the julian day\n */\nilib.Date._floorToJD = function(jd) {\n\treturn Math.floor(jd - 0.5) + 0.5;\n};\n\n/**\n * Floor the julian day to midnight of the current julian day.\n * \n * @static\n * @protected\n * @param {number} jd the julian to round\n * @return {number} the jd floored to the midnight of the julian day\n */\nilib.Date._ceilToJD = function(jd) {\n\treturn Math.ceil(jd + 0.5) - 0.5;\n};\n\n/*\n * persratadie.js - Represent a rata die date in the Persian calendar\n * \n * Copyright © 2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends \ndate.js\nutil/utils.js\nutil/math.js\ncalendar/ratadie.js\ncalendar/astro.js\ncalendar/gregoriandate.js\n*/\n\n/**\n * Construct a new Persian RD date number object. The constructor parameters can \n * contain any of the following properties:\n * \n * <ul>\n * <li><i>unixtime<i> - sets the time of this instance according to the given \n * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970, Gregorian\n * \n * <li><i>julianday</i> - sets the time of this instance according to the given\n * Julian Day instance or the Julian Day given as a float\n * \n * <li><i>year</i> - any integer, including 0\n * \n * <li><i>month</i> - 1 to 12, where 1 means Farvardin, 2 means Ordibehesht, etc.\n * \n * <li><i>day</i> - 1 to 31\n * \n * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation \n * is always done with an unambiguous 24 hour representation\n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>second</i> - 0 to 59\n * \n * <li><i>millisecond</i> - 0 to 999\n * \n * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.\n * </ul>\n *\n * If the constructor is called with another Persian date instance instead of\n * a parameter block, the other instance acts as a parameter block and its\n * settings are copied into the current instance.<p>\n * \n * If the constructor is called with no arguments at all or if none of the \n * properties listed above are present, then the RD is calculate based on \n * the current date at the time of instantiation. <p>\n * \n * If any of the properties from <i>year</i> through <i>millisecond</i> are not\n * specified in the params, it is assumed that they have the smallest possible\n * value in the range for the property (zero or one).<p>\n * \n * Depends directive: !depends persiandate.js\n * \n * @private\n * @class\n * @constructor\n * @extends ilib.Date.RataDie\n * @param {Object=} params parameters that govern the settings and behaviour of this Persian RD date\n */\nilib.Date.PersAstroRataDie = function(params) {\n\tthis.rd = undefined;\n\tilib.Date.initAstro(\n\t\tparams && typeof(params.sync) === 'boolean' ? params.sync : true,\n\t\tparams && params.loadParams,\n\t\tilib.bind(this, function (x) {\n\t\t\tilib.Date.RataDie.call(this, params);\n\t\t\tif (params && typeof(params.callback) === 'function') {\n\t\t\t\tparams.callback(this);\n\t\t\t}\n\t\t})\n\t);\n};\n\nilib.Date.PersAstroRataDie.prototype = new ilib.Date.RataDie();\nilib.Date.PersAstroRataDie.prototype.parent = ilib.Date.RataDie;\nilib.Date.PersAstroRataDie.prototype.constructor = ilib.Date.PersAstroRataDie;\n\n/**\n * The difference between a zero Julian day and the first Persian date\n * @private\n * @const\n * @type number\n */\nilib.Date.PersAstroRataDie.prototype.epoch = 1948319.5;\n\n/**\n * @protected \n */\nilib.Date.PersAstroRataDie.prototype._tehranEquinox = function(year) {\n    var equJED, equJD, equAPP, equTehran, dtTehran, eot;\n\n    //  March equinox in dynamical time\n    equJED = ilib.Date._equinox(year, 0);\n\n    //  Correct for delta T to obtain Universal time\n    equJD = equJED - (ilib.Date._deltat(year) / (24 * 60 * 60));\n\n    //  Apply the equation of time to yield the apparent time at Greenwich\n    eot = ilib.Date._equationOfTime(equJED) * 360;\n    eot = (eot - 20 * Math.floor(eot/20)) / 360;\n    equAPP = equJD + eot;\n\n    /*  \n     * Finally, we must correct for the constant difference between\n     * the Greenwich meridian and the time zone standard for Iran \n     * Standard time, 52 degrees 30 minutes to the East.\n     */\n\n    dtTehran = 52.5 / 360;\n    equTehran = equAPP + dtTehran;\n\n    return equTehran;\n};\n\n/**\n * Calculate the year based on the given Julian day.\n * @protected\n * @param {number} jd the Julian day to get the year for\n * @return {{year:number,equinox:number}} the year and the last equinox\n */\nilib.Date.PersAstroRataDie.prototype._getYear = function(jd) {\n\tvar gd = new ilib.Date.GregDate({julianday: jd});\n    var guess = gd.getYears() - 2,\n    \tnexteq,\n    \tret = {};\n\n    //ret.equinox = Math.floor(this._tehranEquinox(guess));\n    ret.equinox = this._tehranEquinox(guess);\n\twhile (ret.equinox > jd) {\n\t    guess--;\n\t    // ret.equinox = Math.floor(this._tehranEquinox(guess));\n\t    ret.equinox = this._tehranEquinox(guess);\n\t}\n\tnexteq = ret.equinox - 1;\n\t// if the equinox falls after noon, then the day after that is the start of the \n\t// next year, so truncate the JD to get the noon of the day before the day with \n\t//the equinox on it, then add 0.5 to get the midnight of that day \n\twhile (!(Math.floor(ret.equinox) + 0.5 <= jd && jd < Math.floor(nexteq) + 0.5)) {\n\t    ret.equinox = nexteq;\n\t    guess++;\n\t    // nexteq = Math.floor(this._tehranEquinox(guess));\n\t    nexteq = this._tehranEquinox(guess);\n\t}\n\t\n\t// Mean solar tropical year is 365.24219878 days\n\tret.year = Math.round((ret.equinox - this.epoch - 1) / 365.24219878) + 1;\n\t\n\treturn ret;\n};\n\n/**\n * Calculate the Rata Die (fixed day) number of the given date from the\n * date components.\n *\n * @protected\n * @param {Object} date the date components to calculate the RD from\n */\nilib.Date.PersAstroRataDie.prototype._setDateComponents = function(date) {\n    var adr, guess, jd;\n\n    // Mean solar tropical year is 365.24219878 days \n    guess = this.epoch + 1 + 365.24219878 * (date.year - 2);\n    adr = {year: date.year - 1, equinox: 0};\n\n    while (adr.year < date.year) {\n        adr = this._getYear(guess);\n        guess = adr.equinox + (365.24219878 + 2);\n    }\n\n    jd = Math.floor(adr.equinox) +\n            ((date.month <= 7) ?\n                ((date.month - 1) * 31) :\n                (((date.month - 1) * 30) + 6)\n            ) +\n    \t    (date.day - 1 + 0.5); // add 0.5 so that we convert JDs, which start at noon to RDs which start at midnight\n    \n\tjd += (date.hour * 3600000 +\n\t\t\tdate.minute * 60000 +\n\t\t\tdate.second * 1000 +\n\t\t\tdate.millisecond) /\n\t\t\t86400000;\n\n    this.rd = jd - this.epoch;\n};\n\n/**\n * Return the rd number of the particular day of the week on or before the \n * given rd. eg. The Sunday on or before the given rd.\n * @private\n * @param {number} rd the rata die date of the reference date\n * @param {number} dayOfWeek the day of the week that is being sought relative \n * to the current date\n * @return {number} the rd of the day of the week\n */\nilib.Date.PersAstroRataDie.prototype._onOrBefore = function(rd, dayOfWeek) {\n\treturn rd - ilib.mod(Math.floor(rd) - dayOfWeek - 3, 7);\n};\n\n/*\n * persianastro.js - Represent a Persian astronomical (Hijjri) calendar object.\n * \n * Copyright © 2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* !depends \ncalendar/astro.js \ncalendar.js \nlocale.js \ndate.js \njulianday.js \nutil/utils.js\ncalendar/persratadie.js \n*/\n\n/**\n * @class\n * Construct a new Persian astronomical (Hijjri) calendar object. This class encodes \n * information about a Persian calendar. This class differs from the \n * Persian calendar in that the leap years are calculated based on the\n * astronomical observations of the sun in Teheran, instead of calculating\n * the leap years based on a regular cyclical rhythm algorithm.<p>\n * \n * Depends directive: !depends persianastro.js\n * \n * @constructor\n * @implements ilib.Cal\n */\nilib.Cal.Persian = function() {\n\tthis.type = \"persian\";\n};\n\n/**\n * @private\n * @const\n * @type Array.<number> \n * the lengths of each month \n */\nilib.Cal.Persian.monthLengths = [\n\t31,  // Farvardin\n\t31,  // Ordibehesht\n\t31,  // Khordad\n\t31,  // Tir\n\t31,  // Mordad\n\t31,  // Shahrivar\n\t30,  // Mehr\n\t30,  // Aban\n\t30,  // Azar\n\t30,  // Dey\n\t30,  // Bahman\n\t29   // Esfand\n];\n\n/**\n * Return the number of months in the given year. The number of months in a year varies\n * for some luni-solar calendars because in some years, an extra month is needed to extend the \n * days in a year to an entire solar year. The month is represented as a 1-based number\n * where 1=first month, 2=second month, etc.\n * \n * @param {number} year a year for which the number of months is sought\n * @return {number} The number of months in the given year\n */\nilib.Cal.Persian.prototype.getNumMonths = function(year) {\n\treturn 12;\n};\n\n/**\n * Return the number of days in a particular month in a particular year. This function\n * can return a different number for a month depending on the year because of things\n * like leap years.\n * \n * @param {number} month the month for which the length is sought\n * @param {number} year the year within which that month can be found\n * @return {number} the number of days within the given month in the given year\n */\nilib.Cal.Persian.prototype.getMonLength = function(month, year) {\n\tif (month !== 12 || !this.isLeapYear(year)) {\n\t\treturn ilib.Cal.Persian.monthLengths[month-1];\n\t} else {\n\t\t// Month 12, Esfand, has 30 days instead of 29 in leap years\n\t\treturn 30;\n\t}\n};\n\n/**\n * Return true if the given year is a leap year in the Persian astronomical calendar.\n * @param {number} year the year for which the leap year information is being sought\n * @return {boolean} true if the given year is a leap year\n */\nilib.Cal.Persian.prototype.isLeapYear = function(year) {\n\tvar rdNextYear = new ilib.Date.PersAstroRataDie({\n\t\tcal: this,\n\t\tyear: year + 1,\n\t\tmonth: 1,\n\t\tday: 1,\n\t\thour: 0,\n\t\tminute: 0,\n\t\tsecond: 0,\n\t\tmillisecond: 0\n\t});\n\tvar rdThisYear = new ilib.Date.PersAstroRataDie({\n\t\tcal: this,\n\t\tyear: year,\n\t\tmonth: 1,\n\t\tday: 1,\n\t\thour: 0,\n\t\tminute: 0,\n\t\tsecond: 0,\n\t\tmillisecond: 0\n\t}); \n    return (rdNextYear.getRataDie() - rdThisYear.getRataDie()) > 365;\n};\n\n/**\n * Return the type of this calendar.\n * \n * @return {string} the name of the type of this calendar \n */\nilib.Cal.Persian.prototype.getType = function() {\n\treturn this.type;\n};\n\n/**\n * Return a date instance for this calendar type using the given\n * options.\n * @param {Object} options options controlling the construction of \n * the date instance\n * @return {ilib.Date} a date appropriate for this calendar type\n */\nilib.Cal.Persian.prototype.newDateInstance = function (options) {\n\treturn new ilib.Date.PersDate(options);\n};\n\n/* register this calendar for the factory method */\nilib.Cal._constructors[\"persian\"] = ilib.Cal.Persian;\n\n/*\n * persianastrodate.js - Represent a date in the Persian astronomical (Hijjri) calendar\n * \n * Copyright © 2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends \ndate.js\ncalendar/persratadie.js\ncalendar/persianastro.js \nutil/utils.js\nutil/search.js\nutil/math.js\nlocaleinfo.js \njulianday.js \n*/\n\n// !data astro\n\n/**\n * @class\n * \n * Construct a new Persian astronomical date object. The constructor parameters can \n * contain any of the following properties:\n * \n * <ul>\n * <li><i>unixtime<i> - sets the time of this instance according to the given \n * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970, Gregorian\n * \n * <li><i>julianday</i> - sets the time of this instance according to the given\n * Julian Day instance or the Julian Day given as a float\n * \n * <li><i>year</i> - any integer, including 0\n * \n * <li><i>month</i> - 1 to 12, where 1 means Farvardin, 2 means Ordibehesht, etc.\n * \n * <li><i>day</i> - 1 to 31\n * \n * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation \n * is always done with an unambiguous 24 hour representation\n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>second</i> - 0 to 59\n * \n * <li><i>millisecond</i> - 0 to 999\n * \n * <li><i>timezone</i> - the ilib.TimeZone instance or time zone name as a string \n * of this persian date. The date/time is kept in the local time. The time zone\n * is used later if this date is formatted according to a different time zone and\n * the difference has to be calculated, or when the date format has a time zone\n * component in it.\n * \n * <li><i>locale</i> - locale for this persian date. If the time zone is not \n * given, it can be inferred from this locale. For locales that span multiple\n * time zones, the one with the largest population is chosen as the one that \n * represents the locale.\n * \n * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.\n * </ul>\n *\n * If the constructor is called with another Persian date instance instead of\n * a parameter block, the other instance acts as a parameter block and its\n * settings are copied into the current instance.<p>\n * \n * If the constructor is called with no arguments at all or if none of the \n * properties listed above \n * from <i>unixtime</i> through <i>millisecond</i> are present, then the date \n * components are \n * filled in with the current date at the time of instantiation. Note that if\n * you do not give the time zone when defaulting to the current time and the \n * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the\n * time zone will default to UTC (\"Universal Time, Coordinated\" or \"Greenwich \n * Mean Time\").<p>\n * \n * If any of the properties from <i>year</i> through <i>millisecond</i> are not\n * specified in the params, it is assumed that they have the smallest possible\n * value in the range for the property (zero or one).<p>\n * \n * Depends directive: !depends persiandate.js\n * \n * @constructor\n * @extends ilib.Date\n * @param {Object=} params parameters that govern the settings and behaviour of this Persian date\n */\nilib.Date.PersDate = function(params) {\n\tthis.cal = new ilib.Cal.Persian();\n\tthis.timezone = \"local\";\n\t\n\tif (params) {\n\t\tif (params.locale) {\n\t\t\tthis.locale = (typeof(params.locale) === 'string') ? new ilib.Locale(params.locale) : params.locale;\n\t\t\tvar li = new ilib.LocaleInfo(this.locale);\n\t\t\tthis.timezone = li.getTimeZone(); \n\t\t}\n\t\tif (params.timezone) {\n\t\t\tthis.timezone = params.timezone;\n\t\t}\n\t}\n\t\n\tilib.Date.initAstro(\n\t\tparams && typeof(params.sync) === 'boolean' ? params.sync : true,\n\t\tparams && params.loadParams,\n\t\tilib.bind(this, function (x) {\n\t\t\tif (params && (params.year || params.month || params.day || params.hour ||\n\t\t\t\t\tparams.minute || params.second || params.millisecond)) {\n\t\t\t\t/**\n\t\t\t\t * Year in the Persian calendar.\n\t\t\t\t * @type number\n\t\t\t\t */\n\t\t\t\tthis.year = parseInt(params.year, 10) || 0;\n\n\t\t\t\t/**\n\t\t\t\t * The month number, ranging from 1 to 12\n\t\t\t\t * @type number\n\t\t\t\t */\n\t\t\t\tthis.month = parseInt(params.month, 10) || 1;\n\n\t\t\t\t/**\n\t\t\t\t * The day of the month. This ranges from 1 to 31.\n\t\t\t\t * @type number\n\t\t\t\t */\n\t\t\t\tthis.day = parseInt(params.day, 10) || 1;\n\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t * The hour of the day. This can be a number from 0 to 23, as times are\n\t\t\t\t * stored unambiguously in the 24-hour clock.\n\t\t\t\t * @type number\n\t\t\t\t */\n\t\t\t\tthis.hour = parseInt(params.hour, 10) || 0;\n\n\t\t\t\t/**\n\t\t\t\t * The minute of the hours. Ranges from 0 to 59.\n\t\t\t\t * @type number\n\t\t\t\t */\n\t\t\t\tthis.minute = parseInt(params.minute, 10) || 0;\n\n\t\t\t\t/**\n\t\t\t\t * The second of the minute. Ranges from 0 to 59.\n\t\t\t\t * @type number\n\t\t\t\t */\n\t\t\t\tthis.second = parseInt(params.second, 10) || 0;\n\n\t\t\t\t/**\n\t\t\t\t * The millisecond of the second. Ranges from 0 to 999.\n\t\t\t\t * @type number\n\t\t\t\t */\n\t\t\t\tthis.millisecond = parseInt(params.millisecond, 10) || 0;\n\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t * The day of the year. Ranges from 1 to 366.\n\t\t\t\t * @type number\n\t\t\t\t */\n\t\t\t\tthis.dayOfYear = parseInt(params.dayOfYear, 10);\n\n\t\t\t\tif (typeof(params.dst) === 'boolean') {\n\t\t\t\t\tthis.dst = params.dst;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.rd = this.newRd(this);\n\t\t\t\t\n\t\t\t\t// add the time zone offset to the rd to convert to UTC\n\t\t\t\tif (!this.tz) {\n\t\t\t\t\tthis.tz = new ilib.TimeZone({id: this.timezone});\n\t\t\t\t}\n\t\t\t\t// getOffsetMillis requires that this.year, this.rd, and this.dst \n\t\t\t\t// are set in order to figure out which time zone rules apply and \n\t\t\t\t// what the offset is at that point in the year\n\t\t\t\tthis.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;\n\t\t\t\tif (this.offset !== 0) {\n\t\t\t\t\tthis.rd = this.newRd({\n\t\t\t\t\t\trd: this.rd.getRataDie() - this.offset\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!this.rd) {\n\t\t\t\tthis.rd = this.newRd(params);\n\t\t\t\tthis._calcDateComponents();\n\t\t\t}\n\t\t\t\n\t\t\tif (params && typeof(params.onLoad) === 'function') {\n\t\t\t\tparams.onLoad(this);\n\t\t\t}\n\t\t})\n\t);\n};\n\nilib.Date.PersDate.prototype = new ilib.Date({noinstance: true});\nilib.Date.PersDate.prototype.parent = ilib.Date;\nilib.Date.PersDate.prototype.constructor = ilib.Date.PersDate;\n\n/**\n * @private\n * @const\n * @type Array.<number>\n * the cumulative lengths of each month, for a non-leap year \n */\nilib.Date.PersDate.cumMonthLengths = [\n    0,    // Farvardin\n\t31,   // Ordibehesht\n\t62,   // Khordad\n\t93,   // Tir\n\t124,  // Mordad\n\t155,  // Shahrivar\n\t186,  // Mehr\n\t216,  // Aban\n\t246,  // Azar\n\t276,  // Dey\n\t306,  // Bahman\n\t336,  // Esfand\n\t366\n];\n\n/**\n * Return a new RD for this date type using the given params.\n * @protected\n * @param {Object=} params the parameters used to create this rata die instance\n * @returns {ilib.Date.RataDie} the new RD instance for the given params\n */\nilib.Date.PersDate.prototype.newRd = function (params) {\n\treturn new ilib.Date.PersAstroRataDie(params);\n};\n\n/**\n * Return the year for the given RD\n * @protected\n * @param {number} rd RD to calculate from \n * @returns {number} the year for the RD\n */\nilib.Date.PersDate.prototype._calcYear = function(rd) {\n\tvar julianday = rd + this.rd.epoch;\n\treturn this.rd._getYear(julianday).year;\n};\n\n/**\n * @private\n * Calculate date components for the given RD date.\n */\nilib.Date.PersDate.prototype._calcDateComponents = function () {\n\tvar remainder,\n\t\trd = this.rd.getRataDie();\n\t\n\tthis.year = this._calcYear(rd);\n\t\n\tif (typeof(this.offset) === \"undefined\") {\n\t\t// now offset the RD by the time zone, then recalculate in case we were \n\t\t// near the year boundary\n\t\tif (!this.tz) {\n\t\t\tthis.tz = new ilib.TimeZone({id: this.timezone});\n\t\t}\n\t\tthis.offset = this.tz.getOffsetMillis(this) / 86400000;\n\t}\n\t\n\tif (this.offset !== 0) {\n\t\trd += this.offset;\n\t\tthis.year = this._calcYear(rd);\n\t}\n\t\n\t//console.log(\"PersDate.calcComponent: calculating for rd \" + rd);\n\t//console.log(\"PersDate.calcComponent: year is \" + ret.year);\n\tvar yearStart = this.newRd({\n\t\tyear: this.year,\n\t\tmonth: 1,\n\t\tday: 1,\n\t\thour: 0,\n\t\tminute: 0,\n\t\tsecond: 0,\n\t\tmillisecond: 0\n\t});\n\tremainder = rd - yearStart.getRataDie() + 1;\n\t\n\tthis.dayOfYear = remainder;\n\t\n\t//console.log(\"PersDate.calcComponent: remainder is \" + remainder);\n\t\n\tthis.month = ilib.bsearch(Math.floor(remainder), ilib.Date.PersDate.cumMonthLengths);\n\tremainder -= ilib.Date.PersDate.cumMonthLengths[this.month-1];\n\t\n\t//console.log(\"PersDate.calcComponent: month is \" + this.month + \" and remainder is \" + remainder);\n\t\n\tthis.day = Math.floor(remainder);\n\tremainder -= this.day;\n\t\n\t//console.log(\"PersDate.calcComponent: day is \" + this.day + \" and remainder is \" + remainder);\n\t\n\t// now convert to milliseconds for the rest of the calculation\n\tremainder = Math.round(remainder * 86400000);\n\t\n\tthis.hour = Math.floor(remainder/3600000);\n\tremainder -= this.hour * 3600000;\n\t\n\tthis.minute = Math.floor(remainder/60000);\n\tremainder -= this.minute * 60000;\n\t\n\tthis.second = Math.floor(remainder/1000);\n\tremainder -= this.second * 1000;\n\t\n\tthis.millisecond = remainder;\n};\n\n/**\n * Return the day of the week of this date. The day of the week is encoded\n * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.\n * \n * @return {number} the day of the week\n */\nilib.Date.PersDate.prototype.getDayOfWeek = function() {\n\tvar rd = Math.floor(this.getRataDie());\n\treturn ilib.mod(rd-3, 7);\n};\n\n/**\n * Return the ordinal day of the year. Days are counted from 1 and proceed linearly up to \n * 365, regardless of months or weeks, etc. That is, Farvardin 1st is day 1, and \n * December 31st is 365 in regular years, or 366 in leap years.\n * @return {number} the ordinal day of the year\n */\nilib.Date.PersDate.prototype.getDayOfYear = function() {\n\treturn ilib.Date.PersDate.cumMonthLengths[this.month-1] + this.day;\n};\n\n/**\n * Return the era for this date as a number. The value for the era for Persian \n * calendars is -1 for \"before the persian era\" (BP) and 1 for \"the persian era\" (anno \n * persico or AP). \n * BP dates are any date before Farvardin 1, 1 AP. In the proleptic Persian calendar, \n * there is a year 0, so any years that are negative or zero are BP.\n * @return {number} 1 if this date is in the common era, -1 if it is before the \n * common era \n */\nilib.Date.PersDate.prototype.getEra = function() {\n\treturn (this.year < 1) ? -1 : 1;\n};\n\n/**\n * Return the name of the calendar that governs this date.\n * \n * @return {string} a string giving the name of the calendar\n */\nilib.Date.PersDate.prototype.getCalendar = function() {\n\treturn \"persian\";\n};\n\n// register with the factory method\nilib.Date._constructors[\"persian\"] = ilib.Date.PersDate;\n/*\n * ctype.js - Character type definitions\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js locale.js util/search.js\n\n// !data ctype\n\n/**\n * Provides a set of static routines that return information about characters.\n * These routines emulate the C-library ctype functions. The characters must be \n * encoded in utf-16, as no other charsets are currently supported. Only the first\n * character of the given string is tested.\n * @namespace\n */\nilib.CType = {\n\t/**\n\t * Actual implementation for withinRange. Searches the given object for ranges.\n\t * The range names are taken from the Unicode range names in \n\t * http://www.unicode.org/Public/UNIDATA/extracted/DerivedGeneralCategory.txt\n\t * \n\t * <ul>\n\t * <li>Cn - Unassigned\n\t * <li>Lu - Uppercase_Letter\n\t * <li>Ll - Lowercase_Letter\n\t * <li>Lt - Titlecase_Letter\n\t * <li>Lm - Modifier_Letter\n\t * <li>Lo - Other_Letter\n\t * <li>Mn - Nonspacing_Mark\n\t * <li>Me - Enclosing_Mark\n\t * <li>Mc - Spacing_Mark\n\t * <li>Nd - Decimal_Number\n\t * <li>Nl - Letter_Number\n\t * <li>No - Other_Number\n\t * <li>Zs - Space_Separator\n\t * <li>Zl - Line_Separator\n\t * <li>Zp - Paragraph_Separator\n\t * <li>Cc - Control\n\t * <li>Cf - Format\n\t * <li>Co - Private_Use\n\t * <li>Cs - Surrogate\n\t * <li>Pd - Dash_Punctuation\n\t * <li>Ps - Open_Punctuation\n\t * <li>Pe - Close_Punctuation\n\t * <li>Pc - Connector_Punctuation\n\t * <li>Po - Other_Punctuation\n\t * <li>Sm - Math_Symbol\n\t * <li>Sc - Currency_Symbol\n\t * <li>Sk - Modifier_Symbol\n\t * <li>So - Other_Symbol\n\t * <li>Pi - Initial_Punctuation\n\t * <li>Pf - Final_Punctuation\n\t * </ul>\n\t * \n\t * @protected\n\t * @param {number} num code point of the character to examine\n\t * @param {string} rangeName the name of the range to check\n\t * @param {Object} obj object containing the character range data\n\t * @return {boolean} true if the first character is within the named\n\t * range\n\t */\n\t_inRange: function(num, rangeName, obj) {\n\t\tvar range, i;\n\t\tif (num < 0 || !rangeName || !obj) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\trange = obj[rangeName];\n\t\tif (!range) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar compare = function(singlerange, target) {\n\t\t\tif (singlerange.length === 1) {\n\t\t\t\treturn singlerange[0] - target;\n\t\t\t} else {\n\t\t\t\treturn target < singlerange[0] ? singlerange[0] - target :\n\t\t\t\t\t(target > singlerange[1] ? singlerange[1] - target : 0);\n\t\t\t}\n\t\t};\n\t\tvar result = ilib.bsearch(num, range, compare);\n\t\treturn result < range.length && compare(range[result], num) === 0;\n\t},\n\t\n\t/**\n\t * Return whether or not the first character is within the named range\n\t * of Unicode characters. The valid list of range names are taken from \n\t * the Unicode 6.0 spec. Characters in all ranges of Unicode are supported,\n\t * including those supported in Javascript via UTF-16. Currently, this method \n\t * supports the following range names:\n\t * \n\t * <ul>\n\t * <li><i>ascii</i> - basic ASCII\n\t * <li><i>latin</i> - Latin, Latin Extended Additional, Latin Extended-C, Latin Extended-D\n\t * <li><i>armenian</i>\n\t * <li><i>greek</i> - Greek, Greek Extended\n\t * <li><i>cyrillic</i> - Cyrillic, Cyrillic Extended-A, Cyrillic Extended-B\n\t * <li><i>georgian</i> - Georgian, Georgian Supplement\n\t * <li><i>glagolitic</i>\n\t * <li><i>gothic</i>\n\t * <li><i>ogham</i>\n\t * <li><i>oldpersian</i>\n\t * <li><i>runic</i>\n\t * <li><i>ipa</i> - IPA, Phonetic Extensions, Phonetic Extensions Supplement\n\t * <li><i>phonetic</i>\n\t * <li><i>modifiertone</i> - Modifier Tone Letters\n\t * <li><i>spacing</i>\n\t * <li><i>diacritics</i>\n\t * <li><i>halfmarks</i> - Combining Half Marks\n\t * <li><i>small</i> - Small Form Variants\n\t * <li><i>bamum</i> - Bamum, Bamum Supplement\n\t * <li><i>ethiopic</i> - Ethiopic, Ethiopic Extended, Ethiopic Extended-A\n\t * <li><i>nko</i>\n\t * <li><i>osmanya</i>\n\t * <li><i>tifinagh</i>\n\t * <li><i>val</i>\n\t * <li><i>arabic</i> - Arabic, Arabic Supplement, Arabic Presentation Forms-A, \n\t * Arabic Presentation Forms-B\n\t * <li><i>carlan</i>\n\t * <li><i>hebrew</i>\n\t * <li><i>mandaic</i>\n\t * <li><i>samaritan</i>\n\t * <li><i>syriac</i>\n\t * <li><i>mongolian</i>\n\t * <li><i>phagspa</i>\n\t * <li><i>tibetan</i>\n\t * <li><i>bengali</i>\n\t * <li><i>devanagari</i> - Devanagari, Devanagari Extended\n\t * <li><i>gujarati</i>\n\t * <li><i>gurmukhi</i>\n\t * <li><i>kannada</i>\n\t * <li><i>lepcha</i>\n\t * <li><i>limbu</i>\n\t * <li><i>malayalam</i>\n\t * <li><i>meetaimayek</i>\n\t * <li><i>olchiki</i>\n\t * <li><i>oriya</i>\n\t * <li><i>saurashtra</i>\n\t * <li><i>sinhala</i>\n\t * <li><i>sylotinagri</i> - Syloti Nagri\n\t * <li><i>tamil</i>\n\t * <li><i>telugu</i>\n\t * <li><i>thaana</i>\n\t * <li><i>vedic</i>\n\t * <li><i>batak</i>\n\t * <li><i>balinese</i>\n\t * <li><i>buginese</i>\n\t * <li><i>cham</i>\n\t * <li><i>javanese</i>\n\t * <li><i>kayahli</i>\n\t * <li><i>khmer</i>\n\t * <li><i>lao</i>\n\t * <li><i>myanmar</i> - Myanmar, Myanmar Extended-A\n\t * <li><i>newtailue</i>\n\t * <li><i>rejang</i>\n\t * <li><i>sundanese</i>\n\t * <li><i>taile</i>\n\t * <li><i>taitham</i>\n\t * <li><i>taiviet</i>\n\t * <li><i>thai</i>\n\t * <li><i>buhld</i>\n\t * <li><i>hanunoo</i>\n\t * <li><i>tagalog</i>\n\t * <li><i>tagbanwa</i>\n\t * <li><i>bopomofo</i> - Bopomofo, Bopomofo Extended\n\t * <li><i>cjk</i> - the CJK unified ideographs (Han), CJK Unified Ideographs\n\t *  Extension A, CJK Unified Ideographs Extension B, CJK Unified Ideographs \n\t *  Extension C, CJK Unified Ideographs Extension D, Ideographic Description \n\t *  Characters (=isIdeo())\n\t * <li><i>cjkcompatibility</i> - CJK Compatibility, CJK Compatibility \n\t * Ideographs, CJK Compatibility Forms, CJK Compatibility Ideographs Supplement\n\t * <li><i>cjkradicals</i> - the CJK radicals, KangXi radicals\n\t * <li><i>hangul</i> - Hangul Jamo, Hangul Syllables, Hangul Jamo Extended-A, \n\t * Hangul Jamo Extended-B, Hangul Compatibility Jamo\n\t * <li><i>cjkpunct</i> - CJK symbols and punctuation\n\t * <li><i>cjkstrokes</i> - CJK strokes\n\t * <li><i>hiragana</i>\n\t * <li><i>katakana</i> - Katakana, Katakana Phonetic Extensions, Kana Supplement\n\t * <li><i>kanbun</i>\n\t * <li><i>lisu</i>\n\t * <li><i>yi</i> - Yi Syllables, Yi Radicals\n\t * <li><i>cherokee</i>\n\t * <li><i>canadian</i> - Unified Canadian Aboriginal Syllabics, Unified Canadian \n\t * Aboriginal Syllabics Extended\n\t * <li><i>presentation</i> - Alphabetic presentation forms\n\t * <li><i>vertical</i> - Vertical Forms\n\t * <li><i>width</i> - Halfwidth and Fullwidth Forms\n\t * <li><i>punctuation</i> - General punctuation, Supplemental Punctuation\n\t * <li><i>box</i> - Box Drawing\n\t * <li><i>block</i> - Block Elements\n\t * <li><i>letterlike</i> - Letterlike symbols\n\t * <li><i>mathematical</i> - Mathematical alphanumeric symbols, Miscellaneous \n\t * Mathematical Symbols-A, Miscellaneous Mathematical Symbols-B\n\t * <li><i>enclosedalpha</i> - Enclosed alphanumerics, Enclosed Alphanumeric Supplement\n\t * <li><i>enclosedcjk</i> - Enclosed CJK letters and months, Enclosed Ideographic Supplement\n\t * <li><i>cjkcompatibility</i> - CJK compatibility\n\t * <li><i>apl</i> - APL symbols\n\t * <li><i>controlpictures</i> - Control pictures\n\t * <li><i>misc</i> - Miscellaneous technical\n\t * <li><i>ocr</i> - Optical character recognition (OCR)\n\t * <li><i>combining</i> - Combining Diacritical Marks, Combining Diacritical Marks \n\t * for Symbols, Combining Diacritical Marks Supplement\n\t * <li><i>digits</i> - ASCII digits (=isDigit())\n\t * <li><i>indicnumber</i> - Common Indic Number Forms\n\t * <li><i>numbers</i> - Number dorms\n\t * <li><i>supersub</i> - Super- and subscripts\n\t * <li><i>arrows</i> - Arrows, Miscellaneous Symbols and Arrows, Supplemental Arrows-A,\n\t * Supplemental Arrows-B\n\t * <li><i>operators</i> - Mathematical operators, supplemental \n\t * mathematical operators \n\t * <li><i>geometric</i> - Geometric shapes\n\t * <li><i>ancient</i> - Ancient symbols\n\t * <li><i>braille</i> - Braille patterns\n\t * <li><i>currency</i> - Currency symbols\n\t * <li><i>dingbats</i>\n\t * <li><i>gamesymbols</i>\n\t * <li><i>yijing</i> - Yijing Hexagram Symbols\n\t * <li><i>specials</i>\n\t * <li><i>variations</i> - Variation Selectors, Variation Selectors Supplement\n\t * <li><i>privateuse</i> - Private Use Area, Supplementary Private Use Area-A, \n\t * Supplementary Private Use Area-B\n\t * <li><i>supplementarya</i> - Supplementary private use area-A\n\t * <li><i>supplementaryb</i> - Supplementary private use area-B\n\t * <li><i>highsurrogates</i> - High Surrogates, High Private Use Surrogates\n\t * <li><i>lowsurrogates</i>\n\t * <li><i>reserved</i>\n\t * <li><i>noncharacters</i>\n\t * </ul><p>\n\t * \n\t * Depends directive: !depends ctype.js\n\t * \n\t * @param {string|ilib.String|number} ch character or code point to examine\n\t * @param {string} rangeName the name of the range to check\n\t * @return {boolean} true if the first character is within the named\n\t * range\n\t */\n\twithinRange: function(ch, rangeName) {\n\t\tif (!rangeName) {\n\t\t\treturn false;\n\t\t}\n\t\tvar num;\n\t\tswitch (typeof(ch)) {\n\t\t\tcase 'number':\n\t\t\t\tnum = ch;\n\t\t\t\tbreak;\n\t\t\tcase 'string':\n\t\t\t\tnum = ilib.String.toCodePoint(ch, 0);\n\t\t\t\tbreak;\n\t\t\tcase 'undefined':\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\tnum = ch._toCodePoint(0);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn ilib.CType._inRange(num, rangeName.toLowerCase(), ilib.data.ctype);\n\t},\n\t\n\t/**\n\t * @protected\n\t * @param {boolean} sync\n\t * @param {Object} loadParams\n\t * @param {function(*)|undefined} onLoad\n\t */\n\t_init: function(sync, loadParams, onLoad) {\n\t\tilib.CType._load(\"ctype\", sync, loadParams, onLoad);\n\t},\n\t\n\t/**\n\t * @protected\n\t * @param {string} name\n\t * @param {boolean} sync\n\t * @param {Object} loadParams\n\t * @param {function(*)|undefined} onLoad\n\t */\n\t_load: function (name, sync, loadParams, onLoad) {\n\t\tif (!ilib.data[name]) {\n\t\t\tvar loadName = name ? name + \".json\" : \"ctype.json\";\n\t\t\tilib.loadData({\n\t\t\t\tname: loadName,\n\t\t\t\tlocale: \"-\",\n\t\t\t\tnonlocale: true,\n\t\t\t\tsync: sync,\n\t\t\t\tloadParams: loadParams, \n\t\t\t\tcallback: /** @type function(Object=):undefined */ ilib.bind(this, /** @type function() */ function(ct) {\n\t\t\t\t\tilib.data[name] = ct;\n\t\t\t\t\tif (onLoad && typeof(onLoad) === 'function') {\n\t\t\t\t\t\tonLoad(ilib.data[name]);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t\t} else {\n\t\t\tif (onLoad && typeof(onLoad) === 'function') {\n\t\t\t\tonLoad(ilib.data[name]);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/*\n * ctype.isdigit.js - Character type is digit\n * \n * Copyright © 2012-2013, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ctype.js\n\n// !data ctype\n\n/**\n * Return whether or not the first character is a digit character in the\n * Latin script.<p>\n * \n * Depends directive: !depends ctype.isdigit.js\n * \n * @param {string|ilib.String|number} ch character or code point to examine\n * @return {boolean} true if the first character is a digit character in the\n * Latin script. \n */\nilib.CType.isDigit = function (ch) {\n\tvar num;\n\tswitch (typeof(ch)) {\n\t\tcase 'number':\n\t\t\tnum = ch;\n\t\t\tbreak;\n\t\tcase 'string':\n\t\t\tnum = ilib.String.toCodePoint(ch, 0);\n\t\t\tbreak;\n\t\tcase 'undefined':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\tnum = ch._toCodePoint(0);\n\t\t\tbreak;\n\t}\n\treturn ilib.CType._inRange(num, 'digit', ilib.data.ctype);\n};\n\n/**\n * @protected\n * @param {boolean} sync\n * @param {Object} loadParams\n * @param {function(*)|undefined} onLoad\n */\nilib.CType.isDigit._init = function (sync, loadParams, onLoad) {\n\tilib.CType._init(sync, loadParams, onLoad);\n};\n\n/*\n * ctype.isspace.js - Character type is space char\n * \n * Copyright © 2012-2013, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ctype.js\n\n// !data ctype ctype_z\n\n/**\n * Return whether or not the first character is a whitespace character.<p>\n * \n * Depends directive: !depends ctype.isspace.js\n * \n * @param {string|ilib.String|number} ch character or code point to examine\n * @return {boolean} true if the first character is a whitespace character.\n */\nilib.CType.isSpace = function (ch) {\n\tvar num;\n\tswitch (typeof(ch)) {\n\t\tcase 'number':\n\t\t\tnum = ch;\n\t\t\tbreak;\n\t\tcase 'string':\n\t\t\tnum = ilib.String.toCodePoint(ch, 0);\n\t\t\tbreak;\n\t\tcase 'undefined':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\tnum = ch._toCodePoint(0);\n\t\t\tbreak;\n\t}\n\n\treturn ilib.CType._inRange(num, 'space', ilib.data.ctype) ||\n\t\tilib.CType._inRange(num, 'Zs', ilib.data.ctype_z) ||\n\t\tilib.CType._inRange(num, 'Zl', ilib.data.ctype_z) ||\n\t\tilib.CType._inRange(num, 'Zp', ilib.data.ctype_z);\n};\n\n/**\n * @protected\n * @param {boolean} sync\n * @param {Object} loadParams\n * @param {function(*)|undefined} onLoad\n */\nilib.CType.isSpace._init = function (sync, loadParams, onLoad) {\n\tilib.CType._load(\"ctype_z\", sync, loadParams, function () {\n\t\tilib.CType._init(sync, loadParams, onLoad);\n\t});\n};\n\n/*\n * numprs.js - Parse a number in any locale\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n!depends \nilibglobal.js \nlocale.js \nstrings.js \nctype.isdigit.js \nctype.isspace.js\n*/\n\n/**\n * @class\n * Parse a string as a number, ignoring all locale-specific formatting.<p>\n * \n * This class is different from the standard Javascript parseInt() and parseFloat() \n * functions in that the number to be parsed can have formatting characters in it \n * that are not supported by those two\n * functions, and it handles numbers written in other locales properly. For example, \n * if you pass the string \"203,231.23\" to the parseFloat() function in Javascript, it \n * will return you the number 203. The ilib.Number class will parse it correctly and \n * the value() function will return the number 203231.23. If you pass parseFloat() the \n * string \"203.231,23\" with the locale set to de-DE, it will return you 203 again. This\n * class will return the correct number 203231.23 again.<p>\n * \n * The options object may contain any of the following properties:\n * \n * <ul>\n * <li><i>locale</i> - specify the locale of the string to parse. This is used to\n * figure out what the decimal point character is. If not specified, the default locale\n * for the app or browser is used.\n * <li><i>type</i> - specify whether this string should be interpretted as a number,\n * currency, or percentage amount. When the number is interpretted as a currency\n * amount, the getCurrency() method will return something useful, otherwise it will\n * return undefined. If\n * the number is to be interpretted as percentage amount and there is a percentage sign\n * in the string, then the number will be returned\n * as a fraction from the valueOf() method. If there is no percentage sign, then the \n * number will be returned as a regular number. That is \"58.3%\" will be returned as the \n * number 0.583 but \"58.3\" will be returned as 58.3. Valid values for this property \n * are \"number\", \"currency\", and \"percentage\". Default if this is not specified is\n * \"number\".\n * <li><i>onLoad</i> - a callback function to call when the locale data is fully \n * loaded. When the onLoad option is given, this class will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the \n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two. \n * \n * <li><i>sync</i> - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while.\n *  \n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * <p>\n * \n * Depends directive: !depends numprs.js\n * \n * @constructor\n * @param {string|number|Number|ilib.Number|undefined} str a string to parse as a number, or a number value\n * @param {Object=} options Options controlling how the instance should be created \n */\nilib.Number = function (str, options) {\n\tvar i, stripped = \"\", \n\t\tsync = true,\n\t\tloadParams,\n\t\tonLoad;\n\t\n\tthis.locale = new ilib.Locale();\n\tthis.type = \"number\";\n\t\n\tif (options) {\n\t\tif (options.locale) {\n\t\t\tthis.locale = (typeof(options.locale) === 'string') ? new ilib.Locale(options.locale) : options.locale;\n\t\t}\n\t\tif (options.type) {\n\t\t\tswitch (options.type) {\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"currency\":\n\t\t\t\tcase \"percentage\":\n\t\t\t\t\tthis.type = options.type;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tsync = (options.sync == true);\n\t\t}\n\t\tloadParams = options.loadParams;\n\t\tonLoad = options.onLoad;\n\t}\n\t\n\tilib.CType.isDigit._init(sync, loadParams, /** @type {function()|undefined} */ ilib.bind(this, function() {\n\t\tilib.CType.isSpace._init(sync, loadParams, /** @type {function()|undefined} */ ilib.bind(this, function() {\n\t\t\tnew ilib.LocaleInfo(this.locale, {\n\t\t\t\tsync: sync,\n\t\t\t\tonLoad: ilib.bind(this, function (li) {\n\t\t\t\t\tthis.decimal = li.getDecimalSeparator();\n\t\t\t\t\t\n\t\t\t\t\tswitch (typeof(str)) {\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t// stripping should work for all locales, because you just ignore all the\n\t\t\t\t\t\t// formatting except the decimal char\n\t\t\t\t\t\tvar unary = true; // looking for the unary minus still?\n\t\t\t\t\t\tthis.str = str || \"0\";\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfor (i = 0; i < this.str.length; i++) {\n\t\t\t\t\t\t\tif (unary && this.str.charAt(i) === '-') {\n\t\t\t\t\t\t\t\tunary = false;\n\t\t\t\t\t\t\t\tstripped += this.str.charAt(i);\n\t\t\t\t\t\t\t} else if (ilib.CType.isDigit(this.str.charAt(i))) {\n\t\t\t\t\t\t\t\tstripped += this.str.charAt(i);\n\t\t\t\t\t\t\t\tunary = false;\n\t\t\t\t\t\t\t} else if (this.str.charAt(i) === this.decimal) {\n\t\t\t\t\t\t\t\tstripped += \".\"; // always convert to period\n\t\t\t\t\t\t\t\tunary = false;\n\t\t\t\t\t\t\t} // else ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.value = parseFloat(stripped);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tthis.str = \"\" + str;\n\t\t\t\t\t\tthis.value = str;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\tthis.value = /** @type {number} */ str.valueOf();\n\t\t\t\t\t\tthis.str = \"\" + this.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase 'undefined':\n\t\t\t\t\t\tthis.value = 0;\n\t\t\t\t\t\tthis.str = \"0\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tswitch (this.type) {\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// don't need to do anything special for other types\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"percentage\":\n\t\t\t\t\t\t\tif (this.str.indexOf(li.getPercentageSymbol()) !== -1) {\n\t\t\t\t\t\t\t\tthis.value /= 100;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"currency\":\n\t\t\t\t\t\t\tstripped = \"\";\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\t\twhile (i < this.str.length &&\n\t\t\t\t\t\t\t\t   !ilib.CType.isDigit(this.str.charAt(i)) &&\n\t\t\t\t\t\t\t\t   !ilib.CType.isSpace(this.str.charAt(i))) {\n\t\t\t\t\t\t\t\tstripped += this.str.charAt(i++);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (stripped.length === 0) {\n\t\t\t\t\t\t\t\twhile (i < this.str.length && \n\t\t\t\t\t\t\t\t\t   ilib.CType.isDigit(this.str.charAt(i)) ||\n\t\t\t\t\t\t\t\t\t   ilib.CType.isSpace(this.str.charAt(i)) ||\n\t\t\t\t\t\t\t\t\t   this.str.charAt(i) === '.' ||\n\t\t\t\t\t\t\t\t\t   this.str.charAt(i) === ',' ) {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twhile (i < this.str.length && \n\t\t\t\t\t\t\t\t\t   !ilib.CType.isDigit(this.str.charAt(i)) &&\n\t\t\t\t\t\t\t\t\t   !ilib.CType.isSpace(this.str.charAt(i))) {\n\t\t\t\t\t\t\t\t\tstripped += this.str.charAt(i++);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnew ilib.Currency({\n\t\t\t\t\t\t\t\tlocale: this.locale, \n\t\t\t\t\t\t\t\tsign: stripped,\n\t\t\t\t\t\t\t\tsync: sync,\n\t\t\t\t\t\t\t\tonLoad: ilib.bind(this, function (cur) {\n\t\t\t\t\t\t\t\t\tthis.currency = cur;\n\t\t\t\t\t\t\t\t\tif (options && typeof(options.onLoad) === 'function') {\n\t\t\t\t\t\t\t\t\t\toptions.onLoad(this);\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (options && typeof(options.onLoad) === 'function') {\n\t\t\t\t\t\toptions.onLoad(this);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t\t}));\n\t}));\n};\n\nilib.Number.prototype = {\n\t/**\n\t * Return the locale for this formatter instance.\n\t * @return {ilib.Locale} the locale instance for this formatter\n\t */\n\tgetLocale: function () {\n\t\treturn this.locale;\n\t},\n\t\n\t/**\n\t * Return the original string that this number instance was created with.\n\t * @return {string} the original string\n\t */\n\ttoString: function () {\n\t\treturn this.str;\n\t},\n\t\n\t/**\n\t * If the type of this Number instance is \"currency\", then the parser will attempt\n\t * to figure out which currency this amount represents. The amount can be written\n\t * with any of the currency signs or ISO 4217 codes that are currently\n\t * recognized by ilib, and the currency signs may occur before or after the\n\t * numeric portion of the string. If no currency can be recognized, then the \n\t * default currency for the locale is returned. If multiple currencies can be\n\t * recognized (for example if the currency sign is \"$\"), then this method \n\t * will prefer the one for the current locale. If multiple currencies can be\n\t * recognized, but none are used in the current locale, then the first currency\n\t * encountered will be used. This may produce random results, though the larger\n\t * currencies occur earlier in the list. For example, if the sign found in the\n\t * string is \"$\" and that is not the sign of the currency of the current locale\n\t * then the US dollar will be recognized, as it is the largest currency that uses\n\t * the \"$\" as its sign.\n\t * \n\t * @return {ilib.Currency|undefined} the currency instance for this amount, or \n\t * undefined if this Number object is not of type currency\n\t */\n\tgetCurrency: function () {\n\t\treturn this.currency;\n\t},\n\t\n\t/**\n\t * Return the value of this number object as a primitive number instance.\n\t * @return {number} the value of this number instance\n\t */\n\tvalueOf: function () {\n\t\treturn this.value;\n\t}\n};\n\n/*\n * currency.js - Currency definition\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js locale.js\n\n// !data currency\n\n/**\n * @class\n * Create a new currency information instance. Instances of this class encode \n * information about a particular currency.<p>\n * \n * Note: that if you are looking to format currency for display, please see\n * the number formatting class {ilib.NumFmt}. This class only gives information\n * about currencies.<p> \n * \n * The options can contain any of the following properties:\n * \n * <ul>\n * <li><i>locale</i> - specify the locale for this instance\n * <li><i>code</i> - find info on a specific currency with the given ISO 4217 code \n * <li><i>sign</i> - search for a currency that uses this sign\n * <li><i>onLoad</i> - a callback function to call when the currency data is fully \n * loaded. When the onLoad option is given, this class will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the \n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two. \n * <li><i>sync</i> - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while.\n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * \n * When searching for a currency by its sign, this class cannot guarantee \n * that it will return info about a specific currency. The reason is that currency \n * signs are sometimes shared between different currencies and the sign is \n * therefore ambiguous. If you need a \n * guarantee, find the currency using the code instead.<p>\n * \n * The way this class finds a currency by sign is the following. If the sign is \n * unambiguous, then\n * the currency is returned. If there are multiple currencies that use the same\n * sign, and the current locale uses that sign, then the default currency for\n * the current locale is returned. If there are multiple, but the current locale\n * does not use that sign, then the currency with the largest circulation is\n * returned. For example, if you are in the en-GB locale, and the sign is \"$\",\n * then this class will notice that there are multiple currencies with that\n * sign (USD, CAD, AUD, HKD, MXP, etc.) Since \"$\" is not used in en-GB, it will \n * pick the one with the largest circulation, which in this case is the US Dollar\n * (USD).<p>\n * \n * If neither the code or sign property is set, the currency that is most common \n * for the locale\n * will be used instead. If the locale is not set, the default locale will be used.\n * If the code is given, but it is not found in the list of known currencies, this\n * constructor will throw an exception. If the sign is given, but it is not found,\n * this constructor will default to the currency for the current locale. If both\n * the code and sign properties are given, then the sign property will be ignored\n * and only the code property used. If the locale is given, but it is not a known\n * locale, this class will default to the default locale instead.<p>\n * \n * Depends directive: !depends currency.js\n * \n * @constructor\n * @param options {Object} a set of properties to govern how this instance is constructed.\n * @throws \"currency xxx is unknown\" when the given currency code is not in the list of \n * known currencies. xxx is replaced with the requested code.\n */\nilib.Currency = function (options) {\n\tthis.sync = true;\n\t\n\tif (options) {\n\t\tif (options.code) {\n\t\t\tthis.code = options.code;\n\t\t}\n\t\tif (options.locale) {\n\t\t\tthis.locale = (typeof(options.locale) === 'string') ? new ilib.Locale(options.locale) : options.locale;\n\t\t}\n\t\tif (options.sign) {\n\t\t\tthis.sign = options.sign;\n\t\t}\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tthis.sync = options.sync;\n\t\t}\n\t\tif (options.loadParams) {\n\t\t\tthis.loadParams = options.loadParams;\n\t\t}\n\t}\n\t\n\tthis.locale = this.locale || new ilib.Locale();\n\tif (typeof(ilib.data.currency) === 'undefined') {\n\t\tilib.loadData({\n\t\t\tname: \"currency.json\",\n\t\t\tobject: ilib.Currency, \n\t\t\tlocale: \"-\",\n\t\t\tsync: this.sync, \n\t\t\tloadParams: this.loadParams, \n\t\t\tcallback: /** @type function(Object=):undefined */ ilib.bind(this, /** @type function() */ function(currency) {\n\t\t\t\tilib.data.currency = currency;\n\t\t\t\tthis._loadLocinfo(options && options.onLoad);\n\t\t\t})\n\t\t});\n\t} else {\n\t\tthis._loadLocinfo(options && options.onLoad);\n\t}\n};\n\n/**\n * Return an array of the ids for all ISO 4217 currencies that\n * this copy of ilib knows about.\n * \n * @static\n * @return {Array.<string>} an array of currency ids that this copy of ilib knows about.\n */\nilib.Currency.getAvailableCurrencies = function() {\n\tvar ret = [],\n\t\tcur,\n\t\tcurrencies = new ilib.ResBundle({\n\t\t\tname: \"currency\"\n\t\t}).getResObj();\n\t\n\tfor (cur in currencies) {\n\t\tif (cur && currencies[cur]) {\n\t\t\tret.push(cur);\n\t\t}\n\t}\n\t\n\treturn ret;\n};\n\nilib.Currency.prototype = {\n\t/**\n\t * @private\n\t */\n\t_loadLocinfo: function(onLoad) {\n\t\tnew ilib.LocaleInfo(this.locale, {\n\t\t\tonLoad: ilib.bind(this, function (li) {\n\t\t\t\tvar currInfo;\n\t\t\t\t\n\t\t\t\tthis.locinfo = li;\n\t\t    \tif (this.code) {\n\t\t    \t\tcurrInfo = ilib.data.currency[this.code];\n\t\t    \t\tif (!currInfo) {\n\t\t    \t\t\tthrow \"currency \" + this.code + \" is unknown\";\n\t\t    \t\t}\n\t\t    \t} else if (this.sign) {\n\t\t    \t\tcurrInfo = ilib.data.currency[this.sign]; // maybe it is really a code...\n\t\t    \t\tif (typeof(currInfo) !== 'undefined') {\n\t\t    \t\t\tthis.code = this.sign;\n\t\t    \t\t} else {\n\t\t    \t\t\tthis.code = this.locinfo.getCurrency();\n\t\t    \t\t\tcurrInfo = ilib.data.currency[this.code];\n\t\t    \t\t\tif (currInfo.sign !== this.sign) {\n\t\t    \t\t\t\t// current locale does not use the sign, so search for it\n\t\t    \t\t\t\tfor (var cur in ilib.data.currency) {\n\t\t    \t\t\t\t\tif (cur && ilib.data.currency[cur]) {\n\t\t    \t\t\t\t\t\tcurrInfo = ilib.data.currency[cur];\n\t\t    \t\t\t\t\t\tif (currInfo.sign === this.sign) {\n\t\t    \t\t\t\t\t\t\t// currency data is already ordered so that the currency with the\n\t\t    \t\t\t\t\t\t\t// largest circulation is at the beginning, so all we have to do\n\t\t    \t\t\t\t\t\t\t// is take the first one in the list that matches\n\t\t    \t\t\t\t\t\t\tthis.code = cur;\n\t\t    \t\t\t\t\t\t\tbreak;\n\t\t    \t\t\t\t\t\t}\n\t\t    \t\t\t\t\t}\n\t\t    \t\t\t\t}\n\t\t    \t\t\t}\n\t\t    \t\t}\n\t\t    \t}\n\t\t    \t\n\t\t    \tif (!currInfo || !this.code) {\n\t\t    \t\tthis.code = this.locinfo.getCurrency();\n\t\t    \t\tcurrInfo = ilib.data.currency[this.code];\n\t\t    \t}\n\t\t    \t\n\t\t    \tthis.name = currInfo.name;\n\t\t    \tthis.fractionDigits = currInfo.decimals;\n\t\t    \tthis.sign = currInfo.sign;\n\t\t    \t\n\t\t\t\tif (typeof(onLoad) === 'function') {\n\t\t\t\t\tonLoad(this);\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t},\n\t\n\t/**\n\t * Return the ISO 4217 currency code for this instance.\n\t * @return {string} the ISO 4217 currency code for this instance\n\t */\n\tgetCode: function () {\n\t\treturn this.code;\n\t},\n\t\n\t/**\n\t * Return the default number of fraction digits that is typically used\n\t * with this type of currency.\n\t * @return {number} the number of fraction digits for this currency\n\t */\n\tgetFractionDigits: function () {\n\t\treturn this.fractionDigits;\n\t},\n\t\n\t/**\n\t * Return the sign commonly used to represent this currency.\n\t * @return {string} the sign commonly used to represent this currency\n\t */\n\tgetSign: function () {\n\t\treturn this.sign;\n\t},\n\t\n\t/**\n\t * Return the name of the currency in English.\n\t * @return {string} the name of the currency in English\n\t */\n\tgetName: function () {\n\t\treturn this.name;\n\t},\n\t\n\t/**\n\t * Return the locale for this currency. If the options to the constructor \n\t * included a locale property in order to find the currency that is appropriate\n\t * for that locale, then the locale is returned here. If the options did not\n\t * include a locale, then this method returns undefined.\n\t * @return {ilib.Locale} the locale used in the constructor of this instance,\n\t * or undefined if no locale was given in the constructor\n\t */\n\tgetLocale: function () {\n\t\treturn this.locale;\n\t}\n};\n\n/*\n * numfmt.js - Number formatter definition\n *\n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js locale.js strings.js currency.js\n/*\n!depends \nilibglobal.js \nlocale.js\nlocaleinfo.js\nutil/utils.js\nutil/math.js\ncurrency.js\nstrings.js\nutil/jsutils.js\n*/\n\n// !data localeinfo currency\n\n/**\n * @class\n * Create a new number formatter instance. Locales differ in the way that digits\n * in a formatted number are grouped, in the way the decimal character is represented,\n * etc. Use this formatter to get it right for any locale.<p>\n *\n * This formatter can format plain numbers, currency amounts, and percentage amounts.<p>\n *\n * As with all formatters, the recommended\n * practice is to create one formatter and use it multiple times to format various\n * numbers.<p>\n *\n * The options can contain any of the following properties:\n *\n * <ul>\n * <li><i>locale</i> - use the conventions of the specified locale when figuring out how to\n * format a number.\n * <li><i>type</i> - the type of this formatter. Valid values are \"number\", \"currency\", or\n * \"percentage\". If this property is not specified, the default is \"number\".\n * <li><i>currency</i> - the ISO 4217 3-letter currency code to use when the formatter type\n * is \"currency\". This property is required for currency formatting. If the type property\n * is \"currency\" and the currency property is not specified, the constructor will throw a\n * an exception.\n * <li><i>maxFractionDigits</i> - the maximum number of digits that should appear in the\n * formatted output after the decimal. A value of -1 means unlimited, and 0 means only print\n * the integral part of the number.\n * <li><i>minFractionDigits</i> - the minimum number of fractional digits that should\n * appear in the formatted output. If the number does not have enough fractional digits\n * to reach this minimum, the number will be zero-padded at the end to get to the limit.\n * If the type of the formatter is \"currency\" and this\n * property is not specified, then the minimum fraction digits is set to the normal number\n * of digits used with that currency, which is almost always 0, 2, or 3 digits.\n * <li><i>useNative</i> - the flag used to determaine whether to use the native script settings\n * for formatting the numbers .\n * <li><i>roundingMode</i> - When the maxFractionDigits or maxIntegerDigits is specified,\n * this property governs how the least significant digits are rounded to conform to that\n * maximum. The value of this property is a string with one of the following values:\n * <ul>\n *   <li><i>up</i> - round away from zero\n *   <li><i>down</i> - round towards zero. This has the effect of truncating the number\n *   <li><i>ceiling</i> - round towards positive infinity\n *   <li><i>floor</i> - round towards negative infinity\n *   <li><i>halfup</i> - round towards nearest neighbour. If equidistant, round up.\n *   <li><i>halfdown</i> - round towards nearest neighbour. If equidistant, round down.\n *   <li><i>halfeven</i> - round towards nearest neighbour. If equidistant, round towards the even neighbour\n *   <li><i>halfodd</i> - round towards nearest neighbour. If equidistant, round towards the odd neighbour\n * </ul>\n * When the type of the formatter is \"currency\" and the <i>roundingMode</i> property is not\n * set, then the standard legal rounding rules for the locale are followed. If the type\n * is \"number\" or \"percentage\" and the <i>roundingMode</i> property is not set, then the\n * default mode is \"halfdown\".</i>.\n *\n * <li><i>style</i> - When the type of this formatter is \"currency\", the currency amount\n * can be formatted in the following styles: \"common\" and \"iso\". The common style is the\n * one commonly used in every day writing where the currency unit is represented using a\n * symbol. eg. \"$57.35\" for fifty-seven dollars and thirty five cents. The iso style is\n * the international style where the currency unit is represented using the ISO 4217 code.\n * eg. \"USD 57.35\" for the same amount. The default is \"common\" style if the style is\n * not specified.<p>\n *\n * When the type of this formatter is \"number\", the style can be one of the following:\n * <ul>\n *   <li><i>standard - format a fully specified floating point number properly for the locale\n *   <li><i>scientific</i> - use scientific notation for all numbers. That is, 1 integral \n *   digit, followed by a number of fractional digits, followed by an \"e\" which denotes \n *   exponentiation, followed digits which give the power of 10 in the exponent. \n *   <li><i>native</i> - format a floating point number using the native digits and \n *   formatting symbols for the script of the locale. \n *   <li><i>nogrouping</i> - format a floating point number without grouping digits for\n *   the integral portion of the number\n * </ul>\n * Note that if you specify a maximum number\n * of integral digits, the formatter with a standard style will give you standard\n * formatting for smaller numbers and scientific notation for larger numbers. The default\n * is standard style if this is not specified.\n *\n * <li><i>onLoad</i> - a callback function to call when the format data is fully\n * loaded. When the onLoad option is given, this class will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the\n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two.\n *\n * <li>sync - tell whether to load any missing locale data synchronously or\n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while.\n *\n * <li><i>loadParams</i> - an object containing parameters to pass to the\n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object\n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * <p>\n *\n * Depends directive: !depends numfmt.js\n *\n * @constructor\n * @param {Object.<string,*>} options A set of options that govern how the formatter will behave\n */\nilib.NumFmt = function (options) {\n\tvar sync = true;\n\tthis.locale = new ilib.Locale();\n\t/** \n\t * @private\n\t * @type {string} \n\t */\n\tthis.type = \"number\";\n\tvar loadParams = undefined;\n\n\tif (options) {\n\t\tif (options.locale) {\n\t\t\tthis.locale = (typeof (options.locale) === 'string') ? new ilib.Locale(options.locale) : options.locale;\n\t\t}\n\n\t\tif (options.type) {\n\t\t\tif (options.type === 'number' ||\n\t\t\t\toptions.type === 'currency' ||\n\t\t\t\toptions.type === 'percentage') {\n\t\t\t\tthis.type = options.type;\n\t\t\t}\n\t\t}\n\n\t\tif (options.currency) {\n\t\t\t/** \n\t\t\t * @private \n\t\t\t * @type {string} \n\t\t\t */\n\t\t\tthis.currency = options.currency;\n\t\t}\n\n\t\tif (typeof (options.maxFractionDigits) === 'number') {\n\t\t\t/** \n\t\t\t * @private \n\t\t\t * @type {number|undefined} \n\t\t\t */\n\t\t\tthis.maxFractionDigits = this._toPrimitive(options.maxFractionDigits);\n\t\t}\n\t\tif (typeof (options.minFractionDigits) === 'number') {\n\t\t\t/** \n\t\t\t * @private \n\t\t\t * @type {number|undefined} \n\t\t\t */\n\t\t\tthis.minFractionDigits = this._toPrimitive(options.minFractionDigits);\n\t\t}\n\t\tif (options.style) {\n\t\t\t/** \n\t\t\t * @private \n\t\t\t * @type {string} \n\t\t\t */\n\t\t\tthis.style = options.style;\n\t\t}\n\t\tif (typeof(options.useNative) === 'boolean') {\n\t\t\t/** \n\t\t\t * @private \n\t\t\t * @type {boolean} \n\t\t\t * */\n\t\t\tthis.useNative = options.useNative;\n\t\t}\n\t\t/** \n\t\t * @private \n\t\t * @type {string} \n\t\t */\n\t\tthis.roundingMode = options.roundingMode;\n\n\t\tif (typeof (options.sync) !== 'undefined') {\n\t\t\t/** @type {boolean} */\n\t\t\tsync = (options.sync == true);\n\t\t}\n\t\t\n\t\tloadParams = options.loadParams;\n\t}\n\n\t/** \n\t * @private \n\t * @type {ilib.LocaleInfo|undefined} \n\t */\n\tthis.localeInfo = undefined;\n\t\n\tnew ilib.LocaleInfo(this.locale, {\n\t\tsync: sync,\n\t\tloadParams: loadParams,\n\t\tonLoad: ilib.bind(this, function (li) {\n\t\t\t/** \n\t\t\t * @private \n\t\t\t * @type {ilib.LocaleInfo|undefined} \n\t\t\t */\n\t\t\tthis.localeInfo = li;\n\n\t\t\tif (this.type === \"number\") {\n\t\t\t\tthis.templateNegative = new ilib.String(this.localeInfo.getNegativeNumberFormat() || \"-{n}\");\n\t\t\t} else if (this.type === \"currency\") {\n\t\t\t\tvar templates;\n\n\t\t\t\tif (!this.currency || typeof (this.currency) != 'string') {\n\t\t\t\t\tthrow \"A currency property is required in the options to the number formatter constructor when the type property is set to currency.\";\n\t\t\t\t}\n\n\t\t\t\tnew ilib.Currency({\n\t\t\t\t\tlocale: this.locale,\n\t\t\t\t\tcode: this.currency,\n\t\t\t\t\tsync: sync,\n\t\t\t\t\tloadParams: loadParams,\n\t\t\t\t\tonLoad: ilib.bind(this, function (cur) {\n\t\t\t\t\t\tthis.currencyInfo = cur;\n\t\t\t\t\t\tif (this.style !== \"common\" && this.style !== \"iso\") {\n\t\t\t\t\t\t\tthis.style = \"common\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (typeof(this.maxFractionDigits) !== 'number' && typeof(this.minFractionDigits) !== 'number') {\n\t\t\t\t\t\t\tthis.minFractionDigits = this.maxFractionDigits = this.currencyInfo.getFractionDigits();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttemplates = this.localeInfo.getCurrencyFormats();\n\t\t\t\t\t\tthis.template = new ilib.String(templates[this.style] || templates.common);\n\t\t\t\t\t\tthis.templateNegative = new ilib.String(templates[this.style + \"Negative\"] || templates[\"commonNegative\"]);\n\t\t\t\t\t\tthis.sign = (this.style === \"iso\") ? this.currencyInfo.getCode() : this.currencyInfo.getSign();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!this.roundingMode) {\n\t\t\t\t\t\t\tthis.roundingMode = this.currencyInfo && this.currencyInfo.roundingMode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._init();\n\n\t\t\t\t\t\tif (options && typeof (options.onLoad) === 'function') {\n\t\t\t\t\t\t\toptions.onLoad(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else if (this.type === \"percentage\") {\n\t\t\t\tthis.template =  new ilib.String(this.localeInfo.getPercentageFormat() || \"{n}%\");\n\t\t\t\tthis.templateNegative = new ilib.String(this.localeInfo.getNegativePercentageFormat() || this.localeInfo.getNegativeNumberFormat() + \"%\");\n\t\t\t}\n\n\t\t\tthis._init();\n\n\t\t\tif (options && typeof (options.onLoad) === 'function') {\n\t\t\t\toptions.onLoad(this);\n\t\t\t}\n\t\t})\n\t});\n};\n\n/**\n * Return an array of available locales that this formatter can format\n * @static\n * @return {Array.<ilib.Locale>|undefined} an array of available locales\n */\nilib.NumFmt.getAvailableLocales = function () {\n\treturn undefined;\n};\n\n/**\n * @private\n * @const\n * @type string\n */\nilib.NumFmt.zeros = \"0000000000000000000000000000000000000000000000000000000000000000000000\";\n\nilib.NumFmt.prototype = {\n\t/**\n\t * Return true if this formatter uses native digits to format the number. If the useNative\n\t * option is given to the constructor, then this flag will be honoured. If the useNative\n\t * option is not given to the constructor, this this formatter will use native digits if\n\t * the locale typically uses native digits.\n\t * \n\t *  @return {boolean} true if this formatter will format with native digits, false otherwise\n\t */\n\tgetUseNative: function() {\n\t\tif (typeof(this.useNative) === \"boolean\") {\n\t\t\treturn this.useNative;\n\t\t} \n\t\treturn (this.localeInfo.getDigitsStyle() === \"native\");\n\t},\n\t\n\t/**\n\t * @private\n\t */\n\t_init: function () {\n\t\tif (this.maxFractionDigits < this.minFractionDigits) {\n\t\t\tthis.minFractionDigits = this.maxFractionDigits;\n\t\t}\n\n\t\tif (!this.roundingMode) {\n\t\t\tthis.roundingMode = this.localeInfo.getRoundingMode();\n\t\t}\n\n\t\tif (!this.roundingMode) {\n\t\t\tthis.roundingMode = \"halfdown\";\n\t\t}\n\n\t\t// set up the function, so we only have to figure it out once\n\t\t// and not every time we do format()\n\t\tthis.round = ilib._roundFnc[this.roundingMode];\n\t\tif (!this.round) {\n\t\t\tthis.roundingMode = \"halfdown\";\n\t\t\tthis.round = ilib._roundFnc[this.roundingMode];\n\t\t}\n\t\t\n\t\tif (this.style === \"nogrouping\") {\n\t\t\tthis.prigroupSize = this.secgroupSize = 0;\n\t\t} else {\n\t\t\tthis.prigroupSize = this.localeInfo.getPrimaryGroupingDigits();\n\t\t\tthis.secgroupSize = this.localeInfo.getSecondaryGroupingDigits();\n\t\t\tthis.groupingSeparator = this.getUseNative() ? this.localeInfo.getNativeGroupingSeparator() : this.localeInfo.getGroupingSeparator();\n\t\t} \n\t\tthis.decimalSeparator = this.getUseNative() ? this.localeInfo.getNativeDecimalSeparator() : this.localeInfo.getDecimalSeparator();\n\t\t\n\t\tif (this.getUseNative()) {\n\t\t\tvar nd = this.localeInfo.getNativeDigits() || this.localeInfo.getDigits();\n\t\t\tif (nd) {\n\t\t\t\tthis.digits = nd.split(\"\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.exponentSymbol = this.localeInfo.getExponential() || \"e\";\n\t},\n\n\t/*\n\t * @private\n\t */\n\t_pad: function (str, length, left) {\n\t\treturn (str.length >= length) ?\n\t\t\tstr :\n\t\t\t(left ?\n\t\t\tilib.NumFmt.zeros.substring(0, length - str.length) + str :\n\t\t\tstr + ilib.NumFmt.zeros.substring(0, length - str.length));\n\t},\n\n\t/**\n\t * @private\n\t * @param {Number|ilib.Number|string|number} num object, string, or number to convert to a primitive number\n\t * @return {number} the primitive number equivalent of the argument\n\t */\n\t_toPrimitive: function (num) {\n\t\tvar n = 0;\n\n\t\tswitch (typeof (num)) {\n\t\tcase 'number':\n\t\t\tn = num;\n\t\t\tbreak;\n\t\tcase 'string':\n\t\t\tn = parseFloat(num);\n\t\t\tbreak;\n\t\tcase 'object':\n\t\t\t// Number.valueOf() is incorrectly documented as being of type \"string\" rather than \"number\", so coerse \n\t\t\t// the type here to shut the type checker up\n\t\t\tn = /** @type {number} */ num.valueOf();\n\t\t\tbreak;\n\t\t}\n\n\t\treturn n;\n\t},\n\n\t/**\n\t * Format the number using scientific notation as a positive number. Negative\n\t * formatting to be applied later.\n\t * @private\n\t * @param {number} num the number to format\n\t * @return {string} the formatted number\n\t */\n\t_formatScientific: function (num) {\n\t\tvar n = new Number(num);\n\t\tvar formatted;\n\t\tif (typeof (this.maxFractionDigits) !== 'undefined') {\n\t\t\t// if there is fraction digits, round it to the right length first\n\t\t\t// divide or multiply by 10 by manipulating the exponent so as to\n\t\t\t// avoid the rounding errors of floating point numbers\n\t\t\tvar e,\n\t\t\t\tfactor,\n\t\t\t\tstr = n.toExponential(),\n\t\t\t\tparts = str.split(\"e\"),\n\t\t\t\tsignificant = parts[0];\n\n\t\t\te = parts[1];\n\t\t\tfactor = Math.pow(10, this.maxFractionDigits);\n\t\t\tsignificant = this.round(significant * factor) / factor;\n\t\t\tformatted = \"\" + significant + this.exponentSymbol + e;\n\t\t} else {\n\t\t\tformatted = n.toExponential(this.minFractionDigits);\n\t\t\tif (this.exponentSymbol !== 'e') {\n\t\t\t\tformatted = formatted.replace(/e/, this.exponentSymbol);\n\t\t\t}\n\t\t}\n\t\treturn formatted;\n\t},\n\n\t/**\n\t * Formats the number as a positive number. Negative formatting to be applied later.\n\t * @private\n\t * @param {number} num the number to format\n\t * @return {string} the formatted number\n\t */\n\t_formatStandard: function (num) {\n\t\tvar i;\n\t\tvar k;\n\t\t\n\t\tif (typeof(this.maxFractionDigits) !== 'undefined' && this.maxFractionDigits > -1) {\n\t\t\tvar factor = Math.pow(10, this.maxFractionDigits);\n\t\t\tnum = this.round(num * factor) / factor;\n\t\t}\n\n\t\tnum = Math.abs(num);\n\n\t\tvar parts = (\"\" + num).split(\".\"),\n\t\t\tintegral = parts[0],\n\t\t\tfraction = parts[1],\n\t\t\tcycle,\n\t\t\tformatted;\n\t\t\n\t\tintegral = integral.toString();\n\n\t\tif (this.minFractionDigits > 0) {\n\t\t\tfraction = this._pad(fraction || \"\", this.minFractionDigits, false);\n\t\t}\n\n\t\tif (this.secgroupSize > 0) {\n\t\t\tif (integral.length > this.prigroupSize) {\n\t\t\t\tvar size1 = this.prigroupSize;\n\t\t\t\tvar size2 = integral.length;\n\t\t\t\tvar size3 = size2 - size1;\n\t\t\t\tintegral = integral.slice(0, size3) + this.groupingSeparator + integral.slice(size3);\n\t\t\t\tvar num_sec = integral.substring(0, integral.indexOf(this.groupingSeparator));\n\t\t\t\tk = num_sec.length;\n\t\t\t\twhile (k > this.secgroupSize) {\n\t\t\t\t\tvar secsize1 = this.secgroupSize;\n\t\t\t\t\tvar secsize2 = num_sec.length;\n\t\t\t\t\tvar secsize3 = secsize2 - secsize1;\n\t\t\t\t\tintegral = integral.slice(0, secsize3) + this.groupingSeparator + integral.slice(secsize3);\n\t\t\t\t\tnum_sec = integral.substring(0, integral.indexOf(this.groupingSeparator));\n\t\t\t\t\tk = num_sec.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tformatted = integral;\n\t\t} else if (this.prigroupSize !== 0) {\n\t\t\tcycle = ilib.mod(integral.length - 1, this.prigroupSize);\n\n\t\t\tformatted = \"\";\n\n\t\t\tfor (i = 0; i < integral.length - 1; i++) {\n\t\t\t\tformatted += integral.charAt(i);\n\t\t\t\tif (cycle === 0) {\n\t\t\t\t\tformatted += this.groupingSeparator;\n\t\t\t\t}\n\t\t\t\tcycle = ilib.mod(cycle - 1, this.prigroupSize);\n\t\t\t}\n\t\t\tformatted += integral.charAt(integral.length - 1);\n\t\t} else {\n\t\t\tformatted = integral;\n\t\t}\n\n\t\tif (fraction && (typeof(this.maxFractionDigits) === 'undefined' || this.maxFractionDigits > 0)) {\n\t\t\tformatted += this.decimalSeparator;\n\t\t\tformatted += fraction;\n\t\t}\n\t\t\n\t\tif (this.digits) {\n\t\t\tformatted = ilib.mapString(formatted, this.digits);\n\t\t}\n\t\t\n\t\treturn formatted;\n\t},\n\n\t/**\n\t * Format a number according to the settings of this number formatter instance.\n\t * @param num {number|string|Number|ilib.Number} a floating point number to format\n\t * @return {string} a string containing the formatted number\n\t */\n\tformat: function (num) {\n\t\tvar formatted, n;\n\n\t\tif (typeof (num) === 'undefined') {\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// convert to a real primitive number type\n\t\tn = this._toPrimitive(num);\n\n\t\tif (this.type === \"number\") {\n\t\t\tformatted = (this.style === \"scientific\") ?\n\t\t\t\tthis._formatScientific(n) :\n\t\t\t\tthis._formatStandard(n);\n\n\t\t\tif (num < 0) {\n\t\t\t\tformatted = this.templateNegative.format({n: formatted});\n\t\t\t}\n\t\t} else {\n\t\t\tformatted = this._formatStandard(n);\n\t\t\tvar template = (n < 0) ? this.templateNegative : this.template;\n\t\t\tformatted = template.format({\n\t\t\t\tn: formatted,\n\t\t\t\ts: this.sign\n\t\t\t});\n\t\t}\n\n\t\treturn formatted;\n\t},\n\n\t/**\n\t * Return the type of formatter. Valid values are \"number\", \"currency\", and\n\t * \"percentage\".\n\t *\n\t * @return {string} the type of formatter\n\t */\n\tgetType: function () {\n\t\treturn this.type;\n\t},\n\n\t/**\n\t * Return the locale for this formatter instance.\n\t * @return {ilib.Locale} the locale instance for this formatter\n\t */\n\tgetLocale: function () {\n\t\treturn this.locale;\n\t},\n\n\t/**\n\t * Returns true if this formatter groups together digits in the integral\n\t * portion of a number, based on the options set up in the constructor. In\n\t * most western European cultures, this means separating every 3 digits\n\t * of the integral portion of a number with a particular character.\n\t *\n\t * @return {boolean} true if this formatter groups digits in the integral\n\t * portion of the number\n\t */\n\tisGroupingUsed: function () {\n\t\treturn (this.groupingSeparator !== 'undefined' && this.groupingSeparator.length > 0);\n\t},\n\n\t/**\n\t * Returns the maximum fraction digits set up in the constructor.\n\t *\n\t * @return {number} the maximum number of fractional digits this\n\t * formatter will format, or -1 for no maximum\n\t */\n\tgetMaxFractionDigits: function () {\n\t\treturn typeof (this.maxFractionDigits) !== 'undefined' ? this.maxFractionDigits : -1;\n\t},\n\n\t/**\n\t * Returns the minimum fraction digits set up in the constructor. If\n\t * the formatter has the type \"currency\", then the minimum fraction\n\t * digits is the amount of digits that is standard for the currency\n\t * in question unless overridden in the options to the constructor.\n\t *\n\t * @return {number} the minimum number of fractional digits this\n\t * formatter will format, or -1 for no minimum\n\t */\n\tgetMinFractionDigits: function () {\n\t\treturn typeof (this.minFractionDigits) !== 'undefined' ? this.minFractionDigits : -1;\n\t},\n\n\t/**\n\t * Returns the ISO 4217 code for the currency that this formatter formats.\n\t * IF the typeof this formatter is not \"currency\", then this method will\n\t * return undefined.\n\t *\n\t * @return {string} the ISO 4217 code for the currency that this formatter\n\t * formats, or undefined if this not a currency formatter\n\t */\n\tgetCurrency: function () {\n\t\treturn this.currencyInfo && this.currencyInfo.getCode();\n\t},\n\n\t/**\n\t * Returns the rounding mode set up in the constructor. The rounding mode\n\t * controls how numbers are rounded when the integral or fraction digits\n\t * of a number are limited.\n\t *\n\t * @return {string} the name of the rounding mode used in this formatter\n\t */\n\tgetRoundingMode: function () {\n\t\treturn this.roundingMode;\n\t},\n\n\t/**\n\t * If this formatter is a currency formatter, then the style determines how the\n\t * currency is denoted in the formatted output. This method returns the style\n\t * that this formatter will produce. (See the constructor comment for more about\n\t * the styles.)\n\t * @return {string} the name of the style this formatter will use to format\n\t * currency amounts, or \"undefined\" if this formatter is not a currency formatter\n\t */\n\tgetStyle: function () {\n\t\treturn this.style;\n\t}\n};\n\n/*\n * durfmt.js - Date formatter definition\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n!depends \nilibglobal.js \nlocale.js \ndate.js \nstrings.js \nresources.js \nlocaleinfo.js\nutil/jsutils.js\n*/\n\n// !data dateformats sysres\n// !resbundle sysres\n\n/**\n * @class\n * Create a new duration formatter instance. The duration formatter is immutable once\n * it is created, but can format as many different durations as needed with the same\n * options. Create different duration formatter instances for different purposes\n * and then keep them cached for use later if you have more than one duration to\n * format.<p>\n * \n * Duration formatters format lengths of time. The duration formatter is meant to format \n * durations of such things as the length of a song or a movie or a meeting, or the \n * current position in that song or movie while playing it. If you wish to format a \n * period of time that has a specific start and end date/time, then use a\n * [ilib.DateRngFmt] instance instead and call its format method.<p>\n *  \n * The options may contain any of the following properties:\n * \n * <ul>\n * <li><i>locale</i> - locale to use when formatting the duration. If the locale is\n * not specified, then the default locale of the app or web page will be used.\n * \n * <li><i>length</i> - Specify the length of the format to use. The length is the approximate size of the \n * formatted string.\n * \n * <ul>\n * <li><i>short</i> - use a short representation of the duration. This is the most compact format possible for the locale. eg. 1y 1m 1w 1d 1:01:01\n * <li><i>medium</i> - use a medium length representation of the duration. This is a slightly longer format. eg. 1 yr 1 mo 1 wk 1 dy 1 hr 1 mi 1 se\n * <li><i>long</i> - use a long representation of the duration. This is a fully specified format, but some of the textual \n * parts may still be abbreviated. eg. 1 yr 1 mo 1 wk 1 day 1 hr 1 min 1 sec\n * <li><i>full</i> - use a full representation of the duration. This is a fully specified format where all the textual \n * parts are spelled out completely. eg. 1 year, 1 month, 1 week, 1 day, 1 hour, 1 minute and 1 second\n * </ul>\n * \n * <li><i>style<i> - whether hours, minutes, and seconds should be formatted as a text string\n * or as a regular time as on a clock. eg. text is \"1 hour, 15 minutes\", whereas clock is \"1:15:00\". Valid\n * values for this property are \"text\" or \"clock\". Default if this property is not specified\n * is \"text\".\n * \n *<li><i>useNative</i> - the flag used to determaine whether to use the native script settings \n * for formatting the numbers .\n * \n * <li><i>onLoad</i> - a callback function to call when the format data is fully \n * loaded. When the onLoad option is given, this class will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the \n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two. \n * \n * <li>sync - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while.\n *  \n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * <p>\n * \n * Depends directive: !depends durfmt.js\n * \n * @constructor\n * @param {?Object} options options governing the way this date formatter instance works\n */\nilib.DurFmt = function(options) {\n\tvar sync = true;\n\tvar loadParams = undefined;\n\t\n\tthis.locale = new ilib.Locale();\n\tthis.length = \"short\";\n\tthis.style = \"text\";\n\t\n\tif (options) {\n\t\tif (options.locale) {\n\t\t\tthis.locale = (typeof(options.locale) === 'string') ? new ilib.Locale(options.locale) : options.locale;\n\t\t}\n\t\t\n\t\tif (options.length) {\n\t\t\tif (options.length === 'short' ||\n\t\t\t\toptions.length === 'medium' ||\n\t\t\t\toptions.length === 'long' ||\n\t\t\t\toptions.length === 'full') {\n\t\t\t\tthis.length = options.length;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (options.style) {\n\t\t\tif (options.style === 'text' || options.style === 'clock') {\n\t\t\t\tthis.style = options.style;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tsync = (options.sync == true);\n\t\t}\n\t\t\n\t\tif (typeof(options.useNative) === 'boolean') {\n\t\t\tthis.useNative = options.useNative;\n\t\t}\n\t\t\n\t\tloadParams = options.loadParams;\n\t}\n\t\n\tnew ilib.ResBundle({\n\t\tlocale: this.locale,\n\t\tname: \"sysres\",\n\t\tsync: sync,\n\t\tloadParams: loadParams,\n\t\tonLoad: ilib.bind(this, function (sysres) {\n\t\t\tswitch (this.length) {\n\t\t\t\tcase 'short':\n\t\t\t\t\tthis.components = {\n\t\t\t\t\t\tyear: sysres.getString(\"#{num}y\"),\n\t\t\t\t\t\tmonth: sysres.getString(\"#{num}m\", \"durationShortMonths\"),\n\t\t\t\t\t\tweek: sysres.getString(\"#{num}w\"),\n\t\t\t\t\t\tday: sysres.getString(\"#{num}d\"),\n\t\t\t\t\t\thour: sysres.getString(\"#{num}h\"),\n\t\t\t\t\t\tminute: sysres.getString(\"#{num}m\", \"durationShortMinutes\"),\n\t\t\t\t\t\tsecond: sysres.getString(\"#{num}s\"),\n\t\t\t\t\t\tmillisecond: sysres.getString(\"#{num}m\", \"durationShortMillis\"),\n\t\t\t\t\t\tseparator: sysres.getString(\" \", \"separatorShort\"),\n\t\t\t\t\t\tfinalSeparator: \"\" // not used at this length\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'medium':\n\t\t\t\t\tthis.components = {\n\t\t\t\t\t\tyear: sysres.getString(\"1#1 yr|#{num} yrs\", \"durationMediumYears\"),\n\t\t\t\t\t\tmonth: sysres.getString(\"1#1 mo|#{num} mos\"),\n\t\t\t\t\t\tweek: sysres.getString(\"1#1 wk|#{num} wks\", \"durationMediumWeeks\"),\n\t\t\t\t\t\tday: sysres.getString(\"1#1 dy|#{num} dys\"),\n\t\t\t\t\t\thour: sysres.getString(\"1#1 hr|#{num} hrs\", \"durationMediumHours\"),\n\t\t\t\t\t\tminute: sysres.getString(\"1#1 mi|#{num} min\"),\n\t\t\t\t\t\tsecond: sysres.getString(\"1#1 se|#{num} sec\"),\n\t\t\t\t\t\tmillisecond: sysres.getString(\"#{num} ms\"),\n\t\t\t\t\t\tseparator: sysres.getString(\" \", \"separatorMedium\"),\n\t\t\t\t\t\tfinalSeparator: \"\" // not used at this length\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'long':\n\t\t\t\t\tthis.components = {\n\t\t\t\t\t\tyear: sysres.getString(\"1#1 yr|#{num} yrs\"),\n\t\t\t\t\t\tmonth: sysres.getString(\"1#1 mon|#{num} mons\"),\n\t\t\t\t\t\tweek: sysres.getString(\"1#1 wk|#{num} wks\"),\n\t\t\t\t\t\tday: sysres.getString(\"1#1 day|#{num} days\", \"durationLongDays\"),\n\t\t\t\t\t\thour: sysres.getString(\"1#1 hr|#{num} hrs\"),\n\t\t\t\t\t\tminute: sysres.getString(\"1#1 min|#{num} min\"),\n\t\t\t\t\t\tsecond: sysres.getString(\"1#1 sec|#{num} sec\"),\n\t\t\t\t\t\tmillisecond: sysres.getString(\"#{num} ms\"),\n\t\t\t\t\t\tseparator: sysres.getString(\", \", \"separatorLong\"),\n\t\t\t\t\t\tfinalSeparator: \"\" // not used at this length\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'full':\n\t\t\t\t\tthis.components = {\n\t\t\t\t\t\tyear: sysres.getString(\"1#1 year|#{num} years\"),\n\t\t\t\t\t\tmonth: sysres.getString(\"1#1 month|#{num} months\"),\n\t\t\t\t\t\tweek: sysres.getString(\"1#1 week|#{num} weeks\"),\n\t\t\t\t\t\tday: sysres.getString(\"1#1 day|#{num} days\"),\n\t\t\t\t\t\thour: sysres.getString(\"1#1 hour|#{num} hours\"),\n\t\t\t\t\t\tminute: sysres.getString(\"1#1 minute|#{num} minutes\"),\n\t\t\t\t\t\tsecond: sysres.getString(\"1#1 second|#{num} seconds\"),\n\t\t\t\t\t\tmillisecond: sysres.getString(\"1#1 millisecond|#{num} milliseconds\"),\n\t\t\t\t\t\tseparator: sysres.getString(\", \", \"separatorFull\"),\n\t\t\t\t\t\tfinalSeparator: sysres.getString(\" and \", \"finalSeparatorFull\")\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.style === 'clock') {\n\t\t\t\tnew ilib.DateFmt({\n\t\t\t\t\tlocale: this.locale,\n\t\t\t\t\ttype: \"time\",\n\t\t\t\t\ttime: \"ms\",\n\t\t\t\t\tsync: sync,\n\t\t\t\t\tloadParams: loadParams,\n\t\t\t\t\tuseNative: this.useNative,\n\t\t\t\t\tonLoad: ilib.bind(this, function (fmtMS) {\n\t\t\t\t\t\tthis.timeFmtMS = fmtMS;\n\t\t\t\t\t\tnew ilib.DateFmt({\n\t\t\t\t\t\t\tlocale: this.locale,\n\t\t\t\t\t\t\ttype: \"time\",\n\t\t\t\t\t\t\ttime: \"hm\",\n\t\t\t\t\t\t\tsync: sync,\n\t\t\t\t\t\t\tloadParams: loadParams,\n\t\t\t\t\t\t\tuseNative: this.useNative,\n\t\t\t\t\t\t\tonLoad: ilib.bind(this, function (fmtHM) {\n\t\t\t\t\t\t\t\tthis.timeFmtHM = fmtHM;\t\t\n\t\t\t\t\t\t\t\tnew ilib.DateFmt({\n\t\t\t\t\t\t\t\t\tlocale: this.locale,\n\t\t\t\t\t\t\t\t\ttype: \"time\",\n\t\t\t\t\t\t\t\t\ttime: \"hms\",\n\t\t\t\t\t\t\t\t\tsync: sync,\n\t\t\t\t\t\t\t\t\tloadParams: loadParams,\n\t\t\t\t\t\t\t\t\tuseNative: this.useNative,\n\t\t\t\t\t\t\t\t\tonLoad: ilib.bind(this, function (fmtHMS) {\n\t\t\t\t\t\t\t\t\t\tthis.timeFmtHMS = fmtHMS;\t\t\n\n\t\t\t\t\t\t\t\t\t\t// munge with the template to make sure that the hours are not formatted mod 12\n\t\t\t\t\t\t\t\t\t\tthis.timeFmtHM.template = this.timeFmtHM.template.replace(/hh?/, 'H');\n\t\t\t\t\t\t\t\t\t\tthis.timeFmtHM.templateArr = this.timeFmtHM._tokenize(this.timeFmtHM.template);\n\t\t\t\t\t\t\t\t\t\tthis.timeFmtHMS.template = this.timeFmtHMS.template.replace(/hh?/, 'H');\n\t\t\t\t\t\t\t\t\t\tthis.timeFmtHMS.templateArr = this.timeFmtHMS._tokenize(this.timeFmtHMS.template);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tthis._init(this.timeFmtHM.locinfo, options && options.onLoad);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnew ilib.LocaleInfo(this.locale, {\n\t\t\t\tsync: sync,\n\t\t\t\tloadParams: loadParams,\n\t\t\t\tonLoad: ilib.bind(this, function (li) {\n\t\t\t\t\tthis._init(li, options && options.onLoad);\n\t\t\t\t})\n\t\t\t});\n\t\t})\n\t});\n};\n\n/**\n * @private\n * @static\n */\nilib.DurFmt.complist = {\n\t\"text\": [\"year\", \"month\", \"week\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n\t\"clock\": [\"year\", \"month\", \"week\", \"day\"]\n};\n\n/**\n * @private\n */\nilib.DurFmt.prototype._mapDigits = function(str) {\n\tif (this.useNative && this.digits) {\n\t\treturn ilib.mapString(str.toString(), this.digits);\n\t}\n\treturn str;\n};\n\n/**\n * @private\n * @param {ilib.LocaleInfo} locinfo\n * @param {function(ilib.DurFmt)|undefined} onLoad\n */\nilib.DurFmt.prototype._init = function(locinfo, onLoad) {\n\tvar digits;\n\tif (typeof(this.useNative) === 'boolean') {\n\t\t// if the caller explicitly said to use native or not, honour that despite what the locale data says...\n\t\tif (this.useNative) {\n\t\t\tdigits = locinfo.getNativeDigits();\n\t\t\tif (digits) {\n\t\t\t\tthis.digits = digits;\n\t\t\t}\n\t\t}\n\t} else if (locinfo.getDigitsStyle() === \"native\") {\n\t\t// else if the locale usually uses native digits, then use them \n\t\tdigits = locinfo.getNativeDigits();\n\t\tif (digits) {\n\t\t\tthis.useNative = true;\n\t\t\tthis.digits = digits;\n\t\t}\n\t} // else use western digits always\n\n\tif (typeof(onLoad) === 'function') {\n\t\tonLoad(this);\n\t}\n};\n\n/**\n * Format a duration according to the format template of this formatter instance.<p>\n * \n * The components parameter should be an object that contains any or all of these \n * numeric properties:\n * \n * <ul>\n * <li>year\n * <li>month\n * <li>week\n * <li>day\n * <li>hour\n * <li>minute\n * <li>second\n * </ul>\n * <p>\n *\n * When a property is left out of the components parameter or has a value of 0, it will not\n * be formatted into the output string, except for times that include 0 minutes and 0 seconds.\n * \n * This formatter will not ensure that numbers for each component property is within the\n * valid range for that component. This allows you to format durations that are longer\n * than normal range. For example, you could format a duration has being \"33 hours\" rather\n * than \"1 day, 9 hours\".\n * \n * @param {Object} components date/time components to be formatted into a duration string\n * @return {ilib.String} a string with the duration formatted according to the style and \n * locale set up for this formatter instance. If the components parameter is empty or \n * undefined, an empty string is returned.\n */\nilib.DurFmt.prototype.format = function (components) {\n\tvar i, list, temp, fmt, secondlast = true, str = \"\";\n\t\n\tlist = ilib.DurFmt.complist[this.style];\n\t//for (i = 0; i < list.length; i++) {\n\tfor (i = list.length-1; i >= 0; i--) {\n\t\t//console.log(\"Now dealing with \" + list[i]);\n\t\tif (typeof(components[list[i]]) !== 'undefined' && components[list[i]] != 0) {\n\t\t\tif (str.length > 0) {\n\t\t\t\tstr = ((this.length === 'full' && secondlast) ? this.components.finalSeparator : this.components.separator) + str;\n\t\t\t\tsecondlast = false;\n\t\t\t}\n\t\t\tstr = this.components[list[i]].formatChoice(components[list[i]], {num: this._mapDigits(components[list[i]])}) + str;\n\t\t}\n\t}\n\n\tif (this.style === 'clock') {\n\t\tif (typeof(components.hour) !== 'undefined') {\n\t\t\tfmt = (typeof(components.second) !== 'undefined') ? this.timeFmtHMS : this.timeFmtHM;\n\t\t} else {\n\t\t\tfmt = this.timeFmtMS;\n\t\t}\n\t\t\t\t\n\t\tif (str.length > 0) {\n\t\t\tstr += this.components.separator;\n\t\t}\n\t\tstr += fmt._formatTemplate(components, fmt.templateArr);\n\t}\n\t\n\treturn new ilib.String(str);\n};\n\n/**\n * Return the locale that was used to construct this duration formatter object. If the\n * locale was not given as parameter to the constructor, this method returns the default\n * locale of the system.\n * \n * @return {ilib.Locale} locale that this duration formatter was constructed with\n */\nilib.DurFmt.prototype.getLocale = function () {\n\treturn this.locale;\n};\n\n/**\n * Return the length that was used to construct this duration formatter object. If the\n * length was not given as parameter to the constructor, this method returns the default\n * length. Valid values are \"short\", \"medium\", \"long\", and \"full\".\n * \n * @return {string} length that this duration formatter was constructed with\n */\nilib.DurFmt.prototype.getLength = function () {\n\treturn this.length;\n};\n\n/**\n * Return the style that was used to construct this duration formatter object. Returns\n * one of \"text\" or \"clock\".\n * \n * @return {string} style that this duration formatter was constructed with\n */\nilib.DurFmt.prototype.getStyle = function () {\n\treturn this.style;\n};\n\n/*\n * scriptinfo.js - information about scripts\n * \n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends ilibglobal.js\n\n// !data scripts\n\n/**\n * @class\n * Create a new script info instance. This class encodes information about\n * scripts, which are sets of characters used in a writing system.<p>\n * \n * The options object may contain any of the following properties:\n * \n * <ul>\n * <li><i>onLoad</i> - a callback function to call when the script info object is fully \n * loaded. When the onLoad option is given, the script info object will attempt to\n * load any missing locale data using the ilib loader callback.\n * When the constructor is done (even if the data is already preassembled), the \n * onLoad function is called with the current instance as a parameter, so this\n * callback can be used with preassembled or dynamic loading or a mix of the two.\n * \n * <li><i>sync</i> - tell whether to load any missing locale data synchronously or \n * asynchronously. If this option is given as \"false\", then the \"onLoad\"\n * callback must be given, as the instance returned from this constructor will\n * not be usable for a while. \n *\n * <li><i>loadParams</i> - an object containing parameters to pass to the \n * loader callback function when locale data is missing. The parameters are not\n * interpretted or modified in any way. They are simply passed along. The object \n * may contain any property/value pairs as long as the calling code is in\n * agreement with the loader callback function as to what those parameters mean.\n * </ul>\n * \n * Depends directive: !depends scriptinfo.js\n * \n * @constructor\n * @param {string} script The ISO 15924 4-letter identifier for the script\n * @param {Object} options parameters to initialize this matcher \n */\nilib.ScriptInfo = function(script, options) {\n\tvar sync = true,\n\t    loadParams = undefined;\n\t\n\tthis.script = script;\n\t\n\tif (options) {\n\t\tif (typeof(options.sync) !== 'undefined') {\n\t\t\tsync = (options.sync == true);\n\t\t}\n\t\t\n\t\tif (typeof(options.loadParams) !== 'undefined') {\n\t\t\tloadParams = options.loadParams;\n\t\t}\n\t}\n\n\tif (!ilib.ScriptInfo.cache) {\n\t\tilib.ScriptInfo.cache = {};\n\t}\n\n\tif (!ilib.data.scripts) {\n\t\tilib.loadData({\n\t\t\tobject: ilib.ScriptInfo, \n\t\t\tlocale: \"-\", \n\t\t\tname: \"scripts.json\", \n\t\t\tsync: sync, \n\t\t\tloadParams: loadParams, \n\t\t\tcallback: ilib.bind(this, function (info) {\n\t\t\t\tif (!info) {\n\t\t\t\t\tinfo = {\"Latn\":{\"nb\":215,\"nm\":\"Latin\",\"lid\":\"Latin\",\"rtl\":false,\"ime\":false,\"casing\":true}};\n\t\t\t\t\tvar spec = this.locale.getSpec().replace(/-/g, \"_\");\n\t\t\t\t\tilib.ScriptInfo.cache[spec] = info;\n\t\t\t\t}\n\t\t\t\tilib.data.scripts = info;\n\t\t\t\tthis.info = script && ilib.data.scripts[script];\n\t\t\t\tif (options && typeof(options.onLoad) === 'function') {\n\t\t\t\t\toptions.onLoad(this);\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t} else {\n\t\tthis.info = ilib.data.scripts[script];\n\t}\n\n};\n\n/**\n * Return an array of all ISO 15924 4-letter identifier script identifiers that\n * this copy of ilib knows about.\n * @static\n * @return {Array.<string>} an array of all script identifiers that this copy of\n * ilib knows about\n */\nilib.ScriptInfo.getAllScripts = function() {\n\tvar ret = [],\n\t\tscript = undefined,\n\t\tscripts = ilib.data.scripts;\n\t\n\tfor (script in scripts) {\n\t\tif (script && scripts[script]) {\n\t\t\tret.push(script);\n\t\t}\n\t}\n\t\n\treturn ret;\n};\n\nilib.ScriptInfo.prototype = {\n\t/**\n\t * Return the 4-letter ISO 15924 identifier associated\n\t * with this script.\n\t * @return {string} the 4-letter ISO code for this script\n\t */\n\tgetCode: function () {\n\t\treturn this.info && this.script;\n\t},\n\t\n\t/**\n\t * Get the ISO 15924 code number associated with this\n\t * script.\n\t * \n\t * @return {number} the ISO 15924 code number\n\t */\n\tgetCodeNumber: function () {\n\t\treturn this.info && this.info.nb || 0;\n\t},\n\t\n\t/**\n\t * Get the name of this script in English.\n\t * \n\t * @return {string} the name of this script in English\n\t */\n\tgetName: function () {\n\t\treturn this.info && this.info.nm;\n\t},\n\t\n\t/**\n\t * Get the long identifier assciated with this script.\n\t * \n\t * @return {string} the long identifier of this script\n\t */\n\tgetLongCode: function () {\n\t\treturn this.info && this.info.lid;\n\t},\n\t\n\t/**\n\t * Return the usual direction that text in this script is written\n\t * in. Possible return values are \"rtl\" for right-to-left,\n\t * \"ltr\" for left-to-right, and \"ttb\" for top-to-bottom.\n\t * \n\t * @return {string} the usual direction that text in this script is\n\t * written in\n\t */\n\tgetScriptDirection: function() {\n\t\treturn (this.info && typeof(this.info.rtl) !== 'undefined' && this.info.rtl) ? \"rtl\" : \"ltr\";\n\t},\n\t\n\t/**\n\t * Return true if this script typically requires an input method engine\n\t * to enter its characters.\n\t * \n\t * @return {boolean} true if this script typically requires an IME\n\t */\n\tgetNeedsIME: function () {\n\t\treturn this.info && this.info.ime ? true : false; // converts undefined to false\n\t},\n\t\n\t/**\n\t * Return true if this script uses lower- and upper-case characters.\n\t * \n\t * @return {boolean} true if this script uses letter case\n\t */\n\tgetCasing: function () {\n\t\treturn this.info && this.info.casing ? true : false; // converts undefined to false\n\t}\n};\n/*\n * casemapper.js - define upper- and lower-case mapper\n * \n * Copyright © 2014-2015, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// !depends locale.js util/utils.js\n\n/**\n * @class\n * Create a new string mapper instance that maps strings to upper or\n * lower case. This mapping will work for any string as characters \n * that have no case will be returned unchanged.<p>\n * \n * The options may contain any of the following properties:\n * \n * <ul>\n * <li><i>locale</i> - locale to use when loading the mapper. Some maps are \n * locale-dependent, and this locale selects the right one. Default if this is\n * not specified is the current locale.\n * \n * <li><i>direction</i> - \"toupper\" for upper-casing, or \"tolower\" for lower-casing.\n * Default if not specified is \"toupper\".\n * </ul>\n * \n * Depends directive: !depends casemapper.js\n * \n * @constructor\n * @param {Object=} options options to initialize this mapper \n */\nilib.CaseMapper = function (options) {\n\tthis.up = true;\n\tthis.locale = new ilib.Locale();\n\t\n\tif (options) {\n\t\tif (typeof(options.locale) !== 'undefined') {\n\t\t\tthis.locale = (typeof(options.locale) === 'string') ? new ilib.Locale(options.locale) : options.locale;\n\t\t}\n\t\t\n\t\tthis.up = (!options.direction || options.direction === \"toupper\");\n\t}\n\n\tswitch (this.locale.getLanguage()) {\n\t\tcase \"az\":\n\t\tcase \"tr\":\n\t\tcase \"crh\":\n\t\tcase \"kk\":\n\t\tcase \"krc\":\n\t\tcase \"tt\":\n\t\t\tthis.mapData = this.up ?  {\n\t\t\t\t\"i\": \"İ\",\n\t\t\t\t\"ı\": \"I\"\n\t\t\t} : {\n\t\t\t\t\"İ\": \"i\",\n\t\t\t\t\"I\": \"ı\"\n\t\t\t};\n\t\t\tthis.mapper = this._charMapper;\n\t\t\tbreak;\n\t\tcase \"de\":\n\t\t\tif (this.up) {\n\t\t\t\tthis.mapper = this._charMapper;\n\t\t\t\tthis.mapData = {\n\t\t\t\t\t\"ß\": \"SS\"\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"fr\":\n\t\t\tif (this.up && this.locale.getRegion() !== \"CA\") {\n\t\t\t\tthis.mapData = {\n\t\t\t\t\t'à': 'A',\n\t\t\t\t\t'á': 'A',\n\t\t\t\t\t'â': 'A',\n\t\t\t\t\t'ã': 'A',\n\t\t\t\t\t'ä': 'A',\n\t\t\t\t\t'ç': 'C',\n\t\t\t\t\t'è': 'E',\n\t\t\t\t\t'é': 'E',\n\t\t\t\t\t'ê': 'E',\n\t\t\t\t\t'ë': 'E',\n\t\t\t\t\t'ì': 'I',\n\t\t\t\t\t'í': 'I',\n\t\t\t\t\t'î': 'I',\n\t\t\t\t\t'ï': 'I',\n\t\t\t\t\t'ñ': 'N',\n\t\t\t\t\t'ò': 'O',\n\t\t\t\t\t'ó': 'O',\n\t\t\t\t\t'ô': 'O',\n\t\t\t\t\t'ö': 'O',\n\t\t\t\t\t'ù': 'U',\n\t\t\t\t\t'ú': 'U',\n\t\t\t\t\t'û': 'U',\n\t\t\t\t\t'ü': 'U'\n\t\t\t\t};\n\t\t\t\tthis.mapper = this._charMapper;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"el\":\n\t\t\tthis.mapData = this.up ? {\n\t\t\t\t'ΐ': 'Ι',\n\t\t\t\t'ά': 'Α',\n\t\t\t\t'έ': 'Ε',\n\t\t\t\t'ή': 'Η',\n\t\t\t\t'ί': 'Ι',\n\t\t\t\t'ΰ': 'Υ',\n\t\t\t\t'ϊ': 'Ι',\n\t\t\t\t'ϋ': 'Υ',\n\t\t\t\t'ό': 'Ο',\n\t\t\t\t'ύ': 'Υ',\n\t\t\t\t'ώ': 'Ω'\t\n\t\t\t} : {};\n\t\t\tthis.mapper = this._charMapper;\n\t\t\tbreak;\n\t\tcase \"abq\":\n\t\tcase \"ady\":\n\t\tcase \"av\":\n\t\tcase \"ce\":\n\t\tcase \"dar\":\n\t\tcase \"inh\":\n\t\tcase \"kbd\":\n\t\tcase \"lbe\":\n\t\tcase \"lez\":\n\t\tcase \"tab\":\n\t\tcase \"ru\":\n\t\t\tif (!this.up) {\n\t\t\t\tthis.mapData = {\n\t\t\t\t\t'Ӏ': 'Ӏ'\t\n\t\t\t\t};\n\t\t\t\tthis.mapper = this._charMapper;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\t\n\tif (!this.mapper) {\n\t\tthis.mapper = function(string) {\n\t\t\treturn this.up ? string.toUpperCase() : string.toLowerCase();\n\t\t};\n\t}\n};\n\nilib.CaseMapper.prototype = {\n\t/** \n\t * @private \n\t */\n\t_charMapper: function(string) {\n\t\tvar input;\n\t\tif (!string) {\n\t\t\treturn string;\n\t\t}\n\t\tif (typeof(string) === 'string') {\n\t\t\tinput = new ilib.String(string);\n\t\t} else {\n\t\t\tinput = string.toString();\n\t\t}\n\t\tvar ret = \"\";\n\t\tvar it = input.charIterator();\n\t\tvar c;\n\t\t\n\t\twhile (it.hasNext()) {\n\t\t\tc = it.next();\n\t\t\tif (!this.up && c === 'Σ') {\n\t\t\t\tif (it.hasNext()) {\n\t\t\t\t\tc = it.next();\n\t\t\t\t\tvar code = c.charCodeAt(0);\n\t\t\t\t\t// if the next char is not a greek letter, this is the end of the word so use the\n\t\t\t\t\t// final form of sigma. Otherwise, use the mid-word form.\n\t\t\t\t\tret += ((code < 0x0388 && code !== 0x0386) || code > 0x03CE) ? 'ς' : 'σ';\n\t\t\t\t\tret += c.toLowerCase();\n\t\t\t\t} else {\n\t\t\t\t\t// no next char means this is the end of the word, so use the final form of sigma\n\t\t\t\t\tret += 'ς';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.mapData[c]) {\n\t\t\t\t\tret += this.mapData[c];\n\t\t\t\t} else {\n\t\t\t\t\tret += this.up ? c.toUpperCase() : c.toLowerCase();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ret;\n\t},\n\n\t/**\n\t * Return the locale that this mapper was constructed with. \n\t * @returns {ilib.Locale} the locale that this mapper was constructed with\n\t */\n\tgetLocale: function () {\n\t\treturn this.locale;\n\t},\n\t\t\n\t/**\n\t * Map a string to lower case in a locale-sensitive manner.\n\t * \n\t * @param {string|undefined} string\n\t * @return {string|undefined}\n\t */\n\tmap: function (string) {\n\t\treturn this.mapper(string);\n\t}\n};\n/**\n * @license\n * Copyright © 2012-2014, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * ilib-standard-inc.js - metafile that includes a reasonable set of other js files\n */\n\n/* !depends\nilibglobal.js\ndaterangefmt.js\ndate.js\ncalendar/gregorian.js\ncalendar/gregoriandate.js\ncalendar/thaisolar.js\ncalendar/thaisolardate.js\ncalendar/persianastro.js\ncalendar/persianastrodate.js\nnumprs.js\nnumfmt.js\njulianday.js\ndatefmt.js\ncalendar.js\nutil/utils.js\nlocale.js\nstrings.js\ndurfmt.js\nresources.js\nlocaleinfo.js\ndaterangefmt.js\nscriptinfo.js\nmaps/casemapper.js\n*/\n","var PathResolverFactory = require('./PathResolverFactory');\n\nmodule.exports = new PathResolverFactory();","'use strict';\n\nexports = module.exports = require('./lib/options');\nexports.version = '2.6.0-pre';","/*\n * zoneinfo.js - represent a binary zone info file\n *\n * Copyright © 2014 LG Electronics, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * The portion of this code that parses the zone info file format is derived\n * from the code in the node-zoneinfo project by Gregory McWhirter licensed\n * under the MIT license:\n *\n * Copyright (c) 2013 Gregory McWhirter\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject\n * to the following conditions:\n\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nvar\n\tPackedBuffer = require(\"./packedbuffer.js\");\n\nvar _platform = \"unknown\";\n\n(function () {\n\tif (typeof(enyo) !== 'undefined') {\n\t\t_platform = \"enyo\";\n\t} else if (typeof(environment) !== 'undefined') {\n\t\t_platform = \"rhino\";\n\t} else if (typeof(process) !== 'undefined' || typeof(require) !== 'undefined') {\n\t\t_platform = \"nodejs\";\n\t} else if (typeof(window) !== 'undefined') {\n\t\t_platform = (typeof(PalmSystem) !== 'undefined') ? \"webos\" : \"browser\";\n\t}\n})();\n\n/**\n * @constructor\n * Represents a binary zone info file of the sort that the Unix Zone Info Compiler\n * produces.\n * @param {string} path path to the file to be loaded\n * @param {number} year year of the zone info rules needed\n */\nvar ZoneInfoFile = function (path) {\n\tvar that = this;\n\tswitch (_platform) {\n\t\t/*\n\t\tUncomment and use this when enyo works for binary load.\n\t\tcase \"enyo\":\n\t\t\tvar ajax = new enyo.Ajax({\n\t\t\t\txhrFields: {\n\t\t\t\t\tresponseType:\"arraybuffer\"\n\t\t\t\t},\n\t\t\t\tcacheBust: false,\n\t\t\t\tsync: true,\n\t\t\t\thandleAs: \"binary\",\n\t\t\t\turl: \"file://\" + path\n\t\t\t});\n\t\t\tajax.response(this, function(s, r) {\n\t\t\t\tvar byteArray = new Uint8Array(r);\n\t\t\t\t// console.log(\"ZoneInfoFile bytes received: \" + byteArray.length);\n\t\t\t\tthat._parseInfo(byteArray);\n\t\t\t});\n\t\t\t//ajax.error(this, function(s, r) {\n\t\t\t//\tconsole.log(\"ZoneInfoFile: failed to load files \" + JSON.stringify(s) + \" \" + r);\n\t\t\t//});\n\t\t\tajax.go();\n\t\t\tbreak;\n\t\t*/\n\t\t\n\t\tcase \"nodejs\":\n\t\t\t// console.log(\"ZoneInfoFile: loading zoneinfo path \" + path + \"\\n\");\n\t\t\tvar fs = require(\"fs\");\n\t\t\tvar bytes = new Buffer(fs.readFileSync(path));\n\t\t\tvar byteArray = new Uint8Array(bytes);\n\t\t\tthis._parseInfo(byteArray);\n\t\t\tbreak;\n\t\t\t\n\t\tdefault:\n\t\t\t// use normal web techniques\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\treq.open(\"GET\", \"file:\" + path, false);\n\t\t\treq.responseType = \"arraybuffer\";\n\t\t\treq.onload = function(e) {\n\t\t\t\tvar byteArray = new Uint8Array(req.response);\n\t\t\t\t// console.log(\"ZoneInfoFile bytes received: \" + byteArray.length);\n\t\t\t\tthat._parseInfo(byteArray);\n\t\t\t};\n\t\t\treq.onerror = function(e) {\n\t\t\t\tthrow \"Cannot load file \" + path;\n\t\t\t};\n\t\t\treq.send();\n\t\t\tbreak;\n\t}\n};\n\n/**\n * @private\n * Parse the binary buffer to find the zone info\n * @param buffer\n */\nZoneInfoFile.prototype._parseInfo = function(buffer) {\n\tvar packed = new PackedBuffer(buffer);\n\n\t// The time zone information files used by tzset(3)\n\t// begin with the magic characters \"TZif\" to identify\n\t// them as time zone information files, followed by\n\t// sixteen bytes reserved for future use, followed by\n\t// six four-byte values of type long, written in a\n\t// ''standard'' byte order (the high-order byte\n\t// of the value is written first).\n\tif (packed.getString(4) != \"TZif\") {\n\t\tthrow \"file format not recognized\";\n\t} else {\n\t\t// ignore 16 bytes\n\t\tpacked.skip(16);\n\n\t\t// The number of UTC/local indicators stored in the file.\n\t\tvar tzh_ttisgmtcnt = packed.getLong();\n\t\t// The number of standard/wall indicators stored in the file.\n\t\tvar tzh_ttisstdcnt = packed.getLong();\n\t\t// The number of leap seconds for which data is stored in the file.\n\t\tvar tzh_leapcnt = packed.getLong();\n\t\t// The number of \"transition times\" for which data is stored in the file.\n\t\tvar tzh_timecnt = packed.getLong();\n\t\t// The number of \"local time types\" for which data is stored in the file (must not be zero).\n\t\tvar tzh_typecnt = packed.getLong();\n\t\t// The number of characters of \"time zone abbreviation strings\" stored in the file.\n\t\tvar tzh_charcnt = packed.getLong();\n\n\t\tthis.transitionTimes = tzh_timecnt ? packed.getLongs(tzh_timecnt) : [];\n\n\t\tthis.transitionTimes = this.transitionTimes.map(function (item) {\n\t\t\treturn item * 1000;\n\t\t});\n\n\t\t// these are indexes into the zonesInfo that correspond to each transition time\n\t\tthis.ruleIndex = tzh_timecnt ? packed.getUnsignedBytes(tzh_timecnt) : [];\n\n\t\tthis.zoneInfo = [];\n\t\tfor (var i = 0; i < tzh_typecnt; i++) {\n\t\t\tthis.zoneInfo.push({\n\t\t\t\toffset: Math.floor(packed.getLong()/60),  // offset in seconds, so convert to minutes\n\t\t\t\tisdst: !!packed.getByte(),\n\t\t\t\tabbreviationIndex: packed.getByte()\n\t\t\t});\n\t\t}\n\n\t\tvar allAbbreviations = packed.getString(tzh_charcnt);\n\n\t\tfor (var i = 0; i < tzh_typecnt; i++) {\n\t\t\tvar abbreviation = allAbbreviations.substring(this.zoneInfo[i].abbreviationIndex);\n\t\t\tthis.zoneInfo[i].abbreviation = abbreviation.substring(0, abbreviation.indexOf('\\x00'));\n\t\t}\n\n\t\t// ignore the leap seconds\n\t\tif (tzh_leapcnt) {\n\t\t\tpacked.skip(tzh_leapcnt * 2);\n\t\t}\n\n\t\t// skip the standard/wall time indicators\n\t\tif (tzh_ttisstdcnt) {\n\t\t\tpacked.skip(tzh_ttisstdcnt);\n\t\t}\n\n\t\t// ignore the UTC/local time indicators -- everything should be UTC\n\t\tif (tzh_ttisgmtcnt) {\n\t\t\tpacked.skip(tzh_ttisgmtcnt);\n\t\t}\n\n\t\t// finished reading\n\n\t\t// Replace ttinfo indexes for ttinfo objects.\n\t\tvar that = this;\n\t\tthis.ruleIndex = this.ruleIndex.map(function (item) {\n\t\t\treturn {\n\t\t\t\toffset: that.zoneInfo[item].offset,\n\t\t\t\tisdst: that.zoneInfo[item].isdst,\n\t\t\t\tabbreviation: that.zoneInfo[item].abbreviation\n\t\t\t};\n\t\t});\n\n\t\t// calculate the dst savings for each daylight time\n\t\tfor (var i = 0; i < tzh_timecnt; i++) {\n\t\t\tif (i > 0 && this.ruleIndex[i].isdst) {\n\t\t\t\tthis.ruleIndex[i].savings = this.ruleIndex[i].offset - this.ruleIndex[i-1].offset;\n\t\t\t}\n\t\t}\n\n\t\t// Set standard, dst, and before ttinfos. before will be\n\t\t// used when a given time is before any transitions,\n\t\t// and will be set to the first non-dst ttinfo, or to\n\t\t// the first dst, if all of them are dst.\n\t\tif (!this.transitionTimes.length) {\n\t\t\tthis.standardTime = this.zoneInfo[0];\n\t\t} else {\n\t\t\tfor (var j = tzh_timecnt - 1; j > -1; j--) {\n\t\t\t\tvar tti = this.ruleIndex[j];\n\t\t\t\tif (!this.standardTime && !tti.isdst) {\n\t\t\t\t\tthis.standardTime = tti;\n\t\t\t\t} else if (!this.daylightTime && tti.isdst) {\n\t\t\t\t\tthis.daylightTime = tti;\n\t\t\t\t}\n\n\t\t\t\tif (this.daylightTime && this.standardTime)\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this.daylightTime && !this.standardTime) {\n\t\t\t\tthis.standardTime = this.daylightTime;\n\t\t\t}\n\n\t\t\tfor (var k = this.zoneInfo.length-1; k > 0; k--) {\n\t\t\t\tif (!this.zoneInfo[k].isdst) {\n\t\t\t\t\tthis.defaultTime = this.zoneInfo[k];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!this.defaultTime) {\n\t\t\tthis.defaultTime = this.zoneInfo[this.zoneInfo.length-1];\n\t\t}\n\t}\n};\n\n/**\n * Binary search a sorted array of numbers for a particular target value.\n * If the exact value is not found, it returns the index of the largest\n * entry that is smaller than the given target value.<p>\n *\n * @param {number} target element being sought\n * @param {Array} arr the array being searched\n * @return the index of the array into which the value would fit if\n * inserted, or -1 if given array is not an array or the target is not\n * a number\n */\nZoneInfoFile.prototype.bsearch = function(target, arr) {\n\tif (typeof(arr) === 'undefined' || !arr || typeof(target) === 'undefined' || target < arr[0]) {\n\t\treturn -1;\n\t}\n\n\t// greater than the end of the array\n\tif (target > arr[arr.length-1]) {\n\t\treturn arr.length - 1;\n\t}\n\n\tvar high = arr.length - 1,\n\t\tlow = 0,\n\t\tmid = 0,\n\t\tvalue;\n\n\twhile (low <= high) {\n\t\tmid = Math.floor((high+low)/2);\n\t\tvalue = arr[mid] - target;\n\t\tif (value > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else if (value < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\n\treturn high;\n};\n\n/**\n * Return whether or not this zone uses DST in the given year.\n *\n * @param {Date} date the Gregorian date to test\n * @returns {boolean} true if the zone uses DST in the given year\n */\nZoneInfoFile.prototype.usesDST = function(date) {\n\tvar thisYear = date.getTime();\n\tvar nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year\n\n\t// search for the zone that was effective Jan 1 of this year\n\t// to Jan 1 of next year, and if any of the infos is DST, then\n\t// this zone supports DST in the given year.\n\n\tvar index = this.bsearch(thisYear, this.transitionTimes);\n\tif (index !== -1) {\n\t\twhile (index < this.transitionTimes.length && this.transitionTimes[index] < nextYear) {\n\t\t\tif (this.ruleIndex[index++].isdst) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n};\n\n/**\n * Return the raw offset from UTC that this zone uses at the given time.\n *\n * @param {Date} date the Gregorian date to test\n * @returns {number} offset from from UTC in number of minutes. Negative\n * numbers are west of Greenwich, positive are east of Greenwich\n */\nZoneInfoFile.prototype.getRawOffset = function(date) {\n\tvar thisYear = date.getTime();\n\tvar nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year\n\n\tvar index = this.bsearch(thisYear, this.transitionTimes);\n\n\tvar offset = this.defaultTime.offset;\n\tif (index > -1) {\n\t\twhile (index < this.transitionTimes.length && this.ruleIndex[index].isdst && this.transitionTimes[index+1] < nextYear) {\n\t\t\tindex++;\n\t\t}\n\n\t\tif (index < this.transitionTimes.length && !this.ruleIndex[index].isdst) {\n\t\t\toffset = this.ruleIndex[index].offset;\n\t\t}\n\t}\n\n\treturn offset;\n};\n\n/**\n * If this zone uses DST in the given year, return the DST savings\n * in use. If the zone does not use DST in the given year, this\n * method will return 0.\n *\n * @param {Date} date the Gregorian date to test\n * @returns {number} number of minutes in DST savings if the zone\n * uses DST in the given year, or zero otherwise\n */\nZoneInfoFile.prototype.getDSTSavings = function(date) {\n\tvar thisYear = date.getTime();\n\tvar nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year\n\n\t// search for all transitions between now and one year \n\t// from now, and calculate the difference in DST (if any)\n\n\tvar index = this.bsearch(thisYear, this.transitionTimes);\n\tvar savings = 0;\n\tif (index > -1) {\n\t\twhile (index < this.transitionTimes.length && !this.ruleIndex[index].isdst && this.transitionTimes[index+1] < nextYear) {\n\t\t\tindex++;\n\t\t}\n\n\t\tif (index < this.transitionTimes.length && this.ruleIndex[index].isdst) {\n\t\t\tsavings = this.ruleIndex[index].savings;\n\t\t}\n\t}\n\n\treturn savings;\n};\n\n/**\n * Return the start date/time of DST if this zone uses\n * DST in the given year.\n *\n * @param {Date} date the Gregorian date to test\n * @returns {number} unixtime representation of the start\n * of DST in the given year, or -1 if the zone does not\n * use DST in the given year\n */\nZoneInfoFile.prototype.getDSTStartDate = function(date) {\n\tvar year = date.getFullYear();\n\tvar thisYear = new Date(year, 0, 1).getTime();\n\tvar nextYear = new Date(year+1, 0, 1).getTime();\n\n\t// search for all transitions between Jan 1 of this year\n\t// to Jan 1 of next year, and calculate the difference\n\t// in DST (if any)\n\n\tvar index = this.bsearch(thisYear, this.transitionTimes);\n\tvar startDate = -1;\n\tif (index > -1) {\n\t\tif (this.transitionTimes[index] < thisYear) {\n\t\t\tindex++; // start in this year instead of the previous year\n\t\t}\n\t\twhile (index < this.transitionTimes.length && !this.ruleIndex[index].isdst && this.transitionTimes[index+1] < nextYear) {\n\t\t\tindex++;\n\t\t}\n\n\t\tif (index < this.transitionTimes.length && this.ruleIndex[index].isdst) {\n\t\t\tstartDate = this.transitionTimes[index];\n\t\t}\n\t}\n\n\treturn startDate;\n};\n\n/**\n * Return the end date/time of DST if this zone uses\n * DST in the given year.\n *\n * @param {Date} date the Gregorian date to test\n * @returns {number} unixtime representation of the end\n * of DST in the given year, or -1 if the zone does not\n * use DST in the given year\n */\nZoneInfoFile.prototype.getDSTEndDate = function(date) {\n\tvar year = date.getFullYear();\n\tvar thisYear = new Date(year, 0, 1).getTime();\n\tvar nextYear = new Date(year+1, 0, 1).getTime();\n\n\t// search for all transitions between Jan 1 of this year\n\t// to Jan 1 of next year, and calculate the difference\n\t// in DST (if any)\n\n\tvar index = this.bsearch(thisYear, this.transitionTimes);\n\tvar endDate = -1;\n\tif (index > -1) {\n\t\tif (this.transitionTimes[index] < thisYear) {\n\t\t\tindex++; // start in this year instead of the previous year\n\t\t}\n\t\twhile (index < this.transitionTimes.length && this.ruleIndex[index].isdst && this.transitionTimes[index+1] < nextYear) {\n\t\t\tindex++;\n\t\t}\n\n\t\tif (index < this.transitionTimes.length && !this.ruleIndex[index].isdst) {\n\t\t\tendDate = this.transitionTimes[index];\n\t\t}\n\t}\n\n\treturn endDate;\n};\n\n/**\n * Return the abbreviation used by this zone in standard\n * time.\n *\n * @param {Date} date the Gregorian date to test\n * @returns {string} a string representing the abbreviation\n * used in this time zone during standard time\n */\nZoneInfoFile.prototype.getAbbreviation = function(date) {\n\tvar thisYear = date.getTime();\n\tvar nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year\n\n\t// search for all transitions between now and one year from now, and calculate the difference\n\t// in DST (if any)\n\tvar abbr;\n\tif (this.transitionTimes.length > 0) {\n\t\tvar index = this.bsearch(thisYear, this.transitionTimes);\n\t\tabbr = this.ruleIndex[index].abbreviation;\n\t\tif (index > -1) {\n\t\t\twhile (index < this.transitionTimes.length && this.ruleIndex[index].isdst && this.transitionTimes[index+1] < nextYear) {\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tif (index < this.transitionTimes.length && !this.ruleIndex[index].isdst) {\n\t\t\t\tabbr = this.ruleIndex[index].abbreviation;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tabbr = this.standardTime.abbreviation;\n\t}\n\n\treturn abbr;\n};\n\n/**\n * Return the abbreviation used by this zone in daylight\n * time. If the zone does not use DST in the given year,\n * this returns the same thing as getAbbreviation().\n *\n * @param {Date} date the Gregorian date to test\n * @returns {string} a string representing the abbreviation\n * used in this time zone during daylight time\n */\nZoneInfoFile.prototype.getDSTAbbreviation = function(date) {\n\tvar thisYear = date.getTime();\n\tvar nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year\n\n\t// search for all transitions between now and one year from now, and calculate the difference\n\t// in DST (if any)\n\n\tvar abbr;\n\tif (this.transitionTimes.length > 0) {\n\t\tvar index = this.bsearch(thisYear, this.transitionTimes);\n\t\tabbr = this.ruleIndex[index].abbreviation;\n\t\tif (index > -1) {\n\t\t\twhile (index < this.transitionTimes.length && !this.ruleIndex[index].isdst && this.transitionTimes[index+1] < nextYear) {\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tif (index < this.transitionTimes.length && this.ruleIndex[index].isdst) {\n\t\t\t\tabbr = this.ruleIndex[index].abbreviation;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tabbr = this.standardTime.abbreviation;\n\t}\n\n\treturn abbr;\n};\n\n/**\n * Return the zone information for the given date in ilib\n * format.\n *\n * @param {Date} date the Gregorian date to test\n * @returns {Object} an object containing the zone information\n * for the given date in the format that ilib can use directly\n */\nZoneInfoFile.prototype.getIlibZoneInfo = function(date) {\n\tfunction minutesToStr(min) {\n\t\tvar hours = Math.floor(min / 60);\n\t\tvar minutes = min - hours * 60;\n\n\t\treturn hours + \":\" + minutes;\n\t}\n\n\tfunction unixtimeToJD(millis) {\n\t\treturn 2440587.5 + millis / 86400000;\n\t}\n\tvar res = {\n\t\t\"o\": minutesToStr(this.getRawOffset(date))\n\t};\n\tif (this.usesDST(date)) {\n\t\tres.f = \"{c}\";\n\t\tres.e = {\n\t\t\t\"c\": this.getAbbreviation(date),\n\t\t\t\"j\": unixtimeToJD(this.getDSTEndDate(date))\n\t\t};\n\t\tres.s = {\n\t\t\t\"c\": this.getDSTAbbreviation(date),\n\t\t\t\"j\": unixtimeToJD(this.getDSTStartDate(date)),\n\t\t\t\"v\": minutesToStr(this.getDSTSavings(date))\n\t\t};\n\t} else {\n\t\tres.f = this.getAbbreviation(date);\n\t}\n\n\treturn res;\n};\n\nmodule.exports.ZoneInfoFile = ZoneInfoFile;","require('../../enyo');\n\n/**\n* The available options used by {@link enyo.Ajax} and {@link enyo.WebService}.\n*\n* @namespace enyo.AjaxProperties\n* @public\n*/\nmodule.exports = /** @lends enyo.AjaxProperties */ {\n\t\n\t/**\n\t* When `true`, appends a random number as a parameter for `GET` requests to try to\n\t* force a new fetch of the resource instead of reusing a local cache.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\tcacheBust: true,\n\t\n\t/**\n\t* The URL for the service. This may be a relative URL if used to fetch resources bundled\n\t* with the application.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\turl: '',\n\t\n\t/**\n\t* The HTTP method to use for the request; defaults to `'GET'`.  Supported values include\n\t* `'GET'`, `'POST'`, `'PUT'`, and `'DELETE'`.\n\t*\n\t* @type {String}\n\t* @default 'GET'\n\t* @public\n\t*/\n\tmethod: 'GET', // {value: 'GET', options: ['GET', 'POST', 'PUT', 'DELETE']}\n\t\n\t/**\n\t* How the response will be handled. Supported values are `'json'`, `'text'`, and `'xml'`.\n\t*\n\t* @type {String}\n\t* @default 'json'\n\t* @public\n\t*/\n\thandleAs: 'json', // {value: 'json', options: ['text', 'json', 'xml']}\n\t\n\t/**\n\t* The `Content-Type` header for the request as a String.\n\t*\n\t* @type {String}\n\t* @default 'application/x-www-form-urlencoded'\n\t* @public\n\t*/\n\tcontentType: 'application/x-www-form-urlencoded',\n\t\n\t/**\n\t* If `true`, makes a synchronous (blocking) call, if supported.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tsync: false,\n\t\n\t/**\n\t* Optional additional request headers as a [hash]{@glossary Object}, or `null`.\n\t\n\t* ```javascript\n\t* { 'X-My-Header': 'My Value', 'Mood': 'Happy' }\n\t* ```\n\t*\n\t* @type {Object}\n\t* @default null\n\t* @public\n\t*/\n\theaders: null,\n\t\n\t/**\n\t* The content for the request body for `POST/PUT` methods. When `postBody` is a\n\t* [buffer]{@glossary Buffer} or a [string]{@glossary String}, it is passed\n\t* verbatim in the request body. When it is a [hash]{@glossary Object}, the way it is\n\t* encoded depends on the `contentType`:\n\t*\n\t* - `'application/json'` => [JSON.stringify()]{@glossary JSON.stringify}\n\t* - `'application/x-www-urlencoded'` => url-encoded parameters\n\t* - `'multipart/form-data'` => passed as fields in {@link enyo.FormData} (XHR2 emulation)\n\t*\n\t* @type {(String|Buffer|Object)}\n\t* @default ''\n\t* @public\n\t*/\n\tpostBody: '',\n\n\t/**\n\t* The optional username to use for authentication purposes.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\tusername: '',\n\t\n\t/**\n\t* The optional password to use for authentication purposes.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\tpassword: '',\n\t\n\t/**\n\t* Optional [hash]{@glossary Object} with fields to pass directly to the underlying XHR\n\t* object. One example is the `withCredentials` flag used for cross-origin requests.\n\t*\n\t* @type {Object}\n\t* @default null\n\t* @public\n\t*/\n\txhrFields: null,\n\t\n\t/**\n\t* Optional [string]{@glossary String} to override the `MIME-Type` header.\n\t*\n\t* @type {String}\n\t* @default null\n\t* @public\n\t*/\n\tmimeType: null\n};","require('../../enyo');\n\n/**\n* A special type of [array]{@glossary Array} used internally by data layer\n* [kinds]{@glossary kind}.\n*\n* @class enyo.ModelList\n* @protected\n*/\nfunction ModelList (args) {\n\tArray.call(this);\n\tthis.table = {};\n\tif (args) this.add(args, 0);\n}\n\nModelList.prototype = Object.create(Array.prototype);\n\nmodule.exports = ModelList;\n\n/**\n* Adds [models]{@link enyo.Model} to the [list]{@link enyo.ModelList}, updating an\n* internal table by the model's [primaryKey]{@link enyo.Model#primaryKey} (if\n* possible) and its [euid]{@glossary euid}.\n*\n* @name enyo.ModelList#add\n* @method\n* @param {(enyo.Model|enyo.Model[])} models The [model or models]{@link enyo.Model}\n*\tto add to the [list]{@link enyo.ModelList}.\n* @param {Number} [idx] - If provided and valid, the models will be\n* [spliced]{@glossary Array.splice} into the list at this position.\n* @returns {enyo.Model[]} An immutable [array]{@glossary Array} of models\n* that were actually added to the list.\n* @protected\n*/\nModelList.prototype.add = function (models, idx) {\n\tvar table = this.table,\n\t\tadded = [],\n\t\tmodel,\n\t\teuid,\n\t\tid,\n\t\ti = 0;\n\t\n\tif (models && !(models instanceof Array)) models = [models];\n\t\n\tfor (; (model = models[i]); ++i) {\n\t\teuid = model.euid;\n\t\t\n\t\t// we only want to actually add models we haven't already seen...\n\t\tif (!table[euid]) {\n\t\t\tid = model.get(model.primaryKey);\n\t\t\n\t\t\tif (id != null) {\n\t\t\t\n\t\t\t\t// @TODO: For now if we already have an entry for a model by its supposed unique\n\t\t\t\t// identifier but it isn't the instance we just found we can't just\n\t\t\t\t// overwrite the previous instance so we mark the new one as headless\n\t\t\t\tif (table[id] && table[id] !== model) model.headless = true;\n\t\t\t\t// otherwise we do the normal thing and add the entry for it\n\t\t\t\telse table[id] = model; \n\t\t\t}\n\t\t\n\t\t\t// nomatter what though the euid should be unique\n\t\t\ttable[euid] = model;\n\t\t\tadded.push(model);\n\t\t}\n\t}\n\t\n\tif (added.length) {\n\t\tidx = !isNaN(idx) ? Math.min(Math.max(0, idx), this.length) : 0;\n\t\tadded.unshift(0);\n\t\tadded.unshift(idx);\n\t\tthis.splice.apply(this, added);\n\t}\n\t\n\tif (added.length > 0) added = added.slice(2);\n\tadded.at = idx;\n\t\n\treturn added;\n};\n\n/**\n* Removes the specified [models]{@link enyo.Model} from the [list]{@link enyo.ModelList}.\n*\n* @name enyo.ModelList#remove\n* @method\n* @param {(enyo.Model|enyo.Model[])} models The [model or models]{@link enyo.Model}\n*\tto remove from the [list]{@link enyo.ModelList}.\n* @returns {enyo.Model[]} An immutable [array]{@glossary Array} of\n*\tmodels that were actually removed from the list.\n* @protected\n*/\nModelList.prototype.remove = function (models) {\n\tvar table = this.table,\n\t\tremoved = [],\n\t\tmodel,\n\t\tidx,\n\t\tid,\n\t\ti,\n\t\t\n\t\t// these modifications are made to allow more performant logic to take place in\n\t\t// views that may need to know this information\n\t\tlow = Infinity,\n\t\thigh = -1,\n\t\tindices = [];\n\t\n\tif (models && !(models instanceof Array)) models = [models];\n\t\n\t// we start at the end to ensure that you could even pass the list itself\n\t// and it will work\n\tfor (i = models.length - 1; (model = models[i]); --i) {\n\t\ttable[model.euid] = null;\n\t\tid = model.get(model.primaryKey);\n\t\t\n\t\tif (id != null) table[id] = null;\n\t\t\n\t\tidx = models === this ? i : this.indexOf(model);\n\t\tif (idx > -1) {\t\t\t\t\n\t\t\tif (idx < low) low = idx;\n\t\t\tif (idx > high) high = idx;\n\t\t\t\n\t\t\tthis.splice(idx, 1);\n\t\t\tremoved.push(model);\n\t\t\tindices.push(idx);\n\t\t}\n\t}\n\t\n\t// since this is a separate array we will add this property to it for internal use only\n\tremoved.low = low;\n\tremoved.high = high;\n\tremoved.indices = indices;\n\t\n\treturn removed;\n};\n\n/**\n* Determines whether the specified [model]{@link enyo.Model} is present in the\n* [list]{@link enyo.ModelList}. Will attempt to resolve a [string]{@glossary String}\n* or [number]{@glossary Number} to either a [primaryKey]{@link enyo.Model#primaryKey}\n* or [euid]{@glossary euid}.\n*\n* @name enyo.ModelList#has\n* @method\n* @param {(enyo.Model|String|Number)} model An identifier representing either the\n*\t[model]{@link enyo.Model} instance, its [primaryKey]{@link enyo.Model#primaryKey},\n* or its [euid]{@glossary euid}.\n* @returns {Boolean} Whether or not the model is present in the [list]{@link enyo.ModelList}.\n* @protected\n*/\nModelList.prototype.has = function (model) {\n\tif (model === undefined || model === null) return false;\n\t\n\tif (typeof model == 'string' || typeof model == 'number') {\n\t\treturn !! this.table[model];\n\t} else return this.indexOf(model) > -1;\n};\n\n/**\n* Given an identifier, attempts to return the associated [model]{@link enyo.Model}.\n* The identifier should be a [string]{@glossary String} or [number]{@glossary Number}.\n*\n* @name enyo.ModelList#resolve\n* @method\n* @param {(String|Number)} model - An identifier (either a\n*\t[primaryKey]{@link enyo.Model#primaryKey} or an [euid]{@glossary euid}).\n* @returns {(undefined|null|enyo.Model)} If the identifier could be resolved, a\n*\t[model]{@link enyo.Model} instance is returned; otherwise, `undefined`, or\n* possibly `null` if the model once belonged to the [list]{@link enyo.ModelList}.\n* @protected\n*/\nModelList.prototype.resolve = function (model) {\n\tif (typeof model == 'string' || typeof model == 'number') {\n\t\treturn this.table[model];\n\t} else return model;\n};\n\n/**\n* Copies the current [list]{@link enyo.ModelList} and returns an shallow copy. This\n* method differs from the [slice()]{@glossary Array.slice} method inherited from\n* native [Array]{@glossary Array} in that this returns an {@link enyo.ModelList},\n* while `slice()` returns an array.\n* \n* @name enyo.ModelList#copy\n* @method\n* @returns {enyo.ModelList} A shallow copy of the callee.\n* @protected\n*/\nModelList.prototype.copy = function () {\n\treturn new ModelList(this);\n};","require('../../enyo');\n\n/**\n* Shared values for various [kinds]{@glossary kind} used to indicate a state or\n* (multiple, simultaneous) states. These flags are binary values represented by\n* hexadecimal numerals. They may be modified and compared (or even extended) using\n* [bitwise operations]{@glossary bitwise} or various\n* [API methods]{@link enyo.StateSupport} available to the kinds that support them.\n* Make sure to explore the documentation for individual kinds, as they may have\n* specific uses for a given flag.\n* \n* As a cursory overview, here is a table of the values already declared by built-in flags.\n* Each hexadecimal numeral represents a unique power of 2 in binary, from which we can use\n* [bitwise masks]{@glossary bitwise} to determine if a particular value is present.\n* \n* ```javascript\n* HEX             DEC             BIN\n* 0x0001             1            0000 0000 0000 0001\n* 0x0002             2            0000 0000 0000 0010\n* 0x0004             4            0000 0000 0000 0100\n* 0x0008             8            0000 0000 0000 1000\n* 0x0010            16            0000 0000 0001 0000\n* 0x0020            32            0000 0000 0010 0000\n* 0x0040            64            0000 0000 0100 0000\n* 0x0080           128            0000 0000 1000 0000\n* 0x0100           256            0000 0001 0000 0000\n* 0x0200           512            0000 0010 0000 0000\n* 0x0400          1024            0000 0100 0000 0000\n* 0x0800          2048            0000 1000 0000 0000\n* \n* ...\n* \n* 0x1000          4096            0001 0000 0000 0000\n* ```\n*\n* As a hint, converting (HEX) 0x0800 to DEC do:\n*\n* ```javascript\n* (0*16^3) + (8*16^2) + (0*16^1) + (0*16^0) = 2048\n* ```\n*\n* As a hint, converting (HEX) 0x0800 to BIN do:\n*\n* ```javascript\n* 0    8    0    0    (HEX)\n* ---- ---- ---- ----\n* 0000 1000 0000 0000 (BIN)\n* ```\n*\n* @name enyo.States\n* @enum {Number}\n* @public\n* @memberof enyo\n* @see enyo.StateSupport\n*/\nmodule.exports = {\n\t\n\t/**\n\t* Only exists in the client and was created during the runtime of the\n\t* [application]{@glossary application}.\n\t*\n\t* @name enyo.States.NEW\n\t* @default 1\n\t*/\n\tNEW: 0x0001,\n\t\n\t/**\n\t* Has been modified locally only.\n\t*\n\t* @name enyo.States.DIRTY\n\t* @default 2\n\t*/\n\tDIRTY: 0x0002,\n\t\n\t/**\n\t* Has not been modified locally.\n\t*\n\t* @name enyo.States.CLEAN\n\t* @default 4\n\t*/\n\tCLEAN: 0x0004,\n\t\n\t/**\n\t* Can no longer be modified.\n\t*\n\t* @default 8\n\t*/\n\tDESTROYED: 0x0008,\n\t\n\t/**\n\t* Currently attempting to fetch.\n\t* \n\t* @see enyo.Model.fetch\n\t* @see enyo.RelationalModel.fetch\n\t* @see enyo.Collection.fetch\n\t*\n\t* @default 16\n\t*/\n\tFETCHING: 0x0010,\n\t\n\t/**\n\t* Currently attempting to commit.\n\t* \n\t* @see enyo.Model.commit\n\t* @see enyo.RelationalModel.commit\n\t* @see enyo.Collection.commit\n\t*\n\t* @default 32\n\t*/\n\tCOMMITTING: 0x0020,\n\t\n\t/**\n\t* Currently attempting to destroy.\n\t* \n\t* @see enyo.Model.destroy\n\t* @see enyo.RelationalModel.destroy\n\t* @see enyo.Collection.destroy\n\t*\n\t* @default 64\n\t*/\n\tDESTROYING: 0x0040,\n\t\n\t/**\n\t* There was an error during commit.\n\t* \n\t* @see enyo.Model.commit\n\t* @see enyo.RelationalModel.commit\n\t* @see enyo.Collection.commit\n\t*\n\t* @default 128\n\t*/\n\tERROR_COMMITTING: 0x0080,\n\t\n\t/**\n\t* There was an error during fetch.\n\t* \n\t* @see enyo.Model.fetch\n\t* @see enyo.RelationalModel.fetch\n\t* @see enyo.Collection.fetch\n\t*\n\t* @default 256\n\t*/\n\tERROR_FETCHING: 0x0100,\n\t\n\t/**\n\t* There was an error during destroy.\n\t* \n\t* @see enyo.Model.destroy\n\t* @see enyo.RelationalModel.destroy\n\t* @see enyo.Collection.destroy\n\t*\n\t* @default 512\n\t*/\n\tERROR_DESTROYING: 0x0200,\n\t\n\t/**\n\t* An error was encountered for which there was no exact flag, or an invalid error was\n\t* specified.\n\t*\n\t* @default 1024\n\t*/\n\tERROR_UNKNOWN: 0x0400,\n\t\n\t/**\n\t* A multi-state [bitmask]{@glossary bitwise}. Compares a given flag to the states\n\t* included in the definition of `BUSY`. By default, this is one of\n\t* [FETCHING]{@link enyo.States.FETCHING}, [COMMITTING]{@link enyo.States.COMMITTING}, or\n\t* [DESTROYING]{@link enyo.States.DESTROYING}. It may be extended to include additional\n\t* values using the [bitwise]{@glossary bitwise} `OR` operator (`|`).\n\t*\n\t* @default 112\n\t*/\n\tBUSY: 0x0010 | 0x0020 | 0x0040,\n\t\n\t/**\n\t* A multi-state [bitmask]{@glossary bitwise}. Compares a given flag to the states\n\t* included in the definition of `ERROR`. By default, this is one of\n\t* [ERROR_FETCHING]{@link enyo.States.ERROR_FETCHING},\n\t* [ERROR_COMMITTING]{@link enyo.States.ERROR_COMMITTING},\n\t* [ERROR_DESTROYING]{@link enyo.States.ERROR_DESTROYING}, or\n\t* [ERROR_UNKNOWN]{@link enyo.States.ERROR_UNKNOWN}. It may be extended to include\n\t* additional values using the [bitwise]{@glossary bitwise} `OR` operator (`|`).\n\t*\n\t* @name enyo.States.ERROR\n\t* @default 1920\n\t*/\n\tERROR: 0x0080 | 0x0100 | 0x0200 | 0x0400,\n\t\n\t/**\n\t* A multi-state [bitmask]{@glossary bitwise}. Compares a given flag to the states\n\t* included in the definition of `READY`. By default, this is the inverse of any\n\t* values included in [BUSY]{@link enyo.States.BUSY} or [ERROR]{@link enyo.States.ERROR}.\n\t*\n\t* @name enyo.States.READY\n\t* @default -2041\n\t*/\n\tREADY: ~(0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080 | 0x0100 | 0x0200 | 0x0400)\n};","require('../../enyo');\n\n\n/**\n* [JSON]{@glossary JSON} related methods and wrappers.\n*\n* @namespace enyo.json\n* @public\n*/\nmodule.exports = /** @lends enyo.json */ {\n\t\n\t/**\n\t* Wrapper for [JSON.stringify()]{@glossary JSON.stringify}. Creates a\n\t* [JSON]{@glossary JSON} [string]{@glossary String} from an\n\t* [object]{@glossary Object}.\n\t*\n\t* @see {@glossary JSON.stringify}\n\t* @param {Object} value - The [object]{@glossary Object} to convert to a\n\t*\t[JSON]{@glossary JSON} [string]{@glossary String}.\n\t* @param {(Function|String[])} [replacer] An optional parameter indicating either an\n\t*\t[array]{@glossary Array} of keys to include in the final output or a\n\t*\t[function]{@glossary Function} that will have the opportunity to dynamically return\n\t*\tvalues to include for keys.\n\t* @param {(Number|String)} [space] - Determines the spacing (if any) for pretty-printed\n\t*\toutput of the JSON string. A [number]{@glossary Number} indicates the number of\n\t* spaces to use in the output, while a string will be used verbatim.\n\t* @returns {String} The JSON string for the given object.\n\t* @public\n\t*/\n\tstringify: function(value, replacer, space) {\n\t\treturn JSON.stringify(value, replacer, space);\n\t},\n\t\n\t/**\n\t* Wrapper for [JSON.parse()]{@glossary JSON.parse}. Parses a valid\n\t* [JSON]{@glossary JSON} [string]{@glossary String} and returns an\n\t* [object]{@glossary Object}, or `null` if the parameters are invalid.\n\t*\n\t* @see {@glossary JSON.parse}\n\t* @param {String} json - The [JSON]{@glossary JSON} [string]{@glossary String} to\n\t*\tparse into an [object]{@glossary Object}.\n\t* @param {Function} [reviver] - The optional [function]{@glossary Function} to use to\n\t*\tparse individual keys of the return object.\n\t* @returns {(Object|null)} If parameters are valid, an [object]{@glossary Object}\n\t* is returned; otherwise, `null`.\n\t* @public\n\t*/\n\tparse: function(json, reviver) {\n\t\treturn json ? JSON.parse(json, reviver) : null;\n\t}\n};","require('../../enyo');\n\n// we need to register appropriately to know when\n// the document is officially ready, to ensure that\n// client code is only going to execute at the\n// appropriate time\n\nvar doc = global.document;\nvar queue = [];\nvar ready = (\"complete\" === doc.readyState);\nvar run;\nvar init;\nvar remove;\nvar add;\nvar flush;\nvar flushScheduled = false;\n\n/**\n* Registers a callback (and optional `this` context) to run after all the Enyo and library code\n* has loaded and the `DOMContentLoaded` event (or equivalent on older browsers) has been sent.\n* \n* If called after the system is in a ready state, runs the supplied code asynchronously at the\n* earliest opportunity.\n*\n* @name enyo.ready\n* @method\n* @param {Function} fn - The method to execute when the DOM is ready.\n* @param {Object} [context] - The optional context (`this`) under which to execute the\n*\tcallback method.\n* @public\n*/\nmodule.exports = function (fn, context) {\n\tqueue.push([fn, context]);\n\t// schedule another queue flush if needed to run new ready calls\n\tif (ready && !flushScheduled) {\n\t\tsetTimeout(flush, 0);\n\t\tflushScheduled = true;\n\t}\n};\n\n/**\n* @private\n*/\nrun = function (fn, context) {\n\tfn.call(context || global);\n};\n\n/**\n* @private\n*/\ninit = function (event) {\n\t// if we're interactive, it should be safe to move\n\t// forward because the content has been parsed\n\tif ((ready = (\"interactive\" === doc.readyState))) {\n\t\tif (\"DOMContentLoaded\" !== event.type && \"readystatechange\" !== event.type) {\n\t\t\tremove(event.type, init);\n\t\t\tflush();\n\t\t}\n\t}\n\t// for an IE8 fallback and legacy WebKit (including webOS 3.x and less) and assurance\n\tif ((ready = (\"complete\" === doc.readyState || \"loaded\" === doc.readyState))) {\n\t\tremove(event.type, init);\n\t\tflush();\n\t}\n};\n\n/**\n* @private\n*/\nadd = function (event, fn) {\n\tvar name = doc.addEventListener? \"addEventListener\": \"attachEvent\";\n\tvar on = name === \"attachEvent\"? \"on\": \"\";\n\tdoc[name](on + event, fn, false);\n};\n\n/**\n* @private\n*/\nremove = function (event, fn) {\n\tvar name = doc.addEventListener? \"removeEventListener\": \"detachEvent\";\n\tvar on = name === \"detachEvent\"? \"on\": \"\";\n\tdoc[name](on + event, fn, false);\n};\n\n/**\n* @private\n*/\nflush = function () {\n\tif (ready && queue.length) {\n\t\twhile (queue.length) {\n\t\t\trun.apply(global, queue.shift());\n\t\t}\n\t}\n\tflushScheduled = false;\n};\n\n// ok, let's hook this up\nadd(\"DOMContentLoaded\", init);\nadd(\"readystatechange\", init);","require('../../enyo');\n\n/**\n* @private\n*/\nvar callbacks = [],\n\troots = [];\n\nexports.roots = roots;\n\n/**\n* Registers a single callback to be executed whenever a root view is rendered.\n* \n* @name enyo.rendered\n* @method\n* @param {Function} method - The callback to execute.\n* @param {Object} [context=enyo.global] The context under which to execute the callback.\n* @public\n*/\nexports.rendered = function (method, context) {\n\tcallbacks.push({method: method, context: context || global});\n};\n\n/**\n* @private\n*/\nexports.roots = roots;\n\n/**\n* Invokes all known callbacks (if any) against the root view once it has been rendered.\n* This method is not likely to be executed very often.\n* \n* @private\n*/\nfunction invoke (root) {\n\tcallbacks.forEach(function (ln) {\n\t\tln.method.call(ln.context, root);\n\t});\n}\n\n/**\n* @private\n*/\nexports.addToRoots = function (view) {\n\tvar rendered,\n\t\tdestroy;\n\t\n\t// since it is possible to call renderInto more than once on a given view we ensure we\n\t// don't register it twice unnecessarily\n\tif (roots.indexOf(view) === -1) {\n\t\t\n\t\troots.push(view);\n\t\t\n\t\t// hijack the rendered method\n\t\trendered = view.rendered;\n\t\t\n\t\t// hijack the destroy method\n\t\tdestroy = view.destroy;\n\t\t\n\t\t// supply our rendered hook\n\t\tview.rendered = function () {\n\t\t\t// we call the original first\n\t\t\trendered.apply(this, arguments);\n\t\t\t\n\t\t\t// and now we invoke the known callbacks against this root\n\t\t\tinvoke(this);\n\t\t};\n\t\t\n\t\t// supply our destroy hook\n\t\tview.destroy = function () {\n\t\t\tvar idx = roots.indexOf(this);\n\t\t\t\n\t\t\t// remove it from the roots array\n\t\t\tif (idx > -1) roots.splice(idx, 1);\n\t\t\t\n\t\t\t// now we can call the original\n\t\t\tdestroy.apply(this, arguments);\n\t\t};\n\t}\n};","require('../../enyo');\n\n\n/**\n* A polyfill for platforms that don't yet support\n* [bind()]{@glossary Function.prototype.bind}. As explained in the linked article, this\n* polyfill handles the general use case but cannot exactly mirror the ECMA-262 version 5\n* implementation specification. This is an adaptation of the example promoted\n* [here]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind}.\n*/\nif (!Function.prototype.bind) {\n\tFunction.prototype.bind = function (ctx) {\n\t\t// deliberately used here...\n\t\tvar args = Array.prototype.slice.call(arguments, 1),\n\t\t\tscop = this,\n\t\t\tnop = function () {},\n\t\t\tret;\n\t\t\n\t\t// as-per MDN's explanation of this polyfill we're filling in for the IsCallable\n\t\t// internal (we can't access it)\n\t\tif (typeof this != 'function') {\n\t\t\tthrow new TypeError('Function.prototype.bind called on non-callable object.');\n\t\t}\n\t\t\n\t\tret = function () {\n\t\t\tvar largs = args.concat(Array.prototype.slice.call(arguments)),\n\t\t\t\tlctx = this instanceof nop && ctx ? this : ctx;\n\t\t\t\n\t\t\treturn scop.apply(lctx, largs);\n\t\t};\n\t\t\n\t\tnop.prototype = this.prototype;\n\t\t\n\t\t/*jshint -W055 */\n\t\tret.prototype = new nop();\n\t\t/*jshint +W055 */\n\t\t\n\t\treturn ret;\n\t};\n}\n\n/**\n* @private\n*/\nexports.nop = function () {};\n\n/**\n* @private\n*/\nexports.nob = {};\n\n/**\n* @private\n*/\nexports.nar = [];\n\n/**\n* This name is reported in inspectors as the type of objects created via delegate;\n* otherwise, we would just use {@link enyo.nop}.\n*\n* @private\n*/\nvar Instance = exports.instance = function () {};\n\t\n/**\n* @private\n*/\nvar setPrototype = exports.setPrototype = function (ctor, proto) {\n\tctor.prototype = proto;\n};\n\n/**\n* Boodman/crockford delegation w/cornford optimization\n* \n* @private\n*/\nexports.delegate = function (proto) {\n\tsetPrototype(Instance, proto);\n\treturn new Instance();\n};\n\n// ----------------------------------\n// General Functions\n// ----------------------------------\n\n/**\n* Determines whether a variable is defined.\n* \n* @param {*} target - Anything that can be compared to `undefined`.\n* @returns {Boolean} `true` if defined, `false` otherwise.\n* @public\n*/\nvar exists = exports.exists = function (target) {\n\treturn (target !== undefined);\n};\n\nvar uidCounter = 0;\n\n/**\n* Creates a unique identifier (with an optional prefix) and returns the identifier as a string.\n*\n* @param {String} [prefix] - The prefix to prepend to the generated unique id.\n* @returns {String} An optionally-prefixed identifier.\n* @public\n*/\nexports.uid = function (prefix) {\n\treturn String((prefix? prefix: '') + uidCounter++);\n};\n\n/**\n* RFC4122 uuid generator for the browser.\n*\n* @returns {String} An [RFC4122]{@glossary UUID}-compliant, universally unique identifier.\n* @public\n*/\nexports.uuid = function () {\n\t// @TODO: Could possibly be faster\n\tvar t, p = (\n\t\t(Math.random().toString(16).substr(2,8)) + '-' +\n\t\t((t=Math.random().toString(16).substr(2,8)).substr(0,4)) + '-' +\n\t\t(t.substr(4,4)) +\n\t\t((t=Math.random().toString(16).substr(2,8)).substr(0,4)) + '-' +\n\t\t(t.substr(4,4)) +\n\t\t(Math.random().toString(16).substr(2,8))\n\t);\n\treturn p;\n};\n\n/**\n* Generates a random number using [Math.random]{@glossary Math.random}.\n*\n* @param {Number} bound - The multiplier used to generate the product.\n* @returns {Number} A random number.\n* @public\n*/\nexports.irand = function (bound) {\n\treturn Math.floor(Math.random() * bound);\n};\n\nvar toString = Object.prototype.toString;\n\n/**\n* Determines whether a given variable is a [String]{@glossary String}.\n*\n* @param {*} it - The variable to be tested.\n* @returns {Boolean} `true` if variable is a [String]{@glossary String};\n* otherwise, `false`.\n* @public\n*/\nexports.isString = function (it) {\n\treturn toString.call(it) === '[object String]';\n};\n\n/**\n* Determines whether a given variable is a [Function]{@glossary Function}.\n* \n* @param {*} it - The variable to be tested.\n* @returns {Boolean} `true` if variable is a [Function]{@glossary Function};\n* otherwise, `false`.\n* @public\n*/\nexports.isFunction = function (it) {\n\treturn toString.call(it) === '[object Function]';\n};\n\n/**\n* Determines whether a given variable is an [Array]{@glossary Array}.\n*\n* @param {*} it - The variable to be tested.\n* @returns {Boolean} `true` if variable is an [Array]{@glossary Array};\n* otherwise, `false`.\n* @method\n* @public\n*/\nvar isArray = exports.isArray = Array.isArray || function (it) {\n\treturn toString.call(it) === '[object Array]';\n};\n\n/**\n* Determines whether a given variable is an [Object]{@glossary Object}.\n*\n* @param {*} it - The variable to be tested.\n* @returns {Boolean} `true` if variable is an [Object]{@glossary Object};\n* otherwise, `false`.\n* @method\n* @public\n*/\nexports.isObject = Object.isObject || function (it) {\n\t// explicit null/undefined check for IE8 compatibility\n\treturn (it != null) && (toString.call(it) === '[object Object]');\n};\n\n/**\n* Determines whether a given variable is an explicit boolean `true`.\n*\n* @param {*} it - The variable to be tested.\n* @returns {Boolean} `true` if variable is an explicit `true`; otherwise,\n* `false`.\n* @public\n*/\nexports.isTrue = function (it) {\n\treturn !(it === 'false' || it === false || it === 0 || it === null || it === undefined);\n};\n\n/**\n* Determines whether a given variable is a numeric value.\n*\n* @param {*} it - The variable to be tested.\n* @returns {Boolean} `true` if variable is a numeric value; otherwise,\n* `false`.\n* @public\n*/\nexports.isNumeric = function (it) {\n\t// borrowed from jQuery\n\treturn !isArray(it) && (it - parseFloat(it) + 1) >= 0;\n};\n\n/**\n* Binds the `this` context of any method to a scope and a variable number of provided initial\n* parameters.\n*\n* @param {Object} scope - The `this` context for the method.\n* @param {(Function|String)} method - A Function or the name of a method to bind.\n* @param {...*} [args] Any arguments that will be provided as the initial arguments to the\n*                      enclosed method.\n* @returns {Function} The bound method/closure.\n* @public\n*/\nvar bind = exports.bind = function (scope, method) {\n\tif (!method) {\n\t\tmethod = scope;\n\t\tscope = null;\n\t}\n\tscope = scope || global;\n\tif (typeof method == 'string') {\n\t\tif (scope[method]) {\n\t\t\tmethod = scope[method];\n\t\t} else {\n\t\t\tthrow('enyo.bind: scope[\"' + method + '\"] is null (scope=\"' + scope + '\")');\n\t\t}\n\t}\n\tif (typeof method == 'function') {\n\t\tvar args = cloneArray(arguments, 2);\n\t\tif (method.bind) {\n\t\t\treturn method.bind.apply(method, [scope].concat(args));\n\t\t} else {\n\t\t\treturn function() {\n\t\t\t\tvar nargs = cloneArray(arguments);\n\t\t\t\t// invoke with collected args\n\t\t\t\treturn method.apply(scope, args.concat(nargs));\n\t\t\t};\n\t\t}\n\t} else {\n\t\tthrow('enyo.bind: scope[\"' + method + '\"] is not a function (scope=\"' + scope + '\")');\n\t}\n};\n\n/**\n* Binds a callback to a scope. If the object has a `destroyed` property that's truthy, then the\n* callback will not be run if called. This can be used to implement both\n* {@link enyo.Object.bindSafely} and {@link enyo.Object}-like objects like\n* {@link enyo.Model} and {@link enyo.Collection}.\n*\n* @param {Object} scope - The `this` context for the method.\n* @param {(Function|String)} method - A Function or the name of a method to bind.\n* @param {...*} [args] Any arguments that will be provided as the initial arguments to the\n*                      enclosed method.\n* @returns {Function} The bound method/closure.\n* @public\n*/\nexports.bindSafely = function (scope, method) {\n\tif (typeof method == 'string') {\n\t\tif (scope[method]) {\n\t\t\tmethod = scope[method];\n\t\t} else {\n\t\t\tthrow('enyo.bindSafely: scope[\"' + method + '\"] is null (this=\"' + this + '\")');\n\t\t}\n\t}\n\tif (typeof method == 'function') {\n\t\tvar args = cloneArray(arguments, 2);\n\t\treturn function() {\n\t\t\tif (scope.destroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar nargs = cloneArray(arguments);\n\t\t\treturn method.apply(scope, args.concat(nargs));\n\t\t};\n\t} else {\n\t\tthrow('enyo.bindSafely: scope[\"' + method + '\"] is not a function (this=\"' + this + '\")');\n\t}\n};\n\n/**\n* Calls the provided `method` on `scope`, asynchronously.\n*\n* Uses [window.setTimeout()]{@glossary window.setTimeout} with minimum delay,\n* usually around 10ms.\n*\n* Additional arguments are passed to `method` when it is invoked.\n*\n* If only a single argument is supplied, will just call that function asynchronously without\n* doing any additional binding.\n*\n* @param {Object} scope - The `this` context for the method.\n* @param {(Function|String)} method - A Function or the name of a method to bind.\n* @param {...*} [args] Any arguments that will be provided as the initial arguments to the\n*                      enclosed method.\n* @returns {Number} The `setTimeout` id.\n* @public\n*/\nexports.asyncMethod = function (scope, method) {\n\tif (!method) {\n\t\t// passed just a single argument\n\t\treturn setTimeout(scope, 1);\n\t} else {\n\t\treturn setTimeout(bind.apply(scope, arguments), 1);\n\t}\n};\n\n/**\n* Calls the provided `method` ([String]{@glossary String}) on `scope` with optional\n* arguments `args` ([Array]{@glossary Array}), if the object and method exist.\n*\n* @example\n* \tenyo.call(myWorkObject, 'doWork', [3, 'foo']);\n*\n* @param {Object} scope - The `this` context for the method.\n* @param {(Function|String)} method - A Function or the name of a method to bind.\n* @param {Array} [args] - An array of arguments to pass to the method.\n* @returns {*} The return value of the method.\n* @public\n*/\nexports.call = function (scope, method, args) {\n\tvar context = scope || this;\n\tif (method) {\n\t\tvar fn = context[method] || method;\n\t\tif (fn && fn.apply) {\n\t\t\treturn fn.apply(context, args || []);\n\t\t}\n\t}\n};\n\n/**\n* Returns the current time in milliseconds. On platforms that support it,\n* [Date.now()]{@glossary Date.now} will be used; otherwise this will\n* be equivalent to [new Date().getTime()]{@glossary Date.getTime}.\n* \n* @returns {Number} Number of milliseconds representing the current time.\n* @method\n* @public\n*/\n\nvar now = exports.now = Date.now || function () {\n\treturn new Date().getTime();\n};\n\n/**\n* When [window.performance]{@glossary window.performance} is available, supplies\n* a high-precision, high-performance monotonic timestamp, which is independent of\n* changes to the system clock and thus safer for use in animation, etc. Falls back to\n* [enyo.now()]{@link enyo#now} (based on the JavaScript [Date]{@glossary Date}\n* object), which is subject to system time changes.\n* \n* @returns {Number} Number of milliseconds representing the current time or time since\n*                   start of application execution as reported by the platform.\n* @method\n* @public\n*/\nexports.perfNow = (function () {\n\t// we have to check whether or not the browser has supplied a valid\n\t// method to use\n\tvar perf = window.performance || {};\n\t// test against all known vendor-specific implementations, but use\n\t// a fallback just in case\n\tperf.now = perf.now || perf.mozNow || perf.msNow || perf.oNow || perf.webkitNow || now;\n\treturn function () {\n\t\treturn perf.now();\n\t};\n}());\n\n/**\n* A fast-path enabled global getter that takes a string path, which may be a full path (from\n* context window/Enyo) or a relative path (to the execution context of the method). It knows how\n* to check for and call the backwards-compatible generated getters, as well as how to handle\n* computed properties. Returns `undefined` if the object at the given path cannot be found. May\n* safely be called on non-existent paths.\n*\t\n* @param {String} path - The path from which to retrieve a value.\n* @returns {*} The value for the given path, or `undefined` if the path could not be\n*                  completely resolved.\n* @method enyo.getPath\n* @public\n*/\nvar getPath = exports.getPath = function (path) {\n\t// we're trying to catch only null/undefined not empty string or 0 cases\n\tif (!path && path !== null && path !== undefined) return path;\n\t\n\tvar next = this,\n\t\tparts,\n\t\tpart,\n\t\tgetter,\n\t\tprev;\n\t\n\t// obviously there is a severe penalty for requesting get with a path lead\n\t// by unnecessary relative notation...\n\tif (path[0] == '.') path = path.replace(/^\\.+/, '');\n\t\n\t// here's where we check to make sure we have a truthy string-ish\n\tif (!path) return;\n\t\n\tparts = path.split('.');\n\tpart = parts.shift();\n\t\n\tdo {\n\t\tprev = next;\n\t\t// for constructors we must check to make sure they are undeferred before\n\t\t// looking for static properties\n\t\t// for the auto generated or provided published property support we have separate\n\t\t// routines that must be called to preserve compatibility\n\t\tif (next._getters && ((getter = next._getters[part])) && !getter.generated) next = next[getter]();\n\t\t// for all other special cases to ensure we use any overloaded getter methods\n\t\telse if (next.get && next !== this && next.get !== getPath) next = next.get(part);\n\t\t// and for regular cases\n\t\telse next = next[part];\n\t} while (next && (part = parts.shift()));\n\t\t\t\n\t// if necessary we ensure we've undeferred any constructor that we're\n\t// retrieving here as a final property as well\n\treturn next;\n};\n\n/**\n* @private\n*/\ngetPath.fast = function (path) {\n\t// the current context\n\tvar b = this, fn, v;\n\tif (b._getters && (fn = b._getters[path])) {\n\t\tv = b[fn]();\n\t} else {\n\t\tv = b[path];\n\t}\n\t\n\treturn v;\n};\n\n/**\n* @TODO: Out of date...\n* A global setter that takes a string path (relative to the method's execution context) or a\n* full path (relative to window). Attempts to automatically retrieve any previously existing\n* value to supply to any observers. If the context is an {@link enyo.Object} or subkind, the\n* {@link enyo.ObserverSupport.notify} method is used to notify listeners for the path's being\n* set. If the previous value is equivalent to the newly set value, observers will not be\n* triggered by default. If the third parameter is present and is an explicit boolean true, the\n* observers will be triggered regardless. Returns the context from which the method was executed.\n*\n* @param {String} path - The path for which to set the given value.\n* @param {*} is - The value to set.\n* @param {Object} [opts] - An options hash.\n* @returns {this} Whatever the given context was when executed.\n* @method enyo.setPath\n* @public\n*/\nvar setPath = exports.setPath = function (path, is, opts) {\n\t// we're trying to catch only null/undefined not empty string or 0 cases\n\tif (!path || (!path && path !== null && path !== undefined)) return this;\n\t\n\tvar next = this,\n\t\toptions = {create: true, silent: false, force: false},\n\t\tbase = next,\n\t\tparts,\n\t\tpart,\n\t\twas,\n\t\tforce,\n\t\tcreate,\n\t\tsilent,\n\t\tcomparator;\n\t\n\tif (typeof opts == 'object') opts = mixin({}, [options, opts]);\n\telse {\n\t\tforce = opts;\n\t\topts = options;\n\t}\n\t\n\tif (opts.force) force = true;\n\tsilent = opts.silent;\n\tcreate = opts.create;\n\tcomparator = opts.comparator;\n\t\n\t\n\t// obviously there is a severe penalty for requesting get with a path lead\n\t// by unnecessary relative notation...\n\tif (path[0] == '.') path = path.replace(/^\\.+/, '');\n\t\n\t// here's where we check to make sure we have a truthy string-ish\n\tif (!path) return next;\n\t\n\tparts = path.split('.');\n\tpart = parts.shift();\n\t\n\tdo {\n\t\t\n\t\tif (!parts.length) was = next.get && next.get !== getPath? next.get(part): next[part];\n\t\telse {\n\t\t\t// this allows us to ensure that if we're setting a static property of a constructor we have the\n\t\t\t// correct constructor\n\t\t\t// @TODO: It seems ludicrous to have to check this on every single part of a chain; if we didn't have\n\t\t\t// deferred constructors this wouldn't be necessary and is expensive - unnecessarily so when speed is so important\n\t\t\tif (next !== base && next.set && next.set !== setPath) {\n\t\t\t\tparts.unshift(part);\n\t\t\t\tnext.set(parts.join('.'), is, opts);\n\t\t\t\treturn base;\n\t\t\t}\n\t\t\tif (next !== base && next.get) next = (next.get !== getPath? next.get(part): next[part]) || (create && (next[part] = {}));\n\t\t\telse next = next[part] || (create && (next[part] = {}));\n\t\t}\n\t\t\n\t} while (next && parts.length && (part = parts.shift()));\n\t\n\tif (!next) return base;\n\t\n\t// now update to the new value\n\tif (next !== base && next.set && next.set !== setPath) {\n\t\tnext.set(part, is, opts);\n\t\treturn base;\n\t} else next[part] = is;\n\t\n\t// if possible we notify the changes but this change is notified from the immediate\n\t// parent not the root object (could be the same)\n\tif (next.notify && !silent && (force || was !== is || (comparator && comparator(was, is)))) next.notify(part, was, is, opts);\n\t// we will always return the original root-object of the call\n\treturn base;\n};\n\n/**\n* @private\n*/\nsetPath.fast = function (path, value) {\n\t// the current context\n\tvar b = this,\n\t\t// the previous value and helper variable\n\t\trv, fn;\n\t// we have to check and ensure that we're not setting a computed property\n\t// and if we are, do nothing\n\tif (b._computed && b._computed[path] !== undefined) {\n\t\treturn b;\n\t}\n\tif (b._getters && (fn=b._getters[path])) {\n\t\trv = b[fn]();\n\t} else {\n\t\trv = b[path];\n\t}\n\t// set the new value now that we can\n\tb[path] = value;\n\t\n\t// this method is only ever called from the context of enyo objects\n\t// as a protected method\n\tif (rv !== value) { b.notifyObservers(path, rv, value); }\n\t// return the context\n\treturn b;\n};\n\n// ----------------------------------\n// String Functions\n// ----------------------------------\n\n/**\n* Uppercases a given string. Will coerce to a [String]{@glossary String}\n* if possible/necessary.\n*\n* @param {String} str - The string to uppercase.\n* @returns {String} The uppercased string.\n* @public\n*/\nexports.toUpperCase = function (str) {\n\tif (str != null) {\n\t\treturn str.toString().toUpperCase();\n\t}\n\treturn str;\n};\n\n/**\n* Lowercases a given string. Will coerce to a [String]{@glossary String}\n* if possible/necessary.\n*\n* @param {String} str - The string to lowercase.\n* @returns {String} The lowercased string.\n* @public\n*/\nexports.toLowerCase = function (str) {\n\tif (str != null) {\n\t\treturn str.toString().toLowerCase();\n\t}\n\treturn str;\n};\n\n/**\n* Capitalizes a given string.\n*\n* @param {String} str - The string to capitalize.\n* @returns {String} The capitalized string.\n* @public\n*/\nexports.cap = function (str) {\n\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\n};\n\n/**\n* Un-capitalizes a given string.\n* \n* @param {String} str - The string to un-capitalize.\n* @returns {String} The un-capitalized string.\n* @public\n*/\nexports.uncap = function (str) {\n\treturn str.slice(0, 1).toLowerCase() + str.slice(1);\n};\n\n/**\n* Injects an arbitrary number of values, in order, into a template string at\n* positions marked by `\"%.\"`.\n*\n* @param {String} template - The string template to inject with values.\n* @param {...String} val The values to inject into the template.\n* @returns {String} A copy of the template populated with values.\n* @public\n*/\nexports.format = function (template) {\n\tvar pattern = /\\%./g,\n\t\targ = 0,\n\t\ttmp = template,\n\t\targs = arguments,\n\t\treplacer;\n\t\n\treplacer = function () {\n\t\treturn args[++arg];\n\t};\n\t\n\treturn tmp.replace(pattern, replacer);\n};\n\n/**\n* @private\n*/\nString.prototype.trim = String.prototype.trim || function () {\n\treturn this.replace(/^\\s+|\\s+$/g, '');\n};\n\n/**\n* Takes a string and trims leading and trailing spaces. Strings with no length,\n* non-strings, and falsy values will be returned without modification.\n*\n* @param {String} str - The string from which to remove whitespace.\n* @returns {String} The trimmed string.\n* @public\n*/\nexports.trim = function (str) {\n\treturn (typeof str == 'string' && str.trim()) || str;\n};\n\n// ----------------------------------\n// Object Functions\n// ----------------------------------\n\n/**\n* A [polyfill]{@glossary polyfill} for platforms that don't support\n* [Object.create()]{@glossary Object.create}.\n*/\nObject.create = Object.create || (function () {\n\tvar Anon = function () {};\n\treturn function (obj) {\n\t\t// in the polyfill we can't support the additional features so we are ignoring\n\t\t// the extra parameters\n\t\tif (!obj || obj === null || typeof obj != 'object') throw 'Object.create: Invalid parameter';\n\t\tAnon.prototype = obj;\n\t\treturn new Anon();\n\t};\n})();\n\n/**\n* A [polyfill]{@glossary polyfill} for platforms that don't support\n* [Object.keys()]{@glossary Object.keys}.\n*/\nObject.keys = Object.keys || function (obj) {\n\tvar results = [];\n\tvar hop = Object.prototype.hasOwnProperty;\n\tfor (var prop in obj) {\n\t\tif (hop.call(obj, prop)) {\n\t\t\tresults.push(prop);\n\t\t}\n\t}\n\t// *sigh* IE 8\n\tif (!({toString: null}).propertyIsEnumerable('toString')) {\n\t\tvar dontEnums = [\n\t\t\t'toString',\n\t\t\t'toLocaleString',\n\t\t\t'valueOf',\n\t\t\t'hasOwnProperty',\n\t\t\t'isPrototypeOf',\n\t\t\t'propertyIsEnumerable',\n\t\t\t'constructor'\n\t\t];\n\t\tfor (var i = 0, p; (p = dontEnums[i]); i++) {\n\t\t\tif (hop.call(obj, p)) {\n\t\t\t\tresults.push(p);\n\t\t\t}\n\t\t}\n\t}\n\treturn results;\n};\n\n/**\n* Returns an array of all known enumerable properties found on a given object.\n*\n* @alias Object.keys.\n* @method enyo.keys\n* @public\n*/\nexports.keys = Object.keys;\n\n/**\n* Convenience method that takes an [array]{@glossary Array} of properties\n* and an [object]{@glossary Object} as parameters. Returns a new object\n* with only those properties named in the array that are found to exist on the\n* base object. If the third parameter is `true`, falsy values will be ignored.\n*\n* @param {String[]} properties The properties to include on the returned object.\n* @param {Object} object - The object from which to retrieve values for the requested properties.\n* @param {Boolean} [ignore=false] Whether or not to ignore copying falsy values.\n* @returns {Object} A new object populated with the requested properties and values from\n*                     the given object.\n* @public\n*/\nexports.only = function (properties, object, ignore) {\n\tvar ret = {},\n\t\tprop,\n\t\tlen,\n\t\ti;\n\t\n\tfor (i = 0, len = properties.length >>> 0; i < len; ++i) {\n\t\tprop = properties[i];\n\t\t\n\t\tif (ignore && (object[prop] === undefined || object[prop] === null)) continue;\n\t\tret[prop] = object[prop];\n\t}\n\t\n\treturn ret;\n};\n\n/**\n* Convenience method that takes two [objects]{@glossary Object} as parameters.\n* For each key from the first object, if the key also exists in the second object,\n* a mapping of the key from the first object to the key from the second object is\n* added to a result object, which is eventually returned. In other words, the\n* returned object maps the named properties of the first object to the named\n* properties of the second object. The optional third parameter is a boolean\n* designating whether to pass unknown key/value pairs through to the new object.\n* If `true`, those keys will exist on the returned object.\n*\n* @param {Object} map - The object with key/value pairs.\n* @param {Object} obj - The object whose values will be used.\n* @param {Boolean} [pass=false] Whether or not to pass unnamed properties through\n*                               from the given object.\n* @returns {Object} A new object whose properties have been mapped.\n* @public\n*/\nexports.remap = function (map, obj, pass) {\n\tvar ret = pass ? clone(obj) : {},\n\t\tkey;\n\t\n\tfor (key in map) {\n\t\tif (key in obj) ret[map[key]] = obj.get ? obj.get(key) : obj[key];\n\t}\n\treturn ret;\n};\n\n/**\n* Helper method that accepts an [array]{@glossary Array} of\n* [objects]{@glossary Object} and returns a hash of those objects indexed\n* by the specified `property`. If a `filter` is provided, the filter should\n* accept four parameters: the key, the value (object), the current mutable map\n* reference, and an immutable copy of the original array of objects for\n* comparison.\n*\n* @param {String} property - The property to index the array by.\n* @param {Array} array - An array of property objects.\n* @param {Function} [filter] - The filter function to use; accepts four arguments.\n* @returns {Object} A hash (object) indexed by the `property` argument\n* @public\n*/\nexports.indexBy = function (property, array, filter) {\n\t// the return value - indexed map from the given array\n\tvar map = {},\n\t\tvalue,\n\t\tlen,\n\t\tidx = 0;\n\t// sanity check for the array with an efficient native array check\n\tif (!exists(array) || !(array instanceof Array)) {\n\t\treturn map;\n\t}\n\t// sanity check the property as a string\n\tif (!exists(property) || 'string' !== typeof property) {\n\t\treturn map;\n\t}\n\t// the immutable copy of the array\n\tvar copy = clone(array);\n\t// test to see if filter actually exsits\n\tfilter = exists(filter) && 'function' === typeof filter ? filter : undefined;\n\tfor (len = array.length; idx < len; ++idx) {\n\t\t// grab the value from the array\n\t\tvalue = array[idx];\n\t\t// make sure that it exists and has the requested property at all\n\t\tif (exists(value) && exists(value[property])) {\n\t\t\tif (filter) {\n\t\t\t\t// if there was a filter use it - it is responsible for\n\t\t\t\t// updating the map accordingly\n\t\t\t\tfilter(property, value, map, copy);\n\t\t\t} else {\n\t\t\t\t// use the default behavior - check to see if the key\n\t\t\t\t// already exists on the map it will be overwritten\n\t\t\t\tmap[value[property]] = value;\n\t\t\t}\n\t\t}\n\t}\n\t// go ahead and return our modified map\n\treturn map;\n};\n\n/**\n* Creates and returns a shallow copy of an [Object]{@glossary Object} or an\n* [Array]{@glossary Array}. For objects, by default, properties will be scanned and\n* copied directly to the clone such that they would pass the\n* [hasOwnProperty()]{@glossary Object.hasOwnProperty} test. This is expensive and often not\n* required. In this case, the optional second parameter may be used to allow a more efficient\n* [copy]{@link Object.create} to be made.\n* \n* @param {(Object|Array)} base - The [Object]{@glossary Object} or\n*                              [Array]{@glossary Array} to be cloned.\n* @param {Boolean} [quick] - If `true`, when cloning objects, a faster [copy]{@link Object.create}\n*                          method will be used. This parameter has no meaning when cloning arrays.\n* @returns {*} A clone of the provided `base` if `base` is of the correct type; otherwise,\n*              returns `base` as it was passed in.\n* @public\n*/\nvar clone = exports.clone = function (base, quick) {\n\tif (base) {\n\t\t\n\t\t// avoid the overhead of calling yet another internal function to do type-checking\n\t\t// just copy the array and be done with it\n\t\tif (base instanceof Array) return base.slice();\n\t\telse if (base instanceof Object) {\n\t\t\treturn quick ? Object.create(base) : mixin({}, base);\n\t\t}\n\t}\n\t\n\t// we will only do this if it is not an array or native object\n\treturn base;\n};\n\nvar empty = {};\nvar mixinDefaults = {\n\texists: false,\n\tignore: false,\n\tfilter: null\n};\n\n/**\n\t@todo Rewrite with appropriate documentation for options parameter (typedef)\n\t@todo document 'quick' option\n\n\tWill take a variety of options to ultimately mix a set of properties\n\tfrom objects into single object. All configurations accept a boolean as\n\tthe final parameter to indicate whether or not to ignore _truthy_/_existing_\n\tvalues on any _objects_ prior.\n\n\tIf _target_ exists and is an object, it will be the base for all properties\n\tand the returned value. If the parameter is used but is _falsy_, a new\n\tobject will be created and returned. If no such parameter exists, the first\n\tparameter must be an array of objects and a new object will be created as\n\tthe _target_.\n\n\tThe _source_ parameter may be an object or an array of objects. If no\n\t_target_ parameter is provided, _source_ must be an array of objects.\n\n\tThe _options_ parameter allows you to set the _ignore_ and/or _exists_ flags\n\tsuch that if _ignore_ is true, it will not override any truthy values in the\n\ttarget, and if _exists_ is true, it will only use truthy values from any of\n\tthe sources. You may optionally add a _filter_ method-option that returns a\n\ttrue or false value to indicate whether the value should be used. It receives\n\tparameters in this order: _property_, _source value_, _source values_,\n\t_target_, _options_. Note that modifying the target in the filter method can\n\thave unexpected results.\n\n\tSetting _options_ to true will set all options to true.\n\n* @method enyo.mixin\n* @public\n*/\nvar mixin = exports.mixin = function () {\n\tvar ret = arguments[0],\n\t\tsrc = arguments[1],\n\t\topts = arguments[2],\n\t\tval;\n\t\n\tif (!ret) ret = {};\n\telse if (ret instanceof Array) {\n\t\topts = src;\n\t\tsrc = ret;\n\t\tret = {};\n\t}\n\t\n\tif (!opts || opts === true) opts = mixinDefaults;\n\n\tif (src instanceof Array) for (var i=0, it; (it=src[i]); ++i) mixin(ret, it, opts);\n\telse {\n\t\tfor (var key in src) {\n\t\t\tval = src[key];\n\t\t\t\n\t\t\t// quickly ensure the property isn't a default\n\t\t\tif (empty[key] !== val) {\n\t\t\t\tif (\n\t\t\t\t\t(!opts.exists || val) &&\n\t\t\t\t\t(!opts.ignore || !ret[key]) &&\n\t\t\t\t\t(opts.filter? opts.filter(key, val, src, ret, opts): true)\n\t\t\t\t) {\n\t\t\t\t\tret[key] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn ret;\n};\n\n/**\n* Returns an [array]{@glossary Array} of the values of all properties in an\n* [object]{@glossary Object}.\n*\n* @param {Object} obj - The [Object]{@glossary Object} to read the values from.\n* @returns {Array} An [array]{@glossary Array} with the values from the `obj`.\n* @public\n*/\nexports.values = function (obj) {\n\tvar ret = [];\n\tfor (var key in obj) {\n\t\tif (obj.hasOwnProperty(key)) ret.push(obj[key]);\n\t}\n\treturn ret;\n};\n\n// ----------------------------------\n// Array Functions\n// ----------------------------------\n\n/**\n* Because our older API parameters are not consistent with other array API methods, and also\n* because only [IE8 lacks integrated support]{@glossary polyfill} for\n* [indexOf()]{@linkcode external:Array.indexOf}, we ensure it is defined (only IE8) and advise,\n* moving forward, that the built-in method be used. But to preserve our original API, it will\n* simply call this method, knowing it exists.\n*\n* @private\n*/\nArray.prototype.indexOf = Array.prototype.indexOf || function (el, offset) {\n\tvar len = this.length >>> 0;\n\t\n\toffset = +offset || 0;\n\t\n\tif (Math.abs(offset) === Infinity) offset = 0;\n\tif (offset < 0) offset += len;\n\tif (offset < 0) offset = 0;\n\t\n\tfor (; offset < len; ++offset) {\n\t\tif (this[offset] === el) return offset;\n\t}\n\t\n\treturn -1;\n};\n\n/**\n* Because our older API parameters are not consistent with other array API methods, and also\n* because only [IE8 lacks integrated support]{@glossary polyfill} for\n* [lastIndexOf()]{@glossary Array.lastIndexOf} we ensure it is defined (only IE8) and\n* advise, moving forward, that the built-in method be used. But to preserve our original API, it\n* will simply call this method, knowing it exists.\n*\n* @private\n*/\nArray.prototype.lastIndexOf = Array.prototype.lastIndexOf || function (el, offset) {\n\tvar array = Object(this)\n\t\t, len = array.length >>> 0;\n\t\t\n\tif (len === 0) return -1;\n\t\n\tif (offset !== undefined) {\n\t\toffset = Number(offset);\n\t\tif (Math.abs(offset) > len) offset = len;\n\t\tif (offset === Infinity || offset === -Infinity) offset = len;\n\t\tif (offset < 0) offset += len;\n\t} else offset = len;\n\t\n\tfor (; offset > -1; --offset) {\n\t\tif (array[offset] === el) return offset;\n\t}\n\t\n\treturn -1;\n};\n\n/**\n* A [polyfill]{@glossary polyfill} for platforms that don't support\n* [Array.findIndex()]{@glossary Array.findIndex}.\n*/\nArray.prototype.findIndex = Array.prototype.findIndex || function (fn, ctx) {\n\tfor (var i=0, len=this.length >>> 0; i<len; ++i) {\n\t\tif (fn.call(ctx, this[i], i, this)) return i;\n\t}\n\treturn -1;\n};\n\n/**\n* A [polyfill]{@glossary polyfill} for platforms that don't support\n* [Array.find()]{@glossary Array.find}.\n*/\nArray.prototype.find = Array.prototype.find || function (fn, ctx) {\n\tfor (var i=0, len=this.length >>> 0; i<len; ++i) {\n\t\tif (fn.call(ctx, this[i], i, this)) return this[i];\n\t}\n};\n\n/**\n* A [polyfill]{@glossary polyfill} for platforms that don't support\n* [Array.forEach()]{@glossary Array.forEach}.\n*/\nArray.prototype.forEach = Array.prototype.forEach || function (fn, ctx) {\n\tfor (var i=0, len=this.length >>> 0; i<len; ++i) fn.call(ctx, this[i], this);\n};\n\n/**\n* A [polyfill]{@glossary polyfill} for platforms that don't support\n* [Array.map()]{@glossary Array.map}.\n*/\nArray.prototype.map = Array.prototype.map || function (fn, ctx) {\n\tvar ret = [];\n\tfor (var i=0, len=this.length >>> 0; i<len; ++i) {\n\t\tret.push(fn.call(ctx, this[i], i, this));\n\t}\n\treturn ret;\n};\n\n/**\n* A [polyfill]{@glossary polyfill} for platforms that don't support\n* [Array.filter()]{@glossary Array.filter}.\n*/\nArray.prototype.filter = Array.prototype.filter || function (fn, ctx) {\n\tvar ret = [];\n\tfor (var i=0, len=this.length >>> 0; i<len; ++i) {\n\t\tfn.call(ctx, this[i], i, this) && ret.push(this[i]);\n\t}\n\treturn ret;\n};\n\n/**\n* An Enyo convenience method reference to [Array.indexOf()]{@glossary Array.indexOf}.\n* \n* This also supports the legacy Enyo argument order `el.indexOf(array, offset)` and can\n* differentiate between this and the standard `array.indexOf(el, offset)`.\n*\n* **When possible, you should use the native equivalent.**\n* \n* This method supports the same arguments as the native version, plus an extra argument at the\n* beginning referring to the [array]{@glossary Array} to run this method on.\n*\n* @public\n*/\nexports.indexOf = function (array, el, offset) {\n\tif (!(array instanceof Array)) return el.indexOf(array, offset);\n\treturn array.indexOf(el, offset);\n};\n\n/**\n* An Enyo convenience method reference to [Array.lastIndexOf()]{@glossary Array.lastIndexOf}.\n* \n* This also supports the legacy Enyo argument order `el.lastIndexOf(array, offset)` and can\n* differentiate between this and the standard `array.lastIndexOf(el, offset)`.\n*\n* **When possible, you should use the native equivalent.**\n* \n* This method supports the same arguments as the native version, plus an extra argument at the\n* beginning referring to the [array]{@glossary Array} to run this method on.\n*\n* @public\n*/\nexports.lastIndexOf = function (array, el, offset) {\n\tif (!(array instanceof Array)) return el.lastIndexOf(array, offset);\n\treturn array.lastIndexOf(el, offset);\n};\n\n/**\n* An Enyo convenience method reference to [Array.findIndex()]{@glossary Array.findIndex}.\n* \n* **When possible, you should use the native equivalent.**\n* \n* This method supports the same arguments as the native version, plus an extra argument at the\n* beginning referring to the [array]{@glossary Array} to run this method on.\n* \n* @public\n*/\nexports.findIndex = function (array, fn, ctx) {\n\treturn array.findIndex(fn, ctx);\n};\n\n/**\n* An Enyo convenience method reference to [Array.find()]{@glossary Array.find}.\n* \n* **When possible, you should use the native equivalent.**\n* \n* This method supports the same arguments as the native version, plus an extra argument at the\n* beginning referring to the [array]{@glossary Array} to run this method on.\n* \n* @method enyo.find\n* @public\n*/\nvar find = exports.find = function (array, fn, ctx) {\n\treturn array.find(fn, ctx);\n};\n\n/**\n* @alias enyo.find\n* @method enyo.where\n* @public\n*/\nexports.where = find;\n\n/**\n* An Enyo convenience method reference to [Array.forEach()]{@glossary Array.forEach}.\n* \n* **When possible, you should use the native equivalent.**\n* \n* This method supports the same arguments as the native version, plus an extra argument at the\n* beginning referring to the [array]{@glossary Array} to run this method on.\n* \n* @public\n*/\nexports.forEach = function (array, fn, ctx) {\n\treturn array.forEach(fn, ctx);\n};\n\n/**\n* An Enyo convenience method reference to [Array.map()]{@glossary Array.map}.\n*\n* **When possible, you should use the native equivalent.**\n* \n* This method supports the same arguments as the native version, plus an extra argument at the\n* beginning referring to the [array]{@glossary Array} to run this method on.\n*\n* @public\n*/\nexports.map = function (array, fn, ctx) {\n\treturn array.map(fn, ctx);\n};\n\n/**\n* An Enyo convenience method reference to [Array.filter()]{@glossary Array.filter}.\n*\n* **When possible, you should use the native equivalent.**\n* \n* This method supports the same arguments as the native version, plus an extra argument at the\n* beginning referring to the [array]{@glossary Array} to run this method on.\n*\n* @public\n*/\nexports.filter = function (array, fn, ctx) {\n\treturn array.filter(fn, ctx);\n};\n\n/**\n* When given an [array]{@glossary Array} of [objects]{@glossary Object},\n* searches through the array's objects; each object with a property name matching\n* `prop` has its value for that property compiled into a result array, which is\n* eventually returned. For each array object that doesn't have a matching property,\n* an `undefined` placeholder element is added to the result array, such that the\n* returned result array has the same length as the passed-in `array` parameter.\n* \n* @param {Array} array - The [array]{@glossary Array} of [objects]{@glossary Object}\n*                      in which the `prop` will be searched for.\n* @param {String} prop - A string containing the name of the property to search for.\n* @returns {Array} An array of all the values of the named property from\n*                     objects contained in the `array`.\n* @public\n*/\nexports.pluck = function (array, prop) {\n\tif (!(array instanceof Array)) {\n\t\tvar tmp = array;\n\t\tarray = prop;\n\t\tprop = tmp;\n\t}\n\t\n\tvar ret = [];\n\tfor (var i=0, len=array.length >>> 0; i<len; ++i) {\n\t\tret.push(array[i]? array[i][prop]: undefined);\n\t}\n\treturn ret;\n};\n\n/**\n* Concatenates a variable number of [arrays]{@glossary Array}, removing any duplicate\n* entries.\n* \n* @returns {Array} The unique values from all [arrays]{@glossary Array}.\n* @public\n*/\nexports.merge = function (/* _arrays_ */) {\n\tvar ret = [],\n\t\tvalues = Array.prototype.concat.apply([], arguments);\n\tfor (var i=0, len=values.length >>> 0; i<len; ++i) {\n\t\tif (!~ret.indexOf(values[i])) ret.push(values[i]);\n\t}\n\treturn ret;\n};\n\n/**\n* Clones an existing [Array]{@glossary Array}, or converts an array-like\n* object into an Array.\n* \n* If `offset` is non-zero, the cloning starts from that index in the source\n* Array. The clone may be appended to an existing Array by passing in the\n* existing Array as `initialArray`.\n* \n* Array-like objects have `length` properties, and support square-bracket\n* notation `([])`. Array-like objects often do not support Array methods\n* such as `push()` or `concat()`, and so must be converted to Arrays before\n* use.\n* \n* The special `arguments` variable is an example of an array-like object.\n*\n* @public\n*/\nvar cloneArray = exports.cloneArray = function (array, offset, initialArray) {\n\tvar ret = initialArray || [];\n\tfor(var i = offset || 0, l = array.length; i<l; i++){\n\t\tret.push(array[i]);\n\t}\n\t// Alternate smarter implementation:\n\t// return Array.prototype.slice.call(array, offset);\n\t// Array.of\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n\treturn ret;\n};\n\n/**\n* @alias cloneArray\n* @method enyo.toArray\n* @public\n*/\nexports.toArray = cloneArray;\n\n/**\n* Within a given [array]{@glossary Array}, removes the first\n* [strictly equal to]{@glossary ===} occurrence of `el`.\n* Note that `array` is modified directly.\n*\n* @param {Array} array - The [Array]{@glossary Array} to look through.\n* @param {*} el - The element to search for and remove.\n* @public\n*/\nexports.remove = function (array, el) {\n\tif (!(array instanceof Array)) {\n\t\tvar tmp = array;\n\t\tarray = el;\n\t\tel = tmp;\n\t}\n\t\n\tvar i = array.indexOf(el);\n\tif (-1 < i) array.splice(i, 1);\n\treturn array;\n};\n\n/**\n* This regex pattern is used by the [enyo.isRtl()]{@link enyo.isRtl} function.\n* \n* Arabic: \\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFE\n* Hebrew: \\u0590-\\u05FF\\uFB1D-\\uFB4F\n* \n* @private\n*/\nvar rtlPattern = /[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFE\\u0590-\\u05FF\\uFB1D-\\uFB4F]/;\n\n/**\n* Takes content `str` and determines whether or not it is [RTL]{@glossary RTL}.\n*\n* @param {String} str - A [String]{@glossary String} to check the [RTL]{@glossary RTL}-ness of.\n* @return {Boolean} `true` if `str` should be RTL; `false` if not.\n* @public\n*/\nexports.isRtl = function (str) {\n\treturn rtlPattern.test(str);\n};\n","require('../../enyo');\n\nvar\n\tStates = require('./States');\n\n/**\n* Provides generic API methods related to using {@link enyo.States}.\n*\n* @mixin enyo.StateSupport\n* @public\n*/\nmodule.exports = {\n\t\n\t/**\n\t* @private\n\t*/\n\tname: 'StateSupport',\n\t\n\t/**\n\t* The given status. This property will be modified by the other API methods of\n\t* {@link enyo.StateSupport}.\n\t*\n\t* @type enyo.States\n\t* @default null\n\t*/\n\tstatus: null,\n\t\n\t/**\n\t* Will remove any [error flags]{@link enyo.States.ERROR} from the given\n\t* [status]{@link enyo.StateSupport.status}.\n\t*\n\t* @public\n\t*/\n\tclearError: function () {\n\t\tthis.status = this.status & ~States.ERROR;\n\t},\n\t\n\t/**\n\t* Convenience method to avoid using [bitwise]{@glossary bitwise} comparison for the\n\t* [status]{@link enyo.StateSupport.status}. Determines whether the current status\n\t* (or the optional passed-in value) is an [error state]{@link enyo.States.ERROR}.\n\t* The passed-in value will only be used if it is a [Number]{@glossary Number}.\n\t*\n\t* @param {enyo.States} [status] - The specific value to compare as an\n\t*\t[error state]{@link enyo.States.ERROR}.\n\t* @returns {Boolean} Whether the value is an [error state]{@link enyo.States.ERROR} or not.\n\t* @public\n\t*/\n\tisError: function (status) {\n\t\treturn !! ((isNaN(status) ? this.status : status) & States.ERROR);\n\t},\n\t\n\t/**\n\t* Convenience method to avoid using [bitwise]{@glossary bitwise} comparison for the\n\t* [status]{@link enyo.StateSupport.status}. Determines whether the current status\n\t* (or the optional passed-in value) is a [busy state]{@link enyo.States.BUSY}. The\n\t* passed-in value will only be used if it is a [Number]{@glossary Number}.\n\t*\n\t* @param {enyo.States} [status] - The specific value to compare as a\n\t*\t[busy state]{@link enyo.States.BUSY}.\n\t* @returns {Boolean} Whether the value is a [busy state]{@link enyo.States.BUSY} or not.\n\t* @public\n\t*/\n\tisBusy: function (status) {\n\t\treturn !! ((isNaN(status) ? this.status : status) & States.BUSY);\n\t},\n\t\n\t/**\n\t* Convenience method to avoid using [bitwise]{@glossary bitwise} comparison for the\n\t* [status]{@link enyo.StateSupport.status}. Determines whether the current status\n\t* (or the optional passed-in value) is a [ready state]{@link enyo.States.READY}. The\n\t* passed-in value will only be used if it is a [Number]{@glossary Number}.\n\t*\n\t* @param {enyo.States} [status] - The specific value to compare as a\n\t*\t[ready state]{@link enyo.States.READY}.\n\t* @returns {Boolean} Whether the value is a [ready state]{@link enyo.States.BUSY} or not.\n\t* @public\n\t*/\n\tisReady: function (status) {\n\t\treturn !! ((isNaN(status) ? this.status : status) & States.READY);\n\t}\n};","require('../../enyo');\n\nvar\n\tutils = require('./utils');\n\nvar\n\teventTable = {};\n\n/**\n* @private\n*/\nfunction addListener(obj, e, fn, ctx) {\n\n\tobj.listeners().push({\n\t\tevent: e,\n\t\tmethod: fn,\n\t\tctx: ctx || obj\n\t});\n\t\n\treturn obj;\n}\n\n/**\n* @private\n*/\nfunction removeListener(obj, e, fn, ctx) {\n\tvar listeners = obj.listeners()\n\t\t, idx;\n\t\t\n\tif (listeners.length) {\n\t\tidx = listeners.findIndex(function (ln) {\n\t\t\treturn ln.event == e && ln.method === fn && (ctx? ln.ctx === ctx: true);\n\t\t});\n\t\tidx >= 0 && listeners.splice(idx, 1);\n\t}\n\t\n\treturn obj;\n}\n\n/**\n* @private\n*/\nfunction emit(obj, args) {\n\tvar len = args.length\n\t\t, e = args[0]\n\t\t, listeners = obj.listeners(e);\n\t\t\n\tif (listeners.length) {\n\t\tif (len > 1) {\n\t\t\targs = utils.toArray(args);\n\t\t\targs.unshift(obj);\n\t\t} else {\n\t\t\targs = [obj, e];\n\t\t}\n\n\t\tfor (var i=0, ln; (ln=listeners[i]); ++i) ln.method.apply(ln.ctx, args);\n\t\t\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\n/**\n* {@link enyo.EventEmitter} is a {@glossary mixin} that adds support for\n* registered {@glossary event} listeners. These events are different from\n* bubbled events (e.g., DOM events and [handlers]{@link enyo.Component#handlers}).\n* When [emitted]{@link enyo.EventEmitter#emit}, these events **do not bubble**\n* and will only be handled by [registered listeners]{@link enyo.EventEmitter#on}.\n*\n* @mixin enyo.EventEmitter\n* @public\n*/\nmodule.exports = {\n\t\n\t/**\n\t* @private\n\t*/\n\tname: 'EventEmitter',\n\t\n\t/**\n\t* @private\n\t*/\n\t_silenced: false,\n\t\n\t/**\n\t* @private\n\t*/\n\t_silenceCount: 0,\n\t\n\t/**\n\t* Disables propagation of [events]{@glossary event}. This is a counting\n\t* semaphor and [unsilence()]{@link enyo.EventEmitter#unsilence} will need to\n\t* be called the same number of times that this method is called.\n\t*\n\t* @see enyo.EventEmitter.unsilence\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tsilence: function () {\n\t\tthis._silenced = true;\n\t\tthis._silenceCount++;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Enables propagation of [events]{@glossary event}. This is a counting\n\t* semaphor and this method will need to be called the same number of times\n\t* that [silence()]{@link enyo.EventEmitter#silence} was called.\n\t*\n\t* @see enyo.EventEmitter.silence\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tunsilence: function (force) {\n\t\tif (force) {\n\t\t\tthis._silenceCount = 0;\n\t\t\tthis._silenced = false;\n\t\t} else {\n\t\t\tthis._silenceCount && this._silenceCount--;\n\t\t\tthis._silenceCount === 0 && (this._silenced = false);\n\t\t}\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Determines whether the callee is currently [silenced]{@link enyo.EventEmitter#silence}.\n\t*\n\t* @returns {Boolean} Whether or not the callee is\n\t*\t[silenced]{@link enyo.EventEmitter.silence}.\n\t* @public\n\t*/\n\tisSilenced: function () {\n\t\treturn this._silenced;\n\t},\n\t\n\t/**\n\t* @alias enyo.EventEmitter.on\n\t* @deprecated\n\t* @public\n\t*/\n\taddListener: function (e, fn, ctx) {\n\t\treturn addListener(this, e, fn, ctx);\n\t},\n\t\n\t/**\n\t* Adds an {@glossary event} listener. Until [removed]{@link enyo.EventEmitter#off},\n\t* this listener will fire every time the event is\n\t* [emitted]{@link enyo.EventEmitter#emit}.\n\t*\n\t* @param {String} e - The {@glossary event} name to register for.\n\t* @param {Function} fn - The listener.\n\t* @param {Object} [ctx] - The optional context under which to execute the listener.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\ton: function (e, fn, ctx) {\n\t\treturn addListener(this, e, fn, ctx);\n\t},\n\t\n\t/**\n\t* @alias enyo.EventEmitter.off\n\t* @deprecated\n\t* @public\n\t*/\n\tremoveListener: function (e, fn, ctx) {\n\t\treturn removeListener(this, e, fn, ctx);\n\t},\n\t\n\t/**\n\t* Removes an {@glossary event} listener.\n\t*\n\t* @param {String} e - The {@glossary event} name.\n\t* @param {Function} fn - The listener to unregister.\n\t* @param {Object} [ctx] - If the listener was registered with a context, it\n\t* should be provided when unregistering as well.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\toff: function (e, fn, ctx) {\n\t\treturn removeListener(this, e, fn, ctx);\n\t},\n\t\n\t/**\n\t* Removes all listeners, or all listeners for a given {@glossary event}.\n\t*\n\t* @param {String} [e] - The optional target {@glossary event}.\n\t* @returns {this} The callee for chaining.\n\t*/\n\tremoveAllListeners: function (e) {\n\t\tvar euid = this.euid\n\t\t\t, loc = euid && eventTable[euid];\n\t\t\n\t\tif (loc) {\n\t\t\tif (e) {\n\t\t\t\teventTable[euid] = loc.filter(function (ln) {\n\t\t\t\t\treturn ln.event != e;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\teventTable[euid] = null;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Primarily intended for internal use, this method returns an immutable copy\n\t* of all listeners, or all listeners for a particular {@glossary event} (if any).\n\t*\n\t* @param {String} [e] - The targeted {@glossary event}.\n\t* @returns {Object[]} Event listeners are stored in [hashes]{@glossary Object}.\n\t*\tThe return value will be an [array]{@glossary Array} of these hashes\n\t* if any listeners exist.\n\t* @public\n\t*/\n\tlisteners: function (e) {\n\t\tvar euid = this.euid || (this.euid = utils.uid('e'))\n\t\t\t, loc = eventTable[euid] || (eventTable[euid] = []);\n\t\t\n\t\treturn !e? loc: loc.filter(function (ln) {\n\t\t\treturn ln.event == e || ln.event == '*';\n\t\t});\n\t},\n\t\n\t/**\n\t* @alias enyo.EventEmitter.emit\n\t* @deprecated\n\t* @public\n\t*/\n\ttriggerEvent: function () {\n\t\treturn !this._silenced? emit(this, arguments): false;\n\t},\n\t\n\t/**\n\t* Emits the named {@glossary event}. All subsequent arguments will be passed\n\t* to the event listeners.\n\t*\n\t* @param {String} e - The {@glossary event} to emit.\n\t* @param {...*} args All subsequent arguments will be passed to the event listeners.\n\t* @returns {Boolean} Whether or not any listeners were notified.\n\t* @public\n\t*/\n\temit: function () {\n\t\treturn !this._silenced? emit(this, arguments): false;\n\t}\n};","require('../../enyo');\n\nvar\n\tutils = require('./utils');\n\n/**\n* An [XHR2]{@linkplain http://www.w3.org/TR/XMLHttpRequest/} FormData implementation.\n* It is used to send `multipart/form-data` [Ajax]{@glossary ajax} requests. The\n* internal `enyo.Blob` [kind]{@glossary kind} is the content provider for file-parts.\n*\n* Note that in Internet Explorer < 10, both {@link enyo.FormData} and `enyo.Blob` are\n* limited to [string]{@glossary String} content and `enyo.Blob` may only be\n* instantiated using an [array]{@glossary Array} or [string]{@glossary String}.\n*\n* This implementation is inspired by\n* [html5-formdata]{@linkplain https://github.com/francois2metz/html5-formdata/blob/master/formdata.js}.\n*\n* ```\n* Emulate FormData for some browsers\n* MIT License\n* (c) 2010 Francois de Metz\n* ```\n*\n* @class enyo.FormData\n* @public\n*/\nexports = null;\n\nif (typeof FormData != 'undefined') {\n\ttry {\n\t\tnew FormData();\n\t\t\n\t\texports = module.exports = FormData;\n\t// Android Chrome 18 will throw an error trying to create this\n\t} catch (e) {}\n}\n\nif (!exports) {\n\n\t/*jshint -W082 */\n\tfunction FormData() {\n\t\tthis.fake = true;\n\t\tthis._fields = [];\n\t\t// This generates a 50 character boundary similar to\n\t\t// those used by Firefox.  They are optimized for\n\t\t// boyer-moore parsing.\n\t\tthis.boundary = '--------------------------';\n\t\tfor (var i = 0; i < 24; i++) {\n\t\t\tthis.boundary += Math.floor(Math.random() * 10).toString(16);\n\t\t}\n\t}\n\tFormData.prototype.getContentType = function() {\n\t\treturn \"multipart/form-data; boundary=\" + this.boundary;\n\t};\n\tFormData.prototype.append = function(key, value, filename) {\n\t\tthis._fields.push([key, value, filename]);\n\t};\n\tFormData.prototype.toString = function() {\n\t\tvar boundary = this.boundary;\n\t\tvar body = \"\";\n\t\tutils.forEach(this._fields, function(field) {\n\t\t\tbody += \"--\" + boundary + \"\\r\\n\";\n\t\t\tif (field[2] || field[1].name) {\n\t\t\t\t// file upload\n\t\t\t\tvar file = field[1], filename = field[2] || file.name;\n\t\t\t\tbody += \"Content-Disposition: form-data; name=\\\"\"+ field[0] +\"\\\"; filename=\\\"\"+ filename +\"\\\"\\r\\n\";\n\t\t\t\tbody += \"Content-Type: \"+ file.type +\"\\r\\n\\r\\n\";\n\t\t\t\tbody += file.getAsBinary() + \"\\r\\n\";\n\t\t\t} else {\n\t\t\t\t// key-value field\n\t\t\t\tbody += \"Content-Disposition: form-data; name=\\\"\"+ field[0] +\"\\\";\\r\\n\\r\\n\";\n\t\t\t\tbody += field[1] + \"\\r\\n\";\n\t\t\t}\n\t\t});\n\t\tbody += \"--\" + boundary +\"--\";\n\t\treturn body;\n\t};\n\t/*jshint +W082 */\n\t\n\tmodule.exports = FormData;\n}","require('../../enyo');\n\nvar utils = require('./utils');\n\n/**\n* Determines OS versions of platforms that need special treatment. Can have one of the following\n* properties:\n*\n* * android\n* * androidChrome (Chrome on Android, standard starting in 4.1)\n* * androidFirefox\n* * ie\n* * ios\n* * webos\n* * windowsPhone\n* * blackberry\n* * tizen\n* * safari (desktop version)\n* * chrome (desktop version)\n* * firefox (desktop version)\n* * firefoxOS\n*\n* If the property is defined, its value will be the major version number of the platform.\n*\n* Example:\n* ```javascript\n* // android 2 does not have 3d css\n* if (enyo.platform.android < 3) {\n* \tt = 'translate(30px, 50px)';\n* } else {\n* \tt = 'translate3d(30px, 50px, 0)';\n* }\n* this.applyStyle('-webkit-transform', t);\n* ```\n*\n* @name enyo.platform\n*/\nexports = module.exports = \n\t/** @lends enyo.platform */ {\n\t//* `true` if the platform has native single-finger [events]{@glossary event}.\n\ttouch: Boolean(('ontouchstart' in window) || window.navigator.msMaxTouchPoints),\n\t//* `true` if the platform has native double-finger [events]{@glossary event}.\n\tgesture: Boolean(('ongesturestart' in window) || window.navigator.msMaxTouchPoints)\n};\n\n/**\n* @private\n*/\nvar ua = navigator.userAgent;\nvar ep = exports;\nvar platforms = [\n\t// Android 4+ using Chrome\n\t{platform: 'androidChrome', regex: /Android .* Chrome\\/(\\d+)[.\\d]+/},\n\t// Android 2 - 4\n\t{platform: 'android', regex: /Android (\\d+)/},\n\t// Kindle Fire\n\t// Force version to 2, (desktop mode does not list android version)\n\t{platform: 'android', regex: /Silk\\/1./, forceVersion: 2, extra: {silk: 1}},\n\t// Kindle Fire HD (Silk versions 2 or 3)\n\t// Force version to 4\n\t{platform: 'android', regex: /Silk\\/2./, forceVersion: 4, extra: {silk: 2}},\n\t{platform: 'android', regex: /Silk\\/3./, forceVersion: 4, extra: {silk: 3}},\n\t// Windows Phone 7 - 8\n\t{platform: 'windowsPhone', regex: /Windows Phone (?:OS )?(\\d+)[.\\d]+/},\n\t// IE 8 - 10\n\t{platform: 'ie', regex: /MSIE (\\d+)/},\n\t// IE 11\n\t{platform: 'ie', regex: /Trident\\/.*; rv:(\\d+)/},\n\t// iOS 3 - 5\n\t// Apple likes to make this complicated\n\t{platform: 'ios', regex: /iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/},\n\t// webOS 1 - 3\n\t{platform: 'webos', regex: /(?:web|hpw)OS\\/(\\d+)/},\n\t// webOS 4 / OpenWebOS\n\t{platform: 'webos', regex: /WebAppManager|Isis|webOS\\./, forceVersion: 4},\n\t// Open webOS release LuneOS\n\t{platform: 'webos', regex: /LuneOS/, forceVersion: 4, extra: {luneos: 1}},\n\t// desktop Safari\n\t{platform: 'safari', regex: /Version\\/(\\d+)[.\\d]+\\s+Safari/},\n\t// desktop Chrome\n\t{platform: 'chrome', regex: /Chrome\\/(\\d+)[.\\d]+/},\n\t// Firefox on Android\n\t{platform: 'androidFirefox', regex: /Android;.*Firefox\\/(\\d+)/},\n\t// FirefoxOS\n\t{platform: 'firefoxOS', regex: /Mobile;.*Firefox\\/(\\d+)/},\n\t// desktop Firefox\n\t{platform: 'firefox', regex: /Firefox\\/(\\d+)/},\n\t// Blackberry Playbook\n\t{platform: 'blackberry', regex: /PlayBook/i, forceVersion: 2},\n\t// Blackberry 10+\n\t{platform: 'blackberry', regex: /BB1\\d;.*Version\\/(\\d+\\.\\d+)/},\n\t// Tizen\n\t{platform: 'tizen', regex: /Tizen (\\d+)/}\n];\nfor (var i = 0, p, m, v; (p = platforms[i]); i++) {\n\tm = p.regex.exec(ua);\n\tif (m) {\n\t\tif (p.forceVersion) {\n\t\t\tv = p.forceVersion;\n\t\t} else {\n\t\t\tv = Number(m[1]);\n\t\t}\n\t\tep[p.platform] = v;\n\t\tif (p.extra) {\n\t\t\tutils.mixin(ep, p.extra);\n\t\t}\n\t\tep.platformName = p.platform;\n\t\tbreak;\n\t}\n}\n","require('../../enyo');\n\nvar\n\tplatform = require('./platform'),\n\tutils = require('./utils');\n\nvar ms = Math.round(1000/60);\nvar prefix = ['webkit', 'moz', 'ms', 'o', ''];\nvar r = 'requestAnimationFrame';\nvar c = 'cancel' + utils.cap(r);\n\n/*\n* Fallback on setTimeout\n*\n* @private\n*/\nvar _requestFrame = function(inCallback) {\n\treturn global.setTimeout(inCallback, ms);\n};\n\n/*\n* Fallback on clearTimeout\n*\n* @private\n*/\nvar _cancelFrame = function(inId) {\n\treturn global.clearTimeout(inId);\n};\n\nfor (var i = 0, pl = prefix.length, p, wc, wr; (p = prefix[i]) || i < pl; i++) {\n\t// if we're on ios 6 just use setTimeout, requestAnimationFrame has some kinks currently\n\tif (platform.ios >= 6) {\n\t\tbreak;\n\t}\n\n\t// if prefixed, becomes Request and Cancel\n\twc = p ? (p + utils.cap(c)) : c;\n\twr = p ? (p + utils.cap(r)) : r;\n\t// Test for cancelRequestAnimationFrame, because some browsers (Firefix 4-10) have a request without a cancel\n\tif (global[wc]) {\n\t\t_cancelFrame = global[wc];\n\t\t_requestFrame = global[wr];\n\t\tif (p == 'webkit') {\n\t\t\t/*\n\t\t\t\tNote: In Chrome, the first return value of webkitRequestAnimationFrame is 0.\n\t\t\t\tWe make 1 bogus call so the first used return value of webkitRequestAnimationFrame is > 0, as the spec requires.\n\t\t\t\tThis makes it so that the requestId is always truthy.\n\t\t\t\t(we choose to do this rather than wrapping the native function to avoid the overhead)\n\t\t\t*/\n\t\t\t_cancelFrame(_requestFrame(utils.nop));\n\t\t}\n\t\tbreak;\n\t}\n}\n/**\n* Requests an animation callback.\n*\n* On compatible browsers, if `node` is defined, the [callback]{@glossary callback} will\n* fire only if `node` is visible.\n*\n* @param {Function} callback - A [callback]{@glossary callback} to be executed on the\n*                            animation frame.\n* @param {Node} node - The DOM node to request the animation frame for.\n* @returns {Object} A request id to be used with\n*                     [enyo.cancelRequestAnimationFrame()]{@link enyo.cancelRequestAnimationFrame}.\n* @public\n*/\nexports.requestAnimationFrame = function(callback, node) {\n\treturn _requestFrame(callback, node);\n};\n/**\n* Cancels a requested animation callback with the specified id.\n*\n* @public\n*/\nexports.cancelRequestAnimationFrame = function(inId) {\n\treturn _cancelFrame(inId);\n};\n\n/**\n* A set of interpolation functions for animations, similar in function to CSS3\n* transitions.\n*\n* These are intended for use with {@link enyo.easedLerp}. Each easing function\n* accepts one (1) [Number]{@glossary Number} parameter and returns one (1)\n* [Number]{@glossary Number} value.\n*\n* @namespace enyo.easing\n* @public\n*/\nexports.easing = /** @lends enyo.easing */ {\n\t/**\n\t* cubicIn\n\t*\n\t* @public\n\t*/\n\tcubicIn: function(n) {\n\t\treturn Math.pow(n, 3);\n\t},\n\t/**\n\t* cubicOut\n\t*\n\t* @public\n\t*/\n\tcubicOut: function(n) {\n\t\treturn Math.pow(n - 1, 3) + 1;\n\t},\n\t/**\n\t* expoOut\n\t*\n\t* @public\n\t*/\n\texpoOut: function(n) {\n\t\treturn (n == 1) ? 1 : (-1 * Math.pow(2, -10 * n) + 1);\n\t},\n\t/**\n\t* quadInOut\n\t*\n\t* @public\n\t*/\n\tquadInOut: function(n) {\n\t\tn = n * 2;\n\t\tif (n < 1) {\n\t\t\treturn Math.pow(n, 2) / 2;\n\t\t}\n\t\treturn -1 * ((--n) * (n - 2) - 1) / 2;\n\t},\n\t/**\n\t* linear\n\t*\n\t* @public\n\t*/\n\tlinear: function(n) {\n\t\treturn n;\n\t}\n};\n\n/**\n* Gives an interpolation of an animated transition's distance from 0 to 1.\n*\n* Given a start time (`t0`) and an animation duration (`duration`), this\n* method applies the `easing` function to the percentage of time elapsed\n* divided by duration, capped at 100%.\n*\n* @param {Number} t0 - Start time.\n* @param {Number} duration - Duration in milliseconds.\n* @param {Function} easing - An easing [function]{@glossary Function} reference from\n*\t{@link enyo.easing}.\n* @param {Boolean} reverse - Whether the animation will run in reverse.\n* @returns {Number} The resulting position, capped at a maximum of 100%.\n* @public\n*/\nexports.easedLerp = function(t0, duration, easing, reverse) {\n\tvar lerp = (utils.perfNow() - t0) / duration;\n\tif (reverse) {\n\t\treturn lerp >= 1 ? 0 : (1 - easing(1 - lerp));\n\t} else {\n\t\treturn lerp >= 1 ? 1 : easing(lerp);\n\t}\n};\n\n/**\n* Gives an interpolation of an animated transition's distance from\n* `startValue` to `valueChange`.\n*\n* Applies the `easing` function with a wider range of variables to allow for\n* more complex animations.\n*\n* @param {Number} t0 - Start time.\n* @param {Number} duration - Duration in milliseconds.\n* @param {Function} easing - An easing [function]{@glossary Function} reference from\n*\t{@link enyo.easing}.\n* @param {Boolean} reverse - Whether the animation will run in reverse.\n* @param {Number} time\n* @param {Number} startValue - Starting value.\n* @param {Number} valueChange\n* @returns {Number} The resulting position, capped at a maximum of 100%.\n* @public\n*/\nexports.easedComplexLerp = function(t0, duration, easing, reverse, time, startValue, valueChange) {\n\tvar lerp = (utils.perfNow() - t0) / duration;\n\tif (reverse) {\n\t\treturn easing(1 - lerp, time, startValue, valueChange, duration);\n\t} else {\n\t\treturn easing(lerp, time, startValue, valueChange, duration);\n\t}\n};","require('../../enyo');\n\nvar\n\troots = require('./roots'),\n\tutils = require('./utils'),\n\tplatform = require('./platform');\n\n/**\n* @namespace enyo.dom\n*/\nvar dom = module.exports =\n\t/** @lends enyo.dom */ {\n\n\t/**\n\t* Shortcut for `document.getElementById()` if `id` is a string; otherwise,\n\t* returns `id`. Uses `global.document` unless a document is specified in the\n\t* (optional) `doc` parameter.\n\t*\n\t* ```javascript\n\t* // find 'node' if it's a string id, or return it unchanged if it's already a node reference\n\t* var domNode = enyo.dom.byId(node);\n\t* ```\n\t*\n\t* @param {String} id - The document element ID to get.\n\t* @param {Node} [doc] - A [node]{@glossary Node} to search in. Default is the whole\n\t*\tdocument.\n\t* @returns {Element} A reference to a DOM element.\n\t* @public\n\t*/\n\tbyId: function(id, doc){\n\t\treturn (typeof id == 'string') ? (doc || document).getElementById(id) : id;\n\t},\n\n\t/**\n\t* Returns a string with ampersand, less-than, and greater-than characters replaced with HTML\n\t* entities, e.g.,\n\t* ```\n\t* '&lt;code&gt;'This &amp; That'&lt;/code&gt;'\n\t* ```\n\t* becomes\n\t* ```\n\t* '&amp;lt;code&amp;gt;'This &amp;amp; That'&amp;lt;/code&amp;gt;'\n\t* ```\n\t*\n\t* @param {String} text - A string with entities you'd like to escape/convert.\n\t* @returns {String} A string that is properly escaped (the above characters.)\n\t* @public\n\t*/\n\tescape: function(text) {\n\t\treturn text !== null ? String(text).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;') : '';\n\t},\n\n\t/**\n\t* Returns an object describing the geometry of this node.\n\t*\n\t* @param {Node} n - The [node]{@glossary Node} to measure.\n\t* @returns {Object} An object containing the properties `top`, `left`,\n\t* `height`, and `width`.\n\t* @public\n\t*/\n\tgetBounds: function(n) {\n\t\tif (n) {\n\t\t\treturn {left: n.offsetLeft, top: n.offsetTop, width: n.offsetWidth, height: n.offsetHeight};\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t* This is designed to be copied into the `computedStyle` object.\n\t*\n\t* @private\n\t*/\n\t_ie8GetComputedStyle: function(prop) {\n\t\tvar re = /(\\-([a-z]){1})/g;\n\t\tif (prop === 'float') {\n\t\t\tprop = 'styleFloat';\n\t\t} else if (re.test(prop)) {\n\t\t\tprop = prop.replace(re, function () {\n\t\t\t\treturn arguments[2].toUpperCase();\n\t\t\t});\n\t\t}\n\t\treturn this[prop] !== undefined ? this[prop] : null;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetComputedStyle: function(node) {\n\t\tif(platform.ie < 9 && node && node.currentStyle) {\n\t\t\t//simple global.getComputedStyle polyfill for IE8\n\t\t\tvar computedStyle = utils.clone(node.currentStyle);\n\t\t\tcomputedStyle.getPropertyValue = this._ie8GetComputedStyle;\n\t\t\tcomputedStyle.setProperty = function() {\n\t\t\t\treturn node.currentStyle.setExpression.apply(node.currentStyle, arguments);\n\t\t\t};\n\t\t\tcomputedStyle.removeProperty = function() {\n\t\t\t\treturn node.currentStyle.removeAttribute.apply(node.currentStyle, arguments);\n\t\t\t};\n\t\t\treturn computedStyle;\n\t\t} else {\n\t\t\treturn global.getComputedStyle && node && global.getComputedStyle(node, null);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetComputedStyleValue: function(node, property, computedStyle) {\n\t\tvar s   = computedStyle || this.getComputedStyle(node),\n\t\t\tnIE = platform.ie;\n\n\t\ts = s ? s.getPropertyValue(property) : null;\n\n\t\tif (nIE) {\n\t\t\tvar oConversion = {\n\t\t\t\t'thin'   : (nIE > 8 ? 2 : 1) + 'px',\n\t\t\t\t'medium' : (nIE > 8 ? 4 : 3) + 'px',\n\t\t\t\t'thick'  : (nIE > 8 ? 6 : 5) + 'px',\n\t\t\t\t'none'   : '0'\n\t\t\t};\n\t\t\tif (typeof oConversion[s] != 'undefined') {\n\t\t\t\ts = oConversion[s];\n\t\t\t}\n\n\t\t\tif (s == 'auto') {\n\t\t\t\tswitch (property) {\n\t\t\t\tcase 'width':\n\t\t\t\t\ts = node.offsetWidth;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'height':\n\t\t\t\t\ts = node.offsetHeight;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetFirstElementByTagName: function(tagName) {\n\t\tvar e = document.getElementsByTagName(tagName);\n\t\treturn e && e[0];\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tapplyBodyFit: function() {\n\t\tvar h = this.getFirstElementByTagName('html');\n\t\tif (h) {\n\t\t\tthis.addClass(h, 'enyo-document-fit');\n\t\t}\n\t\tdom.addBodyClass('enyo-body-fit');\n\t\tdom.bodyIsFitting = true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetWindowWidth: function() {\n\t\tif (global.innerWidth) {\n\t\t\treturn global.innerWidth;\n\t\t}\n\t\tif (document.body && document.body.offsetWidth) {\n\t\t\treturn document.body.offsetWidth;\n\t\t}\n\t\tif (document.compatMode=='CSS1Compat' &&\n\t\t\tdocument.documentElement &&\n\t\t\tdocument.documentElement.offsetWidth ) {\n\t\t\treturn document.documentElement.offsetWidth;\n\t\t}\n\t\treturn 320;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetWindowHeight: function() {\n\t\tif (global.innerHeight) {\n\t\t\treturn global.innerHeight;\n\t\t}\n\t\tif (document.body && document.body.offsetHeight) {\n\t\t\treturn document.body.offsetHeight;\n\t\t}\n\t\tif (document.compatMode=='CSS1Compat' &&\n\t\t\tdocument.documentElement &&\n\t\t\tdocument.documentElement.offsetHeight ) {\n\t\t\treturn document.documentElement.offsetHeight;\n\t\t}\n\t\treturn 480;\n\t},\n\n\t/**\n\t* The proportion by which the `body` tag differs from the global size, in both X and Y\n\t* dimensions. This is relevant when we need to scale the whole interface down from 1920x1080\n\t* (1080p) to 1280x720 (720p), for example.\n\t*\n\t* @private\n\t*/\n\t_bodyScaleFactorY: 1,\n\t_bodyScaleFactorX: 1,\n\tupdateScaleFactor: function() {\n\t\tvar bodyBounds = this.getBounds(document.body);\n\t\tthis._bodyScaleFactorY = bodyBounds.height / this.getWindowHeight();\n\t\tthis._bodyScaleFactorX = bodyBounds.width / this.getWindowWidth();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t// Workaround for lack of compareDocumentPosition support in IE8\n\t// Code MIT Licensed, John Resig; source: http://ejohn.org/blog/comparing-document-position/\n\tcompareDocumentPosition: function(a, b) {\n\t\treturn a.compareDocumentPosition ?\n\t\ta.compareDocumentPosition(b) :\n\t\ta.contains ?\n\t\t\t(a != b && a.contains(b) && 16) +\n\t\t\t(a != b && b.contains(a) && 8) +\n\t\t\t(a.sourceIndex >= 0 && b.sourceIndex >= 0 ?\n\t\t\t\t(a.sourceIndex < b.sourceIndex && 4) +\n\t\t\t\t(a.sourceIndex > b.sourceIndex && 2) :\n\t\t\t\t1) +\n\t\t\t0 :\n\t\t\t0;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t// moved from FittableLayout.js into common protected code\n\t_ieCssToPixelValue: function(node, value) {\n\t\tvar v = value;\n\t\t// From the awesome hack by Dean Edwards\n\t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\t\tvar s = node.style;\n\t\t// store style and runtime style values\n\t\tvar l = s.left;\n\t\tvar rl = node.runtimeStyle && node.runtimeStyle.left;\n\t\t// then put current style in runtime style.\n\t\tif (rl) {\n\t\t\tnode.runtimeStyle.left = node.currentStyle.left;\n\t\t}\n\t\t// apply given value and measure its pixel value\n\t\ts.left = v;\n\t\tv = s.pixelLeft;\n\t\t// finally restore previous state\n\t\ts.left = l;\n\t\tif (rl) {\n\t\t\ts.runtimeStyle.left = rl;\n\t\t}\n\t\treturn v;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_pxMatch: /px/i,\n\tgetComputedBoxValue: function(node, prop, boundary, computedStyle) {\n\t\tvar s = computedStyle || this.getComputedStyle(node);\n\t\tif (s && (!platform.ie || platform.ie >= 9)) {\n\t\t\tvar p = s.getPropertyValue(prop + '-' + boundary);\n\t\t\treturn p === 'auto' ? 0 : parseInt(p, 10);\n\t\t} else if (node && node.currentStyle) {\n\t\t\tvar v = node.currentStyle[prop + utils.cap(boundary)];\n\t\t\tif (!v.match(this._pxMatch)) {\n\t\t\t\tv = this._ieCssToPixelValue(node, v);\n\t\t\t}\n\t\t\treturn parseInt(v, 0);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t/**\n\t* Gets the boundaries of a [node's]{@glossary Node} `margin` or `padding` box.\n\t*\n\t* @param {Node} node - The [node]{@glossary Node} to measure.\n\t* @param {Node} box - The boundary to measure from ('padding' or 'margin').\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, and\n\t*\t`left`.\n\t* @public\n\t*/\n\tcalcBoxExtents: function(node, box) {\n\t\tvar s = this.getComputedStyle(node);\n\t\treturn {\n\t\t\ttop: this.getComputedBoxValue(node, box, 'top', s),\n\t\t\tright: this.getComputedBoxValue(node, box, 'right', s),\n\t\t\tbottom: this.getComputedBoxValue(node, box, 'bottom', s),\n\t\t\tleft: this.getComputedBoxValue(node, box, 'left', s)\n\t\t};\n\t},\n\n\t/**\n\t* Gets the calculated padding of a node. Shortcut for\n\t* [enyo.dom.calcBoxExtents()]{@link enyo.dom.calcBoxExtents}.\n\t*\n\t* @param {Node} node - The [node]{@glossary Node} to measure.\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, and\n\t*\t`left`.\n\t* @public\n\t*/\n\tcalcPaddingExtents: function(node) {\n\t\treturn this.calcBoxExtents(node, 'padding');\n\t},\n\n\t/**\n\t* Gets the calculated margin of a node. Shortcut for\n\t* [enyo.dom.calcBoxExtents()]{@link enyo.dom.calcBoxExtents}.\n\t*\n\t* @param {Node} node - The [node]{@glossary Node} to measure.\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, and\n\t*\t`left`.\n\t* @public\n\t*/\n\tcalcMarginExtents: function(node) {\n\t\treturn this.calcBoxExtents(node, 'margin');\n\t},\n\t/**\n\t* Returns an object like `{top: 0, left: 0, bottom: 100, right: 100, height: 10, width: 10}`\n\t* that represents the object's position relative to `relativeToNode` (suitable for absolute\n\t* positioning within that parent node). Negative values mean part of the object is not\n\t* visible. If you leave `relativeToNode` as `undefined` (or it is not a parent element), then\n\t* the position will be relative to the viewport and suitable for absolute positioning in a\n\t* floating layer.\n\t*\n\t* @param {Node} node - The [node]{@glossary Node} to measure.\n\t* @param {Node} relativeToNode - The [node]{@glossary Node} to measure the distance from.\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, `left`,\n\t*\t`height`, and `width`.\n\t* @public\n\t*/\n\tcalcNodePosition: function(targetNode, relativeToNode) {\n\t\t// Parse upward and grab our positioning relative to the viewport\n\t\tvar top = 0,\n\t\t\tleft = 0,\n\t\t\tnode = targetNode,\n\t\t\twidth = node.offsetWidth,\n\t\t\theight = node.offsetHeight,\n\t\t\ttransformProp = dom.getStyleTransformProp(),\n\t\t\txregex = /translateX\\((-?\\d+)px\\)/i,\n\t\t\tyregex = /translateY\\((-?\\d+)px\\)/i,\n\t\t\tborderLeft = 0, borderTop = 0,\n\t\t\ttotalHeight = 0, totalWidth = 0,\n\t\t\toffsetAdjustLeft = 0, offsetAdjustTop = 0;\n\n\t\tif (relativeToNode) {\n\t\t\ttotalHeight = relativeToNode.offsetHeight;\n\t\t\ttotalWidth = relativeToNode.offsetWidth;\n\t\t} else {\n\t\t\ttotalHeight = (document.body.parentNode.offsetHeight > this.getWindowHeight() ? this.getWindowHeight() - document.body.parentNode.scrollTop : document.body.parentNode.offsetHeight);\n\t\t\ttotalWidth = (document.body.parentNode.offsetWidth > this.getWindowWidth() ? this.getWindowWidth() - document.body.parentNode.scrollLeft : document.body.parentNode.offsetWidth);\n\t\t}\n\n\t\tif (node.offsetParent) {\n\t\t\tdo {\n\t\t\t\t// Adjust the offset if relativeToNode is a child of the offsetParent\n\t\t\t\t// For IE 8 compatibility, have to use integer 8 instead of Node.DOCUMENT_POSITION_CONTAINS\n\t\t\t\tif (relativeToNode && this.compareDocumentPosition(relativeToNode, node.offsetParent) & 8) {\n\t\t\t\t\toffsetAdjustLeft = relativeToNode.offsetLeft;\n\t\t\t\t\toffsetAdjustTop = relativeToNode.offsetTop;\n\t\t\t\t}\n\t\t\t\t// Ajust our top and left properties based on the position relative to the parent\n\t\t\t\tleft += node.offsetLeft - (node.offsetParent ? node.offsetParent.scrollLeft : 0) - offsetAdjustLeft;\n\t\t\t\tif (transformProp && xregex.test(node.style[transformProp])) {\n\t\t\t\t\tleft += parseInt(node.style[transformProp].replace(xregex, '$1'), 10);\n\t\t\t\t}\n\t\t\t\ttop += node.offsetTop - (node.offsetParent ? node.offsetParent.scrollTop : 0) - offsetAdjustTop;\n\t\t\t\tif (transformProp && yregex.test(node.style[transformProp])) {\n\t\t\t\t\ttop += parseInt(node.style[transformProp].replace(yregex, '$1'), 10);\n\t\t\t\t}\n\t\t\t\t// Need to correct for borders if any exist on parent elements\n\t\t\t\tif (node !== targetNode) {\n\t\t\t\t\tif (node.currentStyle) {\n\t\t\t\t\t\t// Oh IE, we do so love working around your incompatibilities\n\t\t\t\t\t\tborderLeft = parseInt(node.currentStyle.borderLeftWidth, 10);\n\t\t\t\t\t\tborderTop = parseInt(node.currentStyle.borderTopWidth, 10);\n\t\t\t\t\t} else if (global.getComputedStyle) {\n\t\t\t\t\t\tborderLeft = parseInt(global.getComputedStyle(node, '').getPropertyValue('border-left-width'), 10);\n\t\t\t\t\t\tborderTop = parseInt(global.getComputedStyle(node, '').getPropertyValue('border-top-width'), 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// No computed style options, so try the normal style object (much less robust)\n\t\t\t\t\t\tborderLeft = parseInt(node.style.borderLeftWidth, 10);\n\t\t\t\t\t\tborderTop = parseInt(node.style.borderTopWidth, 10);\n\t\t\t\t\t}\n\t\t\t\t\tif (borderLeft) {\n\t\t\t\t\t\tleft += borderLeft;\n\t\t\t\t\t}\n\t\t\t\t\tif (borderTop) {\n\t\t\t\t\t\ttop += borderTop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Continue if we have an additional offsetParent, and either don't have a relativeToNode or the offsetParent is contained by the relativeToNode (if offsetParent contains relativeToNode, then we have already calculated up to the node, and can safely exit)\n\t\t\t\t// For IE 8 compatibility, have to use integer 16 instead of Node.DOCUMENT_POSITION_CONTAINED_BY\n\t\t\t} while ((node = node.offsetParent) && (!relativeToNode || this.compareDocumentPosition(relativeToNode, node) & 16));\n\t\t}\n\t\treturn {\n\t\t\t'top': top,\n\t\t\t'left': left,\n\t\t\t'bottom': totalHeight - top - height,\n\t\t\t'right': totalWidth - left - width,\n\t\t\t'height': height,\n\t\t\t'width': width\n\t\t};\n\t},\n\n\t/**\n\t* Sets the `innerHTML` property of the specified `node` to `html`.\n\t*\n\t* @param {Node} node - The [node]{@glossary Node} to set.\n\t* @param {String} html - An HTML string.\n\t* @public\n\t*/\n\tsetInnerHtml: function(node, html) {\n\t\tnode.innerHTML = html;\n\t},\n\n\t/**\n\t* Checks a [DOM]{@glossary Node} [node]{@glossary Node} for a specific CSS class.\n\t*\n\t* @param {Node} node - The [node]{@glossary Node} to set.\n\t* @param {String} s - The class name to check for.\n\t* @returns {(Boolean|undefined)} `true` if `node` has the `s` class; `undefined`\n\t* if there is no `node` or it has no `className` property.\n\t* @public\n\t*/\n\thasClass: function(node, s) {\n\t\tif (!node || !node.className) { return; }\n\t\treturn (' ' + node.className + ' ').indexOf(' ' + s + ' ') >= 0;\n\t},\n\n\t/**\n\t* Uniquely adds a CSS class to a DOM node.\n\t*\n\t* @param {Node} node - The [node]{@glossary Node} to set.\n\t* @param {String} s - The class name to add.\n\t* @public\n\t*/\n\taddClass: function(node, s) {\n\t\tif (node && !this.hasClass(node, s)) {\n\t\t\tvar ss = node.className;\n\t\t\tnode.className = (ss + (ss ? ' ' : '') + s);\n\t\t}\n\t},\n\n\t/**\n\t* Removes a CSS class from a DOM node if it exists.\n\t*\n\t* @param {Node} node - The [node]{@glossary Node} from which to remove the class.\n\t* @param {String} s - The class name to remove from `node`.\n\t* @public\n\t*/\n\tremoveClass: function(node, s) {\n\t\tif (node && this.hasClass(node, s)) {\n\t\t\tvar ss = node.className;\n\t\t\tnode.className = (' ' + ss + ' ').replace(' ' + s + ' ', ' ').slice(1, -1);\n\t\t}\n\t},\n\n\t/**\n\t* Adds a class to `document.body`. This defers the actual class change if nothing has been\n\t* rendered into `body` yet.\n\t*\n\t* @param {String} s - The class name to add to the document's `body`.\n\t* @public\n\t*/\n\taddBodyClass: function(s) {\n\t\tif (!utils.exists(roots.roots) || roots.roots.length === 0) {\n\t\t\tif (dom._bodyClasses) {\n\t\t\t\tdom._bodyClasses.push(s);\n\t\t\t} else {\n\t\t\t\tdom._bodyClasses = [s];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdom.addClass(document.body, s);\n\t\t}\n\t},\n\n\t/**\n\t* Returns an object describing the absolute position on the screen, relative to the top left\n\t* corner of the screen. This function takes into account account absolute/relative\n\t* `offsetParent` positioning, `scroll` position, and CSS transforms (currently\n\t* `translateX`, `translateY`, and `matrix3d`).\n\t*\n\t* ```javascript\n\t* {top: ..., right: ..., bottom: ..., left: ..., height: ..., width: ...}\n\t* ```\n\t*\n\t* Values returned are only valid if `hasNode()` is truthy. If there's no DOM node for the\n\t* object, this returns a bounds structure with `undefined` as the value of all fields.\n\t*\n\t* @param {Node} n - The [node]{@glossary Node} to measure.\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, `left`,\n\t*\t`height`, and `width`.\n\t* @public\n\t*/\n\tgetAbsoluteBounds: function(targetNode) {\n\t\treturn utils.clone(targetNode.getBoundingClientRect());\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tflushBodyClasses: function() {\n\t\tif (dom._bodyClasses) {\n\t\t\tfor (var i = 0, c; (c=dom._bodyClasses[i]); ++i) {\n\t\t\t\tdom.addClass(document.body, c);\n\t\t\t}\n\t\t\tdom._bodyClasses = null;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_bodyClasses: null,\n\n\t/**\n\t* Convert to various unit formats. Useful for converting pixels to a resolution-independent\n\t* measurement method, like \"rem\". Other units are available if defined in the\n\t* [enyo.dom.unitToPixelFactors]{@link enyo.dom.unitToPixelFactors} object.\n\t*\n\t* ```javascript\n\t* // Do calculations and get back the desired CSS unit.\n\t* var frameWidth = 250,\n\t*     frameWithMarginInches = enyo.dom.unit( 10 + frameWidth + 10, 'in' ),\n\t*     frameWithMarginRems = enyo.dom.unit( 10 + frameWidth + 10, 'rem' );\n\t* // '2.8125in' == frameWithMarginInches\n\t* // '22.5rem' == frameWithMarginRems\n\t* ```\n\t*\n\t* @param {(String|Number)} pixels - The the pixels or math to convert to the unit.\n\t*\t(\"px\" suffix in String format is permitted. ex: `'20px'`)\n\t* @param {(String)} toUnit - The name of the unit to convert to.\n\t* @returns {(Number|undefined)} Resulting conversion, in case of malformed input, `undefined`\n\t* @public\n\t*/\n\tunit: function (pixels, toUnit) {\n\t\tif (!toUnit || !this.unitToPixelFactors[toUnit]) return;\n\t\tif (typeof pixels == 'string' && pixels.substr(-2) == 'px') pixels = parseInt(pixels.substr(0, pixels.length - 2), 10);\n\t\tif (typeof pixels != 'number') return;\n\n\t\treturn (pixels / this.unitToPixelFactors[toUnit]) + '' + toUnit;\n\t},\n\n\t/**\n\t* Object that stores all of the pixel conversion factors to each keyed unit.\n\t*\n\t* @public\n\t*/\n\tunitToPixelFactors: {\n\t\t'rem': 12,\n\t\t'in': 96\n\t}\n};\n\n// override setInnerHtml for Windows 8 HTML applications\nif (typeof global.MSApp !== 'undefined') {\n\tdom.setInnerHtml = function(node, html) {\n\t\tglobal.MSApp.execUnsafeLocalFunction(function() {\n\t\t\tnode.innerHTML = html;\n\t\t});\n\t};\n}\n\n// use faster classList interface if it exists\nif (document.head && document.head.classList) {\n\tdom.hasClass = function(node, s) {\n\t\tif (node) {\n\t\t\treturn node.classList.contains(s);\n\t\t}\n\t};\n\tdom.addClass = function(node, s) {\n\t\tif (node) {\n\t\t\treturn node.classList.add(s);\n\t\t}\n\t};\n\tdom.removeClass = function (node, s) {\n\t\tif (node) {\n\t\t\treturn node.classList.remove(s);\n\t\t}\n\t};\n}\n\n/**\n* Allows bootstrapping in environments that do not have a global object right away.\n*\n* @param {Function} func - The function to run\n* @public\n*/\ndom.requiresWindow = function(func) {\n\tfunc();\n};\n\n\nvar cssTransformProps = ['transform', '-webkit-transform', '-moz-transform', '-ms-transform', '-o-transform'],\n\tstyleTransformProps = ['transform', 'webkitTransform', 'MozTransform', 'msTransform', 'OTransform'];\n\n/**\n* @private\n*/\ndom.calcCanAccelerate = function() {\n\t/* Android 2 is a liar: it does NOT support 3D transforms, even though Perspective is the best check */\n\tif (platform.android <= 2) {\n\t\treturn false;\n\t}\n\tvar p$ = ['perspective', 'WebkitPerspective', 'MozPerspective', 'msPerspective', 'OPerspective'];\n\tfor (var i=0, p; (p=p$[i]); i++) {\n\t\tif (typeof document.body.style[p] != 'undefined') {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n/**\n* @private\n*/\ndom.getCssTransformProp = function() {\n\tif (this._cssTransformProp) {\n\t\treturn this._cssTransformProp;\n\t}\n\tvar i = utils.indexOf(this.getStyleTransformProp(), styleTransformProps);\n\tthis._cssTransformProp = cssTransformProps[i];\n\treturn this._cssTransformProp;\n};\n\n/**\n* @private\n*/\ndom.getStyleTransformProp = function() {\n\tif (this._styleTransformProp || !document.body) {\n\t\treturn this._styleTransformProp;\n\t}\n\tfor (var i = 0, p; (p = styleTransformProps[i]); i++) {\n\t\tif (typeof document.body.style[p] != 'undefined') {\n\t\t\tthis._styleTransformProp = p;\n\t\t\treturn this._styleTransformProp;\n\t\t}\n\t}\n};\n\n/**\n* @private\n*/\ndom.domTransformsToCss = function(inTransforms) {\n\tvar n, v, text = '';\n\tfor (n in inTransforms) {\n\t\tv = inTransforms[n];\n\t\tif ((v !== null) && (v !== undefined) && (v !== '')) {\n\t\t\ttext +=  n + '(' + v + ') ';\n\t\t}\n\t}\n\treturn text;\n};\n\n/**\n* @private\n*/\ndom.transformsToDom = function(control) {\n\tvar css = this.domTransformsToCss(control.domTransforms),\n\t\tstyleProp;\n\n\tif (control.hasNode()) {\n\t\tstyleProp = this.getStyleTransformProp();\n\t} else {\n\t\tstyleProp = this.getCssTransformProp();\n\t}\n\n\tif (styleProp) control.applyStyle(styleProp, css);\n};\n\n/**\n* Returns `true` if the platform supports CSS3 Transforms.\n*\n* @returns {Boolean} `true` if platform supports CSS `transform` property;\n* otherwise, `false`.\n* @public\n*/\ndom.canTransform = function() {\n\treturn Boolean(this.getStyleTransformProp());\n};\n\n/**\n* Returns `true` if platform supports CSS3 3D Transforms.\n*\n* Typically used like this:\n* ```\n* if (dom.canAccelerate()) {\n* \tdom.transformValue(this.$.slidingThing, 'translate3d', x + ',' + y + ',' + '0')\n* } else {\n* \tdom.transformValue(this.$.slidingThing, 'translate', x + ',' + y);\n* }\n* ```\n*\n* @returns {Boolean} `true` if platform supports CSS3 3D Transforms;\n* otherwise, `false`.\n* @public\n*/\ndom.canAccelerate = function() {\n\treturn (this.accelerando !== undefined) ? this.accelerando : document.body && (this.accelerando = this.calcCanAccelerate());\n};\n\n/**\n* Applies a series of transforms to the specified {@link enyo.Control}, using\n* the platform's prefixed `transform` property.\n*\n* **Note:** Transforms are not commutative, so order is important.\n*\n* Transform values are updated by successive calls, so\n* ```javascript\n* dom.transform(control, {translate: '30px, 40px', scale: 2, rotate: '20deg'});\n* dom.transform(control, {scale: 3, skewX: '-30deg'});\n* ```\n*\n* is equivalent to:\n* ```javascript\n* dom.transform(control, {translate: '30px, 40px', scale: 3, rotate: '20deg', skewX: '-30deg'});\n* ```\n*\n* When applying these transforms in a WebKit browser, this is equivalent to:\n* ```javascript\n* control.applyStyle('-webkit-transform', 'translate(30px, 40px) scale(3) rotate(20deg) skewX(-30deg)');\n* ```\n*\n* And in Firefox, this is equivalent to:\n* ```javascript\n* control.applyStyle('-moz-transform', 'translate(30px, 40px) scale(3) rotate(20deg) skewX(-30deg)');\n* ```\n*\n* @param {enyo.Control} control - The {@link enyo.Control} to transform.\n* @param {Object} transforms - The set of transforms to apply to `control`.\n* @public\n*/\ndom.transform = function(control, transforms) {\n\tvar d = control.domTransforms = control.domTransforms || {};\n\tutils.mixin(d, transforms);\n\tthis.transformsToDom(control);\n};\n\n/**\n* Applies a single transform to the specified {@link enyo.Control}.\n*\n* Example:\n* ```\n* tap: function(inSender, inEvent) {\n* \tvar c = inEvent.originator;\n* \tvar r = c.rotation || 0;\n* \tr = (r + 45) % 360;\n* \tc.rotation = r;\n* \tdom.transformValue(c, 'rotate', r);\n* }\n* ```\n*\n* This will rotate the tapped control by 45 degrees clockwise.\n*\n* @param {enyo.Control} control - The {@link enyo.Control} to transform.\n* @param {String} transform - The name of the transform function.\n* @param {(String|Number)} value - The value to apply to the transform.\n* @public\n*/\ndom.transformValue = function(control, transform, value) {\n\tvar d = control.domTransforms = control.domTransforms || {};\n\td[transform] = value;\n\tthis.transformsToDom(control);\n};\n\n/**\n* Applies a transform that should trigger GPU compositing for the specified\n* {@link enyo.Control}. By default, the acceleration is only applied if the\n* browser supports it. You may also optionally force-set `value` directly, to\n* be applied to `translateZ(value)`.\n*\n* @param {enyo.Control} control - The {@link enyo.Control} to accelerate.\n* @param {(String|Number)} [value] - An optional value to apply to the acceleration transform\n*\tproperty.\n* @public\n*/\ndom.accelerate = function(control, value) {\n\tvar v = value == 'auto' ? this.canAccelerate() : value;\n\tthis.transformValue(control, 'translateZ', v ? 0 : null);\n};\n\n\n/**\n * The CSS `transition` property name for the current browser/platform, e.g.:\n *\n * * `-webkit-transition`\n * * `-moz-transition`\n * * `transition`\n *\n * @type {String}\n * @private\n */\ndom.transition = (platform.ios || platform.android || platform.chrome || platform.androidChrome || platform.safari)\n\t? '-webkit-transition'\n\t: (platform.firefox || platform.firefoxOS || platform.androidFirefox)\n\t\t? '-moz-transition'\n\t\t: 'transition';","require('../../enyo');\n\nvar\n\tjson = require('./json'),\n\tutils = require('./utils'),\n\tplatform = require('./platform');\n\n/**\n* These platforms only allow one argument for [console.log()]{@glossary console.log}:\n*\n* * android\n* * ios\n* * webos\n*\n* @private\n*/\nvar dumbConsole = Boolean(platform.android || platform.ios || platform.webos);\n\n/**\n* Internally used methods and properties associated with logging.\n*\n* @namespace exports.logging\n* @public\n*/\nexports = module.exports = /** @lends exports.logging */ {\n\t\n\t/**\n\t* The log level to use. Can be a value from -1 to 99, where -1 disables all\n\t* logging, 0 is 'error', 10 is 'warn', and 20 is 'log'. It is preferred that\n\t* this value be set using the [exports.setLogLevel()]{@link enyo~setLogLevel}\n\t* method.\n\t*\n\t* @type {Number}\n\t* @default 99\n\t* @public\n\t*/\n\tlevel: 99,\n\t\n\t/**\n\t* The known levels.\n\t*\n\t* @private\n\t*/\n\tlevels: {log: 20, warn: 10, error: 0},\n\t\n\t/**\n\t* @private\n\t*/\n\tshouldLog: function (fn) {\n\t\tvar ll = parseInt(this.levels[fn], 0);\n\t\treturn (ll <= this.level);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tvalidateArgs: function (args) {\n\t\t// gracefully handle and prevent circular reference errors in objects\n\t\tfor (var i=0, l=args.length, item; (item=args[i]) || i<l; i++) {\n\t\t\ttry {\n\t\t\t\tif (typeof item === 'object') {\n\t\t\t\t\targs[i] = json.stringify(item);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\targs[i] = 'Error: ' + e.message;\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\t_log: function (fn, args) {\n\t\t// avoid trying to use console on IE instances where the object hasn't been\n\t\t// created due to the developer tools being unopened\n\t\tvar console = global.console;\n\t\tif (typeof console === 'undefined') {\n            return;\n        }\n\t\t//var a$ = utils.logging.formatArgs(fn, args);\n\t\tvar a$ = utils.isArray(args) ? args : utils.cloneArray(args);\n\t\tif (platform.androidFirefox) {\n\t\t\t// Firefox for Android's console does not handle objects with circular references\n\t\t\tthis.validateArgs(a$);\n\t\t}\n\t\tif (dumbConsole) {\n\t\t\t// at least in early versions of webos, console.* only accept a single argument\n\t\t\ta$ = [a$.join(' ')];\n\t\t}\n\t\tvar fn$ = console[fn];\n\t\tif (fn$ && fn$.apply) {\n\t\t\t// some consoles support 'warn', 'info', and so on\n\t\t\tfn$.apply(console, a$);\n\t\t} else if (console.log.apply) {\n\t\t\t// some consoles support console.log.apply\n\t\t\tconsole.log.apply(console, a$);\n\t\t} else {\n\t\t\t// otherwise, do our own formatting\n\t\t\tconsole.log(a$.join(' '));\n\t\t}\n\t},\n\t\n\t/**\n\t* This is exposed elsewhere.\n\t*\n\t* @private\n\t*/\n\tlog: function (fn, args) {\n\n\t\tif (fn != 'log' && fn != 'warn' && fn != 'error') {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t\tfn = 'log';\n\t\t}\n\n\t\tvar console = global.console;\n\t\tif (typeof console !== 'undefined') {\n\t\t\tif (this.shouldLog(fn)) {\n\t\t\t\tthis._log(fn, args);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n* Sets the log level to the given value. This will restrict the amount of output depending on\n* the settings. The higher the value, the more output that will be allowed. The default is\n* 99. The value, -1, would silence all logging, even 'error' (0).\n* Without the 'see': {@link exports.log}.\n*\n* @see exports.logging.level\n* @see exports.log\n* @see exports.warn\n* @see exports.error\n* @param {Number} level - The level to set logging to.\n*/\nexports.setLogLevel = function (level) {\n\tvar ll = parseInt(level, 0);\n\tif (isFinite(ll)) {\n\t\tthis.level = ll;\n\t}\n};\n\n/**\n* A wrapper for [console.log()]{@glossary console.log}, compatible\n* across supported platforms. Will output only if the current\n* [log level]{@link exports.logging.level} allows it. [Object]{@glossary Object}\n* parameters will be serialized via [JSON.stringify()]{@glossary JSON.stringify}\n* automatically.\n*\n* @utility\n* @see {@glossary console.log}\n* @param {...*} - The arguments to be logged.\n* @public\n*/\n\n/**\n* A wrapper for [console.warn()]{@glossary console.warn}, compatible\n* across supported platforms. Will output only if the current\n* [log level]{@link exports.logging.level} allows it. [Object]{@glossary Object}\n* parameters will be serialized via [JSON.stringify()]{@glossary JSON.stringify}\n* automatically.\n*\n* @utility\n* @see {@glossary console.warn}\n* @param {...*} - The arguments to be logged.\n* @public\n*/\nexports.warn = function () {\n\tthis.log('warn', arguments);\n};\n\n/**\n* A wrapper for [console.error()]{@glossary console.error}, compatible\n* across supported platforms. Will output only if the current\n* [log level]{@link exports.logging.level} allows it. [Object]{@glossary Object}\n* parameters will be serialized via [JSON.stringify()]{@glossary JSON.stringify}\n* automatically.\n*\n* @utility\n* @see {@glossary console.error}\n* @param {...*} - The arguments to be logged.\n* @public\n*/\nexports.error = function () {\n\tthis.log('error', arguments);\n};","require('../../enyo');\n\nvar\n\tutils = require('./utils'),\n\tplatform = require('./platform'),\n\tpath = require('./pathResolver');\n\n/**\n* Parameters and options for the [enyo.xhr.request()]{@link enyo.xhr.request} method.\n*\n* @typedef {Object} enyo.xhr.request~Options\n* @property {String} url - The URL to request (required).\n* @property {String} method - One of `'GET'`, `'POST'`, `'DELETE'`, `'UPDATE'`, or\n* custom methods; defaults to `'GET'`.\n* @property {Function} callback - Optional callback method to fire when complete.\n* @property {Object} body - Optional serializable body for `POST` requests.\n* @property {Object} headers - Optional header overrides; defaults to `null`.\n* @property {String} username - Optional username to provide for authentication purposes.\n* @property {String} password - Optional password to provide for authentication purposes.\n* @property {Object} xhrFields - Optional key/value pairs to apply directly to the request.\n* @property {String} mimeType - Optional specification for the `MIME-Type` of the request.\n* @property {Boolean} mozSystem - Optional boolean to create cross-domain XHR (Firefox OS only).\n* @property {Boolean} mozAnon - Optional boolean to create anonymous XHR that does not send\n*\tcookies or authentication headers (Firefox OS only).\n* @private\n*/\n\n/**\n* An internally-used namespace for XHR-related methods and wrappers.\n*\n* @namespace enyo.xhr\n* @private\n*/\nmodule.exports = /** @lends enyo.xhr */ {\n\t\n\t/**\n\t* Internally-used method to execute XHR requests.\n\t*\n\t* Note that we explicitly add a `'cache-control: no-cache'` header for iOS 6 for any\n\t* non-`GET` requests to work around a system bug causing non-cachable requests to be\n\t* cached. To disable this, use the `header` property to specify an object where\n\t* `cache-control` is set to `null`.\n\t*\n\t* @param {enyo.xhr.request~Options} params - The options and properties for this XHR request.\n\t* @returns {XMLHttpRequest} The XHR request object.\n\t* @private\n\t*/\n\trequest: function (params) {\n\t\tvar xhr = this.getXMLHttpRequest(params);\n\t\tvar url = this.simplifyFileURL(path.rewrite(params.url));\n\t\t//\n\t\tvar method = params.method || 'GET';\n\t\tvar async = !params.sync;\n\t\t//\n\t\tif (params.username) {\n\t\t\txhr.open(method, url, async, params.username, params.password);\n\t\t} else {\n\t\t\txhr.open(method, url, async);\n\t\t}\n\t\t//\n\t\tutils.mixin(xhr, params.xhrFields);\n\t\t// only setup handler when we have a callback\n\t\tif (params.callback) {\n\t\t\tthis.makeReadyStateHandler(xhr, params.callback);\n\t\t}\n\t\t//\n\t\tparams.headers = params.headers || {};\n\t\t// work around iOS 6.0 bug where non-GET requests are cached\n\t\t// see http://www.einternals.com/blog/web-development/ios6-0-caching-ajax-post-requests\n\t\tif (method !== 'GET' && platform.ios && platform.ios == 6) {\n\t\t\tif (params.headers['cache-control'] !== null) {\n\t\t\t\tparams.headers['cache-control'] = params.headers['cache-control'] || 'no-cache';\n\t\t\t}\n\t\t}\n\t\t// user-set headers override any platform-default\n\t\tif (xhr.setRequestHeader) {\n\t\t\tfor (var key in params.headers) {\n\t\t\t\tif (params.headers[key]) {\n\t\t\t\t\txhr.setRequestHeader(key, params.headers[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//\n\t\tif((typeof xhr.overrideMimeType == 'function') && params.mimeType) {\n\t\t\txhr.overrideMimeType(params.mimeType);\n\t\t}\n\t\t//\n\t\txhr.send(params.body || null);\n\t\tif (!async && params.callback) {\n\t\t\txhr.onreadystatechange(xhr);\n\t\t}\n\t\treturn xhr;\n\t},\n\t\n\t/**\n\t* Removes any callbacks that might be set from Enyo code for an existing XHR\n\t* and stops the XHR from completing (if possible).\n\t*\n\t* @param {XMLHttpRequest} The - request to cancel.\n\t* @private\n\t*/\n\tcancel: function (xhr) {\n\t\tif (xhr.onload) {\n\t\t\txhr.onload = null;\n\t\t}\n\t\tif (xhr.onreadystatechange) {\n\t\t\txhr.onreadystatechange = null;\n\t\t}\n\t\tif (xhr.abort) {\n\t\t\txhr.abort();\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tmakeReadyStateHandler: function (inXhr, inCallback) {\n\t\tif (global.XDomainRequest && inXhr instanceof global.XDomainRequest) {\n\t\t\tinXhr.onload = function() {\n\t\t\t\tvar data;\n\t\t\t\tif (inXhr.responseType === 'arraybuffer') {\n\t\t\t\t\tdata = inXhr.response;\n\t\t\t\t} else if (typeof inXhr.responseText === 'string') {\n\t\t\t\t\tdata = inXhr.responseText;\n\t\t\t\t}\n\t\t\t\tinCallback.apply(null, [data, inXhr]);\n\t\t\t\tinXhr = null;\n\t\t\t};\n\t\t} else {\n\t\t\tinXhr.onreadystatechange = function() {\n\t\t\t\tif (inXhr && inXhr.readyState == 4) {\n\t\t\t\t\tvar data;\n\t\t\t\t\tif (inXhr.responseType === 'arraybuffer') {\n\t\t\t\t\t\tdata = inXhr.response;\n\t\t\t\t\t} else if (typeof inXhr.responseText === 'string') {\n\t\t\t\t\t\tdata = inXhr.responseText;\n\t\t\t\t\t}\n\t\t\t\t\tinCallback.apply(null, [data, inXhr]);\n\t\t\t\t\tinXhr = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tinOrigin: function (url) {\n\t\tvar a = document.createElement('a'), result = false;\n\t\ta.href = url;\n\t\t// protocol is ':' for relative URLs\n\t\tif (a.protocol === ':' ||\n\t\t\t\t(a.protocol === global.location.protocol &&\n\t\t\t\t\ta.hostname === global.location.hostname &&\n\t\t\t\t\ta.port === (global.location.port ||\n\t\t\t\t\t\t(global.location.protocol === 'https:' ? '443' : '80')))) {\n\t\t\tresult = true;\n\t\t}\n\t\treturn result;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tsimplifyFileURL: function (url) {\n\t\tvar a = document.createElement('a');\n\t\ta.href = url;\n\t\t// protocol is ':' for relative URLs\n\t\tif (a.protocol === 'file:' ||\n\t\t\ta.protocol === ':' && global.location.protocol === 'file:') {\n\t\t\t// leave off search and hash parts of the URL\n\t\t\t// and work around a bug in webOS 3 where the app's host has a domain string\n\t\t\t// in it that isn't resolved as a path\n\t\t\tvar host = (platform.webos < 4) ? '' : a.host;\n\t\t\treturn a.protocol + '//' + host + a.pathname;\n\t\t} else if (a.protocol === ':' && global.location.protocol === 'x-wmapp0:') {\n\t\t\t// explicitly return absolute URL for Windows Phone 8, as an absolute path is required for local files\n\t\t\treturn global.location.protocol + '//' + global.location.pathname.split('/')[0] + '/' + a.host + a.pathname;\n\t\t} else {\n\t\t\treturn url;\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tgetXMLHttpRequest: function (params) {\n\t\ttry {\n\t\t\t// only use XDomainRequest when it exists, no extra headers were set, and the\n\t\t\t// target URL maps to a domain other than the document origin.\n\t\t\tif (platform.ie < 10 && global.XDomainRequest && !params.headers &&\n\t\t\t\t!this.inOrigin(params.url) && !/^file:\\/\\//.test(global.location.href)) {\n\t\t\t\treturn new global.XDomainRequest();\n\t\t\t}\n\t\t} catch(e) {}\n\t\ttry {\n\n\t\t\tif (platform.firefoxOS) {\n\t\t\t\tvar shouldCreateNonStandardXHR = false; // flag to decide if we're creating the xhr or not\n\t\t\t\tvar xhrOptions = {};\n\n\t\t\t\t// mozSystem allows you to do cross-origin requests on Firefox OS\n\t\t\t\t// As seen in:\n\t\t\t\t//   https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Non-standard_properties\n\t\t\t\tif (params.mozSystem) {\n\t\t\t\t\txhrOptions.mozSystem = true;\n\t\t\t\t\tshouldCreateNonStandardXHR = true;\n\t\t\t\t}\n\n\t\t\t\t// mozAnon allows you to send a request without cookies or authentication headers\n\t\t\t\t// As seen in:\n\t\t\t\t//   https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Non-standard_properties\n\t\t\t\tif (params.mozAnon) {\n\t\t\t\t\txhrOptions.mozAnon = true;\n\t\t\t\t\tshouldCreateNonStandardXHR = true;\n\t\t\t\t}\n\n\t\t\t\tif (shouldCreateNonStandardXHR) {\n\t\t\t\t\treturn new XMLHttpRequest(xhrOptions);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new XMLHttpRequest();\n\t\t} catch(e) {}\n\t\treturn null;\n\t}\n};","require('../../enyo');\n\nvar\n\tDom = require('./dom');\n\nvar selfClosing = {img: 1, hr: 1, br: 1, area: 1, base: 1, basefont: 1, input: 1, link: 1,\n\tmeta: 1, command: 1, embed: 1, keygen: 1, wbr: 1, param: 1, source: 1, track: 1, col: 1};\n\n/**\n* This is the default render delegate used by {@link enyo.Control}. It\n* generates the HTML [string]{@glossary String} content and correctly inserts\n* it into the DOM. A string-concatenation technique is used to perform DOM\n* insertion in batches.\n*\n* @name enyo.HTMLStringDelegate\n* @type Object\n* @public\n*/\nmodule.exports = {\n\t\n\t/**\n\t* @private\n\t*/\n\tinvalidate: function (control, item) {\n\t\tswitch (item) {\n\t\tcase 'content':\n\t\t\tthis.renderContent(control);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcontrol.tagsValid = false;\n\t\t\tbreak;\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\trender: function (control) {\n\t\tif (control.parent) {\n\t\t\tcontrol.parent.beforeChildRender(control);\n\t\t\t\n\t\t\tif (!control.parent.generated) return;\n\t\t\tif (control.tag === null) return control.parent.render();\n\t\t}\n\t\t\n\t\tif (!control.hasNode()) this.renderNode(control);\n\t\tif (control.hasNode()) {\n\t\t\tthis.renderDom(control);\n\t\t\tif (control.generated) control.rendered();\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\trenderInto: function (control, parentNode) {\n\t\tparentNode.innerHTML = this.generateHtml(control);\n\t\t\n\t\tif (control.generated) control.rendered();\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\trenderNode: function (control) {\n\t\tthis.teardownRender(control);\n\t\tcontrol.node = document.createElement(control.tag);\n\t\tcontrol.addNodeToParent();\n\t\tcontrol.set('generated', true);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\trenderDom: function (control) {\n\t\tthis.renderAttributes(control);\n\t\tthis.renderStyles(control);\n\t\tthis.renderContent(control);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\trenderStyles: function (control) {\n\t\tvar style = control.style;\n\t\t\n\t\t// we can safely do this knowing it will synchronize properly without a double\n\t\t// set in the DOM because we're flagging the internal property\n\t\tif (control.hasNode()) {\n\t\t\tcontrol.node.style.cssText = style;\n\t\t\t// retrieve the parsed value for synchronization\n\t\t\tcontrol.cssText = style = control.node.style.cssText;\n\t\t\t// now we set it knowing they will be synchronized and everybody that is listening\n\t\t\t// will also be updated to know about the change\n\t\t\tcontrol.set('style', style);\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\trenderAttributes: function (control) {\n\t\tvar attrs = control.attributes,\n\t\t\tnode = control.hasNode(),\n\t\t\tkey,\n\t\t\tval;\n\t\t\n\t\tif (node) {\n\t\t\tfor (key in attrs) {\n\t\t\t\tval = attrs[key];\n\t\t\t\tif (val === null || val === false || val === \"\") {\n\t\t\t\t\tnode.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\tnode.setAttribute(key, val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\trenderContent: function (control) {\n\t\tif (control.generated) this.teardownChildren(control);\n\t\tif (control.hasNode()) control.node.innerHTML = this.generateInnerHtml(control);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tgenerateHtml: function (control) {\n\t\tvar content,\n\t\t\thtml;\n\t\t\n\t\tif (control.canGenerate === false) {\n\t\t\treturn '';\n\t\t}\n\t\t// do this first in case content generation affects outer html (styles or attributes)\n\t\tcontent = this.generateInnerHtml(control);\n\t\t// generate tag, styles, attributes\n\t\thtml = this.generateOuterHtml(control, content);\n\t\t// NOTE: 'generated' is used to gate access to findNodeById in\n\t\t// hasNode, because findNodeById is expensive.\n\t\t// NOTE: we typically use 'generated' to mean 'created in DOM'\n\t\t// but that has not actually happened at this point.\n\t\t// We set 'generated = true' here anyway to avoid having to walk the\n\t\t// control tree a second time (to set it later).\n\t\t// The contract is that insertion in DOM will happen synchronously\n\t\t// to generateHtml() and before anybody should be calling hasNode().\n\t\tcontrol.set('generated', true);\n\t\treturn html;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tgenerateOuterHtml: function (control, content) {\n\t\tif (!control.tag) return content;\n\t\tif (!control.tagsValid) this.prepareTags(control);\n\t\treturn control._openTag + content + control._closeTag;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tgenerateInnerHtml: function (control) {\n\t\tvar allowHtml = control.allowHtml,\n\t\t\tcontent;\n\t\t\n\t\t// flow can alter the way that html content is rendered inside\n\t\t// the container regardless of whether there are children.\n\t\tcontrol.flow();\n\t\tif (control.children.length) return this.generateChildHtml(control);\n\t\telse {\n\t\t\tcontent = control.get('content');\n\t\t\treturn allowHtml ? content : Dom.escape(content);\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tgenerateChildHtml: function (control) {\n\t\tvar child,\n\t\t\thtml = '',\n\t\t\ti = 0,\n\t\t\tdelegate;\n\t\t\n\t\tfor (; (child = control.children[i]); ++i) {\n\t\t\tdelegate = child.renderDelegate || this;\n\t\t\thtml += delegate.generateHtml(child);\n\t\t}\n\t\t\n\t\treturn html;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tprepareTags: function (control) {\n\t\tvar html = '';\n\t\t\n\t\t// open tag\n\t\thtml += '<' + control.tag + (control.style ? ' style=\"' + control.style + '\"' : '');\n\t\thtml += this.attributesToHtml(control.attributes);\n\t\tif (selfClosing[control.tag]) {\n\t\t\tcontrol._openTag = html + '/>';\n\t\t\tcontrol._closeTag = '';\n\t\t} else {\n\t\t\tcontrol._openTag = html + '>';\n\t\t\tcontrol._closeTag = '</' + control.tag + '>';\n\t\t}\n\t\t\n\t\tcontrol.tagsValid = true;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tattributesToHtml: function(attrs) {\n\t\tvar key,\n\t\t\tval,\n\t\t\thtml = '';\n\t\t\t\n\t\tfor (key in attrs) {\n\t\t\tval = attrs[key];\n\t\t\tif (val != null && val !== false && val !== '') {\n\t\t\t\thtml += ' ' + key + '=\"' + this.escapeAttribute(val) + '\"';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn html;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tescapeAttribute: function (text) {\n\t\tif (typeof text != 'string') return text;\n\t\n\t\treturn String(text).replace(/&/g, '&amp;').replace(/\\\"/g, '&quot;');\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tteardownRender: function (control, cache) {\n\t\tif (control.generated) this.teardownChildren(control, cache);\n\t\tcontrol.node = null;\n\t\tcontrol.set('generated', false);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tteardownChildren: function (control, cache) {\n\t\tvar child,\n\t\t\ti = 0;\n\t\t\t\n\t\tfor (; (child = control.children[i]); ++i) {\n\t\t\tchild.teardownRender(cache);\n\t\t}\n\t}\n};","require('../../enyo');\n\nvar\n\tlogger = require('./logger'),\n\tutils = require('./utils');\n\nvar defaultCtor = null;\n\n/**\n* Creates a JavaScript [constructor]{@glossary constructor} function with\n* a prototype defined by `props`. **All constructors must have a unique name.**\n*\n* `enyo.kind()` makes it easy to build a constructor-with-prototype (like a\n* class) that has advanced features like prototype-chaining\n* ([inheritance]{@glossary inheritance}).\n*\n* A plug-in system is included for extending the abilities of the\n* [kind]{@glossary kind} generator, and constructors are allowed to\n* perform custom operations when subclassed.\n*\n* If you make changes to `enyo.kind()`, be sure to add or update the appropriate\n* [unit tests](@link https://github.com/enyojs/enyo/tree/master/tools/test/core/tests).\n*\n* For more information, see the documentation on\n* [Kinds]{@linkplain $dev-guide/key-concepts/kinds.html} in the Enyo Developer Guide.\n*\n* @namespace enyo.kind\n* @param {Object} props - A [hash]{@glossary Object} of properties used to define and create\n*\tthe [kind]{@glossary kind}\n* @public\n*/\n/*jshint -W120*/\nvar kind = exports = module.exports = function (props) {\n/*jshint +W120*/\n\t// extract 'name' property\n\tvar name = props.name || '';\n\tdelete props.name;\n\t// extract 'kind' property\n\tvar hasKind = ('kind' in props);\n\tvar kindName = props.kind;\n\tdelete props.kind;\n\t// establish base class reference\n\tvar base = constructorForKind(kindName);\n\tvar isa = base && base.prototype || null;\n\t// if we have an explicit kind property with value undefined, we probably\n\t// tried to reference a kind that is not yet in scope\n\tif (hasKind && kindName === undefined || base === undefined) {\n\t\tvar problem = kindName === undefined ? 'undefined kind' : 'unknown kind (' + kindName + ')';\n\t\tthrow 'enyo.kind: Attempt to subclass an ' + problem + '. Check dependencies for [' + (name || '<unnamed>') + '].';\n\t}\n\t// make a boilerplate constructor\n\tvar ctor = kind.makeCtor();\n\t// semi-reserved word 'constructor' causes problems with Prototype and IE, so we rename it here\n\tif (props.hasOwnProperty('constructor')) {\n\t\tprops._constructor = props.constructor;\n\t\tdelete props.constructor;\n\t}\n\t// create our prototype\n\t//ctor.prototype = isa ? enyo.delegate(isa) : {};\n\tutils.setPrototype(ctor, isa ? utils.delegate(isa) : {});\n\t// there are special cases where a base class has a property\n\t// that may need to be concatenated with a subclasses implementation\n\t// as opposed to completely overwriting it...\n\tkind.concatHandler(ctor, props);\n\n\t// put in our props\n\tutils.mixin(ctor.prototype, props);\n\t// alias class name as 'kind' in the prototype\n\t// but we actually only need to set this if a new name was used,\n\t// not if it is inheriting from a kind anonymously\n\tif (name) {\n\t\tctor.prototype.kindName = name;\n\t}\n\t// this is for anonymous constructors\n\telse {\n\t\tctor.prototype.kindName = base && base.prototype? base.prototype.kindName: '';\n\t}\n\t// cache superclass constructor\n\tctor.prototype.base = base;\n\t// reference our real constructor\n\tctor.prototype.ctor = ctor;\n\t// support pluggable 'features'\n\tutils.forEach(kind.features, function(fn){ fn(ctor, props); });\n\t\n\tif (name) kindCtors[name] = ctor;\n\t\n\treturn ctor;\n};\n\nexports.setDefaultCtor = function (ctor) {\n\tdefaultCtor = ctor;\n};\n\nvar getDefaultCtor = exports.getDefaultCtor = function () {\n\treturn defaultCtor;\n};\n\n/**\n* @private\n*/\nvar concatenated = exports.concatenated = [];\n\n/**\n* Creates a singleton of a given [kind]{@glossary kind} with a given\n* definition. **The `name` property will be the instance name of the singleton\n* and must be unique.**\n*\n* ```javascript\n*\tenyo.singleton({\n*\t\tkind: 'enyo.Control',\n*\t\tname: 'app.MySingleton',\n*\t\tpublished: {\n*\t\t\tvalue: 'foo'\n*\t\t},\n*\t\tmakeSomething: function() {\n*\t\t\t//...\n*\t\t}\n*\t});\n*\n*\tapp.MySingleton.makeSomething();\n*\tapp.MySingleton.setValue('bar');\n*```\n*\n* @public\n*/\nexports.singleton = function (conf, context) {\n\t// extract 'name' property (the name of our singleton)\n\tvar name = conf.name;\n\tdelete(conf.name);\n\t// create an unnamed kind and save its constructor's function\n\tvar Kind = kind(conf);\n\tvar inst;\n\t// create the singleton with the previous name and constructor\n\tutils.setPath.call(context || global, name, (inst = new Kind()));\n\treturn inst;\n};\n\n/**\n* @private\n*/\nkind.makeCtor = function () {\n\tvar enyoConstructor = function () {\n\t\tif (!(this instanceof enyoConstructor)) {\n\t\t\tthrow 'enyo.kind: constructor called directly, not using \"new\"';\n\t\t}\n\n\t\t// two-pass instantiation\n\t\tvar result;\n\t\tif (this._constructor) {\n\t\t\t// pure construction\n\t\t\tresult = this._constructor.apply(this, arguments);\n\t\t}\n\t\t// defer initialization until entire constructor chain has finished\n\t\tif (this.constructed) {\n\t\t\t// post-constructor initialization\n\t\t\tthis.constructed.apply(this, arguments);\n\t\t}\n\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t};\n\treturn enyoConstructor;\n};\n\n/**\n* Classes referenced by name may omit this namespace (e.g., \"Button\" instead of \"enyo.Button\")\n*\n* @private\n*/\nkind.defaultNamespace = 'enyo';\n\n/**\n* Feature hooks for the oop system\n*\n* @private\n*/\nkind.features = [];\n\n/**\n* Used internally by several mechanisms to allow safe and normalized handling for extending a\n* [kind's]{@glossary kind} super-methods. It can take a\n* [constructor]{@glossary constructor}, a [prototype]{@glossary Object.prototype}, or an\n* instance.\n*\n* @private\n*/\nkind.extendMethods = function (ctor, props, add) {\n\tvar proto = ctor.prototype || ctor,\n\t\tb = proto.base;\n\tif (!proto.inherited && b) {\n\t\tproto.inherited = kind.inherited;\n\t}\n\t// rename constructor to _constructor to work around IE8/Prototype problems\n\tif (props.hasOwnProperty('constructor')) {\n\t\tprops._constructor = props.constructor;\n\t\tdelete props.constructor;\n\t}\n\t// decorate function properties to support inherited (do this ex post facto so that\n\t// ctor.prototype is known, relies on elements in props being copied by reference)\n\tfor (var n in props) {\n\t\tvar p = props[n];\n\t\tif (isInherited(p)) {\n\t\t\t// ensure that if there isn't actually a super method to call, it won't\n\t\t\t// fail miserably - while this shouldn't happen often, it is a sanity\n\t\t\t// check for mixin-extensions for kinds\n\t\t\tif (add) {\n\t\t\t\tp = proto[n] = p.fn(proto[n] || utils.nop);\n\t\t\t} else {\n\t\t\t\tp = proto[n] = p.fn(b? (b.prototype[n] || utils.nop): utils.nop);\n\t\t\t}\n\t\t}\n\t\tif (utils.isFunction(p)) {\n\t\t\tif (add) {\n\t\t\t\tproto[n] = p;\n\t\t\t\tp.displayName = n + '()';\n\t\t\t} else {\n\t\t\t\tp._inherited = b? b.prototype[n]: null;\n\t\t\t\t// FIXME: we used to need some extra values for inherited, then inherited got cleaner\n\t\t\t\t// but in the meantime we used these values to support logging in Object.\n\t\t\t\t// For now we support this legacy situation, by suppling logging information here.\n\t\t\t\tp.displayName = proto.kindName + '.' + n + '()';\n\t\t\t}\n\t\t}\n\t}\n};\nkind.features.push(kind.extendMethods);\n\n/**\n* Called by {@link enyo.Object} instances attempting to access super-methods\n* of a parent class ([kind]{@glossary kind}) by calling\n* `this.inherited(arguments)` from within a kind method. This can only be done\n* safely when there is known to be a super class with the same method.\n*\n* @private\n*/\nkind.inherited = function (originals, replacements) {\n\t// one-off methods are the fast track\n\tvar target = originals.callee;\n\tvar fn = target._inherited;\n\n\t// regardless of how we got here, just ensure we actually\n\t// have a function to call or else we throw a console\n\t// warning to notify developers they are calling a\n\t// super method that doesn't exist\n\tif ('function' === typeof fn) {\n\t\tvar args = originals;\n\t\tif (replacements) {\n\t\t\t// combine the two arrays, with the replacements taking the first\n\t\t\t// set of arguments, and originals filling up the rest.\n\t\t\targs = [];\n\t\t\tvar i = 0, l = replacements.length;\n\t\t\tfor (; i < l; ++i) {\n\t\t\t\targs[i] = replacements[i];\n\t\t\t}\n\t\t\tl = originals.length;\n\t\t\tfor (; i < l; ++i) {\n\t\t\t\targs[i] = originals[i];\n\t\t\t}\n\t\t}\n\t\treturn fn.apply(this, args);\n\t} else {\n\t\tlogger.warn('enyo.kind.inherited: unable to find requested ' +\n\t\t\t'super-method from -> ' + originals.callee.displayName + ' in ' + this.kindName);\n\t}\n};\n\n// dcl inspired super-inheritance\n\n/**\n* @private\n*/\nvar Inherited = function (fn) {\n\tthis.fn = fn;\n};\n\n/**\n* When defining a method that overrides an existing method in a [kind]{@glossary kind}, you\n* can wrap the definition in this function and it will decorate it appropriately for inheritance\n* to work.\n*\n* The older `this.inherited(arguments)` method still works, but this version results in much\n* faster code and is the only one supported for kind [mixins]{@glossary mixin}.\n*\n* @param {Function} fn - A [function]{@glossary Function} that takes a single\n*   argument (usually named `sup`) and returns a function where\n*   `sup.apply(this, arguments)` is used as a mechanism to make the\n*   super-call.\n* @public\n*/\nexports.inherit = function (fn) {\n\treturn new Inherited(fn);\n};\n\n/**\n* @private\n*/\nvar isInherited = exports.isInherited = function (fn) {\n\treturn fn && (fn instanceof Inherited);\n};\n\n\n//\n// 'statics' feature\n//\nkind.features.push(function(ctor, props) {\n\t// install common statics\n\tif (!ctor.subclass) {\n\t\tctor.subclass = kind.statics.subclass;\n\t}\n\tif (!ctor.extend) {\n\t\tctor.extend = kind.statics.extend;\n\t}\n\t// move props statics to constructor\n\tif (props.statics) {\n\t\tutils.mixin(ctor, props.statics);\n\t\tdelete ctor.prototype.statics;\n\t}\n\t// also support protectedStatics which won't interfere with defer\n\tif (props.protectedStatics) {\n\t\tutils.mixin(ctor, props.protectedStatics);\n\t\tdelete ctor.prototype.protectedStatics;\n\t}\n\t// allow superclass customization\n\tvar base = ctor.prototype.base;\n\twhile (base) {\n\t\tbase.subclass(ctor, props);\n\t\tbase = base.prototype.base;\n\t}\n});\n\n/**\n* @private\n*/\nkind.statics = {\n\n\t/**\n\t* A [kind]{@glossary kind} may set its own `subclass()` method as a\n\t* static method for its [constructor]{@glossary constructor}. Whenever\n\t* it is subclassed, the constructor and properties will be passed through\n\t* this method for special handling of important features.\n\t*\n\t* @param {Function} ctor - The [constructor]{@glossary constructor} of the\n\t*\t[kind]{@glossary kind} being subclassed.\n\t* @param {Object} props - The properties of the kind being subclassed.\n\t* @memberof enyo.kind\n\t* @public\n\t*/\n\tsubclass: function (ctor, props) {},\n\n\t/**\n\t* Allows for extension of the current [kind]{@glossary kind} without\n\t* creating a new kind. This method is available on all\n\t* [constructors]{@glossary constructor}, although calling it on a\n\t* [deferred]{@glossary deferred} constructor will force it to be\n\t* resolved at that time. This method does not re-run the\n\t* {@link enyo.kind.features} against the constructor or instance.\n\t*\n\t* @param {Object|Object[]} props A [hash]{@glossary Object} or [array]{@glossary Array}\n\t*\tof [hashes]{@glossary Object}. Properties will override\n\t*\t[prototype]{@glossary Object.prototype} properties. If a\n\t*\tmethod that is being added already exists, the new method will\n\t*\tsupersede the existing one. The method may call\n\t*\t`this.inherited()` or be wrapped with `kind.inherit()` to call\n\t*\tthe original method (this chains multiple methods tied to a\n\t*\tsingle [kind]{@glossary kind}).\n\t* @param {Object} [target] - The instance to be extended. If this is not specified, then the\n\t*\t[constructor]{@glossary constructor} of the\n\t*\t[object]{@glossary Object} this method is being called on will\n\t*\tbe extended.\n\t* @returns {Object} The constructor of the class, or specific\n\t*\tinstance, that has been extended.\n\t* @memberof enyo.kind\n\t* @public\n\t*/\n\textend: function (props, target) {\n\t\tvar ctor = this\n\t\t\t, exts = utils.isArray(props)? props: [props]\n\t\t\t, proto, fn;\n\n\t\tfn = function (key, value) {\n\t\t\treturn !(typeof value == 'function' || isInherited(value)) && concatenated.indexOf(key) === -1;\n\t\t};\n\n\t\tproto = target || ctor.prototype;\n\t\tfor (var i=0, ext; (ext=exts[i]); ++i) {\n\t\t\tconcatHandler(proto, ext, true);\n\t\t\tkind.extendMethods(proto, ext, true);\n\t\t\tutils.mixin(proto, ext, {filter: fn});\n\t\t}\n\n\t\treturn target || ctor;\n\t}\n};\n\n/**\n* @private\n*/\nvar concatHandler = exports.concatHandler = function (ctor, props, instance) {\n\tvar proto = ctor.prototype || ctor\n\t\t, base = proto.ctor;\n\n\twhile (base) {\n\t\tif (base.concat) base.concat(ctor, props, instance);\n\t\tbase = base.prototype.base;\n\t}\n};\n\n/**\n* Factory for [kinds]{@glossary kind} identified by [strings]{@glossary String}.\n*\n* @private\n*/\nvar kindCtors = exports._kindCtors = {};\n\n/**\n* @private\n*/\nvar constructorForKind = exports.constructorForKind = function (kind) {\n\tif (kind === null) {\n\t\treturn kind;\n\t} else if (kind === undefined) {\n\t\treturn getDefaultCtor();\n\t}\n\telse if (utils.isFunction(kind)) {\n\t\treturn kind;\n\t}\n\n\t// use memoized constructor if available...\n\tvar ctor = kindCtors[kind];\n\tif (ctor) {\n\t\treturn ctor;\n\t}\n\t// otherwise look it up and memoize what we find\n\t//\n\t// if kind is an object in enyo, say \"Control\", then ctor = enyo[\"Control\"]\n\t// if kind is a path under enyo, say \"Heritage.Button\", then ctor = enyo[\"Heritage.Button\"] || enyo.Heritage.Button\n\t// if kind is a fully qualified path, say \"enyo.Heritage.Button\", then ctor = enyo[\"enyo.Heritage.Button\"] || enyo.enyo.Heritage.Button || enyo.Heritage.Button\n\t//\n\t// Note that kind \"Foo\" will resolve to enyo.Foo before resolving to global \"Foo\".\n\t// This is important so \"Image\" will map to built-in Image object, instead of enyo.Image control.\n\tctor = Theme[kind] || (global.enyo && global.enyo[kind]) || utils.getPath.call(global, 'enyo.' + kind) || global[kind] || utils.getPath.call(global, kind);\n\n\t// If what we found at this namespace isn't a function, it's definitely not a kind constructor\n\tif (!utils.isFunction(ctor)) {\n\t\tthrow '[' + kind + '] is not the name of a valid kind.';\n\t}\n\tkindCtors[kind] = ctor;\n\treturn ctor;\n};\n\n/**\n* Namespace for current theme (`enyo.Theme.Button` references the Button specialization for the\n* current theme).\n*\n* @private\n*/\nvar Theme = exports.Theme = {};\n\n/**\n* @private\n*/\nexports.registerTheme = function (ns) {\n\tutils.mixin(Theme, ns);\n};\n\n/**\n* @private\n*/\nexports.createFromKind = function (nom, param) {\n\tvar Ctor = nom && constructorForKind(nom);\n\tif (Ctor) {\n\t\treturn new Ctor(param);\n\t}\n};","require('../../enyo');\n\nvar kind = require('./kind');\n\n/**\n* An internally-used support {@glossary mixin} that is applied to all\n* [components]{@link enyo.Component} of an {@link enyo.Application} instance\n* (and to their components, recursively). This mixin adds an `app` property to\n* each component--a local reference to the `enyo.Application` instance that\n* the component belongs to.\n* \n* @mixin enyo.ApplicationSupport\n* @protected\n*/\nmodule.exports = {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'ApplicationSupport',\n\n\t/**\n\t* @private\n\t*/\n\tadjustComponentProps: kind.inherit(function (sup) {\n\t\treturn function (props) {\n\t\t\tprops.app = props.app || this.app;\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\t// release the reference to the application\n\t\t\tthis.app = null;\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t})\n\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\n/**\n* All {@link enyo.Binding} instances are stored in this list and may be retrieved via the\n* {@link enyo.Binding.find} method using an {@link enyo.Binding#id} identifier.\n*\n* @name enyo.bindings\n* @public\n*/\nvar bindings = [];\n\nvar DIRTY_FROM = 0x01\n\t, DIRTY_TO = 0x02;\n\n/**\n* Used to determine if an {@link enyo.Binding} is actually ready.\n*\n* @private\n*/\nfunction ready (binding) {\n\tvar rdy = binding.ready;\n\t\n\tif (!rdy) {\n\t\t\n\t\tvar from = binding.from || '',\n\t\t\tto = binding.to || '',\n\t\t\tsource = binding.source,\n\t\t\ttarget = binding.target,\n\t\t\towner = binding.owner,\n\t\t\ttwoWay = !binding.oneWay,\n\t\t\ttoTarget;\n\t\t\n\t\tif (typeof from != 'string') from = '';\n\t\tif (typeof to != 'string') to = '';\n\t\t\n\t\tif (!source) {\n\t\t\t\n\t\t\t// the worst case scenario here is for backward compatibility purposes\n\t\t\t// we have to at least be able to derive the source via the from string\n\t\t\tif (from[0] == '^') {\n\t\t\t\t\n\t\t\t\t// this means we're reaching for a global\n\t\t\t\tvar fromParts = from.split('.');\n\t\t\t\tfrom = fromParts.pop();\n\t\t\t\tsource = utils.getPath.call(global, fromParts.join('.').slice(1));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tsource = owner;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!target) {\n\t\t\t\n\t\t\t// same worst case as above, for backwards compatibility purposes\n\t\t\t// we have to at least be able to derive the target via the to string\n\t\t\tif (to[0] == '^') {\n\t\t\t\t\n\t\t\t\t// this means we're reaching for a global\n\t\t\t\tvar toParts = to.split('.');\n\t\t\t\tto = toParts.pop();\n\t\t\t\ttarget = utils.getPath.call(global, toParts.join('.').slice(1));\n\t\t\t} else {\n\t\t\t\ttarget = owner;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// we do this so we don't overwrite the originals in case we need to reset later\n\t\tbinding._target = target;\n\t\tbinding._source = source;\n\t\tbinding._from = from[0] == '.'? from.slice(1): from;\n\t\tbinding._to = to[0] == '.'? to.slice(1): to;\n\t\t\n\t\tif (!twoWay) {\n\t\t\ttoTarget = binding._to.split('.');\n\t\t\tif (toTarget.length > 2) {\n\t\t\t\ttoTarget.pop();\n\t\t\t\tbinding._toTarget = toTarget.join('.');\n\t\t\t}\n\t\t}\n\t\t\n\t\t// now our sanitization\n\t\trdy = !! (\n\t\t\t(source && (typeof source == 'object')) &&\n\t\t\t(target && (typeof target == 'object')) &&\n\t\t\t(from) &&\n\t\t\t(to)\n\t\t);\n\t}\n\t\n\t/*jshint -W093 */\n\treturn (binding.ready = rdy);\n\t/*jshint +W093 */\n}\n\n/**\n* The details for an {@link enyo.Binding#transform} [function]{@glossary Function}, \n* including the available parameters and how they can be used.\n* \n* @callback enyo.Binding~Transform\n* @param {*} value - The value being synchronized.\n* @param {Number} direction - The direction of synchronization; will be either\n* \t1 (source value has changed and will be written to target) or 2 (target\n* \tvalue has changed and will be written to source).\n* @param {Object} binding - A reference to the associated [binding]{@link enyo.Binding}. In cases \n* \twhere the binding should be interrupted and not propagate the synchronization at all, call\n* \tthe [stop()]{@link enyo.Binding#stop} method on the passed-in binding reference.\n*/\n\n/**\n* {@link enyo.Binding} is a mechanism used to keep properties synchronized. A \n* binding may be used to link two properties on different\n* [objects]{@glossary Object}, or even two properties on the same object.\n* Once a binding has been established, it will wait for change notifications;\n* when a notification arrives, the binding will synchronize the value between\n* the two ends. Note that bindings may be either\n* [one-way]{@link enyo.Binding#oneWay} (the default) or\n* [two-way]{@link enyo.Binding#oneWay}.\n* \n* Usually, you will not need to create Binding objects arbitrarily, but will\n* instead rely on the public [BindingSupport API]{@link enyo.BindingSupport},\n* which is applied to [enyo.Object]{@link enyo.Object} and so is available on\n* all of its [subkinds]{@glossary subkind}.\n* \n* @class enyo.Binding\n* @public\n*/\nvar Binding = module.exports = kind(\n\t/** @lends enyo.Binding.prototype */ {\n\t\n\tname: 'enyo.Binding',\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: null,\n\t\n\t/**\n\t* @private\n\t*/\n\n\t\n\t/**\n\t* If a [binding]{@link enyo.Binding} is one-way, this flag should be `true` (the default). \n\t* If this flag is set to `false`, the binding will be two-way.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\toneWay: true,\n\t\n\t/**\n\t* If the [binding]{@link enyo.Binding} was able to resolve both ends (i.e., its \n\t* [source]{@link enyo.Binding#source} and [target]{@link enyo.Binding#target} \n\t* [objects]{@glossary Object}), this value will be `true`. Setting this manually will\n\t* have undesirable effects.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tconnected: false,\n\t\n\t/**\n\t* This property is used extensively for various purposes within a\n\t* [binding]{@link enyo.Binding}. One primary purpose is to serve as a root\n\t* [object]{@glossary Object} from which to\tsearch for the binding's ends (the\n\t* [source]{@link enyo.Binding#source} and/or [target]{@link enyo.Binding#target}).\n\t* If the owner created the binding, it will also be responsible for destroying \n\t* it (automatically).\n\t*\n\t* @type {enyo.Object}\n\t* @default null\n\t* @public\n\t*/\n\towner: null,\n\t\n\t/**\n\t* By default, a [binding]{@link enyo.Binding} will attempt to connect to both ends \n\t* ([source]{@link enyo.Binding#source} and [target]{@link enyo.Binding#target}). If this \n\t* process should be deferred, set this flag to `false`.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\tautoConnect: true,\n\t\n\t/**\n\t* By default, a [binding]{@link enyo.Binding} will attempt to synchronize its values from \n\t* its [source]{@link enyo.Binding#source} to its [target]{@link enyo.Binding#target}. If \n\t* this process should be deferred, set this flag to `false`.\n\t* \n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\tautoSync: true,\n\t\n\t/**\n\t* Set this only to a reference for an [object]{@glossary Object} to use\n\t* as the source for the [binding]{@link enyo.Binding}. If this is not a\n\t* [bindable]{@link enyo.BindingSupport} object, the source will be derived\n\t* from the [from]{@link enyo.Binding#from} property during initialization.\n\t* \n\t* @type {Object}\n\t* @default null\n\t* @public\n\t*/\n\tsource: null,\n\t\n\t/**\n\t* Set this only to a reference for an [object]{@glossary Object} to use\n\t* as the target for the [binding]{@link enyo.Binding}. If this is not a\n\t* [bindable]{@link enyo.BindingSupport} object, the target will will be\n\t* derived from the [to]{@link enyo.Binding#to} property during initialization.\n\t* \n\t* @type {Object}\n\t* @default null\n\t* @public\n\t*/\n\ttarget: null,\n\t\n\t/**\n\t* A path in which the property of the [source]{@link enyo.Binding#source} to\n\t* bind from may be found. If the source is explicitly provided and the path\n\t* is relative (i.e., it begins with a `\".\"`), it is relative to the source;\n\t* otherwise, it is relative to the [owner]{@link enyo.Binding#owner} of the\n\t* [binding]{@link enyo.Binding}. To have a binding be evaluated from the\n\t* global scope, prefix the path with a `\"^\"`. If the source and the `\"^\"`\n\t* are used in tandem, the `\"^\"` will be ignored and the path will be assumed\n\t* to be relative to the provided source.\n\t* \n\t* @type {String}\n\t* @default null\n\t* @public\n\t*/\n\tfrom: null,\n\t\n\t/**\n\t* The `dirty` property represents the changed value state of both the property designated by\n\t* the [from]{@link enyo.Binding#from} path and the property designated by the \n\t* [to]{@link enyo.Binding#to} path.\n\t*\n\t* @type {Number}\n\t* @default enyo.Binding.DIRTY_FROM\n\t* @public\n\t*/\n\tdirty: DIRTY_FROM,\n\t\n\t/**\n\t* A path in which the property of the [target]{@link enyo.Binding#target} to\n\t* bind from may be found. If the target is explicitly provided and the path\n\t* is relative (i.e., it begins with a `\".\"`), it is relative to the target;\n\t* otherwise, it is relative to the owner of the [binding]{@link enyo.Binding}.\n\t* To have a binding be evaluated from the global scope, prefix the path with\n\t* a `\"^\"`. If the target and the `\"^\"` are used in tandem, the `\"^\"` will be\n\t* ignored and the path will be assumed to be relative to the provided target.\n\t* \n\t* @type {String}\n\t* @default null\n\t* @public\n\t*/\n\tto: null,\n\n\t/**\n\t* Set this to a [function]{@glossary Function} or the name of a method on\n\t* the [owner]{@link enyo.Binding#owner} of this [binding]{@link enyo.Binding}.\n\t* The transform is used to programmatically modify the value being synchronized.\n\t* See {@link enyo.Binding~Transform} for detailed information on the parameters\n\t* that are available to `transform`.\n\t* \n\t* @type {enyo.Binding~Transform}\n\t* @default null\n\t* @public\n\t*/\n\ttransform: null,\n\t\n\t/**\n\t* Indicates whether the [binding]{@link enyo.Binding} is currently connected.\n\t*\n\t* @returns {Boolean} `true` if connected; otherwise, `false`.\n\t* @public\n\t*/\n\tisConnected: function () {\n\t\tvar from = this._from,\n\t\t\tto = this.oneWay ? (this._toTarget || this._to) : this._to,\n\t\t\tsource = this._source,\n\t\t\ttarget = this._target,\n\t\t\ttoChain,\n\t\t\tfromChain;\n\t\t\t\n\t\tif (from && to && source && target) {\n\t\t\tif (!this.oneWay || this._toTarget) toChain = target.getChains()[to];\n\t\t\tfromChain = source.getChains()[from];\n\t\t\t\n\t\t\treturn this.connected\n\t\t\t\t&& (fromChain ? fromChain.isConnected() : true)\n\t\t\t\t&& (toChain ? toChain.isConnected() : true);\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t* Causes a single propagation attempt to fail. Typically not called outside\n\t* the scope of a [transform]{@link enyo.Binding#transform}.\n\t* \n\t* @public\n\t*/\n\tstop: function () {\n\t\tthis._stop = true;\n\t},\n\t\n\t/**\n\t* Indicates whether the [binding]{@link enyo.Binding} is actually ready.\n\t* \n\t* @returns {Boolean} `true` if ready; otherwise, `false`.\n\t* @public\n\t*/\n\tisReady: function () {\n\t\treturn this.ready || ready(this);\n\t},\n\t\n\t/**\n\t* Resets all properties to their original state.\n\t* \n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\treset: function () {\n\t\tthis.disconnect();\n\t\tthis.ready = null;\n\t\tthis._source = this._target = this._to = this._from = this._toTarget = null;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Rebuilds the entire [binding]{@link enyo.Binding}. Will synchronize if it is able to \n\t* connect and the [autoSync]{@link enyo.Binding#autoSync} flag is `true`.\n\t* \n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\trebuild: function () {\n\t\treturn this.reset().connect();\n\t},\n\t\n\t/**\n\t* Connects the ends (i.e., the [source]{@link enyo.Binding#source} and\n\t* [target]{@link enyo.Binding#target}) of the [binding]{@link enyo.Binding}. While you\n\t* typically won't need to call this method, it is safe to call even when the ends are\n\t* already established. Note that if one or both of the ends does become connected and the\n\t* [autoSync]{@link enyo.Binding#autoSync} flag is `true`, the ends will automatically be\n\t* synchronized.\n\t* \n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tconnect: function () {\n\t\tif (!this.isConnected()) {\n\t\t\tif (this.isReady()) {\n\t\t\t\tthis._source.observe(this._from, this._sourceChanged, this, {priority: true});\n\t\t\t\t\n\t\t\t\t// for two-way bindings we register to observe changes\n\t\t\t\t// from the target\n\t\t\t\tif (!this.oneWay) this._target.observe(this._to, this._targetChanged, this);\n\t\t\t\telse if (this._toTarget) {\n\t\t\t\t\tthis._target.observe(this._toTarget, this._toTargetChanged, this, {priority: true});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// we flag it as having been connected\n\t\t\t\tthis.connected = true;\n\t\t\t\tif (this.isConnected() && this.autoSync) this.sync(true);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Disconnects from the ends (i.e., the [source]{@link enyo.Binding#source} and \n\t* [target]{@link enyo.Binding#target}) if a connection exists at either end. This method \n\t* will most likely not need to be called directly.\n\t* \n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tdisconnect: function () {\n\t\tif (this.isConnected()) {\n\t\t\tthis._source.unobserve(this._from, this._sourceChanged, this);\n\t\t\t\n\t\t\t// for two-way bindings we unregister the observer from\n\t\t\t// the target as well\n\t\t\tif (!this.oneWay) this._target.unobserve(this._to, this._targetChanged, this);\n\t\t\telse if (this._toTarget) {\n\t\t\t\tthis._target.unobserve(this._toTarget, this._toTargetChanged, this);\n\t\t\t}\n\t\t\t\n\t\t\tthis.connected = false;\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Synchronizes values from the [source]{@link enyo.Binding#source} to the\n\t* [target]{@link enyo.Binding#target}. This usually will not need to be called manually.\n\t* [Two-way bindings]{@link enyo.Binding#oneWay} will automatically synchronize from the\n\t* target end once they are connected.\n\t* \n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tsync: function (force) {\n\t\tvar source = this._source,\n\t\t\ttarget = this._target,\n\t\t\tfrom = this._from,\n\t\t\tto = this._to,\n\t\t\txform = this.getTransform(),\n\t\t\tval;\n\t\t\n\t\tif (this.isReady() && this.isConnected()) {\n\t\t\t\t\n\t\t\tswitch (this.dirty || (force && DIRTY_FROM)) {\n\t\t\tcase DIRTY_TO:\n\t\t\t\tval = target.get(to);\n\t\t\t\tif (xform) val = xform.call(this.owner || this, val, DIRTY_TO, this);\n\t\t\t\tif (!this._stop) source.set(from, val, {create: false});\n\t\t\t\tbreak;\n\t\t\tcase DIRTY_FROM:\n\t\t\t\t\n\t\t\t// @TODO: This should never need to happen but is here just in case\n\t\t\t// it is ever arbitrarily called not having been dirty?\n\t\t\t// default:\n\t\t\t\tval = source.get(from);\n\t\t\t\tif (xform) val = xform.call(this.owner || this, val, DIRTY_FROM, this);\n\t\t\t\tif (!this._stop) target.set(to, val, {create: false});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.dirty = null;\n\t\t\tthis._stop = null;\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Releases all of the [binding's]{@link enyo.Binding} parts and unregisters its \n\t* [observers]{@link enyo.ObserverSupport}. Typically, this method will not need to be called \n\t* directly unless the binding was created without an [owner]{@link enyo.Binding#owner}.\n\t* \n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tdestroy: function () {\n\t\tvar owner = this.owner,\n\t\t\tidx;\n\t\t\n\t\tthis.disconnect();\n\t\tthis.owner = null;\n\t\tthis.source = this._source = null;\n\t\tthis.target = this._target = null;\n\t\tthis.ready = null;\n\t\tthis.destroyed = true;\n\t\t\n\t\t// @todo: remove me or postpone operation?\n\t\tidx = bindings.indexOf(this);\n\t\tif (idx > -1) bindings.splice(idx, 1);\n\t\t\n\t\tif (owner && !owner.destroyed) owner.removeBinding(this);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tgetTransform: function () {\n\t\treturn this._didInitTransform ? this.transform : (function (bnd) {\n\t\t\tbnd._didInitTransform = true;\n\t\t\t\n\t\t\tvar xform = bnd.transform,\n\t\t\t\towner = bnd.owner,\n\t\t\t\txformOwner = owner && owner.bindingTransformOwner;\n\t\t\t\n\t\t\tif (xform) {\n\t\t\t\tif (typeof xform == 'string') {\n\t\t\t\t\tif (xformOwner && xformOwner[xform]) {\n\t\t\t\t\t\txform = xformOwner[xform];\n\t\t\t\t\t} else if (owner && owner[xform]) {\n\t\t\t\t\t\txform = owner[xform];\n\t\t\t\t\t} else {\n\t\t\t\t\t\txform = utils.getPath.call(global, xform);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/*jshint -W093 */\n\t\t\t\treturn (bnd.transform = (typeof xform == 'function' ? xform : null));\n\t\t\t\t/*jshint +W093 */\n\t\t\t}\n\t\t})(this);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tconstructor: function (props) {\n\t\tbindings.push(this);\n\t\t\n\t\tif (props) utils.mixin(this, props);\n\t\t\n\t\tif (!this.euid) this.euid = utils.uid('b');\n\t\tif (this.autoConnect) this.connect();\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\t_sourceChanged: function (was, is, path) {\n\t\t// @TODO: Should it...would it benefit from using these passed in values?\n\t\tthis.dirty = this.dirty == DIRTY_TO ? null : DIRTY_FROM;\n\t\treturn this.dirty == DIRTY_FROM && this.sync();\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\t_targetChanged: function (was, is, path) {\n\t\t// @TODO: Same question as above, it seems useful but would it affect computed\n\t\t// properties or stale values?\n\t\tthis.dirty = this.dirty == DIRTY_FROM ? null : DIRTY_TO;\n\t\treturn this.dirty == DIRTY_TO && this.sync();\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\t_toTargetChanged: function (was, is, path) {\n\t\tthis.dirty = DIRTY_FROM;\n\t\tthis.reset().connect();\n\t}\n});\n\n/**\n* Retrieves a [binding]{@link enyo.Binding} by its global id.\n*\n* @param {String} euid - The [Enyo global id]{@glossary EUID} by which to retrieve a \n*\t[binding]{@link enyo.Binding}.\n* @returns {enyo.Binding|undefined} A reference to the binding if the id \n*\tis found; otherwise, it will return [undefined]{@glossary undefined}.\n* \n* @static\n* @public\n*/\nBinding.find = function (euid) {\n\treturn bindings.find(function (ln) {\n\t\treturn ln.euid == euid;\n\t});\n};\n\nBinding.bindings = bindings;\n\n/**\n* Possible value of the [dirty]{@link enyo.Binding#dirty} property, indicating that the value \n* of the [binding source]{@link enyo.Binding#source} has changed.\n* \n* @static\n* @public\nBindingB.DindingIRTY_FROM = DIRTY_FROM;\n\n/**\n* Possible value of the [dirty]{@link enyo.Binding#dirty} property, indicating that the value\n* of the [binding target]{@link enyo.Binding#target} has changed.\n* \n* @static\n* @public\n*/\nBinding.DIRTY_TO = DIRTY_TO;\n\n/**\n* The default [kind]{@glossary kind} that provides [binding]{@link enyo.Binding} \n* functionality.\n* \n* static\n* public\n*/\nBinding.defaultBindingKind = Binding;","require('../../enyo');\n\nvar\n\tkind = require('./kind');\n\n/**\n* An internally-used {@glossary mixin} applied to {@link enyo.Component}\n* instances to better support [bindings]{@link enyo.Binding}.\n*\n* @mixin enyo.ComponentBindingSupport\n* @protected\n*/\nmodule.exports = {\n\t\n\t/**\n\t* @private\n\t*/\n\tname: 'ComponentBindingSupport',\n\t\n\t/**\n\t* @private\n\t*/\n\tadjustComponentProps: kind.inherit(function (sup) {\n\t\treturn function (props) {\n\t\t\tsup.apply(this, arguments);\n\t\t\tprops.bindingTransformOwner || (props.bindingTransformOwner = this.getInstanceOwner());\n\t\t};\n\t})\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar extend = kind.statics.extend;\n\t\nkind.concatenated.push('computed');\n\n/**\n* @private\n*/\nfunction getComputedValue (obj, path) {\n\tvar cache = obj._getComputedCache(path)\n\t\t, isCached = obj._isComputedCached(path);\n\t\n\t// in the end, for efficiency and completeness in other situations\n\t// it is better to know the returned value of all computed properties\n\t// but in cases where they are set as cached we will sometimes use\n\t// that value\n\tif (cache.dirty || cache.dirty === undefined) {\n\t\tisCached && (cache.dirty = false);\n\t\tcache.previous = cache.value;\n\t\tcache.value = obj[path]();\n\t}\n\t\n\treturn cache.value;\n}\n\n/**\n* @private\n*/\nfunction queueComputed (obj, path) {\n\tvar queue = obj._computedQueue || (obj._computedQueue = [])\n\t\t, deps = obj._computedDependencies[path];\n\t\t\n\tif (deps) {\n\t\tfor (var i=0, dep; (dep=deps[i]); ++i) {\n\t\t\tif (!queue.length || -1 == queue.indexOf(dep)) queue.push(dep);\n\t\t}\n\t}\n}\n\n/**\n* @private\n*/\nfunction flushComputed (obj) {\n\tvar queue = obj._computedQueue;\n\tobj._computedQueue = null;\n\tif (queue && obj.isObserving()) {\n\t\tfor (var i=0, ln; (ln=queue[i]); ++i) {\n\t\t\tobj.notify(ln, obj._getComputedCache(ln).value, getComputedValue(obj, ln));\n\t\t}\n\t}\n}\n\n/**\n* A {@glossary mixin} that adds API methods to support\n* [computed properties]{@glossary \"computed property\"}. Unlike other support mixins,\n* this mixin does not need to be explicitly included by a [kind]{@glossary kind}. If the\n* `computed` [array]{@glossary Array} is found in a kind definition, this mixin will\n* automatically be included.\n*\n* @mixin enyo.ComputedSupport\n* @public\n*/\nvar ComputedSupport = module.exports = {\n\t\n\t/**\n\t* @private\n\t*/\n\tname: 'ComputedSupport',\n\t\n\t/**\n\t* @private\n\t*/\n\t_computedRecursion: 0,\n\t\n\t/**\n\t* Primarily intended for internal use, this method determines whether the\n\t* given path is a known [computed property]{@glossary \"computed property\"}.\n\t*\n\t* @param {String} path - The property or path to test.\n\t* @returns {Boolean} Whether or not the `path` is a\n\t*\t[computed property]{@glossary \"computed property\"}.\n\t* @public\n\t*/\n\tisComputed: function (path) {\n\t\t// if it exists it will be explicitly one of these cases and it is cheaper than hasOwnProperty\n\t\treturn this._computed && (this._computed[path] === true || this._computed[path] === false);\n\t},\n\t\n\t/**\n\t* Primarily intended for internal use, this method determines whether the\n\t* given path is a known dependency of a\n\t* [computed property]{@glossary \"computed property\"}.\n\t*\n\t* @param {String} path - The property or path to test.\n\t* @returns {Boolean} Whether or not the `path` is a dependency of a\n\t*\t[computed property]{@glossary \"computed property\"}.\n\t* @public\n\t*/\n\tisComputedDependency: function (path) {\n\t\treturn !! (this._computedDependencies? this._computedDependencies[path]: false);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tget: kind.inherit(function (sup) {\n\t\treturn function (path) {\n\t\t\treturn this.isComputed(path)? getComputedValue(this, path): sup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\tset: kind.inherit(function (sup) {\n\t\treturn function (path) {\n\t\t\t// we do not accept parameters for computed properties\n\t\t\treturn this.isComputed(path)? this: sup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\tnotifyObservers: function () {\n\t\treturn this.notify.apply(this, arguments);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tnotify: kind.inherit(function (sup) {\n\t\treturn function (path, was, is) {\n\t\t\tthis.isComputedDependency(path) && queueComputed(this, path);\n\t\t\tthis._computedRecursion++;\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis._computedRecursion--;\n\t\t\tthis._computedQueue && this._computedRecursion === 0 && flushComputed(this);\n\t\t\treturn this;\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\t_isComputedCached: function (path) {\n\t\treturn this._computed[path];\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\t_getComputedCache: function (path) {\n\t\tvar cache = this._computedCache || (this._computedCache = {});\n\t\treturn cache[path] || (cache[path] = {});\n\t}\n};\n\n\n/**\n* Hijack the original so we can add additional default behavior.\n*/\nvar sup = kind.concatHandler;\n\n// @NOTE: It seems like a lot of work but it really won't happen that much and the more\n// we push to kind-time the better for initialization time\n\n/**\n* @private\n*/\nkind.concatHandler = function (ctor, props, instance) {\n\n\tsup.call(this, ctor, props, instance);\n\n\t// only matters if there are computed properties to manage\n\tif (props.computed) {\n\t\t\n\t\tvar proto = ctor.prototype || ctor\n\t\t\t, computed = proto._computed? Object.create(proto._computed): {}\n\t\t\t, dependencies = proto._computedDependencies? Object.create(proto._computedDependencies): {};\n\t\t\n\t\t// if it hasn't already been applied we need to ensure that the prototype will\n\t\t// actually have the computed support mixin present, it will not apply it more\n\t\t// than once to the prototype\n\t\textend(ComputedSupport, proto);\n\t\n\t\t// @NOTE: This is the handling of the original syntax provided for computed properties in 2.3.ish...\n\t\t// All we do here is convert it to a structure that can be used for the other scenario and preferred\n\t\t// computed declarations format\n\t\tif (!props.computed || !(props.computed instanceof Array)) {\n\t\t\t(function () {\n\t\t\t\tvar tmp = [], deps, name, conf;\n\t\t\t\t// here is the slow iteration over the properties...\n\t\t\t\tfor (name in props.computed) {\n\t\t\t\t\t// points to the dependencies of the computed method\n\t\t\t\t\tdeps = props.computed[name];\n\t\t\t\t\t/*jshint -W083 */\n\t\t\t\t\tconf = deps && deps.find(function (ln) {\n\t\t\t\t\t\t// we deliberately remove the entry here and forcibly return true to break\n\t\t\t\t\t\treturn typeof ln == 'object'? (utils.remove(deps, ln) || true): false;\n\t\t\t\t\t});\n\t\t\t\t\t/*jshint +W083 */\n\t\t\t\t\t// create a single entry now for the method/computed with all dependencies\n\t\t\t\t\ttmp.push({method: name, path: deps, cached: conf? conf.cached: null});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// note that we only do this one so even for a mixin that is evaluated several\n\t\t\t\t// times this would only happen once\n\t\t\t\tprops.computed = tmp;\n\t\t\t}());\n\t\t}\n\t\t\n\t\tvar addDependency = function (path, dep) {\n\t\t\t// its really an inverse look at the original\n\t\t\tvar deps;\n\t\t\t\n\t\t\tif (dependencies[path] && !dependencies.hasOwnProperty(path)) dependencies[path] = dependencies[path].slice();\n\t\t\tdeps = dependencies[path] || (dependencies[path] = []);\n\t\t\tdeps.push(dep);\n\t\t};\n\t\t\n\t\t// now we handle the new computed properties the way we intended to\n\t\tfor (var i=0, ln; (ln=props.computed[i]); ++i) {\n\t\t\t// if the entry already exists we are merely updating whether or not it is\n\t\t\t// now cached\n\t\t\tcomputed[ln.method] = !! ln.cached;\n\t\t\t// we must now look to add an entry for any given dependencies and map them\n\t\t\t// back to the computed property they will trigger\n\t\t\t/*jshint -W083 */\n\t\t\tif (ln.path && ln.path instanceof Array) ln.path.forEach(function (dep) { addDependency(dep, ln.method); });\n\t\t\t/*jshint +W083 */\n\t\t\telse if (ln.path) addDependency(ln.path, ln.method);\n\t\t}\n\t\t\n\t\t// arg, free the key from the properties so it won't be applied later...\n\t\t// delete props.computed;\n\t\t// make sure to reassign the correct items to the prototype\n\t\tproto._computed = computed;\n\t\tproto._computedDependencies = dependencies;\n\t}\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind');\n\n/**\n* {@link enyo.Layout} is the base [kind]{@glossary kind} for layout\n* kinds. Layout kinds are used by {@link enyo.UiComponent}-based\n* [controls]{@link enyo.Control} to allow for arranging of child controls by\n* setting the [layoutKind]{@link enyo.UiComponent#layoutKind} property.\n* \n* Derived kinds will usually provide their own\n* [layoutClass]{@link enyo.Layout#layoutClass} property to affect the CSS\n* rules used, and may also implement the [flow()]{@link enyo.Layout#flow}\n* and [reflow()]{@link enyo.Layout#reflow} methods. `flow()` is called\n* during control rendering, while `reflow()` is called when the associated\n* control is resized.\n*\n* @class enyo.Layout\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Layout.prototype */ {\n\n\tname: 'enyo.Layout',\n\n\t/**\n\t* @private\n\t*/\n\tkind: null,\n\n\t/** \n\t* CSS class that's added to the [control]{@link enyo.Control} using this \n\t* [layout]{@link enyo.Layout} [kind]{@glossary kind}.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\tlayoutClass: '',\n\t\n\t/**\n\t* @private\n\t*/\n\tconstructor: function (container) {\n\t\tthis.container = container;\n\t\tif (container) {\n\t\t\tcontainer.addClass(this.layoutClass);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdestroy: function () {\n\t\tif (this.container) {\n\t\t\tthis.container.removeClass(this.layoutClass);\n\t\t}\n\t},\n\t\n\t/**\n\t* Called during static property layout (i.e., during rendering).\n\t*\n\t* @public\n\t*/\n\tflow: function () {\n\t},\n\n\t/** \n\t* Called during dynamic measuring layout (i.e., during a resize).\n\t*\n\t* @public\n\t*/\n\treflow: function () {\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\n/**\n* An abstract linked-list node.\n*\n* @class enyo.LinkedListNode\n* @private\n*/\nmodule.exports = kind(\n\t/** @lends enyo.LinkedListNode.prototype */ {\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: null,\n\t\n\t/**\n\t* @private\n\t*/\n\n\t\n\t/**\n\t* @private\n\t*/\n\tprev: null,\n\t\n\t/**\n\t* @private\n\t*/\n\tnext: null,\n\t\n\t/**\n\t* @private\n\t*/\n\tcopy: function () {\n\t\tvar cpy = new this.ctor();\n\t\tcpy.prev = this.prev;\n\t\tcpy.next = this.next;\n\t\treturn cpy;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tconstructor: function (props) {\n\t\tprops && utils.mixin(this, props);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tdestroy: function () {\n\t\t// clear reference to previous node\n\t\tthis.prev = null;\n\t\t\n\t\t// if we have a reference to our next node\n\t\t// we continue down the chain\n\t\tthis.next && this.next.destroy();\n\t\t\n\t\t// clear our reference to the next node\n\t\tthis.next = null;\n\t}\n});","require('../../enyo');\n\n\nvar\n\tutils = require('./utils'),\n\tkind = require('./kind'),\n\tlogger = require('./logger');\n\nkind.concatenated.push('mixins');\n\nvar sup = kind.statics.extend;\n\n/**\n* @private\n*/\nvar extend = kind.statics.extend = function extend (args, target) {\n\tif (utils.isArray(args)) return utils.forEach(args, function (ln) { extend.call(this, ln, target); }, this);\n\tif (typeof args == 'string') apply(target || this.prototype, args);\n\telse {\n\t\tif (args.mixins) feature(target || this, args);\n\t\n\t\t// this allows for mixins to apply mixins which...is less than ideal but possible\n\t\tif (args.name) apply(target || this.prototype, args);\n\t\telse sup.apply(this, arguments);\n\t}\n};\n\n/**\n* Applies, with safeguards, a given mixin to an object.\n*\n* @private\n*/\nfunction apply (proto, props) {\n\tvar applied = proto._mixins? (proto._mixins = proto._mixins.slice()): (proto._mixins = [])\n\t\t, name = utils.isString(props)? props: props.name\n\t\t, idx = utils.indexOf(name, applied);\n\tif (idx < 0) {\n\t\tname == props && (props = utils.getPath(name));\n\t\t// if we could not resolve the requested mixin (should never happen)\n\t\t// we throw a simple little error\n\t\t// @TODO: Normalize error format\n\t\t!props && logger.error('Could not find the mixin ' + name);\n\t\t\n\t\t// it should be noted that this ensures it won't recursively re-add the same mixin but\n\t\t// since it is possible for mixins to apply mixins the names will be out of order\n\t\t// this name is pushed on but the nested mixins are applied before this one\n\t\tname && applied.push(name);\n\t\t\n\t\tprops = utils.clone(props);\n\t\t\n\t\t// we need to temporarily move the constructor if it has one so it\n\t\t// will override the correct method - this is a one-time permanent\n\t\t// runtime operation so subsequent additions of the mixin don't require\n\t\t// it again\n\t\tif (props.hasOwnProperty('constructor')) {\n\t\t\tprops._constructor = props.constructor;\n\t\t\tdelete props.constructor;\n\t\t}\n\t\t\n\t\tdelete props.name;\n\t\textend(props, proto);\n\t\t\n\t\t// now put it all back the way it was\n\t\tprops.name = name;\n\t}\n}\n\n/**\n* @private\n*/\nfunction feature (ctor, props) {\n\tif (props.mixins) {\n\t\tvar proto = ctor.prototype || ctor\n\t\t\t, mixins = props.mixins;\n\t\t\n\t\t// delete props.mixins;\n\t\t// delete proto.mixins;\n\t\t\n\t\tproto._mixins && (proto._mixins = proto._mixins.slice());\n\t\tutils.forEach(mixins, function (ln) { apply(proto, ln); });\n\t}\n}\n\nkind.features.push(feature);\n\n/**\n* An internally-used support {@glossary mixin} that adds API methods to aid in\n* using and applying mixins to [kinds]{@glossary kind}.\n*\n* @mixin enyo.MixinSupport\n* @protected\n*/\nmodule.exports = {\n\t\n\t/**\n\t* @private\n\t*/\n\tname: 'MixinSupport',\n\t\n\t/**\n\t* Extends the instance with the given properties.\n\t*\n\t* @param {Object} props - The property [hash]{@glossary Object} from which to extend\n\t*\tthe callee.\n\t*/\n\textend: function (props) {\n\t\tprops && apply(this, props);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\timportProps: kind.inherit(function (sup) {\n\t\treturn function (props) {\n\t\t\tprops && props.mixins && feature(this, props);\n\t\t\t\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t})\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tlogger = require('./logger');\n\n/**\n* All of the known, instanced [sources]{@link enyo.Source}, by name.\n*\n* @name enyo~sources\n* @type {Object}\n* @readonly\n*/\nvar sources = {};\n\n/**\n* This is an abstract base class. A [source]{@link enyo.Source} is a communication\n* layer used by data layer [kinds]{@glossary kind} to retrieve and persist data and\n* application state via its abstract API methods.\n*\n* @class enyo.Source\n* @public\n*/\nvar Source = module.exports = kind(\n\t/** @lends enyo.Source.prototype */ {\n\t\n\tname: 'enyo.Source',\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: null,\n\t\n\t/**\n\t* @private\n\t*/\n\n\t\n\t/**\n\t* When initialized, the source should be passed properties to set on itself.\n\t* These properties should include the name by which it will be referenced in\n\t* the application.\n\t*\n\t* @param {Object} [props] - The properties to set on itself.\n\t* @public\n\t*/\n\tconstructor: function (props) {\n\t\tif (props) this.importProps(props);\n\t\t// automatic coersion of name removing prefix\n\t\tthis.name || (this.name = this.kindName.replace(/^(.*)\\./, \"\"));\n\t\t// now add to the global registry of sources\n\t\tsources[this.name] = this;\n\t},\n\t\n\t/**\n\t* Overload this method to handle retrieval of data. This method should accept an options\n\t* [hash]{@glossary Object} with additional configuration properties, including `success`\n\t* and `error` callbacks to handle the result.\n\t*\n\t* @virtual\n\t* @param {(enyo.Model|enyo.Collection)} model The [model]{@link enyo.Model} or\n\t*\t[collection]{@link enyo.Collection} to be retrieved.\n\t* @param {Object} opts - The configuration options [hash]{@glossary Object}, including\n\t*\t`success` and `error` callbacks.\n\t*/\n\tfetch: function (model, opts) {\n\t\t//\n\t},\n\t\n\t/**\n\t* Overload this method to handle persisting of data. This method should accept an options\n\t* [hash]{@glossary Object} with additional configuration properties, including `success`\n\t* and `error` callbacks to handle the result.\n\t*\n\t* @virtual\n\t* @param {(enyo.Model|enyo.Collection)} model The [model]{@link enyo.Model} or\n\t*\t[collection]{@link enyo.Collection} to be persisted.\n\t* @param {Object} opts - The configuration options [hash]{@glossary Object}, including\n\t*\t`success` and `error` callback.\n\t*/\n\tcommit: function (model, opts) {\n\t\t//\n\t},\n\t\n\t/**\n\t* Overload this method to handle deletion of data. This method should accept an options\n\t* [hash]{@glossary Object} with additional configuration properties, including `success`\n\t* and `error` callbacks to handle the result. If called without parameters, it will\n\t* instead destroy itself and be removed from [enyo.sources]{@link enyo~sources}, rendering\n\t* itself unavailable for further operations.\n\t*\n\t* @param {(enyo.Model|enyo.Collection)} model The [model]{@link enyo.Model} or\n\t*\t[collection]{@link enyo.Collection} to be deleted.\n\t* @param {Object} opts - The configuration options [hash]{@glossary Object}, including\n\t*\t`success` and `error` callbacks.\n\t*/\n\tdestroy: function (model, opts) {\n\t\t\n\t\t// if called with no parameters we actually just breakdown the source and remove\n\t\t// it as being available\n\t\tif (!arguments.length) {\n\t\t\tsources[this.name] = null;\n\t\t\tthis.name = null;\n\t\t}\n\t},\n\t\n\t/**\n\t* Overload this method to handle querying of data based on the passed-in constructor. This\n\t* method should accept an options [hash]{@glossary Object} with additional configuration\n\t* properties, including `success` and `error` callbacks to handle the result.\n\t*\n\t* @virtual\n\t* @param {Function} ctor - The constructor for the [kind]{@glossary kind} of\n\t*\t{@link enyo.Model} or {@link enyo.Collection} to be queried.\n\t* @param {Object} opts - The configuration options [hash]{@glossary Object}, including\n\t*\t`success` and `error` callbacks.\n\t*/\n\tfind: function (ctor, opts) {\n\t\t//\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\timportProps: function (props) {\n\t\tprops && utils.mixin(this, props);\n\t},\n\t\n\t/**\n\t* @see enyo.getPath\n\t* @method\n\t* @public\n\t*/\n\tget: utils.getPath,\n\t\n\t/**\n\t* @see enyo.setPath\n\t* @method\n\t* @public\n\t*/\n\tset: utils.setPath\n});\n\n/**\n* Creates an instance of {@link enyo.Source} with the given properties. These\n* properties should include a `kind` property with the name of the\n* [kind]{@glossary kind} of source and a `name` for the instance. This static\n* method is also available on all [subkinds]{@glossary subkind} of\n* `enyo.Source`. The instance will automatically be added to the\n* [enyo.sources]{@link enyo~sources} [object]{@glossary Object} and may be\n* referenced by its `name`.\n*\n* @name enyo.Source.create\n* @static\n* @method\n* @param {Object} props - The properties to pass to the constructor for the requested\n*\t[kind]{@glossary kind} of [source]{@link enyo.Source}.\n* @returns {enyo.Source} An instance of the requested kind of source.\n* @public\n*/\nSource.create = function (props) {\n\tvar Ctor = (props && props.kind) || this;\n\t\n\tif (typeof Ctor == 'string') Ctor = kind.constructorForKind(Ctor);\n\t\n\treturn new Ctor(props);\n};\n\n/**\n* @static\n* @private\n*/\nSource.concat = function (ctor, props) {\n\t\n\t// force noDefer so that we can actually set this method on the constructor\n\tif (props) props.noDefer = true;\n\t\n\tctor.create = Source.create;\n};\n\n/**\n* @static\n* @private\n*/\nSource.execute = function (action, model, opts) {\n\tvar source = opts.source || model.source,\n\t\n\t\t// we need to be able to bind the success and error callbacks for each of the\n\t\t// sources we'll be using\n\t\toptions = utils.clone(opts, true),\n\t\tnom = source,\n\t\tmsg;\n\t\n\tif (source) {\n\t\t\n\t\t// if explicitly set to true then we need to use all available sources in the\n\t\t// application\n\t\tif (source === true) {\n\t\t\t\n\t\t\tfor (nom in sources) {\n\t\t\t\tsource = sources[nom];\n\t\t\t\tif (source[action]) {\n\t\t\t\t\t\n\t\t\t\t\t// bind the source name to the success and error callbacks\n\t\t\t\t\toptions.success = opts.success.bind(null, nom);\n\t\t\t\t\toptions.error = opts.error.bind(null, nom);\n\t\t\t\t\t\n\t\t\t\t\tsource[action](model, options);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// if it is an array of specific sources to use we, well, will only use those!\n\t\telse if (source instanceof Array) {\n\t\t\tsource.forEach(function (nom) {\n\t\t\t\tvar src = typeof nom == 'string' ? sources[nom] : nom;\n\t\t\t\t\n\t\t\t\tif (src && src[action]) {\n\t\t\t\t\t// bind the source name to the success and error callbacks\n\t\t\t\t\toptions.success = opts.success.bind(null, src.name);\n\t\t\t\t\toptions.error = opts.error.bind(null, src.name);\n\t\t\t\t\t\n\t\t\t\t\tsrc[action](model, options);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t// if it is an instance of a source\n\t\telse if (source instanceof Source && source[action]) {\n\t\t\t\n\t\t\t// bind the source name to the success and error callbacks\n\t\t\toptions.success = opts.success.bind(null, source.name);\n\t\t\toptions.error = opts.error.bind(null, source.name);\n\t\t\t\n\t\t\tsource[action](model, options);\n\t\t}\n\t\t\n\t\t// otherwise only one was specified and we attempt to use that\n\t\telse if ((source = sources[nom]) && source[action]) {\n\t\t\t\n\t\t\t// bind the source name to the success and error callbacks\n\t\t\toptions.success = opts.success.bind(null, nom);\n\t\t\toptions.error = opts.error.bind(null, nom);\n\t\t\t\n\t\t\tsource[action](model, options);\n\t\t}\n\t\t\n\t\t// we could not resolve the requested source\n\t\telse {\n\t\t\tmsg = 'enyo.Source.execute(): requested source(s) could not be found for ' +\n\t\t\t\tmodel.kindName + '.' + action + '()';\n\t\t\t\n\t\t\tlogger.warn(msg);\n\t\t\t\n\t\t\t// we need to fail the attempt and let it be handled\n\t\t\topts.error(nom ? typeof nom == 'string' ? nom : nom.name : 'UNKNOWN', msg);\n\t\t}\n\t} else {\n\t\tmsg = 'enyo.Source.execute(): no source(s) provided for ' + model.kindName + '.' +\n\t\t\taction + '()';\n\t\t\t\n\t\tlogger.warn(msg);\n\t\t\n\t\t// we need to fail the attempt and let it be handled\n\t\topts.error(nom ? typeof nom == 'string' ? nom : nom.name : 'UNKNOWN', msg);\n\t}\n};\n\nSource.sources = sources;","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tplatform = require('./platform');\n\nmodule.exports = function (Control) {\n\t/**\n\t* {@link enyo.FloatingLayer} is a [control]{@link enyo.Control} that provides a layer for\n\t* controls that should be displayed above an [application]{@link enyo.Application}. The\n\t* `floatingLayer` singleton can be set as a control's parent to have the control float\n\t* above the application, e.g.:\n\t*\n\t* ```\n\t* create: kind.inherit(function (sup) {\n\t*\treturn function() {\n\t*\t\tsup.apply(this, arguments);\n\t*\t\tthis.setParent(enyo.floatingLayer);\n\t*\t}\n\t* });\n\t* ```\n\t*\n\t* Note: `enyo.FloatingLayer` is not meant to be instantiated by users.\n\t*\n\t* @class enyo.FloatingLayer\n\t* @extends enyo.Control\n\t* @ui\n\t* @protected\n\t*/\n\treturn kind(\n\t\t/** @lends enyo.FloatingLayer.prototype */ {\n\n\t\t/**\n\t\t* @private\n\t\t*/\n\t\tkind: Control,\n\n\t\t/**\n\t\t* @private\n\t\t*/\n\t\tclasses: 'enyo-fit enyo-clip enyo-untouchable',\n\n\t\t/**\n\t\t* @method\n\t\t* @private\n\t\t*/\n\t\tcreate: kind.inherit(function (sup) {\n\t\t\treturn function() {\n\t\t\t\tsup.apply(this, arguments);\n\t\t\t\tthis.setParent(null);\n\n\t\t\t\tif (platform.ie < 11) {\n\t\t\t\t\tthis.removeClass('enyo-fit');\n\t\t\t\t}\n\t\t\t};\n\t\t}),\n\n\t\t/**\n\t\t* Detects when [node]{@glossary Node} is detatched due to `document.body` being stomped.\n\t\t*\n\t\t* @method\n\t\t* @private\n\t\t*/\n\t\thasNode: kind.inherit(function (sup) {\n\t\t\treturn function() {\n\t\t\t\tsup.apply(this, arguments);\n\t\t\t\tif (this.node && !this.node.parentNode) {\n\t\t\t\t\tthis.teardownRender();\n\t\t\t\t}\n\t\t\t\treturn this.node;\n\t\t\t};\n\t\t}),\n\n\t\t/**\n\t\t* @method\n\t\t* @private\n\t\t*/\n\t\trender: kind.inherit(function (sup) {\n\t\t\treturn function() {\n\t\t\t\tthis.parentNode = document.body;\n\t\t\t\treturn sup.apply(this, arguments);\n\t\t\t};\n\t\t}),\n\n\t\t/**\n\t\t* @private\n\t\t*/\n\t\tgenerateInnerHtml: function () {\n\t\t\treturn '';\n\t\t},\n\n\t\t/**\n\t\t* @private\n\t\t*/\n\t\tbeforeChildRender: function () {\n\t\t\tif (!this.hasNode()) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t* @private\n\t\t*/\n\t\tteardownChildren: function () {\n\t\t}\n\t});\n};","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind');\n\n/**\n* {@link onyx.Groupbox} displays rows of controls as a vertically-stacked group.\n* It is designed to have container controls as its children, with each container\n* representing a row in the Groupbox.\n*\n* To add a header, specify an {@link onyx.GroupboxHeader} as the first control\n* in the Groupbox, e.g.:\n*\n* ```\n* {kind: 'onyx.Groupbox', components: [\n* \t{kind: 'onyx.GroupboxHeader', content: 'Sounds'},\n* \t\t{components: [\n* \t\t\t{content: 'System Sounds'},\n* \t\t\t{kind: 'onyx.ToggleButton', value: true}\n* \t\t]},\n* \t\t{kind: 'onyx.InputDecorator', components: [\n* \t\t\t{kind: 'onyx.Input'}\n* \t\t]}\n* \t]}\n* ]}\n* ```\n*\n* @class  onyx.Groupbox\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends onyx.Groupbox.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Groupbox',\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-groupbox'\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind');\n\n/**\n* {@link onyx.GroupboxHeader} is a control designed to be placed inside an\n* {@link onyx.Groupbox}. When a header is desired, make a GroupboxHeader the\n* first control inside the Groupbox.\n*\n* ```\n* {kind: 'onyx.Groupbox', components: [\n* \t{kind: 'onyx.GroupboxHeader', content: 'Sounds'},\n* \t{content: 'Yawn'},\n* \t{content: 'Beep'}\n* ]}\n* ```\n*\n* @class  onyx.GroupboxHeader\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.GroupboxHeader.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.GroupboxHeader',\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-groupbox-header'\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar\n\tBinding = require('./Binding');\n\nkind.concatenated.push('bindings');\n\n/**\n* An internally-used {@glossary mixin} that is added to {@link enyo.Object}\n* and its [subkinds]{@glossary subkind}. It includes public and protected API\n* methods for working with [bindings]{@link enyo.Binding}.\n*\n* @mixin enyo.BindingSupport\n* @protected\n*/\nexports = module.exports = {\n\t\n\t/**\n\t* @private\n\t*/\n\tname: 'BindingSupport',\n\t\n\t/**\n\t* @private\n\t*/\n\t_bindingSupportInitialized: false,\n\t\n\t/**\n\t* Imperatively creates a [binding]{@link enyo.Binding}. Merges a variable\n\t* number of [hashes]{@glossary Object} and instantiates a binding that\n\t* will have its [owner]{@link enyo.Binding#owner} property set to the callee\n\t* (the current {@link enyo.Object}). Bindings created in this way will be\n\t* [destroyed]{@link enyo.Binding#destroy} when their `owner` is\n\t* [destroyed]{@link enyo.Object#destroy}.\n\t*\n\t* @param {...Object} props A variable number of [hashes]{@glossary Object} that will\n\t*\tbe merged into the properties applied to the {@link enyo.Binding} instance.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tbinding: function () {\n\t\tvar args = utils.toArray(arguments)\n\t\t\t, props = utils.mixin(args)\n\t\t\t, bindings = this.bindings || (this.bindings = [])\n\t\t\t, Ctor, bnd;\n\t\t\t\n\t\tprops.owner = props.owner || this;\n\t\tCtor = props.kind = props.kind || this.defaultBindingKind || Binding.defaultBindingKind;\n\t\t\n\t\tif (this._bindingSupportInitialized) {\n\t\t\tutils.isString(Ctor) && (Ctor = props.kind = kind.constructorForKind(Ctor));\n\t\t\tbnd = new Ctor(props);\n\t\t\tbindings.push(bnd);\n\t\t\treturn bnd;\n\t\t} else bindings.push(props);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Removes and [destroys]{@link enyo.Binding#destroy} all of, or a subset of,\n\t* the [bindings]{@link enyo.Binding} belonging to the callee.\n\t*\n\t* @param {enyo.Binding[]} [subset] - The optional [array]{@glossary Array} of\n\t*\t[bindings]{@link enyo.Binding} to remove.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tclearBindings: function (subset) {\n\t\tvar bindings = subset || (this.bindings && this.bindings.slice());\n\t\tbindings.forEach(function (bnd) {\n\t\t\tbnd.destroy();\n\t\t});\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Removes a single {@link enyo.Binding} from the callee. (This does not\n\t* [destroy]{@link enyo.Binding#destroy} the binding.) Also removes the\n\t* [owner]{@link enyo.Binding#owner} reference if it is the callee.\n\t*\n\t* It should be noted that when a binding is destroyed, it is automatically\n\t* removed from its owner.\n\t*\n\t* @param {enyo.Binding} binding - The {@link enyo.Binding} instance to remove.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tremoveBinding: function (binding) {\n\t\tutils.remove(binding, this.bindings);\n\t\t\n\t\tif (binding.owner === this) binding.owner = null;\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tconstructed: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tvar bindings = this.bindings;\n\t\t\tthis._bindingSupportInitialized = true;\n\t\t\tbindings && (this.bindings = []) && bindings.forEach(function (def) {\n\t\t\t\tthis.binding(def);\n\t\t\t}, this);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.bindings && this.bindings.length && this.clearBindings();\n\t\t\tthis.bindings = null;\n\t\t};\n\t})\n};\n\n/**\n\tHijack the original so we can add additional default behavior.\n*/\nvar sup = kind.concatHandler\n\t, flags = {ignore: true};\n\n/**\n* @private\n*/\nkind.concatHandler = function (ctor, props, instance) {\n\tvar proto = ctor.prototype || ctor\n\t\t, kind = props && (props.defaultBindingKind || Binding.defaultBindingKind)\n\t\t, defaults = props && props.bindingDefaults;\n\t\n\tsup.call(this, ctor, props, instance);\n\tif (props.bindings) {\n\t\tprops.bindings.forEach(function (bnd) {\n\t\t\tdefaults && utils.mixin(bnd, defaults, flags);\n\t\t\tbnd.kind || (bnd.kind = kind); \n\t\t});\n\t\t\n\t\tproto.bindings = proto.bindings? proto.bindings.concat(props.bindings): props.bindings;\n\t\tdelete props.bindings;\n\t}\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar\n\tBinding = require('./Binding');\n\n/**\n* The {@link enyo.RepeaterChildSupport} [mixin]{@glossary mixin} contains methods and\n* properties that are automatically applied to all children of {@link enyo.DataRepeater}\n* to assist in selection support. (See {@link enyo.DataRepeater} for details on how to\n* use selection support.) This mixin also [adds]{@link enyo.Repeater#decorateEvent} the\n* `model`, `child` ([control]{@link enyo.Control} instance), and `index` properties to\n* all [events]{@glossary event} emitted from the repeater's children.\n*\n* @mixin enyo.RepeaterChildSupport\n* @public\n*/\nmodule.exports = {\n\n\t/*\n\t* @private\n\t*/\n\tname: 'RepeaterChildSupport',\n\n\t/**\n\t* Indicates whether the current child is selected in the [repeater]{@link enyo.DataRepeater}.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tselected: false,\n\n\t/**\n\t* Setting cachePoint: true ensures that events from the repeater child's subtree will\n\t* always bubble up through the child, allowing the events to be decorated with repeater-\n\t* related metadata and references.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @private\n\t*/\n\tcachePoint: true,\n\t\n\t/*\n\t* @method\n\t* @private\n\t*/\n\tselectedChanged: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tif (this.repeater.selection) {\n\t\t\t\tthis.addRemoveClass(this.selectedClass || 'selected', this.selected);\n\t\t\t\t// for efficiency purposes, we now directly call this method as opposed to\n\t\t\t\t// forcing a synchronous event dispatch\n\t\t\t\tvar idx = this.repeater.collection.indexOf(this.model);\n\t\t\t\tif (this.selected && !this.repeater.isSelected(this.model)) {\n\t\t\t\t\tthis.repeater.select(idx);\n\t\t\t\t} else if (!this.selected && this.repeater.isSelected(this.model)) {\n\t\t\t\t\tthis.repeater.deselect(idx);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/*\n\t* @method\n\t* @private\n\t*/\n\tdecorateEvent: kind.inherit(function (sup) {\n\t\treturn function (sender, event) {\n\t\t\tevent.model = this.model;\n\t\t\tevent.child = this;\n\t\t\tevent.index = this.repeater.collection.indexOf(this.model);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/*\n\t* @private\n\t*/\n\t_selectionHandler: function () {\n\t\tif (this.repeater.selection && !this.get('disabled')) {\n\t\t\tif (this.repeater.selectionType != 'group' || !this.selected) {\n\t\t\t\tthis.set('selected', !this.selected);\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t* Deliberately used to supersede the default method and set \n\t* [owner]{@link enyo.Component#owner} to this [control]{@link enyo.Control} so that there \n\t* are no name collisions in the instance [owner]{@link enyo.Component#owner}, and also so \n\t* that [bindings]{@link enyo.Binding} will correctly map to names.\n\t*\n\t* @method\n\t* @private\n\t*/\n\tcreateClientComponents: kind.inherit(function () {\n\t\treturn function (components) {\n\t\t\tthis.createComponents(components, {owner: this});\n\t\t};\n\t}),\n\t/**\n\t* Used so that we don't stomp on any built-in handlers for the `ontap`\n\t* {@glossary event}.\n\t*\n\t* @method\n\t* @private\n\t*/\n\tdispatchEvent: kind.inherit(function (sup) {\n\t\treturn function (name, event, sender) {\n\t\t\tvar owner;\n\t\t\t\n\t\t\t// if the event is coming from a child of the repeater-child (this...) and has a\n\t\t\t// delegate assigned to it there is a distinct possibility it is supposed to be\n\t\t\t// targeting the instanceOwner of repeater-child not the repeater-child itself\n\t\t\t// so we have to check this case and treat it as expected - if there is a handler\n\t\t\t// and it returns true then we must skip the normal flow\n\t\t\tif (event.originator !== this && event.delegate && event.delegate.owner === this) {\n\t\t\t\tif (typeof this[name] != 'function') {\n\t\t\t\t\t// ok we don't have the handler here let's see if our owner does\n\t\t\t\t\towner = this.getInstanceOwner();\n\t\t\t\t\tif (owner && owner !== this) {\n\t\t\t\t\t\tif (typeof owner[name] == 'function') {\n\t\t\t\t\t\t\t// alright it appears that we're supposed to forward this to the\n\t\t\t\t\t\t\t// next owner instead\n\t\t\t\t\t\t\treturn owner.dispatch(name, event, sender);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!event._fromRepeaterChild) {\n\t\t\t\tif (!!~utils.indexOf(name, this.repeater.selectionEvents)) {\n\t\t\t\t\tthis._selectionHandler();\n\t\t\t\t\tevent._fromRepeaterChild = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/*\n\t* @method\n\t* @private\n\t*/\n\tconstructed: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tvar r = this.repeater,\n\t\t\t\ts = r.selectionProperty;\n\t\t\t// this property will only be set if the instance of the repeater needs\n\t\t\t// to track the selected state from the view and model and keep them in sync\n\t\t\tif (s) {\n\t\t\t\tvar bnd = this.binding({\n\t\t\t\t\tfrom: 'model.' + s,\n\t\t\t\t\tto: 'selected',\n\t\t\t\t\toneWay: false/*,\n\t\t\t\t\tkind: enyo.BooleanBinding*/\n\t\t\t\t});\n\t\t\t\tthis._selectionBindingId = bnd.euid;\n\t\t\t}\n\t\t};\n\t}),\n\n\t/*\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tif (this._selectionBindingId) {\n\t\t\t\tvar b$ = Binding.find(this._selectionBindingId);\n\t\t\t\tif (b$) {\n\t\t\t\t\tb$.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/*\n\t* @private\n\t*/\n\t_selectionBindingId: null\n};","var\n\tkind = require('../../../enyo/lib/kind'),\n\tutils = require('../../../enyo/lib/utils'),\n\tplatform = require('../../../enyo/lib/platform');\n\nvar\n\tLayout = require('../../../enyo/lib/Layout'),\n\tDom = require('../../../enyo/lib/dom');\n\n/**\n* {@link enyo.Arranger} is an {@link enyo.Layout} that considers one of the\n* controls it lays out as active. The other controls are placed relative to\n* the active control as makes sense for the layout.\n*\n* `enyo.Arranger` supports dynamic layouts, meaning it's possible to transition\n* between an arranger's layouts\tvia animation. Typically, arrangers should lay out\n* controls using CSS transforms, since these are optimized for animation. To\n* support this, the controls in an arranger are absolutely positioned, and\n* the Arranger kind has an [accelerated]{@link enyo.Arranger#accelerated} property,\n* which marks controls for CSS compositing. The default setting of `'auto'` ensures\n* that this will occur if enabled by the platform.\n*\n* For more information, see the documentation on\n* [Arrangers]{@linkplain $dev-guide/building-apps/layout/arrangers.html} in the\n* Enyo Developer Guide.\n*\n* @class  enyo.Arranger\n* @extends enyo.Layout\n* @public\n*/\nvar Arranger = module.exports = kind(\n\t/** @lends  enyo.Arranger.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Arranger',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Layout,\n\n\t/**\n\t* @private\n\t*/\n\tlayoutClass: 'enyo-arranger',\n\n\t/**\n\t* Flag indicating whether the Arranger should lay out controls using CSS\n\t* compositing. The default setting `('auto')` will mark controls for compositing\n\t* if the platform supports it.\n\t*\n\t* @type {String|Boolean}\n\t* @default 'auto'\n\t* @protected\n\t*/\n\taccelerated: 'auto',\n\n\t/**\n\t* A property of the drag event, used to calculate the amount that a drag will\n\t* move the layout.\n\t*\n\t* @type {String}\n\t* @default 'ddx'\n\t* @private\n\t*/\n\tdragProp: 'ddx',\n\n\t/**\n\t* A property of the drag event, used to calculate the direction of the drag.\n\t*\n\t* @type {String}\n\t* @default 'xDirection'\n\t* @private\n\t*/\n\tdragDirectionProp: 'xDirection',\n\n\t/**\n\t* A property of the drag event, used to calculate whether a drag should occur.\n\t*\n\t* @type {String}\n\t* @default 'horizontal'\n\t* @private\n\t*/\n\tcanDragProp: 'horizontal',\n\n\t/**\n\t* If set to `true`, transitions between non-adjacent arrangements will go\n\t* through the intermediate arrangements. This is useful when direct\n\t* transitions between arrangements would be visually jarring.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @protected\n\t*/\n\tincrementalPoints: false,\n\n\t/**\n\t* Called when removing an arranger (e.g., when switching a Panels control to a\n\t* different `arrangerKind`). Subkinds should implement this function to reset\n\t* whatever properties they've changed on child controls. Note that you **must**\n\t* call the superkind implementation in your subkind's `destroy()` function.\n\t*\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tvar c$ = this.container.getPanels();\n\t\t\tfor (var i=0, c; (c=c$[i]); i++) {\n\t\t\t\tc._arranger = null;\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Arranges the given array of `controls` in the layout specified by `index`. When\n\t* implementing this method, rather than applying styling directly to controls, call\n\t* [arrangeControl()]{@link enyo.Arranger#arrangeControl} and pass in an arrangement\n\t* object with styling settings. The styles will then be applied via\n\t* [flowControl()]{@link enyo.Arranger#flowControl}.\n\t*\n\t* @param {enyo.Control[]} controls\n\t* @param {Number} index\n\t* @virtual\n\t* @protected\n\t*/\n\tarrange: function (controls, index) {\n\t},\n\n\t/**\n\t* Sizes the controls in the layout. This method is called only at reflow time.\n\t* Note that the sizing operation has been separated from the layout done in\n\t* [arrange()]{@link enyo.Arranger#arrange} because it is expensive and not suitable\n\t* for dynamic layout.\n\t*\n\t* @virtual\n\t* @protected\n\t*/\n\tsize: function () {\n\t},\n\n\t/**\n\t* Called when a layout transition begins. Implement this method to perform\n\t* tasks that should only occur when a transition starts; for example, some\n\t* controls might be shown or hidden. In addition, the `transitionPoints`\n\t* array may be set on the container to dictate the named arrangements\n\t* between which the transition occurs.\n\t*\n\t* @protected\n\t*/\n\tstart: function () {\n\t\tvar f = this.container.fromIndex, t = this.container.toIndex;\n\t\tvar p$ = this.container.transitionPoints = [f];\n\t\t// optionally add a transition point for each index between from and to.\n\t\tif (this.incrementalPoints) {\n\t\t\tvar d = Math.abs(t - f) - 2;\n\t\t\tvar i = f;\n\t\t\twhile (d >= 0) {\n\t\t\t\ti = i + (t < f ? -1 : 1);\n\t\t\t\tp$.push(i);\n\t\t\t\td--;\n\t\t\t}\n\t\t}\n\t\tp$.push(this.container.toIndex);\n\t},\n\n\t/**\n\t* Called when a layout transition completes. Implement this method to\n\t* perform tasks that should only occur when a transition ends; for\n\t* example, some controls might be shown or hidden.\n\t*\n\t* @virtual\n\t* @protected\n\t*/\n\tfinish: function () {\n\t},\n\n\t/**\n\t* Called when dragging the layout, this method returns the difference in\n\t* pixels between the arrangement `a0` for layout setting `i0`\tand\n\t* arrangement `a1` for layout setting `i1`. This data is used to calculate\n\t* the percentage that a drag should move the layout between two active states.\n\t*\n\t* @param {Number} i0 - The initial layout setting.\n\t* @param {Object} a0 - The initial arrangement.\n\t* @param {Number} i1 - The target layout setting.\n\t* @param {Object} a1 - The target arrangement.\n\t* @virtual\n\t* @protected\n\t*/\n\tcalcArrangementDifference: function (i0, a0, i1, a1) {\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcanDragEvent: function (event) {\n\t\treturn event[this.canDragProp];\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcDragDirection: function (event) {\n\t\treturn event[this.dragDirectionProp];\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcDrag: function (event) {\n\t\treturn event[this.dragProp];\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdrag: function (dp, an, a, bn, b) {\n\t\tvar f = this.measureArrangementDelta(-dp, an, a, bn, b);\n\t\treturn f;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmeasureArrangementDelta: function (x, i0, a0, i1, a1) {\n\t\tvar d = this.calcArrangementDifference(i0, a0, i1, a1);\n\t\tvar s = d ? x / Math.abs(d) : 0;\n\t\ts = s * (this.container.fromIndex > this.container.toIndex ? -1 : 1);\n\t\treturn s;\n\t},\n\n\t/**\n\t* Arranges the panels, with the panel at `index` being designated as active.\n\t*\n\t* @param  {Number} index - The index of the active panel.\n\t* @private\n\t*/\n\t_arrange: function (index) {\n\t\t// guard against being called before we've been rendered\n\t\tif (!this.containerBounds) {\n\t\t\tthis.reflow();\n\t\t}\n\t\tvar c$ = this.getOrderedControls(index);\n\t\tthis.arrange(c$, index);\n\t},\n\n\t/**\n\t* Arranges `control` according to the specified `arrangement`.\n\t*\n\t* Note that this method doesn't actually modify `control` but rather sets the\n\t* arrangement on a private member of the control to be retrieved by\n\t* {@link enyo.Panels}.\n\t*\n\t* @param  {enyo.Control} control\n\t* @param  {Object} arrangement\n\t* @private\n\t*/\n\tarrangeControl: function (control, arrangement) {\n\t\tcontrol._arranger = utils.mixin(control._arranger || {}, arrangement);\n\t},\n\n\t/**\n\t* Called before HTML is rendered. Applies CSS to panels to ensure GPU acceleration if\n\t* [accelerated]{@link enyo.Arranger#accelerated} is `true`.\n\t*\n\t* @private\n\t*/\n\tflow: function () {\n\t\tthis.c$ = [].concat(this.container.getPanels());\n\t\tthis.controlsIndex = 0;\n\t\tfor (var i=0, c$=this.container.getPanels(), c; (c=c$[i]); i++) {\n\t\t\tDom.accelerate(c, !c.preventAccelerate && this.accelerated);\n\t\t\tif (platform.safari) {\n\t\t\t\t// On Safari-desktop, sometimes having the panel's direct child set to accelerate isn't sufficient\n\t\t\t\t// this is most often the case with Lists contained inside another control, inside a Panels\n\t\t\t\tvar grands=c.children;\n\t\t\t\tfor (var j=0, kid; (kid=grands[j]); j++) {\n\t\t\t\t\tDom.accelerate(kid, this.accelerated);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Called during \"rendered\" phase to [size]{@link enyo.Arranger#size} the controls.\n\t*\n\t* @private\n\t*/\n\treflow: function () {\n\t\tvar cn = this.container.hasNode();\n\t\tthis.containerBounds = cn ? {width: cn.clientWidth, height: cn.clientHeight} : {};\n\t\tthis.size();\n\t},\n\n\t/**\n\t* If the {@link enyo.Panels} has an arrangement, flows each control according to that\n\t* arrangement.\n\t*\n\t* @private\n\t*/\n\tflowArrangement: function () {\n\t\tvar a = this.container.arrangement;\n\t\tif (a) {\n\t\t\tfor (var i=0, c$=this.container.getPanels(), c; (c=c$[i]) && (a[i]); i++) {\n\t\t\t\tthis.flowControl(c, a[i]);\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t* Lays out the given `control` according to the settings stored in the\n\t* `arrangement` object. By default, `flowControl()` will apply settings for\n\t* `left`, `top`, and `opacity`. This method should only be implemented to apply\n\t* other settings made via [arrangeControl()]{@link enyo.Arranger#arrangeControl}.\n\t*\n\t* @param {enyo.Control} control - The control to be laid out.\n\t* @param {Object} arrangement - An object whose members specify the layout settings.\n\t* @protected\n\t*/\n\tflowControl: function (control, arrangement) {\n\t\tArranger.positionControl(control, arrangement);\n\t\tvar o = arrangement.opacity;\n\t\tif (o != null) {\n\t\t\tArranger.opacifyControl(control, o);\n\t\t}\n\t},\n\n\t/**\n\t* Gets an array of controls arranged in state order.\n\t* note: optimization, dial around a single array.\n\t*\n\t* @param  {Number} index     - The index of the active panel.\n\t* @return {enyo.Control[]}   - Ordered array of controls.\n\t* @private\n\t*/\n\tgetOrderedControls: function (index) {\n\t\tvar whole = Math.floor(index);\n\t\tvar a = whole - this.controlsIndex;\n\t\tvar sign = a > 0;\n\t\tvar c$ = this.c$ || [];\n\t\tfor (var i=0; i<Math.abs(a); i++) {\n\t\t\tif (sign) {\n\t\t\t\tc$.push(c$.shift());\n\t\t\t} else {\n\t\t\t\tc$.unshift(c$.pop());\n\t\t\t}\n\t\t}\n\t\tthis.controlsIndex = whole;\n\t\treturn c$;\n\t}\n});\n\n/**\n* Positions a control via transform--`translateX/translateY` if supported,\n* falling back to `left/top` if not.\n*\n* @lends enyo.Arranger\n* @param  {enyo.Control} control - The control to position.\n* @param  {Object} bounds        - The new bounds for `control`.\n* @param  {String} unit          - The unit for `bounds` members.\n* @public\n*/\nArranger.positionControl = function (control, bounds, unit) {\n\tunit = unit || 'px';\n\tif (!this.updating) {\n\t\t// IE10 uses setBounds because of control hit caching problems seem in some apps\n\t\tif (Dom.canTransform() && !control.preventTransform && !platform.android && platform.ie !== 10) {\n\t\t\tvar l = bounds.left, t = bounds.top;\n\t\t\tl = utils.isString(l) ? l : l && (l + unit);\n\t\t\tt = utils.isString(t) ? t : t && (t + unit);\n\t\t\tDom.transform(control, {translateX: l || null, translateY: t || null});\n\t\t} else {\n\t\t\t// If a previously positioned control has subsequently been marked with\n\t\t\t// preventTransform, we need to clear out any old translation values.\n\t\t\tif (Dom.canTransform() && control.preventTransform) {\n\t\t\t\tDom.transform(control, {translateX: null, translateY: null});\n\t\t\t}\n\t\t\tcontrol.setBounds(bounds, unit);\n\t\t}\n\t}\n};\n\n/**\n* Sets the opacity value for a given control.\n*\n* @lends enyo.Arranger\n* @param  {enyo.Control} inControl - The control whose opacity is to be set.\n* @param  {Number} inOpacity - The new opacity value for the control.\n* @public\n*/\nArranger.opacifyControl = function (inControl, inOpacity) {\n\tvar o = inOpacity;\n\t// FIXME: very high/low settings of opacity can cause a control to\n\t// blink so cap this here.\n\to = o > 0.99 ? 1 : (o < 0.01 ? 0 : o);\n\t// note: we only care about ie8\n\tif (platform.ie < 9) {\n\t\tinControl.applyStyle('filter', 'progid:DXImageTransform.Microsoft.Alpha(Opacity=' + (o * 100) + ')');\n\t} else {\n\t\tinControl.applyStyle('opacity', o);\n\t}\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind');\n\nvar\n\tLinkedListNode = require('./LinkedListNode');\n\n/**\n* An abstract linked-list.\n*\n* @class enyo.LinkedList\n* @private\n*/\nmodule.exports = kind(\n\t/** @lends enyo.LinkedList.prototype */ {\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: null,\n\t\n\t/**\n\t* @private\n\t*/\n\n\t\n\t/**\n\t* @private\n\t*/\n\tnodeKind: LinkedListNode,\n\t\n\t/**\n\t* @private\n\t*/\n\thead: null,\n\t\n\t/**\n\t* @private\n\t*/\n\ttail: null,\n\t\n\t/**\n\t* @private\n\t*/\n\tlength: 0,\n\t\n\t/**\n\t* @private\n\t*/\n\tclear: function () {\n\t\tif (this.head) {\n\t\t\t// this will trigger a chain event down the list\n\t\t\tthis.head.destroy();\n\t\t}\n\t\tthis.head = null;\n\t\tthis.tail = null;\n\t\tthis.length = 0;\t\t\t\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tslice: function (fromNode, toNode) {\n\t\tvar node = fromNode || this.head\n\t\t\t, list = new this.ctor()\n\t\t\t, cpy;\n\t\t\n\t\t// ensure we have a final node or our tail\n\t\ttoNode = toNode || this.tail;\n\t\t\n\t\tif (node && node !== toNode) {\n\t\t\tdo {\n\t\t\t\tcpy = node.copy();\n\t\t\t\tlist.appendNode(cpy);\n\t\t\t} while ((node = node.next) && node !== toNode);\n\t\t}\n\t\t\n\t\treturn list;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tdestroy: function () {\n\t\tthis.clear();\n\t\tthis.destroyed = true;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tcreateNode: function (props) {\n\t\treturn new this.nodeKind(props);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tdeleteNode: function (node) {\n\t\tthis.removeNode(node);\n\t\t\n\t\t// can't chain destruct because we removed its chain references\n\t\tnode.destroy();\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tremoveNode: function (node) {\n\t\tvar prev = node.prev\n\t\t\t, next = node.next;\n\t\t\t\n\t\tprev && (prev.next = next);\n\t\tnext && (next.prev = prev);\n\t\tthis.length--;\n\t\tnode.next = node.prev = null;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tappendNode: function (node, targetNode) {\n\t\ttargetNode = targetNode || this.tail;\n\t\t\n\t\tif (targetNode) {\n\t\t\tif (targetNode.next) {\n\t\t\t\tnode.next = targetNode.next;\n\t\t\t}\n\t\t\t\n\t\t\ttargetNode.next = node;\n\t\t\tnode.prev = targetNode;\n\t\t\t\n\t\t\tif (targetNode === this.tail) {\n\t\t\t\tthis.tail = node;\n\t\t\t}\n\t\t\t\n\t\t\tthis.length++;\n\t\t} else {\n\t\t\t\n\t\t\tthis.head = this.tail = node;\n\t\t\tnode.prev = node.next = null;\n\t\t\tthis.length = 1;\n\t\t}\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tfind: function (fn, ctx, targetNode) {\n\t\tvar node = targetNode || this.head;\n\t\tif (node) {\n\t\t\tdo {\n\t\t\t\tif (fn.call(ctx || this, node, this)) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t} while ((node = node.next));\n\t\t}\n\t\t// if no node qualified it returns false\n\t\treturn false;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tforward: function (fn, ctx, targetNode) {\n\t\tvar node = targetNode || this.head;\n\t\tif (node) {\n\t\t\tdo {\n\t\t\t\tif (fn.call(ctx || this, node, this)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while ((node = node.next));\n\t\t}\n\t\t// returns the last node (if any) that was processed in the chain\n\t\treturn node;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tbackward: function (fn, ctx, targetNode) {\n\t\tvar node = targetNode || this.tail;\n\t\tif (node) {\n\t\t\tdo {\n\t\t\t\tif (fn.call(ctx || this, node, this)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while ((node = node.prev));\n\t\t}\n\t\t// returns the last node (if any) that was processed in the chain\n\t\treturn node;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tconstructor: function () {\n\t\tthis.nodeType = kind.constructorForKind(this.nodeType);\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind');\n\nvar\n\tLinkedListNode = require('./LinkedListNode');\n\nfunction get (base, prop) {\n\treturn base && /*isObject(base)*/ (typeof base == 'object')? (\n\t\tbase.get? base.get(prop): base[prop]\n\t): undefined;\n}\n\n/**\n* An internally used {@glossary kind}.\n*\n* @class enyo.ObserverChainNode\n* @extends enyo.LinkedListNode\n* @private\n*/\nmodule.exports = kind(\n\t/** @lends enyo.ObserverChainNode.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tkind: LinkedListNode,\n\n\t/**\n\t* @private\n\t*/\n\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.connect();\n\t\t};\n\t}),\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tthis.disconnect();\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.observer = null;\n\t\t\tthis.list = null;\n\t\t\tthis.object = null;\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\tconnect: function () {\n\t\tvar obj = this.object\n\t\t\t, obs = this._changed\n\t\t\t, prop = this.property;\n\t\tif (obj) {\n\t\t\tif (obj.observe) obj.observe(prop, obs, this, {noChain: true, priority: true});\n\t\t\tthis.connected = true;\n\t\t\tthis.list.connected++;\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tdisconnect: function () {\n\t\tvar obj = this.object\n\t\t\t, obs = this._changed\n\t\t\t, prop = this.property\n\t\t\t, was = this.connected;\n\t\tobj && obj.unobserve && obj.unobserve(prop, obs, this);\n\t\tthis.connected = null;\n\t\tif (was) this.list.connected--;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tsetObject: function (object) {\n\t\tvar cur = this.object\n\t\t\t, prop = this.property\n\t\t\t, was, is;\n\t\t\n\t\tif (cur !== object) {\n\t\t\tthis.disconnect();\n\t\t\tthis.object = object;\n\t\t\tthis.connect();\n\t\t\t\n\t\t\tif (this.list.tail === this) {\n\t\t\t\twas = get(cur, prop);\n\t\t\t\tis = get(object, prop);\n\t\t\t\t// @TODO: It would be better to somehow cache values\n\t\t\t\t// such that it could intelligently derive the difference\n\t\t\t\t// without needing to continuously look it up with get\n\t\t\t\twas !== is && this.list.observed(this, was, is);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\t_changed: function (was, is) {\n\t\tthis.list.observed(this, was, is);\n\t}\n});","var\n\tkind = require('../../enyo/lib/kind');\n\nvar\n\tArranger = require('./Arranger');\n\n\n/**\n* {@link enyo.CardArranger} is an {@link enyo.Arranger} that displays only\n* one active control. The non-active controls are hidden with\n* `setShowing(false)`. Transitions between arrangements are handled by fading\n* from one control to the next.\n*\n* For more information, see the documentation on\n* [Arrangers]{@linkplain $dev-guide/building-apps/layout/arrangers.html} in the\n* Enyo Developer Guide.\n*\n* @class  enyo.CardArranger\n* @extends enyo.Arranger\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  enyo.CardArranger.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.CardArranger',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Arranger,\n\n\t/**\n\t* @private\n\t*/\n\tlayoutClass: 'enyo-arranger enyo-arranger-fit',\n\n\t/**\n\t* @see {@link enyo.Arranger.calcArrangementDifference}\n\t* @protected\n\t*/\n\tcalcArrangementDifference: function (i0, a0, i1, a1) {\n\t\treturn this.containerBounds.width;\n\t},\n\n\t/**\n\t* Applies opacity to the activation and deactivation of panels. Expects the passed-in\n\t* array of controls to be ordered such that the first control in the array is the active\n\t* panel.\n\t*\n\t* @see {@link enyo.Arranger.arrange}\n\t* @protected\n\t*/\n\tarrange: function (controls, arrangement) {\n\t\tfor (var i=0, c, v; (c=controls[i]); i++) {\n\t\t\tv = (i === 0) ? 1 : 0;\n\t\t\tthis.arrangeControl(c, {opacity: v});\n\t\t}\n\t},\n\n\t/**\n\t* Shows the active panel at the start of transition. Also triggers a resize on\n\t* the active panel if it wasn't previously showing.\n\t*\n\t* @see {@link enyo.Arranger.start}\n\t* @method\n\t* @protected\n\t*/\n\tstart: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tvar c$ = this.container.getPanels();\n\t\t\tfor (var i=0, c; (c=c$[i]); i++) {\n\t\t\t\tvar wasShowing=c.showing;\n\t\t\t\tc.setShowing(i == this.container.fromIndex || i == (this.container.toIndex));\n\t\t\t\tif (c.showing && !wasShowing) {\n\t\t\t\t\tc.resize();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* Hides all non-active panels when the transition completes.\n\t*\n\t* @see {@link enyo.Arranger.finish}\n\t* @method\n\t* @protected\n\t*/\n\tfinish: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tvar c$ = this.container.getPanels();\n\t\t\tfor (var i=0, c; (c=c$[i]); i++) {\n\t\t\t\tc.setShowing(i == this.container.toIndex);\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* Ensures all panels are showing and visible when the arranger is destroyed.\n\t*\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tvar c$ = this.container.getPanels();\n\t\t\tfor (var i=0, c; (c=c$[i]); i++) {\n\t\t\t\tArranger.opacifyControl(c, 1);\n\t\t\t\tif (!c.showing) {\n\t\t\t\t\tc.setShowing(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t})\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind');\n\nvar\n\tLinkedList = require('./LinkedList'),\n\tObserverChainNode = require('./ObserverChainNode');\n\nfunction get (base, prop) {\n\treturn base && /*isObject(base)*/ (typeof base == 'object')? (\n\t\tbase.get? base.get(prop): base[prop]\n\t): undefined;\n}\n\n/**\n* An internally used {@glossary kind}.\n*\n* @class enyo.ObserverChain\n* @extends enyo.LinkedList\n* @private\n*/\nmodule.exports = kind(\n\t/** @lends enyo.ObserverChain.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tkind: LinkedList,\n\n\t/**\n\t* @private\n\t*/\n\tnodeKind: ObserverChainNode,\n\n\t/**\n\t* @private\n\t*/\n\n\t\n\t/**\n\t* @private\n\t*/\n\tconnected: 0,\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructor: function (path, object) {\n\t\tthis.object = object;\n\t\tthis.path = path;\n\t\tthis.parts = path.split('.');\n\t\tthis.createChain();\n\t},\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.object = null;\n\t\t\tthis.parts = null;\n\t\t\tthis.path = null;\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\trebuild: function (target) {\n\t\tif (!this.rebuilding) {\n\t\t\tthis.rebuilding = true;\n\t\t\tthis.forward(function (node) {\n\t\t\t\tif (node !== this.head) {\n\t\t\t\t\tvar src = node.prev.object\n\t\t\t\t\t\t, prop = node.prev.property;\n\t\t\t\t\tnode.setObject(get(src, prop));\n\t\t\t\t}\n\t\t\t}, this, target);\n\t\t\tthis.rebuilding = false;\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tisConnected: function () {\n\t\treturn !! (this.connected === this.length && this.length);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tbuildPath: function (target) {\n\t\tvar str = '';\n\t\t\n\t\tthis.backward(function (node) {\n\t\t\tstr = node.property + (str? ('.' + str): str);\n\t\t}, this, target);\n\t\t\n\t\treturn str;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tcreateChain: function () {\n\t\tvar parts = this.parts\n\t\t\t, next = this.object\n\t\t\t, $ = false\n\t\t\t, node, prop;\n\t\t\t\n\t\tfor (var i=0; (prop=parts[i]); ++i) {\n\t\t\t\n\t\t// forEach(parts, function (prop, idx) {\n\t\t\t// we create a special case for the $ hash property\n\t\t\tif (prop == '$') {\n\t\t\t\t$ = true;\n\t\t\t} else {\n\t\t\t\t// in cases where the chain has the $ property we arbitrarily\n\t\t\t\t// force it onto our current nodes property and let the special handling\n\t\t\t\t// in ObserverChainNode and ObserverSupport handle the rest\n\t\t\t\t$ && (prop = '$.' + prop);\n\t\t\t\tnode = this.createNode({property: prop, object: next, list: this});\n\t\t\t\tthis.appendNode(node);\n\t\t\t\tnext = get(next, prop);\n\t\t\t\t$ = false;\n\t\t\t}\n\t\t// }, this);\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tobserved: function (node, was, is) {\n\t\tthis.object.stopNotifications();\n\t\t// @NOTE: About the following two cases, they are mutually exclusive and this seems perfect\n\t\t// that we don't see double notifications\n\t\t// @TODO: Only notify if it was the full property path? This is far more efficient after\n\t\t// testing but not as flexible...\n\t\tnode === this.tail /*&& was !== is*/ && this.object.notify(this.buildPath(node), was, is);\n\t\t// @TODO: It seems the same case across the board that the rebuild only needs to take place\n\t\t// from the beginning to the second-to-last elem\n\t\tnode !== this.tail && was !== is && this.rebuild(node);\n\t\tthis.object.startNotifications();\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar\n\tObserverChain = require('./ObserverChain');\n\nvar observerTable = {};\n\t\nkind.concatenated.push(\"observers\");\n\n/**\n* Responds to changes in one or more properties.\n* [Observers]{@link enyo.ObserverSupport~observer} may be registered in\n* several different ways. See the {@link enyo.ObserverSupport} documentation\n* for more details. Also note that, while observers should not be called\n* directly, if defined on a [kind]{@glossary kind}, they may be\n* overloaded for special behavior.\n*\n* @see enyo.ObserverSupport\n* @see enyo.ObserverSupport.observe\n* @callback enyo.ObserverSupport~Observer\n* @param {*} was - The previous value of the property that has changed.\n* @param {*} is - The current value of the property that has changed.\n* @param {String} prop - The name of the property that has changed.\n* @public\n*/\n\n/**\n* @private\n*/\nfunction addObserver (path, fn, ctx, opts) {\n\t\n\tvar observers = this.getObservers(),\n\t\tchains = this.getChains(),\n\t\tparts = path.split('.'),\n\t\tprio = opts && opts.priority,\n\t\tentries,\n\t\tnoChain;\n\t\t\n\tnoChain = (opts && opts.noChain) ||\n\t\t\tchains[path] ||\n\t\t\tparts.length < 2 ||\n\t\t\t(parts.length === 2 && path[0] == '$');\n\t\n\tif (observers[path] && !observers.hasOwnProperty(path)) {\n\t\tobservers[path] = observers[path].slice();\n\t}\n\t\n\tentries = observers[path] || (observers[path] = []);\n\tentries[prio ? 'unshift' : 'push']({method: fn, ctx: ctx || this});\n\t\n\tif (!noChain) {\n\t\tthis.getChains()[path] = new ObserverChain(path, this);\n\t}\n\t\n\treturn this;\n}\n\n/**\n* @private\n*/\nfunction removeObserver (obj, path, fn, ctx) {\n\tvar observers = obj.getObservers(path)\n\t\t, chains = obj.getChains()\n\t\t, idx, chain;\n\t\t\n\tif (observers && observers.length) {\n\t\tidx = observers.findIndex(function (ln) {\n\t\t\treturn ln.method === fn && (ctx? ln.ctx === ctx: true);\n\t\t});\n\t\tidx > -1 && observers.splice(idx, 1);\n\t}\n\t\n\tif ((chain = chains[path]) && !observers.length) {\n\t\tchain.destroy();\n\t}\n\t\n\treturn obj;\n}\n\n/**\n* @private\n*/\nfunction notifyObservers (obj, path, was, is, opts) {\n\tif (obj.isObserving()) {\n\t\tvar observers = obj.getObservers(path);\n\t\t\n\t\tif (observers && observers.length) {\n\t\t\tfor (var i=0, ln; (ln=observers[i]); ++i) {\n\t\t\t\tif (typeof ln.method == \"string\") obj[ln.method](was, is, path, opts);\n\t\t\t\telse ln.method.call(ln.ctx || obj, was, is, path, opts);\n\t\t\t}\n\t\t}\n\t} else enqueue(obj, path, was, is, opts);\n\t\n\treturn obj;\n}\n\n/**\n* @private\n*/\nfunction enqueue (obj, path, was, is, opts) {\n\tif (obj._notificationQueueEnabled) {\n\t\tvar queue = obj._notificationQueue || (obj._notificationQueue = {})\n\t\t\t, ln = queue[path] || (queue[path] = {});\n\t\n\t\tln.was = was;\n\t\tln.is = is;\n\t\tln.opts = opts;\n\t}\n}\n\n/**\n* @private\n*/\nfunction flushQueue (obj) {\n\tvar queue = obj._notificationQueue\n\t\t, path, ln;\n\t\n\tif (queue) {\n\t\tobj._notificationQueue = null;\n\t\t\n\t\tfor (path in queue) {\n\t\t\tln = queue[path];\n\t\t\tobj.notify(path, ln.was, ln.is, ln.opts);\n\t\t}\n\t}\n}\n\t\n/**\n* Adds support for notifications on property changes. Most\n* [kinds]{@glossary kind} (including all kinds that inherit from\n* {@link enyo.Object}) already have this {@glossary mixin} applied.\n* This allows for\n* [observers]{@link enyo.ObserverSupport~Observer} to be\n* [declared]{@link enyo.ObserverSupport.observers} or \"implied\" (see below).\n*\n* Implied observers are not declared, but derived from their `name`. They take\n* the form `<property>Changed`, where `<property>` is the property to\n* [observe]{@link enyo.ObserverSupport.observe}. For example:\n*\n* ```javascript\n* enyo.kind({\n* \tname: 'MyKind',\n*\n* \t// some local property\n* \tvalue: true,\n*\n* \t// and the implied observer of that property\n* \tvalueChanged: function (was, is) {\n* \t\t// do something now that it has changed\n* \t\tenyo.log('value was \"' + was + '\" but now it is \"' + is + '\"');\n* \t}\n* });\n*\n* var mine = new MyKind();\n* mine.set('value', false); // -> value was \"true\" but now it is \"false\"\n* ```\n*\n* Using the `observers` property for its declarative syntax, an observer may\n* observe any property (or properties), regardless of its `name`. For example:\n*\n* ```javascript\n* enyo.kind({\n* \tname: 'MyKind',\n*\n* \t// some local property\n* \tvalue: true,\n*\n* \t// another local property\n* \tcount: 1,\n*\n* \t// declaring the observer\n* \tobservers: [\n* \t\t// the path can be a single string or an array of strings\n* \t\t{method: 'myObserver', path: ['value', 'count']}\n* \t],\n*\n* \t// now this observer will be notified of changes to both properties\n* \tmyObserver: function (was, is, prop) {\n* \t\t// do something now that it changed\n* \t\tenyo.log(prop + ' was \"' + was + '\" but now it is \"' + is + '\"');\n* \t}\n* });\n*\n* var mine = new MyKind();\n* mine.set('value', false); // -> value was \"true\" but now it is \"false\"\n* mine.set('count', 2); // -> count was \"1\" but now it is \"2\"\n* ```\n*\n* While observers may be [notified]{@link enyo.ObserverSupport.notify} of\n* changes to multiple properties, this is not a typical use case for implied\n* observers, since, by convention, they are only registered for the named\n* property.\n*\n* There is one additional way to use observers, if necessary. You may use the\n* API methods [observe()]{@link enyo.ObserverSupport.observe} and\n* [unobserve()]{@link enyo.ObserverSupport.unobserve} to dynamically\n* register and unregister observers as needed. For example:\n*\n* ```javascript\n* var object = new enyo.Object({value: true});\n* var observer = function (was, is) {\n* \tenyo.log('value was \"' + was + '\" but now it is \"' + is + '\"');\n* };\n*\n* object.observe('value', observer);\n* object.set('value', false); // -> value was \"true\" but now it is \"false\"\n* object.unobserve('value', observer);\n* object.set('value', true); // no output because there is no observer\n* ```\n*\n* Be sure to read the documentation for these API methods; proper usage of\n* these methods is important for avoiding common pitfalls and memory leaks.\n*\n* @mixin enyo.ObserverSupport\n* @public\n*/\nvar ObserverSupport = module.exports = /** @lends enyo.ObserverSupport */ {\n\t\n\t/**\n\t* @private\n\t*/\n\tname: \"ObserverSupport\",\n\t\n\t/**\n\t* @private\n\t*/\n\t_observing: true,\n\t\n\t/**\n\t* @private\n\t*/\n\t_observeCount: 0,\n\t\n\t/**\n\t* @private\n\t*/\n\t_notificationQueue: null,\n\t\n\t/**\n\t* @private\n\t*/\n\t_notificationQueueEnabled: true,\n\t\n\t/**\n\t* Determines whether `_observing` is enabled. If\n\t* [stopNotifications()]{@link enyo.ObserverSupport.stopNotifications} has\n\t* been called, then this will return `false`.\n\t*\n\t* @see enyo.ObserverSupport.stopNotifications\n\t* @see enyo.ObserverSupport.startNotifications\n\t* @returns {Boolean} Whether or not the callee is observing.\n\t*/\n\tisObserving: function () {\n\t\treturn this._observing;\n\t},\n\t\n\t/**\n\t* Returns an immutable list of [observers]{@link enyo.ObserverSupport~Observer}\n\t* for the given `path`, or all observers for the callee.\n\t*\n\t* @param {String} [path] - Path or property path for which\n\t* [observers]{@link enyo.ObserverSupport~Observer} will be returned. If not\n\t* specified, all observers for the callee will be returned.\n\t*\n\t* @returns {enyo.ObserverSupport~Observer[]} The immutable\n\t* [array]{@glossary Array} of observers.\n\t* @public\n\t*/\n\tgetObservers: function (path) {\n\t\tvar euid = this.euid || (this.euid = utils.uid('o')),\n\t\t\tret,\n\t\t\tloc;\n\t\t\t\n\t\tloc = observerTable[euid] || (observerTable[euid] = (\n\t\t\tthis._observers? Object.create(this._observers): {}\n\t\t));\n\t\t\n\t\tif (!path) return loc;\n\t\t\n\t\tret = loc[path];\n\t\t\n\t\t// if the special property exists...\n\t\tif (loc['*']) ret = ret ? ret.concat(loc['*']) : loc['*'].slice();\n\t\treturn ret;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tgetChains: function () {\n\t\treturn this._observerChains || (this._observerChains = {});\n\t},\n\t\n\t/**\n\t* @deprecated\n\t* @alias enyo.ObserverSupport.observe\n\t* @public\n\t*/\n\taddObserver: function () {\n\t\t// @NOTE: In this case we use apply because of internal variable use of parameters\n\t\treturn addObserver.apply(this, arguments);\n\t},\n\t\n\t/**\n\t* Registers an [observer]{@link enyo.ObserverSupport~Observer} to be\n\t* [notified]{@link enyo.ObserverSupport.notify} when the given property has\n\t* been changed. It is important to note that it is possible to register the\n\t* same observer multiple times (although this is never the intention), so\n\t* care should be taken to avoid that scenario. It is also important to\n\t* understand how observers are stored and unregistered\n\t* ([unobserved]{@link enyo.ObserverSupport.unobserve}). The `ctx` (context)\n\t* parameter is stored with the observer reference. **If used when\n\t* registering, it should also be used when unregistering.**\n\t*\n\t* @see enyo.ObserverSupport.unobserve\n\t* @param {String} path - The property or property path to observe.\n\t* @param {enyo.ObserverSupport~Observer} fn - The\n\t*\t[observer]{@link enyo.ObserverSupport~Observer} method that responds to changes.\n\t* @param {*} [ctx] - The `this` (context) under which to execute the observer.\n\t*\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tobserve: function () {\n\t\t// @NOTE: In this case we use apply because of internal variable use of parameters\n\t\treturn addObserver.apply(this, arguments);\n\t},\n\t\n\t/**\n\t* @deprecated\n\t* @alias enyo.ObserverSupport.unobserve\n\t* @public\n\t*/\n\tremoveObserver: function (path, fn, ctx) {\n\t\treturn removeObserver(this, path, fn);\n\t},\n\t\n\t/**\n\t* Unregisters an [observer]{@link enyo.ObserverSupport~Observer}. If a `ctx`\n\t* (context) was supplied to [observe()]{@link enyo.ObserverSupport.observe},\n\t* then it should also be supplied to this method.\n\t*\n\t* @see enyo.ObserverSupport.observe\n\t* @param {String} path - The property or property path to unobserve.\n\t* @param {enyo.ObserverSupport~Observer} fn - The\n\t*\t[observer]{@link enyo.ObserverSupport~Observer} method that responds to changes.\n\t* @param {*} [ctx] - The `this` (context) under which to execute the observer.\n\t*\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tunobserve: function (path, fn, ctx) {\n\t\treturn removeObserver(this, path, fn, ctx);\n\t},\n\t\n\t/**\n\t* Removes all [observers]{@link enyo.ObserverSupport~Observer} from the\n\t* callee. If a `path` parameter is provided, observers will only be removed\n\t* from that path (or property).\n\t*\n\t* @param {String} [path] - A property or property path from which to remove all\n\t*\t[observers]{@link enyo.ObserverSupport~Observer}.\n\t* @returns {this} The callee for chaining.\n\t*/\n\tremoveAllObservers: function (path) {\n\t\tvar euid = this.euid\n\t\t\t, loc = euid && observerTable[euid];\n\t\t\n\t\tif (loc) {\n\t\t\tif (path) {\n\t\t\t\tloc[path] = null;\n\t\t\t} else {\n\t\t\t\tobserverTable[euid] = null;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @deprecated\n\t* @alias enyo.ObserverSupport.notify\n\t* @public\n\t*/\n\tnotifyObservers: function (path, was, is, opts) {\n\t\treturn notifyObservers(this, path, was, is, opts);\n\t},\n\t\n\t/**\n\t* Triggers any [observers]{@link enyo.ObserverSupport~Observer} for the\n\t* given `path`. The previous and current values must be supplied. This\n\t* method is typically called automatically, but it may also be called\n\t* forcibly by [setting]{@link enyo.Object#set} a value with the\n\t* `force` option.\n\t*\n\t* @param {String} path - The property or property path to notify.\n\t* @param {*} was - The previous value.\n\t* @param {*} is - The current value.\n\t* @returns {this} The callee for chaining.\n\t*/\n\tnotify: function (path, was, is, opts) {\n\t\treturn notifyObservers(this, path, was, is, opts);\n\t},\n\t\n\t/**\n\t* Stops all [notifications]{@link enyo.ObserverSupport.notify} from\n\t* propagating. By default, all notifications will be queued and flushed once\n\t* [startNotifications()]{@link enyo.ObserverSupport.startNotifications}\n\t* has been called. Setting the optional `noQueue` flag will also disable the\n\t* queue, or you can use the\n\t* [disableNotificationQueue()]{@link enyo.ObserverSupport.disableNotificationQueue} and\n\t* [enableNotificationQueue()]{@link enyo.ObserverSupport.enableNotificationQueue}\n\t* API methods. `startNotifications()` will need to be called the same number\n\t* of times that this method has been called.\n\t*\n\t* @see enyo.ObserverSupport.startNotifications\n\t* @see enyo.ObserverSupport.disableNotificationQueue\n\t* @see enyo.ObserverSupport.enableNotificationQueue\n\t* @param {Boolean} [noQueue] - If `true`, this will also disable the notification queue.\n\t* @returns {this} The callee for chaining.\n\t*/\n\tstopNotifications: function (noQueue) {\n\t\tthis._observing = false;\n\t\tthis._observeCount++;\n\t\tnoQueue && this.disableNotificationQueue();\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Starts [notifications]{@link enyo.ObserverSupport.notify} if they have\n\t* been [disabled]{@link enyo.ObserverSupport.stopNotifications}. If the\n\t* notification queue was not disabled, this will automatically flush the\n\t* queue of all notifications that were encountered while stopped. This\n\t* method must be called the same number of times that\n\t* [stopNotifications()]{@link enyo.ObserverSupport.stopNotifications} was\n\t* called.\n\t*\n\t* @see enyo.ObserverSupport.stopNotifications\n\t* @see enyo.ObserverSupport.disableNotificationQueue\n\t* @see enyo.ObserverSupport.enableNotificationQueue\n\t* @param {Boolean} [queue] - If `true` and the notification queue is disabled,\n\t* the queue will be re-enabled.\n\t* @returns {this} The callee for chaining.\n\t*/\n\tstartNotifications: function (queue) {\n\t\tthis._observeCount && this._observeCount--;\n\t\tthis._observeCount === 0 && (this._observing = true);\n\t\tqueue && this.enableNotificationQueue();\n\t\tthis.isObserving() && flushQueue(this);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Re-enables the notification queue, if it was disabled.\n\t*\n\t* @see enyo.ObserverSupport.disableNotificationQueue\n\t* @returns {this} The callee for chaining.\n\t*/\n\tenableNotificationQueue: function () {\n\t\tthis._notificationQueueEnabled = true;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* If the notification queue is enabled (the default), it will be disabled\n\t* and any notifications in the queue will be removed.\n\t*\n\t* @see enyo.ObserverSupport.enableNotificationQueue\n\t* @returns {this} The callee for chaining.\n\t*/\n\tdisableNotificationQueue: function () {\n\t\tthis._notificationQueueEnabled = false;\n\t\tthis._notificationQueue = null;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tvar chains, chain, path, entries, i;\n\t\t\t\n\t\t\t// if there are any observers that need to create dynamic chains\n\t\t\t// we look for and instance those now\n\t\t\tif (this._observerChains) {\n\t\t\t\tchains = this._observerChains;\n\t\t\t\tthis._observerChains = {};\n\t\t\t\tfor (path in chains) {\n\t\t\t\t\tentries = chains[path];\n\t\t\t\t\tfor (i = 0; (chain = entries[i]); ++i) this.observe(path, chain.method);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tvar chains = this._observerChains,\n\t\t\t\tpath,\n\t\t\t\tchain;\n\t\t\t\n\t\t\tsup.apply(this, arguments);\n\t\t\t\n\t\t\tif (chains) {\n\t\t\t\tfor (path in chains) {\n\t\t\t\t\tchain = chains[path];\n\t\t\t\t\tchain.destroy();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._observerChains = null;\n\t\t\t}\n\t\t};\n\t})\n\t\n};\n\n/**\n* Hijack the original so we can add additional default behavior.\n*\n* @private\n*/\nvar sup = kind.concatHandler;\n\n// @NOTE: It seems like a lot of work but it really won't happen that much and the more\n// we push to kind-time the better for initialization time\n\n/** @private */\nkind.concatHandler = function (ctor, props, instance) {\n\t\n\tsup.call(this, ctor, props, instance);\n\t\n\tif (props === ObserverSupport) return;\n\n\tvar proto = ctor.prototype || ctor\n\t\t, observers = proto._observers? Object.create(proto._observers): null\n\t\t, incoming = props.observers\n\t\t, chains = proto._observerChains && Object.create(proto._observerChains);\n\t\t\n\tif (!observers) {\n\t\tif (proto.kindName) observers = {};\n\t\telse return;\n\t}\n\t\t\n\tif (incoming && !(incoming instanceof Array)) {\n\t\t(function () {\n\t\t\tvar tmp = [], deps, name;\n\t\t\t// here is the slow iteration over the properties...\n\t\t\tfor (name in props.observers) {\n\t\t\t\t// points to the dependencies of the computed method\n\t\t\t\tdeps = props.observers[name];\n\t\t\t\t// create a single entry now for the method/computed with all dependencies\n\t\t\t\ttmp.push({method: name, path: deps});\n\t\t\t}\n\t\t\tincoming = tmp;\n\t\t}());\n\t\t// we need to ensure we don't modify the fixed array of a mixin or reused object\n\t\t// because it could wind up inadvertantly adding the same entry multiple times\n\t} else if (incoming) incoming = incoming.slice();\n\t\n\t// this scan is required to figure out what auto-observers might be present\n\tfor (var key in props) {\n\t\tif (key.slice(-7) == \"Changed\") {\n\t\t\tincoming || (incoming = []);\n\t\t\tincoming.push({method: key, path: key.slice(0, -7)});\n\t\t}\n\t}\n\t\n\tvar addObserverEntry = function (path, method) {\n\t\tvar obs;\n\t\t// we have to make sure that the path isn't a chain because if it is we add it\n\t\t// to the chains instead\n\t\tif (path.indexOf(\".\") > -1) {\n\t\t\tif (!chains) chains = {};\n\t\t\tobs = chains[path] || (chains[path] = []);\n\t\t\tobs.push({method: method});\n\t\t} else {\n\t\t\tif (observers[path] && !observers.hasOwnProperty(path)) observers[path] = observers[path].slice();\n\t\t\tobs = observers[path] || (observers[path] = []);\n\t\t\tif (!obs.find(function (ln) { return ln.method == method; })) obs.push({method: method});\n\t\t}\n\t};\n\t\n\tif (incoming) {\n\t\tincoming.forEach(function (ln) {\n\t\t\t// first we determine if the path itself is an array of paths to observe\n\t\t\tif (ln.path && ln.path instanceof Array) ln.path.forEach(function (en) { addObserverEntry(en, ln.method); });\n\t\t\telse addObserverEntry(ln.path, ln.method);\n\t\t});\n\t}\n\t\n\t// we clear the key so it will not be added to the prototype\n\t// delete props.observers;\n\t// we update the properties to whatever their new values may be\n\tproto._observers = observers;\n\tproto._observerChains = chains;\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tlogger = require('./logger'),\n\tutils = require('./utils');\n\nvar\n\tMixinSupport = require('./MixinSupport'),\n\tObserverSupport = require('./ObserverSupport'),\n\tBindingSupport = require('./BindingSupport');\n\t\n/**\n* Used by all [objects]{@link enyo.Object} and [subkinds]{@glossary subkind} when using the\n* {@link enyo.Object#log}, {@link enyo.Object#warn} and {@link enyo.Object#error} methods.\n*\n* @private\n*/\nfunction log (method, args) {\n\tif (logger.shouldLog(method)) {\n\t\ttry {\n\t\t\tthrow new Error();\n\t\t} catch(err) {\n\t\t\tlogger._log(method, [args.callee.caller.displayName + ': ']\n\t\t\t\t.concat(utils.cloneArray(args)));\n\t\t\tlogger.log(err.stack);\n\t\t}\n\t}\n}\n\n/**\n* {@link enyo.Object} lies at the heart of the Enyo framework's implementations of property\n* publishing, computed properties (via the {@link enyo.ComputedSupport} {@glossary mixin}),\n* and data binding (via the {@link enyo.BindingSupport} mixin and {@link enyo.Binding}\n* object). It also provides several utility [functions]{@glossary Function} for its\n* [subkinds]{@glossary subkind}.\n*\n* @class enyo.Object\n* @mixes enyo.MixinSupport\n* @mixes enyo.ObserverSupport\n* @mixes enyo.BindingSupport\n* @public\n*/\nvar CoreObject = module.exports = kind(\n\t/** @lends enyo.Object.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Object',\n\n\t/**\n\t* @private\n\t*/\n\tkind: null,\n\n\t/**\n\t* @private\n\t*/\n\n\n\t/**\n\t* Will be `true` if the [destroy()]{@link enyo.Object#destroy} method has been called;\n\t* otherwise, `false`.\n\t*\n\t* @readonly\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tdestroyed: false,\n\n\t/**\n\t* @private\n\t*/\n\tmixins: [MixinSupport, ObserverSupport, BindingSupport],\n\n\t/**\n\t* @private\n\t*/\n\tconstructor: function (props) {\n\t\tthis.importProps(props);\n\t},\n\n\t/**\n\t* Imports the values from the given [object]{@glossary Object}. Automatically called\n\t* from the [constructor]{@link enyo.Object#constructor}.\n\t*\n\t* @param {Object} props - If provided, the [object]{@glossary Object} from which to\n\t*\tretrieve [keys/values]{@glossary Object.keys} to mix in.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\timportProps: function (props) {\n\t\tvar key;\n\n\t\tif (props) {\n\t\t\tkind.concatHandler(this, props, true);\n\t\t\t// if props is a default hash this is significantly faster than\n\t\t\t// requiring the hasOwnProperty check every time\n\t\t\tif (!props.kindName) {\n\t\t\t\tfor (key in props) {\n\t\t\t\t\tkind.concatenated.indexOf(key) === -1 && (this[key] = props[key]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (key in props) {\n\t\t\t\t\tif (kind.concatenated.indexOf(key) === -1 && props.hasOwnProperty(key)) {\n\t\t\t\t\t\tthis[key] = props[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Calls the [destroy()]{@link enyo.Object#destroy} method for the named {@link enyo.Object} \n\t* property.\n\t*\n\t* @param {String} name - The name of the property to destroy, if possible.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tdestroyObject: function (name) {\n\t\tif (this[name] && this[name].destroy) {\n\t\t\tthis[name].destroy();\n\t\t}\n\t\tthis[name] = null;\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Sends a log message to the [console]{@glossary console}, prepended with the name\n\t* of the {@glossary kind} and method from which `log()` was invoked. Multiple\n\t* {@glossary arguments} are coerced to {@glossary String} and\n\t* [joined with spaces]{@glossary Array.join}.\n\t*\n\t* ```javascript\n\t* enyo.kind({\n\t*\tname: 'MyObject',\n\t*\tkind: 'enyo.Object',\n\t*\thello: function() {\n\t*\t\tthis.log('says', 'hi');\n\t*\t\t// shows in the console: MyObject.hello: says hi\n\t*\t}\n\t* });\n\t* ```\n\t* @public\n\t*/\n\tlog: function () {\n\t\tvar acc = arguments.callee.caller,\n\t\t\tnom = ((acc ? acc.displayName : '') || '(instance method)') + ':',\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\targs.unshift(nom);\n\t\tlogger.log('log', args);\n\t},\n\t\n\t/**\n\t* Same as [log()]{@link enyo.Object#log}, except that it uses the \n\t* console's [warn()]{@glossary console.warn} method (if it exists).\n\t*\n\t* @public\n\t*/\n\twarn: function () {\n\t\tlog('warn', arguments);\n\t},\n\t\n\t/**\n\t* Same as [log()]{@link enyo.Object#log}, except that it uses the \n\t* console's [error()]{@glossary console.error} method (if it exists).\n\t*\n\t* @public\n\t*/\n\terror: function () {\n\t\tlog('error', arguments);\n\t},\n\n\t/**\n\t* Retrieves the value for the given path. The value may be retrieved as long as the given \n\t* path is resolvable relative to the given {@link enyo.Object}. See\n\t* [enyo.getPath()]{@link enyo.getPath} for complete details.\n\t*\n\t* This method is backwards-compatible and will automatically call any existing getter\n\t* method that uses the \"getProperty\" naming convention. (Moving forward, however, Enyo code\n\t* should use [computed properties]{@link enyo.ComputedSupport} instead of relying on the \n\t* getter naming convention.)\n\t*\n\t* @param {String} path - The path from which to retrieve a value.\n\t* @returns {*} The value for the given path or [undefined]{@glossary undefined} if \n\t*\tthe path could not be completely resolved.\n\t* @public\n\t*/\n\tget: function () {\n\t\treturn utils.getPath.apply(this, arguments);\n\t},\n\t\n\t/**\n\t* Updates the value for the given path. The value may be set as long as the\n\t* given path is resolvable relative to the given {@link enyo.Object}. See\n\t* [enyo.setPath()]{@link enyo.setPath} for complete details.\n\t*\n\t* @param {String} path - The path for which to set the given value.\n\t* @param {*} value - The value to set.\n\t* @param {Object} [opts] - An options hash.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tset: function () {\n\t\treturn utils.setPath.apply(this, arguments);\n\t},\n\n\t/**\n\t* Binds a [callback]{@glossary callback} to this [object]{@link enyo.Object}.\n\t* If the object has been destroyed, the bound method will be aborted cleanly,\n\t* with no value returned.\n\t*\n\t* This method should generally be used instead of {@link enyo.bind} for running\n\t* code in the context of an instance of {@link enyo.Object} or one of its\n\t* [subkinds]{@glossary subkind}.\n\t*\n\t* @alias enyo.bindSafely\n\t* @public\n\t*/\n\tbindSafely: function () {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\targs.unshift(this);\n\t\treturn utils.bindSafely.apply(null, args);\n\t},\n\t\n\t/**\n\t* An abstract method (primarily) that sets the [destroyed]{@link enyo.Object#destroyed} \n\t* property to `true`.\n\t*\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tdestroy: function () {\n\t\t\n\t\t// Since JS objects are never truly destroyed (GC'd) until all references are\n\t\t// gone, we might have some delayed action on this object that needs access\n\t\t// to this flag.\n\t\t// Using this.set to make the property observable\n\t\treturn this.set('destroyed', true);\n\t}\n});\n\n/**\n* @private\n*/\nCoreObject.concat = function (ctor, props) {\n\tvar pubs = props.published,\n\t\tcpy,\n\t\tprop;\n\t\t\n\tif (pubs) {\n\t\tcpy = ctor.prototype || ctor;\n\t\tfor (prop in pubs) {\n\t\t\t// need to make sure that even though a property is 'published'\n\t\t\t// it does not overwrite any computed properties\n\t\t\tif (props[prop] && typeof props[prop] == 'function') continue;\n\t\t\taddGetterSetter(prop, pubs[prop], cpy);\n\t\t}\n\t}\n};\n\n/**\n* This method creates a getter/setter for a published property of an {@link enyo.Object}, but is\n* deprecated. It is maintained for purposes of backwards compatibility. The preferred method is \n* to mark public and protected (private) methods and properties using documentation or other \n* means and rely on the [get]{@link enyo.Object#get} and [set]{@link enyo.Object#set} methods of\n* {@link enyo.Object} instances.\n*\n* @private\n*/\nfunction addGetterSetter (prop, value, proto) {\n\t\n\t// so we don't need to re-execute this over and over and over...\n\tvar cap = utils.cap(prop),\n\t\tgetName = 'get' + cap,\n\t\tsetName = 'set' + cap,\n\t\tgetters = proto._getters || (proto._getters = {}),\n\t\tsetters = proto._setters || (proto._setters = {}),\n\t\tfn;\n\t\n\t// we assign the default value from the published block to the prototype\n\t// so it will be initialized properly\n\tproto[prop] = value;\n\t\n\t// check for a supplied getter and if there isn't one we create one otherwise\n\t// we mark the supplied getter in the tracking object so the global getPath will\n\t// know about it\n\tif (!(fn = proto[getName]) || typeof fn != 'function') {\n\t\tfn = proto[getName] = function () {\n\t\t\treturn utils.getPath.fast.call(this, prop);\n\t\t};\n\t\t\n\t\t// and we mark it as generated\n\t\tfn.generated = true;\n\t} else if (fn && typeof fn == 'function' && !fn.generated) getters[prop] = getName;\n\t\n\t// we need to do the same thing for the setters\n\tif (!(fn = proto[setName]) || typeof fn != 'function') {\n\t\tfn = proto[setName] = function (val) {\n\t\t\treturn utils.setPath.fast.call(this, prop, val);\n\t\t};\n\t\t\n\t\t// and we mark it as generated\n\t\tfn.generated = true;\n\t} else if (fn && typeof fn == 'function' && !fn.generated) setters[prop] = setName;\n}","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar\n\tCoreObject = require('./CoreObject');\n\n/**\n* An abstract [kind]{@glossary kind} designed to aid in handling asynchronous operations.\n* It represents a task that has not yet completed. Callback functions may be registered to be\n* notified when the task is complete.\n*\n* For more information, see the documentation on [Consuming Web\n* Services]{@linkplain $dev-guide/building-apps/managing-data/consuming-web-services.html}\n* in the Enyo Developer Guide.\n*\n* @class enyo.Async\n* @extends enyo.Object\n* @public\n*/\nvar Async = module.exports = kind(\n\t/** @lends enyo.Async.prototype */ {\n\t\n\tname: 'enyo.Async',\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: CoreObject,\n\t\n\t/**\n\t* @private\n\t*/\n\tpublished: {\n\t\t\n\t\t/**\n\t\t* The number of milliseconds to wait after [execution]{@link enyo.Async#go} begins\n\t\t* before failing with a timeout error. If set to `0` (the default), will not\n\t\t* automatically throw a timeout error.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 0\n\t\t* @memberof enyo.Aysnc.prototype\n\t\t* @public\n\t\t*/\n\t\ttimeout: 0\n\t},\n\t\n\t/**\n\t* Will be `true` if an error has occurred and a handler calls the\n\t* [fail()]{@link enyo.Async#fail} method. Can be cleared using\n\t* [recover()]{@link enyo.Async#recover}.\n\t*\n\t* @readonly\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tfailed: false,\n\t\n\t/**\n\t* @private\n\t*/\n\tcontext: null,\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.responders = [];\n\t\t\tthis.errorHandlers = [];\n\t\t\tthis.progressHandlers = [];\n\t\t};\n\t}),\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tif (this.timeoutJob) {\n\t\t\t\tthis.clearTimeout();\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\taccumulate: function (array, fn, ctx) {\n\t\tvar tmp;\n\t\t\n\t\t// to preserve backward compatibility we have to accept that the order of the arguments\n\t\t// might be different\n\t\tif (ctx && typeof ctx == 'function') {\n\t\t\ttmp = fn;\n\t\t\tfn = ctx;\n\t\t\tctx = tmp;\n\t\t}\n\t\t\n\t\t// we go ahead and bind the method to its context to preserve the original\n\t\t// implementation\n\t\tif (ctx) {\n\t\t\tif (typeof ctx == \"string\") {\n\t\t\t\tfn = utils.bind(fn, ctx);\n\t\t\t} else {\n\t\t\t\tfn = fn.bind(ctx);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// now store it for use later\n\t\tarray.push(fn);\n\t},\n\t\n\t/**\n\t* Registers a [function]{@glossary Function} to be fired when\n\t* [execution]{@link enyo.Async#go} is completed successfully. Parameters may be\n\t* in any order, to preserve backward compatibility.\n\t*\n\t* @param {Function} fn - The callback to register.\n\t* @param {Object} [ctx] - The optional context under which to execute the callback.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tresponse: function (fn, ctx) {\n\t\tthis.accumulate(this.responders, fn, ctx);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Registers a [function]{@glossary Function} to be fired when\n\t* [execution]{@link enyo.Async#go} completes with an error. Parameters may be\n\t* in any order, to preserve backward compatibility.\n\t*\n\t* @param {Function} fn - The callback to register.\n\t* @param {Object} [ctx] - The optional context under which to execute the callback.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\terror: function (fn, ctx) {\n\t\tthis.accumulate(this.errorHandlers, fn, ctx);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Registers a [function]{@glossary Function} to be fired on progress events.\n\t* Parameters may be in any order, to preserve backward compatibility.\n\t*\n\t* @param {Function} fn - The callback to register.\n\t* @param {Object} [ctx] - The optional context under which to execute the callback.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tprogress: function (fn, ctx) {\n\t\tthis.accumulate(this.progressHandlers, fn, ctx);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\troute: function (async, value) {\n\t\tvar r = this.bindSafely('respond');\n\t\tasync.response(function (sender, value) {\n\t\t\tr(value);\n\t\t});\n\t\tvar f = this.bindSafely('fail');\n\t\tasync.error(function (sender, value) {\n\t\t\tf(value);\n\t\t});\n\t\tasync.go(value);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\thandle: function (value, handlers) {\n\t\tvar r = handlers.shift();\n\t\tif (r) {\n\t\t\tif (r instanceof Async) {\n\t\t\t\tthis.route(r, value);\n\t\t\t} else {\n\t\t\t\t// handler can return a new 'value'\n\t\t\t\tvar v = utils.call(this.context || this, r, [this, value]);\n\t\t\t\t// ... but only if it returns something other than undefined\n\t\t\t\tv = (v !== undefined) ? v : value;\n\t\t\t\t// next handler\n\t\t\t\t(this.failed ? this.fail : this.respond).call(this, v);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tstartTimer: function () {\n\t\tthis.startTime = utils.perfNow();\n\t\tif (this.timeout) {\n\t\t\tthis.timeoutJob = setTimeout(this.bindSafely('timeoutComplete'), this.timeout);\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tendTimer: function () {\n\t\tif (this.timeoutJob) {\n\t\t\tthis.endTime = utils.perfNow();\n\t\t\tclearTimeout(this.timeoutJob);\n\t\t\tthis.timeoutJob = null;\n\t\t\tthis.latency = this.endTime - this.startTime;\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\ttimeoutComplete: function () {\n\t\tthis.timedout = true;\n\t\tthis.fail('timeout');\n\t},\n\t\n\t/**\n\t* Triggers the handler chain for valid outcomes.\n\t*\n\t* @private\n\t*/\n\trespond: function (value) {\n\t\tthis.failed = false;\n\t\tthis.endTimer();\n\t\tthis.handle(value, this.responders);\n\t},\n\n\t/**\n\t* Fails the [task]{@link enyo.Async} and triggers the error chain. May be called from any\n\t* handler.\n\t* \n\t* @param {*} err - The error value to pass to error handlers.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tfail: function (err) {\n\t\tthis.failed = true;\n\t\tthis.endTimer();\n\t\tthis.handle(err, this.errorHandlers);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Clears the error condition ([failed]{@link enyo.Async#failed}) by setting it to `false`.\n\t* If called while responding to handlers, it will continue.\n\t*\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\trecover: function () {\n\t\tthis.failed = false;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tsendProgress: function(current, min, max, sourceEvent) {\n\t\tvar event = utils.mixin({}, sourceEvent);\n\t\tevent.type = 'progress';\n\t\tevent.current = current;\n\t\tevent.min = min;\n\t\tevent.max = max;\n\t\tfor (var i = 0; i < this.progressHandlers.length; i++) {\n\t\t\tutils.call(this.context || this, this.progressHandlers[i], [this, event]);\n\t\t}\n\t},\n\t\n\t/**\n\t* Initiates the asynchronous routine, supplying the given value if it completes\n\t* successfully. This method is usually overloaded in [subkinds]{@glossary subkind}.\n\t*\n\t* @virtual\n\t* @param {*} - value The value to pass to responders.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tgo: function(value) {\n\t\tthis.sendProgress(0, 0, 1);\n\t\tutils.asyncMethod(this, function() {\n\t\t\tthis.sendProgress(1, 0, 1);\n\t\t\tthis.respond(value);\n\t\t});\n\t\treturn this;\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar\n\tModelList = require('./ModelList'),\n\tEventEmitter = require('./EventEmitter'),\n\tCoreObject = require('./CoreObject');\n\n/**\n* Only necessary because of the order in which mixins are applied.\n*\n* @class\n* @private\n*/\nvar BaseStore = kind({\n\tkind: CoreObject,\n\tmixins: [EventEmitter]\n});\n\n/**\n* This method should determine whether the given [model]{@link enyo.Model}\n* should be included in the filtered set for the [find()]{@link enyo.Store#find}\n* method.\n* \n* @callback enyo.Store~Filter\n* @param {enyo.Model} model - The [model]{@link enyo.Model} to filter.\n* @returns {Boolean} `true` if the model meets the filter requirements;\n* otherwise, `false`.\n*/\n\n/**\n* The configuration options for the [find()]{@link enyo.Store#find} method.\n* \n* @typedef {Object} enyo.Store~FindOptions\n* @property {Boolean} all=true - Whether or not to include more than one match for the\n*\tfilter method. If `true`, an array of matches is returned; otherwise, a single match.\n* @property {Object} context - If provided, it will be used as the `this` (context) of\n*\tthe filter method.\n*/\n\n/**\n* An anonymous kind used internally for the singleton {@link enyo.store}.\n* \n* @class enyo.Store\n* @mixes enyo.EventEmitter\n* @extends enyo.Object\n* @protected\n*/\nvar Store = kind(\n\t/** @lends enyo.Store.prototype */ {\n\t\n\tname: 'enyo.Store',\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: BaseStore,\n\t\n\t/**\n\t* Finds a [model (or models)]{@link enyo.Model} of a certain [kind]{@glossary kind}.\n\t* It uses the return value from a filter method to determine whether a particular\n\t* model will be included. Set the optional `all` flag to `true` to ensure that\n\t* the method looks for all matches; otherwise, it will return the first positive\n\t* match.\n\t* \n\t* @see {@glossary Array.find}\n\t* @param {enyo.Model} ctor - The constructor for the [kind]{@glossary kind} of\n\t*\t[model]{@link enyo.Model} to be filtered.\n\t* @param {enyo.Store~Filter} fn - The filter method.\n\t* @param {enyo.Store~FindOptions} [opts] - The options parameter.\n\t* @returns {(enyo.Model|enyo.Model[]|undefined)} If the `all` flag is `true`,\n\t*\treturns an array of models; otherwise, returns the first model that returned\n\t*\tthat returned `true` from the filter method. Returns `undefined` if `all` is\n\t* `false` and no match could be found.\n\t* @public\n\t*/\n\tfind: function (ctor, fn, opts) {\n\t\tvar kindName = ctor.prototype.kindName,\n\t\t\tlist = this.models[kindName],\n\t\t\toptions = {all: true, context: this};\n\t\t\n\t\t// allows the method to be called with a constructor only and will return an\n\t\t// immutable copy of the array of all models of that type or an empty array\n\t\tif (arguments.length == 1 || typeof fn != 'function') {\n\t\t\treturn list ? list.slice() : [];\n\t\t}\n\t\t\n\t\t// ensure we use defaults with any provided options\n\t\topts = opts ? utils.mixin({}, [options, opts]) : options;\n\t\t\t\n\t\tif (list) return opts.all ? list.filter(fn, opts.context) : list.find(fn, opts.context);\n\t\t\n\t\t// if it happens it could not find a list for the requested kind we fudge the return\n\t\t// so it can keep on executing\n\t\telse return opts.all ? [] : undefined;\n\t},\n\t\n\t/**\n\t* This method is an alias for [find()]{@link enyo.Store#find}.\n\t*\n\t* @deprecated\n\t* @public\n\t*/\n\tfindLocal: function () {\n\t\treturn this.find.apply(this, arguments);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tadd: function (models, opts) {\n\t\tvar ctor = models && (models instanceof Array ? models[0].ctor : models.ctor),\n\t\t\tkindName = ctor && ctor.prototype.kindName,\n\t\t\tlist = kindName && this.models[kindName],\n\t\t\tadded,\n\t\t\ti;\n\t\t\t\n\t\t// if we were able to find the list then we go ahead and attempt to add the models\n\t\tif (list) {\n\t\t\tadded = list.add(models);\n\t\t\t// if we successfully added models and this was a default operation (not being\n\t\t\t// batched by a collection or other feature) we emit the event needed primarily\n\t\t\t// by relational models but could be useful other places\n\t\t\tif (added.length && (!opts || !opts.silent)) {\n\t\t\t\tfor (i = 0; i < added.length; ++i) {\n\t\t\t\t\tthis.emit(ctor, 'add', {model: added[i]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tremove: function (models, opts) {\n\t\tvar ctor = models && (models instanceof Array ? models[0].ctor : models.ctor),\n\t\t\tkindName = ctor && ctor.prototype.kindName,\n\t\t\tlist = kindName && this.models[kindName],\n\t\t\tremoved,\n\t\t\ti;\n\t\t\n\t\t// if we were able to find the list then we go ahead and attempt to remove the models\n\t\tif (list) {\n\t\t\tremoved = list.remove(models);\n\t\t\t// if we successfully removed models and this was a default operation (not being\n\t\t\t// batched by a collection or other feature) we emit the event. Needed primarily\n\t\t\t// by relational models but could be useful other places\n\t\t\tif (removed.length && (!opts || !opts.silent)) {\n\t\t\t\tfor (i = 0; i < removed.length; ++i) {\n\t\t\t\t\tthis.emit(ctor, 'remove', {model: removed[i]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Determines, from the given parameters, whether the [store]{@link enyo.store}\n\t* has a specific [model]{@link enyo.Model}.\n\t*\n\t* @param {(Function|enyo.Model)} ctor Can be the constructor for an {@link enyo.Model}\n\t*\tor a model instance. Must be a constructor unless a model instance is passed as the\n\t* optional `model` parameter.\n\t* @param {(String|Number|enyo.Model)} [model] If the `ctor` parameter is a\n\t*\tconstructor, this may be a [Number]{@glossary Number} or a [String]{@glossary String}\n\t* representing a [primaryKey]{@link enyo.Model#primaryKey} for the given model, or an\n\t*\tinstance of a model.\n\t* @returns {Boolean} Whether or not the [store]{@link enyo.store} has the given\n\t*\t[model]{@link enyo.Model}.\n\t* @public\n\t*/\n\thas: function (ctor, model) {\n\t\tvar list;\n\t\t\n\t\tif (!model) {\n\t\t\tmodel = ctor;\n\t\t\tctor = model.ctor;\n\t\t}\n\t\t\n\t\tlist = this.models[ctor.prototype.kindName];\n\t\treturn list ? list.has(model) : false;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tresolve: function (ctor, model) {\n\t\tvar list = this.models[ctor && ctor.prototype.kindName];\n\t\treturn list? list.resolve(model): undefined;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\t\n\t\t\tthis._scopeListeners = [];\n\t\t\t\n\t\t\t// all future sub-kinds of enyo.Model that are processed will automatically\n\t\t\t// create/add their entries to this object in their concat method\n\t\t\tthis.models = {\n\t\t\t\t'enyo.Model': new ModelList()\n\t\t\t};\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\tscopeListeners: function (scope, e) {\n\t\treturn !scope ? this._scopeListeners : this._scopeListeners.filter(function (ln) {\n\t\t\treturn ln.scope === scope ? !e ? true : ln.event == e : false;\n\t\t});\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\ton: kind.inherit(function (sup) {\n\t\treturn function (ctor, e, fn, ctx) {\n\t\t\tif (typeof ctor == 'function') {\n\t\t\t\tthis.scopeListeners().push({\n\t\t\t\t\tscope: ctor,\n\t\t\t\t\tevent: e,\n\t\t\t\t\tmethod: fn,\n\t\t\t\t\tctx: ctx || this\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\t\n\t\t\treturn sup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\toff: kind.inherit(function (sup) {\n\t\treturn function (ctor, e, fn) {\n\t\t\tvar listeners,\n\t\t\t\tidx;\n\t\t\t\n\t\t\tif (typeof ctor == 'function') {\n\t\t\t\tlisteners = this.scopeListeners(ctor);\n\t\t\t\tif (listeners.length) {\n\t\t\t\t\tidx = listeners.findIndex(function (ln) {\n\t\t\t\t\t\treturn ln.event == e && ln.method === fn;\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// if it found the entry we remove it\n\t\t\t\t\tif (idx >= 0) listeners.splice(idx, 1);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\temit: kind.inherit(function (sup) {\n\t\treturn function (ctor, e) {\n\t\t\tvar listeners,\n\t\t\t\targs;\n\t\t\t\n\t\t\tif (typeof ctor == 'function') {\n\t\t\t\tlisteners = this.scopeListeners(ctor, e);\n\t\t\t\t\n\t\t\t\tif (listeners.length) {\n\t\t\t\t\targs = utils.toArray(arguments).slice(1);\n\t\t\t\t\targs.unshift(this);\n\t\t\t\t\tlisteners.forEach(function (ln) {\n\t\t\t\t\t\tln.method.apply(ln.ctx, args);\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\treturn sup.apply(this, arguments);\n\t\t};\n\t})\n});\n\n/**\n* A runtime database for working with [models]{@link enyo.Model}. It is primarily used\n* internally by data layer [kinds]{@glossary kind} ({@link enyo.Model},\n* {@link enyo.Collection}, and {@link enyo.RelationalModel}).\n* \n* @see enyo.Model\n* @see enyo.Collection\n* @see enyo.RelationalModel\n* @type enyo.Store\n* @memberof enyo\n* @public\n*/\nmodule.exports = new Store();","require('../../enyo');\n\nvar\n\tutils = require('./utils'),\n\tkind = require('./kind');\n\t\nvar CoreObject = require('./CoreObject');\n\n/**\n* The {@link enyo.jobs} singleton provides a mechanism for queueing tasks\n* (i.e., functions) for execution in order of priority. The execution of the\n* current job stack may be blocked programmatically by setting a priority\n* level (run level) below which no jobs are executed.\n*\n* At the moment, only {@link enyo.Animator} uses this interface, setting a\n* priority of 4, which blocks all low priority tasks from executing during\n* animations. To maintain backward compatibility, jobs are assigned a priority\n* of 5 by default; thus they are not blocked by animations.\n*\n* Normally, application code will not use `enyo.jobs` directly, but will\n* instead use the [job()]{@link enyo.Component#job} method of\n* {@link enyo.Component}.\n*\n* @name enyo.jobs\n* @public\n*/\nmodule.exports = kind.singleton(\n\t/** @lends enyo.jobs */ {\n\t\n\tkind: CoreObject,\n\t\n\t/**\n\t* @private\n\t*/\n\tpublished: /** @lends enyo.jobs */ {\n\t\t\n\t\t/**\n\t\t* The current priority level.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 0\n\t\t* @public\n\t\t*/\n\t\tpriorityLevel: 0\n\t},\n\t\n\t/**\n\t* Prioritized by index.\n\t*\n\t* @private\n\t*/\n\t_jobs: [ [], [], [], [], [], [], [], [], [], [] ],\n\t\n\t/**\n\t* @private\n\t*/\n\t_priorities: {},\n\t\n\t/**\n\t* @private\n\t*/\n\t_namedJobs: {},\n\t\n\t/**\n\t* @private\n\t*/\n\t_magicWords: {\n\t\t'low': 3,\n\t\t'normal': 5,\n\t\t'high': 7\n\t},\n\t\n\t/**\n\t* Adds a [job]{@link enyo.job} to the job queue. If the current priority\n\t* level is higher than this job's priority, this job gets deferred until the\n\t* job level drops; if it is lower, this job is run immediately.\n\t*\n\t* @param {Function} job - The actual {@glossary Function} to execute as the\n\t* [job]{@link enyo.job}.\n\t* @param {Number} priority - The priority of the job.\n\t* @param {String} nom - The name of the job for later reference.\n\t* @public\n\t*/\n\tadd: function (job, priority, nom) {\n\t\tpriority = priority || 5;\n\n\t\t// magic words: low = 3, normal = 5, high = 7\n\t\tpriority = utils.isString(priority) ? this._magicWords[priority] : priority;\n\n\t\t// if a job of the same name exists, remove it first (replace it)\n\t\tif(nom){\n\t\t\tthis.remove(nom);\n\t\t\tthis._namedJobs[nom] = priority;\n\t\t}\n\n\t\t// if the job is of higher priority than the current priority level then\n\t\t// there's no point in queueing it\n\t\tif(priority >= this.priorityLevel){\n\t\t\tjob();\n\t\t} else {\n\t\t\tthis._jobs[priority - 1].push({fkt: job, name: nom});\n\t\t}\n\t},\n\t\n\t/**\n\t* Will remove the named [job]{@link enyo.job} from the queue.\n\t*\n\t* @param {String} nom - The name of the [job]{@link enyo.job} to remove.\n\t* @returns {Array} An {@glossary Array} that will contain the removed job if\n\t* it was found, or empty if it was not found.\n\t* @public\n\t*/\n\tremove: function (nom) {\n\t\tvar jobs = this._jobs[this._namedJobs[nom] - 1];\n\t\tif(jobs){\n\t\t\tfor(var j = jobs.length-1; j >= 0; j--){\n\t\t\t\tif(jobs[j].name === nom){\n\t\t\t\t\treturn jobs.splice(j, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t* Adds a new priority level at which jobs will be executed. If it is higher than the\n\t* highest current priority, the priority level rises. Newly added jobs below that priority\n\t* level are deferred until the priority is removed (i.e., unregistered).\n\t*\n\t* @param {Number} priority - The priority value to register.\n\t* @param {String} id - The name of the priority.\n\t* @public\n\t*/\n\tregisterPriority: function(priority, id) {\n\t\tthis._priorities[id] = priority;\n\t\tthis.setPriorityLevel( Math.max(priority, this.priorityLevel) );\n\t},\n\t\n\t/**\n\t* Removes a priority level. If the removed priority was previously the\n\t* highest priority, the priority level drops to the next highest priority\n\t* and queued jobs with a higher priority are executed.\n\t*\n\t* @param {String} id - The name of the priority level to remove.\n\t* @public\n\t*/\n\tunregisterPriority: function (id) {\n\t\tvar highestPriority = 0;\n\n\t\t// remove priority\n\t\tdelete this._priorities[id];\n\n\t\t// find new highest current priority\n\t\tfor( var i in this._priorities ){\n\t\t\thighestPriority = Math.max(highestPriority, this._priorities[i]);\n\t\t}\n\n\t\tthis.setPriorityLevel( highestPriority );\n\t},\n\t\n\t/**\n\t* Tries to run next job if priority level has dropped.\n\t*\n\t* @type {enyo.ObserverSupport~Observer}\n\t* @private\n\t*/\n\tpriorityLevelChanged: function (was) {\n\t\tif(was > this.priorityLevel){\n\t\t\tthis._doJob();\n\t\t}\n\t},\n\t\n\t/**\n\t* Finds and executes the job of highest priority; in this way, all jobs with priority\n\t* greater than or equal to the current level are run, in order of their priority (highest\n\t* to lowest).\n\t*\n\t* @private\n\t*/\n\t_doJob: function () {\n\t\tvar job;\n\t\t// find the job of highest priority above the current priority level\n\t\t// and remove from the job list\n\t\tfor (var i = 9; i >= this.priorityLevel; i--){\n\t\t\tif (this._jobs[i].length) {\n\t\t\t\tjob = this._jobs[i].shift();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// allow other events to pass through\n\t\tif (job) {\n\t\t\tjob.fkt();\n\t\t\tdelete this._namedJobs[job.name];\n\t\t\tsetTimeout(utils.bind(this, '_doJob'), 10);\n\t\t}\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tjson = require('./json'),\n\tlogger = require('./logger');\n\nvar\n\tAjaxProperties = require('./AjaxProperties'),\n\tAsync = require('./Async'),\n\t/*jshint -W079*/\n\t// this defaults to providing the native FormData if it exists\n\tFormData = require('./FormData'),\n\t/*jshint +W079*/\n\tXhr = require('./xhr');\n\t\n\n/**\n* A cache of response properties set on the {@link enyo.Ajax} instance once it has completed\n* its request.\n*\n* @typedef {Object} enyo.Ajax~xhrResponse\n* @property {Number} status - The response status.\n* @property {Object} headers - The headers used for the request.\n* @property {String} body - The request body.\n* @public\n*/\n\n/**\n* A [kind]{@glossary kind} designed to expose the native\n* [XMLHttpRequest]{@glossary XMLHttpRequest} API. Available configuration options\n* are exposed by {@link enyo.AjaxProperties}.\n*\n* This kind does not extend {@link enyo.Component} and cannot be used\n* in the [components block]{@link enyo.Component#components}.\n*\n* For more information, see the documentation on [Consuming Web\n* Services]{@linkplain $dev-guide/building-apps/managing-data/consuming-web-services.html}\n* in the Enyo Developer Guide.\n*\n* @class enyo.Ajax\n* @extends enyo.Async\n* @public\n*/\nvar Ajax = module.exports = kind(\n\t/** @lends enyo.Ajax.prototype */ {\n\t\n\tname: 'enyo.Async',\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: Async,\n\t\n\t/**\n\t* @private\n\t*/\n\tpublished: AjaxProperties,\n\t\n\t/**\n\t* @private\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function (inParams) {\n\t\t\tutils.mixin(this, inParams);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\t// explicilty release any XHR refs\n\t\t\tthis.xhr = null;\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* This will be set once a request has completed (successfully or unsuccessfully).\n\t* It is a cache of the response values.\n\t*\n\t* @type enyo.Ajax~xhrResponse\n\t* @default null\n\t* @public\n\t*/\n\txhrResponse: null,\n\t\n\t/**\n\t* Executes the request with the given options. The parameter may be a\n\t* [hash]{@glossary Object} of properties or a [string]{@glossary String}. Both\n\t* represent the query string, with the hash being serialized and the string\n\t* being used directly.\n\t*\n\t* ```javascript\n\t* var query = {q: 'searchTerm'}; // -> \"?q=searchTerm\"\n\t* ```\n\t*\n\t* To provide a `POST` body, see {@link enyo.AjaxProperties.postBody}.\n\t*\n\t* When the request is completed, it will set the\n\t* [xhrResponse]{@link enyo.Ajax#xhrResponse} property.\n\t*\n\t* @see enyo.AjaxProperties\n\t* @see enyo.Ajax.xhrResponse\n\t* @see enyo.Ajax~xhrResponse\n\t* @param {(Object|String)} [params] - A [string]{@glossary String} or\n\t*\t[hash]{@glossary Object} to be used as the query string.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tgo: function (params) {\n\t\tthis.failed = false;\n\t\tthis.startTimer();\n\t\tthis.request(params);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\trequest: function (params) {\n\t\tvar parts = this.url.split('?');\n\t\tvar uri = parts.shift() || '';\n\t\tvar args = parts.length ? (parts.join('?').split('&')) : [];\n\t\t//\n\t\tvar query = null;\n\t\t//\n\t\tif(utils.isString(params)){\n\t\t\t//If params parameter is a string, use it as request body\n\t\t\tquery = params;\n\t\t}\n\t\telse{\n\t\t\t//If params parameter is not a string, build a query from it\n\t\t\tif(params){\n\t\t\t\tquery = Ajax.objectToQuery(params);\n\t\t\t}\n\t\t}\n\t\t//\n\t\tif (query) {\n\t\t\targs.push(query);\n\t\t\tquery = null;\n\t\t}\n\t\tif (this.cacheBust) {\n\t\t\targs.push(Math.random());\n\t\t}\n\t\t//\n\t\tvar url = args.length ? [uri, args.join('&')].join('?') : uri;\n\t\t//\n\t\tvar xhr_headers = {};\n\t\tvar body;\n\t\tif (this.method != 'GET') {\n\t\t\tbody = this.postBody;\n\t\t\tif (this.method === 'POST' && body instanceof FormData) {\n\t\t\t\tif (body.fake) {\n\t\t\t\t\txhr_headers['Content-Type'] = body.getContentType();\n\t\t\t\t\tbody = body.toString();\n\t\t\t\t} else {\n\t\t\t\t\t// Nothing to do as the\n\t\t\t\t\t// content-type will be\n\t\t\t\t\t// automagically set according\n\t\t\t\t\t// to the FormData\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\txhr_headers['Content-Type'] = this.contentType;\n\t\t\t\tif (body instanceof Object) {\n\t\t\t\t\tif (this.contentType.match(/^application\\/json(;.*)?$/) !== null) {\n\t\t\t\t\t\tbody = JSON.stringify(body);\n\t\t\t\t\t} else if (this.contentType === 'application/x-www-form-urlencoded') {\n\t\t\t\t\t\tbody = Ajax.objectToQuery(body);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbody = body.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tutils.mixin(xhr_headers, this.headers);\n\t\t// don't pass in headers structure if there are no headers defined as this messes\n\t\t// up CORS code for IE8-9\n\t\tif (utils.keys(xhr_headers).length === 0) {\n\t\t\txhr_headers = undefined;\n\t\t}\n\t\t//\n\t\ttry {\n\t\t\tthis.xhr = Xhr.request({\n\t\t\t\turl: url,\n\t\t\t\tmethod: this.method,\n\t\t\t\tcallback: this.bindSafely('receive'),\n\t\t\t\tbody: body,\n\t\t\t\theaders: xhr_headers,\n\t\t\t\tsync: this.sync,\n\t\t\t\tusername: this.username,\n\t\t\t\tpassword: this.password,\n\t\t\t\txhrFields: utils.mixin({onprogress: this.bindSafely(this.updateProgress)}, this.xhrFields),\n\t\t\t\tmimeType: this.mimeType\n\t\t\t});\n\t\t}\n\t\tcatch (e) {\n\t\t\t// IE can throw errors here if the XHR would fail CORS checks,\n\t\t\t// so catch and turn into a failure.\n\t\t\tthis.fail(e);\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\treceive: function (inText, inXhr) {\n\t\tif (!this.failed && !this.destroyed) {\n\t\t\tvar body;\n\t\t\tif (inXhr.responseType === 'arraybuffer') {\n\t\t\t\tbody = inXhr.response;\n\t\t\t} else if (typeof inXhr.responseText === 'string') {\n\t\t\t\tbody = inXhr.responseText;\n\t\t\t} else {\n\t\t\t\t// IE carrying a binary\n\t\t\t\tbody = inXhr.responseBody;\n\t\t\t}\n\t\t\tthis.xhrResponse = {\n\t\t\t\tstatus: inXhr.status,\n\t\t\t\theaders: Ajax.parseResponseHeaders(inXhr),\n\t\t\t\tbody: body\n\t\t\t};\n\t\t\tif (this.isFailure(inXhr)) {\n\t\t\t\tthis.fail(inXhr.status);\n\t\t\t} else {\n\t\t\t\tthis.respond(this.xhrToResponse(inXhr));\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tfail: kind.inherit(function (sup) {\n\t\treturn function (inError) {\n\t\t\t// on failure, explicitly cancel the XHR to prevent\n\t\t\t// further responses.  cancellation also resets the\n\t\t\t// response headers & body,\n\t\t\tif (this.xhr) {\n\t\t\t\tXhr.cancel(this.xhr);\n\t\t\t\tthis.xhr = null;\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\txhrToResponse: function (inXhr) {\n\t\tif (inXhr) {\n\t\t\treturn this[(this.handleAs || 'text') + 'Handler'](inXhr);\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tisFailure: function (inXhr) {\n\t\t// if any exceptions are thrown while checking fields in the xhr,\n\t\t// assume a failure.\n\t\ttry {\n\t\t\tif (inXhr.responseType === 'arraybuffer') {\n\t\t\t\t// if we are loading binary data, don't try to access inXhr.responseText\n\t\t\t\t// because that throws an exception on webkit. Instead, just look for\n\t\t\t\t// the response.\n\t\t\t\tif (inXhr.status === 0 && !inXhr.response) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar text = '';\n\t\t\t\t// work around IE8-9 bug where accessing responseText will thrown error\n\t\t\t\t// for binary requests.\n\t\t\t\tif (typeof inXhr.responseText === 'string') {\n\t\t\t\t\ttext = inXhr.responseText;\n\t\t\t\t}\n\t\t\t\t// Follow same failure policy as jQuery's Ajax code\n\t\t\t\t// CORS failures on FireFox will have status 0 and no responseText,\n\t\t\t\t// so treat that as failure.\n\t\t\t\tif (inXhr.status === 0 && text === '') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Otherwise, status 0 may be good for local file access.  We treat the range\n\t\t\t// 1-199 and 300+ as failure (only 200-series code are OK).\n\t\t\treturn (inXhr.status !== 0) && (inXhr.status < 200 || inXhr.status >= 300);\n\t\t}\n\t\tcatch (e) {\n\t\t\treturn true;\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\txmlHandler: function (inXhr) {\n\t\treturn inXhr.responseXML;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\ttextHandler: function (inXhr) {\n\t\treturn inXhr.responseText;\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tjsonHandler: function (inXhr) {\n\t\tvar r = inXhr.responseText;\n\t\ttry {\n\t\t\treturn r && json.parse(r);\n\t\t} catch (x) {\n\t\t\tlogger.warn('Ajax request set to handleAs JSON but data was not in JSON format');\n\t\t\treturn r;\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tbinaryHandler: function (inXhr) {\n\t\treturn inXhr.response;\n\t}, \n\t\n\t/**\n\t* @private\n\t*/\n\tupdateProgress: function (event) {\n\t\t// IE8 doesn't properly support progress events and doesn't pass an object to the\n\t\t// handlers so we'll check that before continuing.\n\t\tif (event) {\n\t\t\t// filter out 'input' as it causes exceptions on some Firefox versions\n\t\t\t// due to unimplemented internal APIs\n\t\t\tvar ev = {};\n\t\t\tfor (var k in event) {\n\t\t\t\tif (k !== 'input') {\n\t\t\t\t\tev[k] = event[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.sendProgress(event.loaded, 0, event.total, ev);\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tstatics: {\n\t\tobjectToQuery: function (/*Object*/ map) {\n\t\t\tvar enc = encodeURIComponent;\n\t\t\tvar pairs = [];\n\t\t\tvar backstop = {};\n\t\t\tfor (var name in map){\n\t\t\t\tvar value = map[name];\n\t\t\t\tif (value != backstop[name]) {\n\t\t\t\t\tvar assign = enc(name) + '=';\n\t\t\t\t\tif (utils.isArray(value)) {\n\t\t\t\t\t\tfor (var i=0; i < value.length; i++) {\n\t\t\t\t\t\t\tpairs.push(assign + enc(value[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpairs.push(assign + enc(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pairs.join('&');\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tprotectedStatics: {\n\t\tparseResponseHeaders: function (xhr) {\n\t\t\tvar headers = {};\n\t\t\tvar headersStr = [];\n\t\t\tif (xhr.getAllResponseHeaders) {\n\t\t\t\theadersStr = xhr.getAllResponseHeaders().split(/\\r?\\n/);\n\t\t\t}\n\t\t\tfor (var i = 0; i < headersStr.length; i++) {\n\t\t\t\tvar headerStr = headersStr[i];\n\t\t\t\tvar index = headerStr.indexOf(': ');\n\t\t\t\tif (index > 0) {\n\t\t\t\t\tvar key = headerStr.substring(0, index).toLowerCase();\n\t\t\t\t\tvar val = headerStr.substring(index + 2);\n\t\t\t\t\theaders[key] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn headers;\n\t\t}\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar\n\tObserverSupport = require('./ObserverSupport'),\n\tComputedSupport = require('./ComputedSupport'),\n\tBindingSupport = require('./BindingSupport'),\n\tEventEmitter = require('./EventEmitter'),\n\tStateSupport = require('./StateSupport'),\n\tModelList = require('./ModelList'),\n\tSource = require('./Source'),\n\tStates = require('./States'),\n\tStore = require('./Store');\n\n/**\n* This is only necessary because of the order in which mixins are applied.\n*\n* @class\n* @private\n*/\nvar BaseModel = kind({\n\tkind: null,\n\tmixins: [ObserverSupport, ComputedSupport, BindingSupport, EventEmitter, StateSupport]\n});\n\n/**\n* The event emitted when [attributes]{@link enyo.Model#attributes} have been modified.\n* The event [object]{@glossary Object} will consist of key/value pairs of attributes\n* that changed and their new values.\n*\n* @event enyo.Model#change\n* @type {Object}\n* @public\n*/\n\n/**\n* The default configurable [options]{@link enyo.Model#options} used in certain API methods\n* of {@link enyo.Model}.\n*\n* @typedef {Object} enyo.Model~Options\n* @property {Boolean} silent=false - Keep events and notifications from being emitted.\n* @property {Boolean} commit=false - Immediately [commit]{@link enyo.Model#commit} changes\n*\tafter they have occurred. Also note that, if `true`, when the [model]{@link enyo.Model}\n* is [destroyed]{@link enyo.Model#destroy}, it will also be destroyed via any\n* [sources]{@link enyo.Model#source} it has.\n* @property {Boolean} parse=false - During initialization, [parse]{@link enyo.Model#parse}\n*\tany given [attributes]{@link enyo.Model#attributes}; after\n*\t[fetching]{@link enyo.Model#fetch}, parse the data before calling\n* [set()]{@link enyo.Model#set}.\n* @property {Boolean} fetch=false - Automatically call [fetch()]{@link enyo.Model#fetch}\n*\tduring initialization.\n*/\n\n/**\n* The configurable options for [fetch()]{@link enyo.Model#fetch},\n* [commit()]{@link enyo.Model#commit}, and [destroy()]{@link enyo.Model#destroy}.\n*\n* @typedef {enyo.Model~Options} enyo.Model~ActionOptions\n* @property {enyo.Model~Success} success - The callback executed upon successful\n*\tcompletion.\n* @property {enyo.Model~Error} error - The callback executed upon a failed attempt.\n*/\n\n/**\n* @callback enyo.Model~Success\n* @param {enyo.Model} model - The [model]{@link enyo.Model} that is returning successfully.\n* @param {enyo.Model~ActionOptions} opts - The original options passed to the action method\n*\tthat is returning successfully.\n* @param {*} res - The result, if any, returned by the [source]{@link enyo.Source} that\n*\texecuted it.\n* @param {String} source - The name of the [source]{@link enyo.Model#source} that has\n* returned successfully.\n*/\n\n/**\n* @callback enyo.Model~Error\n* @param {enyo.Model} model - The model that is returning an error.\n* @param {String} action - The name of the action that failed, one of `'FETCHING'`,\n*\t`'COMMITTING'`, or `'DESTROYING'`.\n* @param {enyo.Model~Options} opts - The original options passed to the action method\n*\tthat is returning an error.\n* @param {*} res - The result, if any, returned by the [source]{@link enyo.Source} that\n*\texecuted it.\n* @param {String} source - The name of the [source]{@link enyo.Model#source} that has\n*\treturned an error.\n*/\n\n/**\n* An [object]{@glossary Object} used to represent and maintain state. Usually,\n* an {@link enyo.Model} is used to expose data to the view layer. It keeps logic\n* related to the data (retrieving it, updating it, storing it, etc.) out of the\n* view, and the view can automatically update based on changes in the model.\n* Models have the ability to work with other data layer [kinds]{@glossary kind}\n* to provide more sophisticated implementations.\n*\n* Models have [bindable]{@link enyo.BindingSupport}\n* [attributes]{@link enyo.Model#attributes}. Models differs from other\n* bindable kinds in that attribute values are proxied from an internal\n* [hash]{@glossary Object} instead of being set on the target properties\n* directly.\n*\n* @see enyo.Store\n* @see enyo.Collection\n* @see enyo.RelationalModel\n* @see enyo.ModelController\n* @class enyo.Model\n* @mixes enyo.ObserverSupport\n* @mixes enyo.ComputedSupport\n* @mixes enyo.BindingSupport\n* @mixes enyo.EventEmitter\n* @mixes enyo.StateSupport\n* @public\n*/\nvar Model = module.exports = kind(\n\t/** @lends enyo.Model.prototype */ {\n\n\tname: 'enyo.Model',\n\n\t/**\n\t* @private\n\t*/\n\tkind: BaseModel,\n\n\t/**\n\t* @private\n\t*/\n\n\n\t/**\n\t* Used by various [sources]{@link enyo.Model#source} as part of the\n\t* [URI]{@glossary URI} from which they may be [fetched]{@link enyo.Model#fetch},\n\t* [committed]{@link enyo.Model#commit}, or [destroyed]{@link enyo.Model#destroy}.\n\t* Some sources may use this property in other ways.\n\t*\n\t* @see enyo.Model.getUrl\n\t* @see enyo.Source\n\t* @see enyo.AjaxSource\n\t* @see enyo.JsonpSource\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\turl: '',\n\n\t/**\n\t* Implement this method to be used by [sources]{@link enyo.Model#source} to\n\t* dynamically derive the [URI]{@glossary URI} from which they may be\n\t* [fetched]{@link enyo.Model#fetch}, [committed]{@link enyo.Model#commit},\n\t* or [destroyed]{@link enyo.Model#destroy}. Some sources may use this\n\t* property in other ways. Note that, if this method is implemented, the\n\t* [url]{@link enyo.Model#url} will not be used.\n\t*\n\t* @see enyo.Model.url\n\t* @see enyo.Source\n\t* @see enyo.AjaxSource\n\t* @see enyo.JsonpSource\n\t* @type {Function}\n\t* @default null\n\t* @virtual\n\t* @public\n\t*/\n\tgetUrl: null,\n\n\t/**\n\t* The [hash]{@glossary Object} of properties proxied by this [model]{@link enyo.Model}.\n\t* If defined on a [subkind]{@glossary subkind}, it may be assigned default values and\n\t* all instances will share its default structure. If no attributes are defined, an\n\t* empty [hash]{@glossary Object} will be assigned during initialization. It is not\n\t* necessary to pre-define the structure of a model; depending on the model's complexity,\n\t* pre-defining the structure may possibly hinder performance.\n\t*\n\t* It should also be noted that calls to [get()]{@link enyo.Model#get} or\n\t* [set()]{@link enyo.Model#set} will access and modify this property. This includes\n\t* the values to which (or from which) [bindings]{@link enyo.BindingSupport} are bound.\n\t*\n\t* @type {Object}\n\t* @default null\n\t* @public\n\t*/\n\tattributes: null,\n\n\t/**\n\t* The [source(s)]{@link enyo.Source} to use when [fetching]{@link enyo.Model#fetch},\n\t* [committing]{@link enyo.Model#commit}, or [destroying]{@link enyo.Model#destroy}.\n\t* Any method that uses sources may override this default value in its configuration\n\t* options. This value may be a [string]{@glossary String}, an\n\t* [Array]{@glossary Array} of strings, an instance of {@link enyo.Source}, or an\n\t* array of `enyo.Source` instances.\n\t*\n\t* @see enyo.Source\n\t* @see enyo.Model.fetch\n\t* @see enyo.Model.commit\n\t* @see enyo.Model.destroy\n\t* @type {(String|String[]|enyo.Source|enyo.Source[])}\n\t* @default null\n\t* @public\n\t*/\n\tsource: null,\n\n\t/**\n\t* These [keys]{@glossary Object.keys} will be the only\n\t* [attributes]{@link enyo.Model#attributes} included if the\n\t* [model]{@link enyo.Model} is [committed]{@link enyo.Model#commit}. This\n\t* directly modifies the result of calling [raw()]{@link enyo.Model#raw}. If\n\t* not defined, all keys from the [attributes]{@link enyo.Model#attributes}\n\t* [hash]{@glossary Object} will be used.\n\t*\n\t* @see enyo.Model.raw\n\t* @see enyo.Model.toJSON\n\t* @type {String[]}\n\t* @default null\n\t* @public\n\t*/\n\tincludeKeys: null,\n\n\t/**\n\t* The inheritable default configuration options. These specify the behavior of particular\n\t* API features of {@link enyo.Model}. Any method that uses these options may override\n\t* the default values in its own configuration options. Note that setting an\n\t* [options hash]{@glossary Object} on a [subkind]{@glossary subkind} will result in\n\t* the new values' being merged with--not replacing--the\n\t* [superkind's]{@glossary superkind} own `options`.\n\t*\n\t* @type {enyo.Model~Options}\n\t* @public\n\t*/\n\toptions: {\n\t\tsilent: false,\n\t\tcommit: false,\n\t\tparse: false,\n\t\tfetch: false\n\t},\n\n\t/**\n\t* The current [state(s)]{@link enyo~States} possessed by the [model]{@link enyo.Model}.\n\t* There are limitations as to which state(s) the model may possess at any given time.\n\t* By default, a model is [NEW]{@link enyo~States.NEW} and [CLEAN]{@link enyo~States.CLEAN}.\n\t* Note that this is **not** a [bindable]{@link enyo.BindingSupport} property.\n\t*\n\t* @see enyo.States\n\t* @see enyo.StateSupport\n\t* @type {enyo.States}\n\t* @readonly\n\t* @public\n\t*/\n\tstatus: States.NEW | States.CLEAN,\n\n\t/**\n\t* The unique attribute by which the [model]{@link enyo.Model} may be indexed. The\n\t* attribute's value must be unique across all instances of the specific model\n\t* [kind]{@glossary kind}\n\t*\n\t* @type {String}\n\t* @default 'id'\n\t* @public\n\t*/\n\tprimaryKey: 'id',\n\n\t/**\n\t* Inspects and restructures incoming data prior to [setting]{@link enyo.Model#set} it on\n\t* the [model]{@link enyo.Model}. While this method may be called directly, it is most\n\t* often used via the [parse]{@link enyo.Model~Options.parse} option and executed\n\t* automatically, either during initialization or when [fetched]{@link enyo.Model#fetch}\n\t* (or, in some cases, both). This is a virtual method and must be provided to suit a\n\t* given implementation's needs.\n\t*\n\t* @see enyo.Model~Options.parse\n\t* @param {*} data - The incoming data that may need to be restructured or reduced prior to\n\t*\tbeing [set]{@link enyo.Model#set} on the [model]{@link enyo.Model}.\n\t* @returns {Object} The [hash]{@glossary Object} to apply to the\n\t*\tmodel via [set()]{@link enyo.Model#set}.\n\t* @virtual\n\t* @public\n\t*/\n\tparse: function (data) {\n\t\treturn data;\n\t},\n\n\t/**\n\t* Returns an [Object]{@glossary Object} that represents the underlying data structure\n\t* of the [model]{@link enyo.Model}. This is dependent on the current\n\t* [attributes]{@link enyo.Model#attributes} as well as the\n\t* [includeKeys]{@link enyo.Model#includeKeys}.\n\t* [Computed properties]{@link enyo.ComputedSupport} are **never** included.\n\t*\n\t* @see enyo.Model.includeKeys\n\t* @see enyo.Model.attributes\n\t* @returns {Object} The formatted [hash]{@glossary Object} representing the underlying\n\t*\tdata structure of the [model]{@link enyo.Model}.\n\t* @public\n\t*/\n\traw: function () {\n\t\tvar inc = this.includeKeys\n\t\t\t, attrs = this.attributes\n\t\t\t, keys = inc || Object.keys(attrs)\n\t\t\t, cpy = inc? utils.only(inc, attrs): utils.clone(attrs);\n\t\tkeys.forEach(function (key) {\n\t\t\tvar ent = this.get(key);\n\t\t\tif (typeof ent == 'function') cpy[key] = ent.call(this);\n\t\t\telse if (ent && ent.raw) cpy[key] = ent.raw();\n\t\t\telse cpy[key] = ent;\n\t\t}, this);\n\t\treturn cpy;\n\t},\n\n\t/**\n\t* Returns the [JSON]{@glossary JSON} serializable [raw()]{@link enyo.Model#raw} output\n\t* of the [model]{@link enyo.Model}. Will automatically be executed by\n\t* [JSON.parse()]{@glossary JSON.parse}.\n\t*\n\t* @see enyo.Model.raw\n\t* @returns {Object} The return value of [raw()]{@link enyo.Model#raw}.\n\t* @public\n\t*/\n\ttoJSON: function () {\n\n\t\t// @NOTE: Because this is supposed to return a JSON parse-able object\n\t\treturn this.raw();\n\t},\n\n\t/**\n\t* Restores an [attribute]{@link enyo.Model#attributes} to its previous value. If no\n\t* attribute is specified, all previous values will be restored.\n\t*\n\t* @see enyo.Model.set\n\t* @see enyo.Model.previous\n\t* @param {String} [prop] - The [attribute]{@link enyo.Model#attributes} to\n\t*\t[restore]{@link enyo.Model#restore}. If not provided, all attributes will be\n\t* restored to their previous values.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\trestore: function (prop) {\n\n\t\t// we ensure that the property is forcibly notified (when possible) to ensure that\n\t\t// bindings or other observers will know it returned to that value\n\t\tif (prop) this.set(prop, this.previous[prop], {force: true});\n\t\telse this.set(this.previous);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Commits the [model]{@link enyo.Model} to a [source or sources]{@link enyo.Model#source}.\n\t* A model cannot be [committed]{@link enyo.Model#commit} if it is in an\n\t* [error]{@link enyo~States.ERROR} ({@link enyo.StateSupport.isError}) or\n\t* [busy]{@link enyo~States.BUSY} ({@link enyo.StateSupport.isBusy})\n\t* [state]{@link enyo.Model#status}. While executing, it will add the\n\t* [COMMITTING]{@link enyo~States.COMMITTING} flag to the model's\n\t* [status]{@link enyo.Model#status}. Once it has completed execution, it will\n\t* remove this flag (even if it fails).\n\t*\n\t* @see enyo.Model.committed\n\t* @see enyo.Model.status\n\t* @param {enyo.Model~ActionOptions} [opts] - Optional configuration options.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tcommit: function (opts) {\n\t\tvar options,\n\t\t\tsource,\n\t\t\tit = this;\n\n\t\t// if the current status is not one of the error or busy states we can continue\n\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\n\n\t\t\t// if there were options passed in we copy them quickly so that we can hijack\n\t\t\t// the success and error methods while preserving the originals to use later\n\t\t\toptions = opts ? utils.clone(opts, true) : {};\n\n\t\t\t// make sure we keep track of how many sources we're requesting\n\t\t\tsource = options.source || this.source;\n\t\t\tif (source && ((source instanceof Array) || source === true)) {\n\t\t\t\tthis._waiting = source.length ? source.slice() : Object.keys(Source.sources);\n\t\t\t}\n\n\t\t\toptions.success = function (source, res) {\n\t\t\t\tit.committed(opts, res, source);\n\t\t\t};\n\n\t\t\toptions.error = function (source, res) {\n\t\t\t\tit.errored('COMMITTING', opts, res, source);\n\t\t\t};\n\n\t\t\t// set the state\n\t\t\tthis.status = this.status | States.COMMITTING;\n\n\t\t\t// now pass this on to the source to execute as it sees fit\n\t\t\tSource.execute('commit', this, options);\n\t\t} else this.errored(this.status, opts);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Fetches the [model]{@link enyo.Model} from a\n\t* [source or sources]{@link enyo.Model#source}. A model cannot be\n\t* [fetched]{@link enyo.Model#fetch} if it is in an\n\t* [error]{@link enyo~States.ERROR} ({@link enyo.StateSupport.isError}) or\n\t* [busy]{@link enyo~States.BUSY} ({@link enyo.StateSupport.isBusy})\n\t* [state]{@link enyo.Model#status}. While executing, it will add the\n\t* [FETCHING]{@link enyo~States.FETCHING} flag to the model's\n\t* [status]{@link enyo.Model#status}. Once it has completed execution, it will\n\t* remove this flag (even if it fails).\n\t*\n\t* @see enyo.Model.fetched\n\t* @see enyo.Model.status\n\t* @param {enyo.Model~ActionOptions} [opts] - Optional configuration options.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tfetch: function (opts) {\n\t\tvar options,\n\t\t\tsource,\n\t\t\tit = this;\n\n\t\t// if the current status is not one of the error or busy states we can continue\n\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\n\n\t\t\t// if there were options passed in we copy them quickly so that we can hijack\n\t\t\t// the success and error methods while preserving the originals to use later\n\t\t\toptions = opts ? utils.clone(opts, true) : {};\n\n\t\t\t// make sure we keep track of how many sources we're requesting\n\t\t\tsource = options.source || this.source;\n\t\t\tif (source && ((source instanceof Array) || source === true)) {\n\t\t\t\tthis._waiting = source.length ? source.slice() : Object.keys(Source.sources);\n\t\t\t}\n\n\t\t\toptions.success = function (source, res) {\n\t\t\t\tit.fetched(opts, res, source);\n\t\t\t};\n\n\t\t\toptions.error = function (source, res) {\n\t\t\t\tit.errored('FETCHING', opts, res, source);\n\t\t\t};\n\n\t\t\t// set the state\n\t\t\tthis.status = this.status | States.FETCHING;\n\n\t\t\t// now pass this on to the source to execute as it sees fit\n\t\t\tSource.execute('fetch', this, options);\n\t\t} else this.errored(this.status, opts);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Destroys the [model]{@link enyo.Model}. By default, the model will only\n\t* be [destroyed]{@glossary destroy} in the client. To execute with a\n\t* [source or sources]{@link enyo.Model#source}, either the\n\t* [commit default option]{@link enyo.Model#options} must be `true` or a\n\t* `source` property must be explicitly provided in the `opts` parameter.\n\t* A model cannot be destroyed (using a source) if it is in an\n\t* [error]{@link enyo~States.ERROR} ({@link enyo.StateSupport.isError})\n\t* or [busy]{@link enyo~States.BUSY} ({@link enyo.StateSupport.isBusy})\n\t* [state]{@link enyo.Model#status}. While executing, it will add the\n\t* [DESTROYING]{@link enyo~States.DESTROYING} flag to the model's\n\t* [status]{@link enyo.Model#status}. Once it has completed execution, it\n\t* will remove this flag (even if it fails).\n\t*\n\t* @see enyo.Model.status\n\t* @param {enyo.Model~ActionOptions} [opts] - Optional configuration options.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tdestroy: function (opts) {\n\t\tvar options = opts ? utils.mixin({}, [this.options, opts]) : this.options,\n\t\t\tit = this,\n\t\t\tidx;\n\n\t\t// this becomes an (potentially) async operation if we are committing this destroy\n\t\t// to a source and its kind of tricky to figure out because there are several ways\n\t\t// it could be flagged to do this\n\n\t\tif (options.commit || options.source) {\n\n\t\t\t// if the current status is not one of the error states we can continue\n\t\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\n\n\t\t\t\t// remap to the originals\n\t\t\t\toptions = opts ? utils.clone(opts, true) : {};\n\n\t\t\t\toptions.success = function (source, res) {\n\n\t\t\t\t\tif (it._waiting) {\n\t\t\t\t\t\tidx = it._waiting.findIndex(function (ln) {\n\t\t\t\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (idx > -1) it._waiting.splice(idx, 1);\n\t\t\t\t\t\tif (!it._waiting.length) it._waiting = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// continue the operation this time with commit false explicitly\n\t\t\t\t\tif (!it._waiting) {\n\t\t\t\t\t\toptions.commit = options.source = null;\n\t\t\t\t\t\tit.destroy(options);\n\t\t\t\t\t}\n\t\t\t\t\tif (opts && opts.success) opts.success(this, opts, res, source);\n\t\t\t\t};\n\n\t\t\t\toptions.error = function (source, res) {\n\n\t\t\t\t\tif (it._waiting) {\n\t\t\t\t\t\tidx = it._waiting.findIndex(function (ln) {\n\t\t\t\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (idx > -1) it._waiting.splice(idx, 1);\n\t\t\t\t\t\tif (!it._waiting.length) it._waiting = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// continue the operation this time with commit false explicitly\n\t\t\t\t\tif (!it._waiting) {\n\t\t\t\t\t\toptions.commit = options.source = null;\n\t\t\t\t\t\tit.destroy(options);\n\t\t\t\t\t}\n\n\t\t\t\t\t// we don't bother setting the error state if we aren't waiting because it\n\t\t\t\t\t// will be cleared to DESTROYED and it would be pointless\n\t\t\t\t\telse this.errored('DESTROYING', opts, res, source);\n\t\t\t\t};\n\n\t\t\t\tthis.status = this.status | States.DESTROYING;\n\n\t\t\t\tSource.execute('destroy', this, options);\n\t\t\t} else if (this.status & States.ERROR) this.errored(this.status, opts);\n\n\t\t\t// we don't allow the destroy to take place and we don't forcibly break-down\n\t\t\t// the collection errantly so there is an opportuniy to resolve the issue\n\t\t\t// before we lose access to the collection's content!\n\t\t\treturn this;\n\t\t}\n\n\n\t\t// we flag this early so objects that receive an event and process it\n\t\t// can optionally check this to support faster cleanup in some cases\n\t\t// e.g. Collection/Store don't need to remove listeners because it will\n\t\t// be done in a much quicker way already\n\t\tthis.destroyed = true;\n\t\tthis.status = States.DESTROYED;\n\t\tthis.unsilence(true).emit('destroy');\n\t\tthis.removeAllListeners();\n\t\tthis.removeAllObservers();\n\n\t\t// if this does not have the the batching flag (that would be set by a collection)\n\t\t// then we need to do the default of removing it from the store\n\t\tif (!opts || !opts.batching) this.store.remove(this);\n\t},\n\n\t/**\n\t* Retrieves the value for the given property or path. If the property is a\n\t* [computed property]{@link enyo.ComputedSupport.computed}, then it will return\n\t* that value; otherwise, it will attempt to retrieve the value from the\n\t* [attributes hash]{@link enyo.Model#attributes}.\n\t*\n\t* @param {String} path - The property to retrieve.\n\t* @returns {*} The value for the requested property or path, or `undefined` if\n\t* it cannot be found or does not exist.\n\t* @public\n\t*/\n\tget: function (path) {\n\t\treturn this.isComputed(path) ? this._getComputed(path) : this.attributes[path];\n\t},\n\n\t/**\n\t* Sets the requested `path` or [hash]{@glossary Object} of properties on the\n\t* [model]{@link enyo.Model}. Properties are applied to the\n\t* [attributes hash]{@link enyo.Model#attributes} and are retrievable via\n\t* [get()]{@link enyo.Model#get}. If properties were updated and the `silent`\n\t* option is not `true`, this method will emit a `change` event, as well as\n\t* individual [notifications]{@link enyo.ObserverSupport.notify} for the\n\t* properties that were modified.\n\t*\n\t* @fires enyo.Model#change\n\t* @see enyo.ObserverSupport\n\t* @see enyo.BindingSupport\n\t* @param {(String|Object)} path - Either the property name or a [hash]{@glossary Object}\n\t*\tof properties and values to set.\n\t* @param {(*|enyo.Model~Options)} is If `path` is a [string]{@glossary String},\n\t* this should be the value to set for the given property; otherwise, it should be\n\t* an optional hash of available [configuration options]{@link enyo.Model~Options}.\n\t* @param {enyo.Model~Options} [opts] - If `path` is a string, this should be the\n\t* optional hash of available configuration options; otherwise, it will not be used.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tset: function (path, is, opts) {\n\t\tif (!this.destroyed) {\n\n\t\t\tvar attrs = this.attributes,\n\t\t\t\toptions = this.options,\n\t\t\t\tchanged,\n\t\t\t\tincoming,\n\t\t\t\tforce,\n\t\t\t\tsilent,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\tcommit,\n\t\t\t\tfetched;\n\n\t\t\t// the default case for this setter is accepting an object of key->value pairs\n\t\t\t// to apply to the model in which case the second parameter is the optional\n\t\t\t// configuration hash\n\t\t\tif (typeof path == 'object') {\n\t\t\t\tincoming = path;\n\t\t\t\topts = opts || is;\n\t\t\t}\n\n\t\t\t// otherwise in order to have a single path here we flub it so it will keep on\n\t\t\t// going as expected\n\t\t\telse {\n\t\t\t\tincoming = {};\n\t\t\t\tincoming[path] = is;\n\t\t\t}\n\n\t\t\t// to maintain backward compatibility with the old setters that allowed the third\n\t\t\t// parameter to be a boolean to indicate whether or not to force notification of\n\t\t\t// change even if there was any\n\t\t\tif (opts === true) {\n\t\t\t\tforce = true;\n\t\t\t\topts = {};\n\t\t\t}\n\n\t\t\topts = opts ? utils.mixin({}, [options, opts]) : options;\n\t\t\tsilent = opts.silent;\n\t\t\tforce = force || opts.force;\n\t\t\tcommit = opts.commit;\n\t\t\tfetched = opts.fetched;\n\n\t\t\tfor (key in incoming) {\n\t\t\t\tvalue = incoming[key];\n\n\t\t\t\tif (value !== attrs[key] || force) {\n\t\t\t\t\t// to ensure we have an object to work with\n\t\t\t\t\t// note that we check inside this loop so we don't have to examine keys\n\t\t\t\t\t// later only the local variable changed\n\t\t\t\t\tchanged = this.changed || (this.changed = {});\n\t\t\t\t\t//store the previous attr value\n\t\t\t\t\tthis.previous[key] = attrs[key];\n\t\t\t\t\t//set new value\n\t\t\t\t\tchanged[key] = attrs[key] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (changed) {\n\n\t\t\t\t// we add dirty as a value of the status but clear the CLEAN bit if it\n\t\t\t\t// was set - this would allow it to be in the ERROR state and NEW and DIRTY\n\t\t\t\tif (!fetched) this.status = (this.status | States.DIRTY) & ~States.CLEAN;\n\n\t\t\t\tif (!silent) this.emit('change', changed, this);\n\n\t\t\t\tif (commit && !fetched) this.commit(opts);\n\n\t\t\t\t// reset value so subsequent changes won't be added to this change-set\n\t\t\t\tthis.changed = null;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* A bit of hackery to facade the normal [getter]{@link enyo.ComputedSupport.get}. Note that\n\t* we pass an arbitrary super-method that automatically returns `undefined`, which is\n\t* consistent with this use case and its intended purpose.\n\t*\n\t* @private\n\t*/\n\t_getComputed: ComputedSupport.get.fn(function () { return undefined; }),\n\n\t/**\n\t* Initializes the [model]{@link enyo.Model}. Unlike some methods, the parameters are not\n\t* interchangeable. If you are not using a particular (optional) parameter, pass in `null`.\n\t*\n\t* @param {Object} [attrs] - Optionally initialize the [model]{@link enyo.Model} with some\n\t*\t[attributes]{@link enyo.Model#attributes}.\n\t* @param {Object} [props] - Properties to apply directly to the [model]{@link enyo.Model} and\n\t*\tnot the [attributes hash]{@link enyo.Model#attributes}. If these properties contain an\n\t*\t`options` property (a [hash]{@glossary Object}) it will be merged with existing\n\t*\t[options]{@link enyo.Model#options}.\n\t* @param {enyo.Model~Options} [opts] - This is a one-time [options hash]{@link enyo.Model~Options} that\n\t*\tis only used during initialization and not applied as defaults.\n\t* @public\n\t*/\n\tconstructor: function (attrs, props, opts) {\n\n\t\t// in cases where there is an options hash provided in the _props_ param\n\t\t// we need to integrate it manually...\n\t\tif (props && props.options) {\n\t\t\tthis.options = utils.mixin({}, [this.options, props.options]);\n\t\t\tdelete props.options;\n\t\t}\n\n\t\t// the _opts_ parameter is a one-hit options hash it does not leave\n\t\t// behind its values as default options...\n\t\topts = opts? utils.mixin({}, [this.options, opts]): this.options;\n\n\t\t// go ahead and mix all of the properties in\n\t\tprops && utils.mixin(this, props);\n\n\t\tvar noAdd = opts.noAdd\n\t\t\t, commit = opts.commit\n\t\t\t, parse = opts.parse\n\t\t\t, fetch = this.options.fetch\n\t\t\t, defaults;\n\n\t\t// defaults = this.defaults && (typeof this.defaults == 'function'? this.defaults(attrs, opts): this.defaults);\n\t\tdefaults = this.defaults && typeof this.defaults == 'function'? this.defaults(attrs, opts): null;\n\n\t\t// ensure we have a unique identifier that could potentially\n\t\t// be used in remote systems\n\t\tthis.euid = this.euid || utils.uid('m');\n\n\t\t// if necessary we need to parse the incoming attributes\n\t\tattrs = attrs? parse? this.parse(attrs): attrs: null;\n\n\t\t// ensure we have the updated attributes\n\t\tthis.attributes = this.attributes? defaults? utils.mixin({}, [defaults, this.attributes]): utils.clone(this.attributes, true): defaults? utils.clone(defaults, true): {};\n\t\tattrs && utils.mixin(this.attributes, attrs);\n\t\tthis.previous = utils.clone(this.attributes);\n\n\t\t// now we need to ensure we have a store and register with it\n\t\tthis.store = this.store || Store;\n\n\t\t// @TODO: The idea here is that when batch instancing records a collection\n\t\t// should be intelligent enough to avoid doing each individually or in some\n\t\t// cases it may be useful to have a record that is never added to a store?\n\t\tif (!noAdd) this.store.add(this, opts);\n\n\t\tcommit && this.commit();\n\t\tfetch && this.fetch();\n\t},\n\n\t/**\n\t* Overloaded. We funnel arbitrary notification updates through here, as this\n\t* is faster than using the built-in notification updates for batch operations.\n\t*\n\t* @private\n\t*/\n\temit: kind.inherit(function (sup) {\n\t\treturn function (e, props) {\n\t\t\tif (e == 'change' && props && this.isObserving()) {\n\t\t\t\tfor (var key in props) this.notify(key, this.previous[key], props[key]);\n\t\t\t}\n\t\t\treturn sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Overloaded to alias the (also overloaded) [emit()]{@link enyo.Model#emit} method.\n\t*\n\t* @private\n\t*/\n\ttriggerEvent: function () {\n\t\treturn this.emit.apply(this, arguments);\n\t},\n\n\t/**\n\t* When a [fetch]{@link enyo.Model#fetch} has completed successfully, it is returned\n\t* to this method. This method handles special and important behavior; it should not be\n\t* called directly and, when overloading, care must be taken to ensure that you call\n\t* the super-method. This correctly sets the [status]{@link enyo.Model#status} and, in\n\t* cases where multiple [sources]{@link enyo.Model#source} were used, it waits until\n\t* all have responded before clearing the [FETCHING]{@link enyo~States.FETCHING} flag.\n\t* If a [success]{@link enyo.Model~Success} callback was provided, it will be called\n\t* once for each source.\n\t*\n\t* @param {enyo.Model~ActionOptions} opts - The original options passed to\n\t*\t[fetch()]{@link enyo.Model#fetch}, merged with the defaults.\n\t* @param {*} [res] - The result provided from the given [source]{@link enyo.Model#source},\n\t* if any. This will vary depending on the source.\n\t* @param {String} source - The name of the source that has completed successfully.\n\t* @public\n\t*/\n\tfetched: function (opts, res, source) {\n\t\tvar idx,\n\t\t\toptions = this.options;\n\n\t\tif (this._waiting) {\n\t\t\tidx = this._waiting.findIndex(function (ln) {\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t});\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\n\t\t\tif (!this._waiting.length) this._waiting = null;\n\t\t}\n\n\t\t// normalize options so we have values and ensure it knows it was just fetched\n\t\topts = opts ? utils.mixin({}, [options, opts]) : options;\n\t\topts.fetched = true;\n\n\t\t// for a special case purge to only use the result sub-tree of the fetched data for\n\t\t// the model attributes\n\t\tif (opts.parse) res = this.parse(res);\n\n\t\t// note this will not add the DIRTY state because it was fetched but also note that it\n\t\t// will not clear the DIRTY flag if it was already DIRTY\n\t\tif (res) this.set(res, opts);\n\n\t\t// clear the FETCHING and NEW state (if it was NEW) we do not set it as dirty as this\n\t\t// action alone doesn't warrant a dirty flag that would need to be set in the set method\n\t\tif (!this._waiting) this.status = this.status & ~(States.FETCHING | States.NEW);\n\n\t\t// now look for an additional success callback\n\t\tif (opts.success) opts.success(this, opts, res, source);\n\t},\n\n\t/**\n\t* When a [commit]{@link enyo.Model#commit} has completed successfully, it is returned\n\t* to this method. This method handles special and important behavior; it should not be\n\t* called directly and, when overloading, care must be taken to ensure that you call the\n\t* super-method. This correctly sets the [status]{@link enyo.Model#status} and, in cases\n\t* where multiple [sources]{@link enyo.Model#source} were used, it waits until all have\n\t* responded before clearing the [COMMITTING]{@link enyo~States.COMMITTING} flag. If a\n\t* [success]{@link enyo.Model~Success} callback was provided, it will be called once for\n\t* each source.\n\t*\n\t* @param {enyo.Model~ActionOptions} opts - The original options passed to\n\t*\t[commit()]{@link enyo.Model#commit}, merged with the defaults.\n\t* @param {*} [res] - The result provided from the given [source]{@link enyo.Model#source},\n\t* if any. This will vary depending on the source.\n\t* @param {String} source - The name of the source that has completed successfully.\n\t* @public\n\t*/\n\tcommitted: function (opts, res, source) {\n\t\tvar idx;\n\n\t\tif (this._waiting) {\n\t\t\tidx = this._waiting.findIndex(function (ln) {\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t});\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\n\t\t\tif (!this._waiting.length) this._waiting = null;\n\t\t}\n\n\t\tif (!this._waiting) {\n\t\t\t// we need to clear the COMMITTING bit and DIRTY bit as well as ensure that the\n\t\t\t// 'previous' hash is whatever the current attributes are\n\t\t\tthis.previous = utils.clone(this.attributes);\n\t\t\tthis.status = (this.status | States.CLEAN) & ~(States.COMMITTING | States.DIRTY);\n\t\t}\n\n\t\tif (opts && opts.success) opts.success(this, opts, res, source);\n\t},\n\n\t/**\n\t* When an action ([fetch()]{@link enyo.Model#fetch}, [commit()]{@link enyo.Model#commit},\n\t* or [destroy()]{@link enyo.Model#destroy}) has failed, it will be passed to this method.\n\t* This method handles special and important behavior; it should not be called directly\n\t* and, when overloading, care must be taken to ensure that you call the super-method.\n\t* This correctly sets the [status]{@link enyo.Model#status} to the known\n\t* [error state]{@link enyo~States.ERROR}, or to the\n\t* [unknown error state]{@link enyo~States.ERROR_UNKNOWN} if it the error state could not\n\t* be determined. If an [error callback]{@link enyo.Model~Error} was provided, this method\n\t* will execute it.\n\t*\n\t* @see enyo.StateSupport.clearError\n\t* @param {String} action - The action (one of `'FETCHING'`, `'COMMITTING'`, or\n\t* `'DESTROYING'`) that failed and is now in an [error state]{@link enyo~States.ERROR}.\n\t* @param {enyo.Model~ActionOptions} opts - The original options passed to the `action`\n\t* method, merged with the defaults.\n\t* @param {*} [res] - The result provided from the given [source]{@link enyo.Model#source},\n\t* if any. This will vary depending on the source.\n\t* @param {String} source - The name of the source that has returned an error.\n\t* @public\n\t*/\n\terrored: function (action, opts, res, source) {\n\t\tvar stat,\n\t\t\tidx;\n\n\t\t// if the error action is a status number then we don't need to update it otherwise\n\t\t// we set it to the known state value\n\t\tif (typeof action == 'string') {\n\n\t\t\t// all built-in errors will pass this as their values are > 0 but we go ahead and\n\t\t\t// ensure that no developer used the 0x00 for an error code\n\t\t\tstat = States['ERROR_' + action];\n\t\t} else stat = action;\n\n\t\tif (isNaN(stat) || (stat & ~States.ERROR)) stat = States.ERROR_UNKNOWN;\n\n\t\t// correctly set the current status and ensure we clear any busy flags\n\t\tthis.status = (this.status | stat) & ~States.BUSY;\n\n\t\tif (this._waiting) {\n\t\t\tidx = this._waiting.findIndex(function (ln) {\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t});\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\n\t\t\tif (!this._waiting.length) this._waiting = null;\n\t\t}\n\n\t\t// we need to check to see if there is an options handler for this error\n\t\tif (opts && opts.error) opts.error(this, action, opts, res, source);\n\t}\n\n});\n\n/**\n* @name enyo.Model.concat\n* @static\n* @private\n*/\nModel.concat = function (ctor, props) {\n\tvar proto = ctor.prototype || ctor;\n\n\tif (props.options) {\n\t\tproto.options = utils.mixin({}, [proto.options, props.options]);\n\t\tdelete props.options;\n\t}\n};\n\n/**\n* @private\n*/\nkind.features.push(function (ctor) {\n\tif (ctor.prototype instanceof Model) {\n\t\t!Store.models[ctor.prototype.kindName] && (Store.models[ctor.prototype.kindName] = new ModelList());\n\t}\n});","require('../../enyo');\n\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tlogger = require('./logger');\n\nvar\n\tCoreObject = require('./CoreObject'),\n\tApplicationSupport = require('./ApplicationSupport'),\n\tComponentBindingSupport = require('./ComponentBindingSupport'),\n\tJobs = require('./jobs');\n\nvar\n\tkindPrefix = {},\n\tunnamedCounter = 0;\n\t\n/**\n* @callback enyo.Component~EventHandler\n* @param {enyo.Component} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @param {Object} event - An [object]{@glossary Object} containing\n*\tevent information.\n* @returns {Boolean} A value indicating whether the event has been\n*\thandled or not. If `true`, then bubbling is stopped.\n*/\n\n/**\n* A [hash]{@glossary Object} of references to all the [components]{@link enyo.Component}\n* owned by this component. This property is updated whenever a new\n* component is added; the new component may be accessed via its\n* [name]{@link enyo.Component#name} property. We may also observe changes on\n* properties of components referenced by the `$` property.\n*\n* Component access via the `$` hash:\n* ```javascript\n* var c = new enyo.Component({\n*\tname: 'me',\n*\tcomponents: [\n*\t\t{kind: 'Component', name: 'other'}\n*\t]\n* });\n*\n* // We can now access 'other' on the $ hash of 'c', via c.$.other\n* ```\n*\n* Observing changes on a component referenced by the `$` property:\n* ```javascript\n* var c = new enyo.Component({\n*\tname: 'me',\n*\tcomponents: [\n*\t\t{kind: 'Component', name: 'other'}\n*\t]\n* });\n*\n* c.addObserver('$.other.active', function() {\n*\t// do something to respond to the \"active\" property of \"other\" changing\n* })\n*\n* c.$.other.set('active', true); // this will trigger the observer to run its callback\n* ```\n*\n* @name $\n* @type {Object}\n* @default null\n* @memberof enyo.Component.prototype\n* @readonly\n* @public\n*/\n\n/**\n* If `true`, this [component's]{@link enyo.Component} [owner]{@link enyo.Component#owner} will\n* have a direct name reference to the owned component.\n*\n* @example\n* var c = new enyo.Component({\n*\tname: 'me',\n*\tcomponents: [\n*\t\t{kind: 'Component', name: 'other', publish: true}\n*\t]\n* });\n*\n* // We can now access 'other' directly, via c.other\n*\n* @name publish\n* @type {Boolean}\n* @default undefined\n* @memberOf enyo.Component.prototype\n* @public\n*/\n\n/**\n* If `true`, the [layout]{@glossary layout} strategy will adjust the size of this\n* [component]{@link enyo.Component} to occupy the remaining available space.\n*\n* @name fit\n* @type {Boolean}\n* @default undefined\n* @memberOf enyo.Component.prototype\n* @public\n*/\n\n/**\n* {@link enyo.Component} is the fundamental building block for Enyo applications.\n* Components are designed to fit together, allowing complex behaviors to\n* be fashioned from smaller bits of functionality.\n*\n* Component [constructors]{@glossary constructor} take a single\n* argument (sometimes called a [component configuration]{@glossary configurationBlock}),\n* a JavaScript [object]{@glossary Object} that defines various properties to be initialized on the\n* component.  For example:\n*\n* ```javascript\n* // create a new component, initialize its name property to 'me'\n* var c = new enyo.Component({\n*\tname: 'me'\n* });\n* ```\n*\n* When a component is instantiated, items configured in its\n* `components` property are instantiated, too:\n*\n* ```javascript\n* // create a new component, which itself has a component\n* var c = new enyo.Component({\n*\tname: 'me',\n*\tcomponents: [\n*\t\t{kind: 'Component', name: 'other'}\n*\t]\n* });\n* ```\n*\n* In this case, when `me` is created, `other` is also created, and we say that `me` owns `other`.\n* In other words, the [owner]{@link enyo.Component#owner} property of `other` equals `me`.\n* Notice that you can specify the [kind]{@glossary kind} of `other` explicitly in its\n* configuration block, to tell `me` what constructor to use to create `other`.\n*\n* Note that [kind]{@glossary kind} values may be references to actual\n* kinds or string-names of kinds. Kind names that do not resolve directly to kinds\n* are looked up in default namespaces. In this case, `kind: 'Component'` resolves to\n* `enyo.Component`.\n*\n* To move a component, use the `setOwner()` method to change the\n* component's owner. If you want a component to be unowned, use `setOwner(null)`.\n*\n* If you make changes to `enyo.Component`, be sure to add or update the appropriate\n* {@linkplain https://github.com/enyojs/enyo/tree/master/tools/test/core/tests unit tests}.\n*\n* For more information, see the documentation on\n* [Components]{@linkplain $dev-guide/key-concepts/components.html} in the\n* Enyo Developer Guide.\n*\n* @class enyo.Component\n* @extends enyo.Object\n* @mixes enyo.ApplicationSupport\n* @mixes enyo.ComponentBindingSupport\n* @public\n*/\nvar Component = module.exports = kind(\n\t/** @lends enyo.Component.prototype */ {\n\n\tname: 'enyo.Component',\n\n\t/**\n\t* @private\n\t*/\n\tkind: CoreObject,\n\n\t/**\n\t* @private\n\t*/\n\n\n\t/**\n\t* @private\n\t*/\n\tcachedBubble: true,\n\n\t/**\n\t* @private\n\t*/\n\tcachePoint: false,\n\n\t/**\n\t* @private\n\t*/\n\tpublished:\n\t\t/** @lends enyo.Component.prototype */ {\n\n\t\t/**\n\t\t* A unique name for the [component]{@link enyo.Component} within its\n\t\t* [owner]{@link enyo.Component#owner}. This is used to set the access name in the\n\t\t* owner's [$ hash]{@link enyo.Component#$}. If not\n\t\t* specified, a default name will be provided based on the name of the\n\t\t* [object's]{@link enyo.Object} [kind]{@glossary kind}, with a numeric\n\t\t* suffix appended if more than one instance exists in the owner.\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\tname: '',\n\n\t\t/**\n\t\t* A unique id for the [component]{@link enyo.Component}, usually automatically generated\n\t\t* based on its position within the component hierarchy, although\n\t\t* it may also be directly specified. {@link enyo.Control} uses this `id` value for the\n\t\t* DOM [id]{@link enyo.Control#id} attribute.\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\tid: '',\n\n\t\t/**\n\t\t* The [component]{@link enyo.Component} that owns this component.\n\t\t* It is usually defined implicitly at creation time based on the\n\t\t* [createComponent()]{@link enyo.Component#createComponent} call or\n\t\t* the `components` hash.\n\t\t*\n\t\t* @type {enyo.Component}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\towner: null,\n\n\t\t/**\n\t\t* This can be a [hash]{@glossary Object} of features to apply to\n\t\t* [chrome]{@glossary chrome} [components]{@link enyo.Component} of the base\n\t\t* [kind]{@glossary kind}. They are matched by [name]{@link enyo.Component#name}\n\t\t* (if the component you wish to modify does not have a name, this will not work).\n\t\t* You can modify any properties of the component except for methods. Setting a\n\t\t* value for `componentOverrides` at runtime will have no effect.\n\t\t*\n\t\t* @type {Object}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tcomponentOverrides: null\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdefaultKind: 'enyo.Component',\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {},\n\n\t/**\n\t* @private\n\t*/\n\tmixins: [ApplicationSupport, ComponentBindingSupport],\n\n\t/**\n\t* @private\n\t*/\n\ttoString: function () {\n\t\treturn this.id + ' [' + this.kindName + ']';\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function (props) {\n\t\t\t// initialize instance objects\n\t\t\tthis._componentNameMap = {};\n\t\t\tthis.$ = {};\n\t\t\tthis.cachedBubbleTarget = {};\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructed: kind.inherit(function (sup) {\n\t\treturn function (props) {\n\t\t\t// perform initialization\n\t\t\tthis.create(props);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\t// stop and queue all of the notifications happening synchronously to allow\n\t\t// responders to only do single passes on work traversing the tree\n\t\tthis.stopNotifications();\n\t\tthis.ownerChanged();\n\t\tthis.initComponents();\n\t\t// release the kraken!\n\t\tthis.startNotifications();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinitComponents: function () {\n\t\t// The _components_ property in kind declarations is renamed to\n\t\t// _kindComponents_ by the Component subclass mechanism.  This makes it\n\t\t// easy for the developer to distinguish kindComponents from the components\n\t\t// in _this.components_, without having to worry about the actual difference.\n\t\t//\n\t\t// Specifically, the difference is that kindComponents are constructed as\n\t\t// owned by this control (whereas components in _this.components_ are not).\n\t\t// In addition, kindComponents are marked with the _isChrome: true_ flag.\n\t\tthis.createChrome(this.kindComponents);\n\t\tthis.createClientComponents(this.components);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreateChrome: function (comps) {\n\t\tthis.createComponents(comps, {isChrome: true});\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreateClientComponents: function (comps) {\n\t\tthis.createComponents(comps, {owner: this.getInstanceOwner()});\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetInstanceOwner: function () {\n\t\treturn (!this.owner || this.owner.notInstanceOwner) ? this : this.owner;\n\t},\n\n\t/**\n\t* Removes this [component]{@link enyo.Component} from its\n\t* [owner]{@link enyo.Component#owner} (setting `owner` to `null`)\n\t* and does any necessary cleanup. The component is flagged with\n\t* `destroyed: true`. Usually, the component will be suitable for garbage\n\t* collection after being destroyed, unless user code keeps a reference\n\t* to it.\n\t*\n\t* @returns {this} The callee for chaining.\n\t* @method\n\t* @public\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tthis.destroyComponents();\n\t\t\tthis.setOwner(null);\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.stopAllJobs();\n\t\t\treturn this;\n\t\t};\n\t}),\n\n\t/**\n\t* Destroys all owned [components]{@link enyo.Component}.\n\t*\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tdestroyComponents: function () {\n\t\tvar comps = this.getComponents(),\n\t\t\tcomp,\n\t\t\ti;\n\n\t\tfor (i = 0; i < comps.length; ++i) {\n\t\t\tcomp = comps[i];\n\t\t\t// @todo: previous comment said list might be stale and ownership may have caused\n\t\t\t// components to be destroyed as a result of some inner-container...look into this\n\t\t\t// because that seems incorrect or avoidable\n\t\t\tif (!comp.destroyed) comp.destroy();\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmakeId: function() {\n\t\tvar delim = '_', pre = this.owner && this.owner.getId(),\n\t\t\tbaseName = this.name || ('@@' + (++unnamedCounter));\n\t\treturn (pre ? pre + delim : '') + baseName;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\townerChanged: function (was) {\n\t\tif (was && was.removeComponent) was.removeComponent(this);\n\t\tif (this.owner && this.owner.addComponent) this.owner.addComponent(this);\n\t\tif (!this.id) this.id = this.makeId();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tnameComponent: function (comp) {\n\t\tvar pre = prefixFromKindName(comp.kindName),\n\t\t\tlast = this._componentNameMap[pre] || 0,\n\t\t\tnom;\n\n\t\tdo {\n\t\t\tnom = pre + (++last > 1 ? String(last) : '');\n\t\t} while (this.$[nom]);\n\n\t\tthis._componentNameMap[pre] = Number(last);\n\t\t/*jshint -W093 */\n\t\treturn (comp.name = nom);\n\t},\n\n\t/**\n\t* Adds a [component]{@link enyo.Component} to the list of components\n\t* owned by the current component (i.e., [this.$]{@link enyo.Component#$}).\n\t*\n\t* @param {enyo.Component} comp - The [component]{@link enyo.Component} to add.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\taddComponent: function (comp) {\n\t\tvar nom = comp.get('name');\n\n\t\t// if there is no name we have to come up with a generic name\n\t\tif (!nom) nom = this.nameComponent(comp);\n\n\t\t// if there already was a component by that name we issue a warning\n\t\t// @todo: if we're going to name rules being violated we need to normalize this approach\n\t\t// and ensure we have one for every warning/error we throw\n\t\tif (this.$[nom]) this.warn(\n\t\t\t'Duplicate component name ' + nom + ' in owner ' + this.id + ' violates ' +\n\t\t\t'unique-name-under-owner rule, replacing existing component in the hash and ' +\n\t\t\t'continuing, but this is an error condition and should be fixed.'\n\t\t);\n\n\t\tthis.$[nom] = comp;\n\t\tthis.notify('$.' + nom, null, comp);\n\n\t\t// if the component has the `publish` true property then we also create a reference to\n\t\t// it directly on the owner (this)\n\t\tif (comp.publish) {\n\t\t\tthis[nom] = comp;\n\n\t\t\t// and to ensure that bindings are aware we have to notify them as well\n\t\t\tthis.notify(nom, null, comp);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Removes the passed-in [component]{@link enyo.Component} from those known\n\t* to be owned by this component. The component will be removed from the\n\t* [$ hash]{@link enyo.Component#$}, and from the [owner]{@link enyo.Component#owner}\n\t* directly if [publish]{@link enyo.Component#publish} is set to `true`.\n\t*\n\t* @param {enyo.Component} comp - The component to remove.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tremoveComponent: function (comp) {\n\t\tvar nom = comp.get('name');\n\n\t\t// remove it from the hash if it existed\n\t\tdelete this.$[nom];\n\n\t\t// if it was published remove it from the component proper\n\t\tif (comp.publish) delete this[nom];\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Returns an [array]{@glossary Array} of owned [components]{@link enyo.Component}; in\n\t* other words, converts the [$ hash]{@link enyo.Component#$} into an array\n\t* and returns the array.\n\t*\n\t* @returns {enyo.Component[]} The [components]{@link enyo.Component} found in the\n\t*\t[$ hash]{@link enyo.Component#$}.\n\t* @public\n\t*/\n\tgetComponents: function () {\n\t\treturn utils.values(this.$);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tadjustComponentProps: function (props) {\n\t\tif (this.defaultProps) utils.mixin(props, this.defaultProps, {ignore: true});\n\t\tprops.kind = props.kind || props.isa || this.defaultKind;\n\t\tprops.owner = props.owner || this;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_createComponent: function (props, ext) {\n\t\tvar def = ext ? utils.mixin({}, [ext, props]) : utils.clone(props);\n\n\t\t// always adjust the properties according to the needs of the kind and parent kinds\n\t\tthis.adjustComponentProps(def);\n\n\t\t// pass along for the final stage\n\t\treturn Component.create(def);\n\t},\n\n\t/**\n\t* Creates and returns a [component]{@link enyo.Component} as defined by the combination of\n\t* a base and an additional property [hash]{@glossary Object}. The properties provided\n\t* in the standard property hash override those provided in the\n\t* additional property hash.\n\t*\n\t* The created component passes through initialization machinery\n\t* provided by the creating component, which may supply special\n\t* handling. Unless the [owner]{@link enyo.Component#owner} is explicitly specified, the new\n\t* component will be owned by the instance on which this method is called.\n\t*\n\t* @example\n\t* // Create a new component named 'dynamic', owned by 'this'\n\t* // (will be available as this.$.dynamic).\n\t* this.createComponent({name: 'dynamic'});\n\t*\n\t* @example\n\t* // Create a new component named 'another' owned by 'other'\n\t* // (will be available as other.$.another).\n\t* this.createComponent({name: 'another'}, {owner: other});\n\t*\n\t* @param {Object} props - The declarative [kind]{@glossary kind} definition.\n\t* @param {Object} ext - Additional properties to be applied (defaults).\n\t* @returns {enyo.Component} The instance created with the given parameters.\n\t* @public\n\t*/\n\tcreateComponent: function (props, ext) {\n\t\t// createComponent and createComponents both delegate to the protected method\n\t\t// (_createComponent), allowing overrides to customize createComponent and\n\t\t// createComponents separately.\n\t\treturn this._createComponent(props, ext);\n\t},\n\n\t/**\n\t* Creates [components]{@link enyo.Component} as defined by the [arrays]{@glossary Array}\n\t* of base and additional property [hashes]{@glossary Object}. The standard and\n\t* additional property hashes are combined as described in\n\t* [createComponent()]{@link enyo.Component#createComponent}.\n\t*\n\t* @example\n\t* // ask foo to create components 'bar' and 'zot', but set the owner of\n\t* // both components to 'this'.\n\t* this.$.foo.createComponents([\n\t*\t{name: 'bar'},\n\t*\t{name: 'zot'}\n\t* ], {owner: this});\n\t*\n\t* @param {Object[]} props The array of {@link enyo.Component} definitions to be created.\n\t* @param {Object} ext - Additional properties to be supplied as defaults for each.\n\t* @returns {enyo.Component[]} The array of [components]{@link enyo.Component} that were\n\t*\tcreated.\n\t* @public\n\t*/\n\tcreateComponents: function (props, ext) {\n\t\tvar comps = [],\n\t\t\tcomp,\n\t\t\ti;\n\n\t\tif (props) {\n\t\t\tfor (i = 0; i < props.length; ++i) {\n\t\t\t\tcomp = props[i];\n\t\t\t\tcomps.push(this._createComponent(comp, ext));\n\t\t\t}\n\t\t}\n\n\t\treturn comps;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetBubbleTarget: function (nom, event) {\n\t\tif (event.delegate) return this.owner;\n\t\telse {\n\t\t\treturn (\n\t\t\t\tthis.bubbleTarget\n\t\t\t\t|| (this.cachedBubble && this.cachedBubbleTarget[nom])\n\t\t\t\t|| this.owner\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t* Bubbles an {@glossary event} up an [object]{@glossary Object} chain,\n\t* starting with `this`.\n\t*\n\t* A handler for an event may be specified. See {@link enyo.Component~EventHandler}\n\t* for complete details.\n\t*\n\t* @param {String} nom - The name of the {@glossary event} to bubble.\n\t* @param {Object} [event] - The event [object]{@glossary Object} to be passed along\n\t* while bubbling.\n\t* @param {enyo.Component} [sender=this] - The {@link enyo.Component} responsible for\n\t*\tbubbling the event.\n\t* @returns {Boolean} `false` if unhandled or uninterrupted; otherwise, `true`.\n\t* @public\n\t*/\n\tbubble: function (nom, event, sender) {\n\t\tif (!this._silenced) {\n\t\t\tevent = event || {};\n\t\t\tevent.lastHandledComponent = null;\n\t\t\tevent.bubbling = true;\n\t\t\t// deliberately done this way\n\t\t\tif (event.originator == null) event.originator = sender || this;\n\t\t\treturn this.dispatchBubble(nom, event, sender || this);\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t* Bubbles an {@glossary event} up an [object]{@glossary Object} chain,\n\t* starting **above** `this`.\n\t*\n\t* A handler for an event may be specified. See {@link enyo.Component~EventHandler}\n\t* for complete details.\n\t*\n\t* @param {String} nom - The name of the {@glossary event}.\n\t* @param {Object} [event] - The event properties to pass along while bubbling.\n\t* @returns {Boolean} `false` if unhandled or uninterrupted; otherwise, `true`.\n\t* @public\n\t*/\n\tbubbleUp: function (nom, event) {\n\t\tvar next;\n\n\t\tif (!this._silenced) {\n\t\t\tevent = event || {};\n\t\t\tevent.bubbling = true;\n\t\t\tnext = this.getBubbleTarget(nom, event);\n\t\t\tif (next) {\n\t\t\t\t// use delegate as sender if it exists to preserve illusion\n\t\t\t\t// that event is dispatched directly from that, but we still\n\t\t\t\t// have to bubble to get decorations\n\t\t\t\treturn next.dispatchBubble(nom, event, event.delegate || this);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t* Sends an {@glossary event} to a named [delegate]{@glossary delegate}.\n\t* This [object]{@glossary Object} may dispatch an event to\n\t* itself via a [handler]{@link enyo.Component~EventHandler}, or to its\n\t* [owner]{@link enyo.Component#owner} via an event property, e.g.:\n\t*\n\t*\thandlers {\n\t*\t\t// 'tap' events dispatched to this.tapHandler\n\t*\t\tontap: 'tapHandler'\n\t*\t}\n\t*\n\t*\t// 'tap' events dispatched to 'tapHandler' delegate in this.owner\n\t*\tontap: 'tapHandler'\n\t*\n\t* @private\n\t*/\n\tdispatchEvent: function (nom, event, sender) {\n\t\tvar delegate,\n\t\t\tret;\n\n\t\tif (!this._silenced) {\n\t\t\t// if the event has a delegate associated with it we grab that\n\t\t\t// for reference\n\t\t\t// NOTE: This is unfortunate but we can't use a pooled object here because\n\t\t\t// we don't know where to release it\n\t\t\tdelegate = (event || (event = {})).delegate;\n\n\t\t\t// bottleneck event decoration w/ optimization to avoid call to empty function\n\t\t\tif (this.decorateEvent !== Component.prototype.decorateEvent) {\n\t\t\t\tthis.decorateEvent(nom, event, sender);\n\t\t\t}\n\n\t\t\t// first, handle any delegated events intended for this object\n\t\t\tif (delegate && delegate.owner === this) {\n\t\t\t\t// the most likely case is that we have a method to handle this\n\t\t\t\tif (this[nom] && 'function' === typeof this[nom]) {\n\t\t\t\t\treturn this.dispatch(nom, event, sender);\n\t\t\t\t}\n\t\t\t\t// but if we don't, just stop the event from going further\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// for non-delgated events, try the handlers block if possible\n\t\t\tif (!delegate) {\n\t\t\t\tvar bHandler = this.handlers && this.handlers[nom];\n\t\t\t\tvar bDelegatedFunction = this[nom] && utils.isString(this[nom]);\n\t\t\t\tvar cachePoint = this.cachePoint || bHandler || bDelegatedFunction || this.id === \"master\" ;\n\n\t\t\t\tif (event.bubbling) {\n\t\t\t\t\tif (event.lastHandledComponent && cachePoint) {\n\t\t\t\t\t\tevent.lastHandledComponent.cachedBubbleTarget[nom] = this;\n\t\t\t\t\t\tevent.lastHandledComponent = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (!event.lastHandledComponent && this.id !== \"master\") {\n\t\t\t\t\t\tevent.lastHandledComponent = this;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (bHandler && this.dispatch(bHandler, event, sender)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (bDelegatedFunction) {\n\t\t\t\t\t// we dispatch it up as a special delegate event with the\n\t\t\t\t\t// component that had the delegation string property stored in\n\t\t\t\t\t// the 'delegate' property\n\t\t\t\t\tevent.delegate = this;\n\t\t\t\t\tret = this.bubbleUp(this[nom], event, sender);\n\t\t\t\t\tdelete event.delegate;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t* Internal - try dispatching {@glossary event} to self; if that fails,\n\t* [bubble it up]{@link enyo.Component#bubbleUp} the tree.\n\t*\n\t* @private\n\t*/\n\tdispatchBubble: function (nom, event, sender) {\n\t\tif (!this._silenced) {\n\t\t\t// Try to dispatch from here, stop bubbling on truthy return value\n\t\t\tif (this.dispatchEvent(nom, event, sender)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// Bubble to next target\n\t\t\treturn this.bubbleUp(nom, event, sender);\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdecorateEvent: function (nom, event, sender) {\n\t\t// an event may float by us as part of a dispatchEvent chain\n\t\t// both call this method so intermediaries can decorate inEvent\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstopAllJobs: function () {\n\t\tvar job;\n\n\t\tif (this.__jobs) for (job in this.__jobs) this.stopJob(job);\n\t},\n\n\t/**\n\t* Dispatches the {@glossary event} to named [delegate]{@glossary delegate} `nom`,\n\t* if it exists. [Subkinds]{@glossary subkind} may re-route dispatches. Note that\n\t* both 'handlers' events and events delegated from owned controls arrive here.\n\t* If you need to handle these types of events differently, you may also need to\n\t* override [dispatchEvent()]{@link enyo.Component#dispatchEvent}.\n\t*\n\t* @param {String} nom - The method name to dispatch the {@glossary event}.\n\t* @param {Object} [event] - The event [object]{@glossary Object} to pass along.\n\t* @param {enyo.Component} [sender=this] - The originator of the event.\n\t* @public\n\t*/\n\tdispatch: function (nom, event, sender) {\n\t\tvar fn;\n\n\t\tif (!this._silenced) {\n\t\t\tfn = nom && this[nom];\n\t\t\tif (fn && typeof fn == 'function') {\n\t\t\t\t// @todo: deprecate sender\n\t\t\t\treturn fn.call(this, sender || this, event);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t* Triggers the [handler]{@link enyo.Component~EventHandler} for a given\n\t* {@glossary event} type.\n\t*\n\t* @example\n\t* myControl.triggerHandler('ontap');\n\t*\n\t* @param {String} nom - The name of the {@glossary event} to trigger.\n\t* @param {Object} [event] - The event object to pass along.\n\t* @param {enyo.Component} [sender=this] - The originator of the event.\n\t* @returns {Boolean} `false` if unhandled or uninterrupted, `true` otherwise.\n\t* @public\n\t*/\n\ttriggerHandler: function () {\n\t\treturn this.dispatchEvent.apply(this, arguments);\n\t},\n\n\t/**\n\t* Sends a message to myself and all of my [components]{@link enyo.Component}.\n\t* You can stop a waterfall into components owned by a receiving object\n\t* by returning a truthy value from the {@glossary event}\n\t* [handler]{@link enyo.Component~EventHandler}.\n\t*\n\t* @param {String} nom - The name of the {@glossary event} to waterfall.\n\t* @param {Object} [event] - The event [object]{@glossary Object} to pass along.\n\t* @param {enyo.Component} [sender=this] - The originator of the event.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\twaterfall: function(nom, event, sender) {\n\t\tif (!this._silenced) {\n\t\t\tevent = event || {};\n\t\t\tevent.bubbling = false;\n\n\t\t\t// give the locals an opportunity to interrupt the event\n\t\t\tif (this.dispatchEvent(nom, event, sender)) return true;\n\n\t\t\t// otherwise carry on\n\t\t\tthis.waterfallDown(nom, event, sender || this);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Sends a message to all of my [components]{@link enyo.Component}, but not myself. You can\n\t* stop a [waterfall]{@link enyo.Component#waterfall} into [components]{@link enyo.Component}\n\t* owned by a receiving [object]{@glossary Object} by returning a truthy value from the\n\t* {@glossary event} [handler]{@link enyo.Component~EventHandler}.\n\t*\n\t* @param {String} nom - The name of the {@glossary event}.\n\t* @param {Object} [event] - The event [object]{@glossary Object} to pass along.\n\t* @param {enyo.Component} [sender=this] - The event originator.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\twaterfallDown: function(nom, event, sender) {\n\t\tvar comp;\n\t\tevent = event || {};\n\t\tevent.bubbling = false;\n\n\t\tif (!this._silenced) {\n\t\t\tfor (comp in this.$) this.$[comp].waterfall(nom, event, sender || this);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_silenced: false,\n\n\t/**\n\t* @private\n\t*/\n\t_silenceCount: 0,\n\n\t/**\n\t* Sets a flag that disables {@glossary event} propagation for this\n\t* [component]{@link enyo.Component}. Also increments an internal counter that tracks\n\t* the number of times the [unsilence()]{@link enyo.Component#unsilence} method must\n\t* be called before event propagation will continue.\n\t*\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tsilence: function () {\n\t\tthis._silenced = true;\n\t\tthis._silenceCount += 1;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Determines if the [object]{@glossary Object} is currently\n\t* [silenced]{@link enyo.Component#_silenced}, which will prevent propagation of\n\t* [events]{@glossary event} (of any kind).\n\t*\n\t* @returns {Boolean} `true` if silenced; otherwise, `false`.\n\t* @public\n\t*/\n\tisSilenced: function () {\n\t\treturn this._silenced;\n\t},\n\n\t/**\n\t* Allows {@glossary event} propagation for this [component]{@link enyo.Component}\n\t* if the internal silence counter is `0`; otherwise, decrements the counter by one.\n\t* For event propagation to resume, this method must be called one time each call to\n\t* [silence()]{@link enyo.Component#silence}.\n\t*\n\t* @returns {Boolean} `true` if the {@link enyo.Component} is now unsilenced completely;\n\t*\t`false` if it remains silenced.\n\t* @public\n\t*/\n\tunsilence: function () {\n\t\tif (0 !== this._silenceCount) --this._silenceCount;\n\t\tif (0 === this._silenceCount) this._silenced = false;\n\t\treturn !this._silenced;\n\t},\n\n\t/**\n\t* Creates a new [job]{@link enyo.job} tied to this instance of the\n\t* [component]{@link enyo.Component}. If the component is\n\t* [destroyed]{@link enyo.Component#destroy}, any jobs associated with it\n\t* will be stopped.\n\t*\n\t* If you start a job with the same name as a pending job,\n\t* the original job will be stopped; this can be useful for resetting\n\t* timeouts.\n\t*\n\t* You may supply a priority level (1-10) at which the job should be\n\t* executed. The default level is `5`. Setting the priority lower than `5` (or setting it to\n\t* the string `\"low\"`) will defer the job if an animation is in progress,\n\t* which can help to avoid stuttering.\n\t*\n\t* @param {String} nom - The name of the [job]{@link enyo.job} to start.\n\t* @param {(Function|String)} job - Either the name of a method or a\n\t*\t[function]{@glossary Function} to execute as the requested job.\n\t* @param {Number} wait - The number of milliseconds to wait before starting\n\t*\tthe job.\n\t* @param {Number} [priority=5] The priority value to be associated with this\n\t*\tjob.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tstartJob: function (nom, job, wait, priority) {\n\t\tvar jobs = (this.__jobs = this.__jobs || {});\n\t\tpriority = priority || 5;\n\t\t// allow strings as job names, they map to local method names\n\t\tif (typeof job == 'string') job = this[job];\n\t\t// stop any existing jobs with same name\n\t\tthis.stopJob(nom);\n\t\tjobs[nom] = setTimeout(this.bindSafely(function() {\n\t\t\tJobs.add(this.bindSafely(job), priority, nom);\n\t\t}), wait);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Stops a [component]{@link enyo.Component}-specific [job]{@link enyo.job} before it has\n\t* been activated.\n\t*\n\t* @param {String} nom - The name of the [job]{@link enyo.job} to be stopped.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tstopJob: function (nom) {\n\t\tvar jobs = (this.__jobs = this.__jobs || {});\n\t\tif (jobs[nom]) {\n\t\t\tclearTimeout(jobs[nom]);\n\t\t\tdelete jobs[nom];\n\t\t}\n\t\tJobs.remove(nom);\n\t},\n\n\t/**\n\t* Executes the specified [job]{@link enyo.job} immediately, then prevents\n\t* any other calls to `throttleJob()` with the same job name from running for\n\t* the specified amount of time.\n\t*\n\t* @param {String} nom - The name of the [job]{@link enyo.job} to throttle.\n\t* @param {(Function|String)} job - Either the name of a method or a\n\t*\t[function]{@glossary Function} to execute as the requested job.\n\t* @param {Number} wait - The number of milliseconds to wait before executing the\n\t*\tjob again.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tthrottleJob: function (nom, job, wait) {\n\t\tvar jobs = (this.__jobs = this.__jobs || {});\n\t\t// if we still have a job with this name pending, return immediately\n\t\tif (!jobs[nom]) {\n\t\t\t// allow strings as job names, they map to local method names\n\t\t\tif (typeof job == 'string') job = this[job];\n\t\t\tjob.call(this);\n\t\t\tjobs[nom] = setTimeout(this.bindSafely(function() {\n\t\t\t\tthis.stopJob(nom);\n\t\t\t}), wait);\n\t\t}\n\t\treturn this;\n\t}\n});\n\n/**\n* @private\n*/\nkind.setDefaultCtor(Component);\n\n/**\n* Creates new instances from [config]{@glossary configurationBlock}\n* [objects]{@glossary Object}. This method looks up the proper\n* [constructor]{@glossary constructor} based on the provided [kind]{@glossary kind}\n* attribute.\n*\n* @name enyo.create\n* @param {Object} props - The properties that define the [kind]{@glossary kind}.\n* @returns {*} An instance of the requested [kind]{@glossary kind}.\n* @public\n*/\nComponent.create = function (props) {\n\tvar theKind,\n\t\tCtor;\n\n\tif (!props.kind && props.hasOwnProperty('kind')) throw new Error(\n\t\t'enyo.create: Attempt to create a null kind. Check dependencies for [' + props.name + ']'\n\t);\n\n\ttheKind = props.kind || props.isa || kind.getDefaultCtor();\n\tCtor = kind.constructorForKind(theKind);\n\n\tif (!Ctor) {\n\t\tlogger.error('No constructor found for kind ' + theKind);\n\t\tCtor = Component;\n\t}\n\n\treturn new Ctor(props);\n};\n\n/**\n* @name enyo.Component.subclass\n* @static\n* @private\n*/\nComponent.subclass = function (ctor, props) {\n\t// Note: To reduce API surface area, sub-components are declared only as\n\t// 'components' in both kind and instance declarations.\n\t//\n\t// However, 'components' from kind declarations must be handled separately\n\t// at creation time.\n\t//\n\t// We rename the property here to avoid having\n\t// to interrogate the prototype at creation time.\n\t//\n\tvar proto = ctor.prototype;\n\t//\n\tif (props.components) {\n\t\tproto.kindComponents = props.components;\n\t\tdelete proto.components;\n\t} else {\n\t\t// Feature to mixin overrides of super-kind component properties from named hash\n\t\t// (only applied when the sub-kind doesn't supply its own components block)\n\t\tif (props.componentOverrides) {\n\t\t\tproto.kindComponents = Component.overrideComponents(\n\t\t\t\tproto.kindComponents,\n\t\t\t\tprops.componentOverrides,\n\t\t\t\tproto.defaultKind\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n* @name enyo.Component.concat\n* @static\n* @private\n*/\nComponent.concat = function (ctor, props) {\n\tvar proto = ctor.prototype || ctor,\n\t\thandlers;\n\tif (props.handlers) {\n\t\thandlers = proto.handlers ? utils.clone(proto.handlers) : {};\n\t\tproto.handlers = utils.mixin(handlers, props.handlers);\n\t\tdelete props.handlers;\n\t}\n\tif (props.events) Component.publishEvents(proto, props);\n};\n\n/**\n* @name enyo.Component.overrideComponents\n* @static\n* @private\n*/\nComponent.overrideComponents = function (components, overrides, defaultKind) {\n\tvar fn = function (k, v) { return !(utils.isFunction(v) || kind.isInherited(v)); };\n\tcomponents = utils.clone(components);\n\tfor (var i=0; i<components.length; i++) {\n\t\tvar c = utils.clone(components[i]);\n\t\tvar o = overrides[c.name];\n\t\tvar ctor = kind.constructorForKind(c.kind || defaultKind);\n\t\tif (o) {\n\n\t\t\t// NOTE: You cannot overload mixins, observers or computed properties from\n\t\t\t// component overrides\n\t\t\tkind.concatHandler(c, o);\n\t\t\tvar b = (c.kind && ((typeof c.kind == 'string' && utils.getPath(c.kind)) || (typeof c.kind == 'function' && c.kind))) || kind.getDefaultCtor();\n\t\t\twhile (b) {\n\t\t\t\tif (b.concat) { b.concat(c, o, true); }\n\t\t\t\tb = b.prototype.base;\n\t\t\t}\n\t\t\t// All others just mix in\n\t\t\tutils.mixin(c, o, {filter: fn});\n\t\t}\n\t\tif (c.components) {\n\t\t\tc.components = Component.overrideComponents(c.components, overrides, ctor.prototype.defaultKind);\n\t\t}\n\t\tcomponents[i] = c;\n\t}\n\treturn components;\n};\n\n/**\n* @name enyo.Component.publishEvents\n* @static\n* @private\n*/\nComponent.publishEvents = function (ctor, props) {\n\tvar events = props.events,\n\t\tevent,\n\t\tproto;\n\tif (events) {\n\t\tproto = ctor.prototype || ctor;\n\t\tfor (event in events) Component.addEvent(event, events[event], proto);\n\t}\n};\n\n/**\n* @name enyo.Component.addEvent\n* @static\n* @private\n*/\nComponent.addEvent = function (nom, val, proto) {\n\tvar v, fn;\n\tif (!utils.isString(val)) {\n\t\tv = val.value;\n\t\tfn = val.caller;\n\t} else {\n\t\tif (nom.slice(0, 2) != 'on') {\n\t\t\tlogger.warn('enyo.Component.addEvent: event names must start with \"on\". ' + proto.kindName + ' ' +\n\t\t\t\t'event \"' + nom + '\" was auto-corrected to \"on' + nom + '\".');\n\t\t\tnom = 'on' + nom;\n\t\t}\n\t\tv = val;\n\t\tfn = 'do' + utils.cap(nom.slice(2));\n\t}\n\tproto[nom] = v;\n\tif (!proto[fn]) {\n\t\tproto[fn] = function(payload, other) {\n\t\t\t// bubble this event\n\n\t\t\t// if the second parameter exists then we use that - this is for a single case\n\t\t\t// where a named event delegates happent to point to an auto generated event\n\t\t\t// bubbler like this one - in that case the first parameter is actually the\n\t\t\t// sender\n\t\t\tvar e = other || payload;\n\t\t\tif (!e) {\n\t\t\t\te = {};\n\t\t\t}\n\t\t\tvar d = e.delegate;\n\t\t\t// delete payload.delegate;\n\t\t\te.delegate = undefined;\n\t\t\tif (!utils.exists(e.type)) {\n\t\t\t\te.type = nom;\n\t\t\t}\n\t\t\tthis.bubble(nom, e);\n\t\t\tif (d) {\n\t\t\t\te.delegate = d;\n\t\t\t}\n\t\t};\n\t}\n};\n\n/**\n* @private\n*/\nfunction prefixFromKindName (nom) {\n\tvar pre = kindPrefix[nom],\n\t\tlast;\n\n\tif (!pre) {\n\t\tlast = nom.lastIndexOf('.');\n\t\tpre = (last >= 0) ? nom.slice(last+1) : nom;\n\t\tpre = pre.charAt(0).toLowerCase() + pre.slice(1);\n\t\tkindPrefix[nom] = pre;\n\t}\n\n\treturn pre;\n}","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tanimation = require('./animation');\n\nvar\n\tComponent = require('./Component'),\n\tJobs = require('./jobs');\n\n/**\n* Fires when an animation step occurs.\n*\n* @event enyo.Animator#onStep\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* Fires when the animation finishes normally.\n*\n* @event enyo.Animator#onEnd\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* Fires when the animation is prematurely stopped.\n*\n* @event enyo.Animator#onStop\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* {@link enyo.Animator} is a basic animation [component]{@link enyo.Component}.  Call\n* [play()]{@link enyo.Animator#play} to start the animation. The animation will run for\n* the period (in milliseconds) specified by its [duration]{@link enyo.Animator#duration}\n* property. [onStep]{@link enyo.Animator#onStep} [events]{@glossary event} will\n* fire in quick succession and should be handled to do something based on the\n* [value]{@link enyo.Animator#value} property.\n*\n* The `value` property will progress from [startValue]{@link enyo.Animator#startValue}\n* to [endValue]{@link enyo.Animator#endValue} during the animation, based on the\n* [function]{@glossary Function} referenced by the\n* [easingFunction]{@link enyo.Animator#easingFunction} property.\n* \n* Event handlers may be specified as functions. If specified, the handler function will\n* be used to handle the event directly, without sending the event to its\n* [owner]{@link enyo.Component#owner} or [bubbling]{@link enyo.Component#bubble} it.\n* The [context]{@link enyo.Animator#context} property may be used to call the supplied\n* event functions in a particular `this` context.\n* \n* During animation, an {@link enyo.jobs} priority of 5 is registered to defer low priority \n* tasks.\n*\n* @class enyo.Animator\n* @extends enyo.Component\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Animator.prototype */ {\n\n\t/**\n\t* A context in which to run the specified {@glossary event} handlers. If this is\n\t* not specified or is falsy, then the [global object]{@glossary global} is used.\n\t* \n\t* @name context\n\t* @type {Object}\n\t* @default undefined\n\t* @memberOf enyo.Animator.prototype\n\t* @public\n\t*/\n\t\t\n\tname: 'enyo.Animator',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Component,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Animator.prototype */ {\n\t\t\n\t\t/** \n\t\t* Animation duration in milliseconds\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 350\n\t\t* @public\n\t\t*/\n\t\tduration: 350,\n\n\t\t/** \n\t\t* Value of [value]{@link enyo.Animator#value} property at the beginning of an animation.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 0\n\t\t* @public\n\t\t*/\n\t\tstartValue: 0,\n\n\t\t/** \n\t\t* Value of [value]{@link enyo.Animator#value} property at the end of an animation.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 1\n\t\t* @public\n\t\t*/\n\t\tendValue: 1,\n\n\t\t/** \n\t\t* Node that must be visible in order for the animation to continue. This reference is \n\t\t* destroyed when the animation ceases.\n\t\t*\n\t\t* @type {Object}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tnode: null,\n\n\t\t/** \n\t\t* [Function]{@glossary Function} that determines how the animation progresses from \n\t\t* [startValue]{@link enyo.Animator#startValue} to [endValue]{@link enyo.Animator#endValue}.\n\t\t* \n\t\t* @type {Function}\n\t\t* @default enyo.easing.cubicOut\n\t\t* @public\n\t\t*/\n\t\teasingFunction: animation.easing.cubicOut\n\t},\n\t\n\t/*\n\t* @private\n\t*/\n\tevents: {\n\t\tonStep: '',\n\t\tonEnd: '',\n\t\tonStop: ''\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructed: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis._next = this.bindSafely('next');\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.stop();\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/** \n\t* Plays the animation.\n\t*\n\t* @param {Object} props - As a convenience, this [hash]{@glossary Object} will be mixed\n\t*\tdirectly into this [object]{@glossary Object}.\n\t* @public\n\t*/\n\tplay: function (props) {\n\t\tthis.stop();\n\t\tthis.reversed = false;\n\t\tif (props) {\n\t\t\tutils.mixin(this, props);\n\t\t}\n\t\tthis.t0 = this.t1 = utils.perfNow();\n\t\tthis.value = this.startValue;\n\n\t\t// register this jobPriority to block less urgent tasks from executing\n\t\tJobs.registerPriority(5, this.id);\n\n\t\tthis.job = true;\n\t\tthis.next();\n\t\treturn this;\n\t},\n\n\t/** \n\t* Stops the animation and fires the associated {@glossary event}.\n\t*\n\t* @fires enyo.Animator#onStop\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tstop: function () {\n\t\tif (this.isAnimating()) {\n\t\t\tthis.cancel();\n\t\t\tthis.fire('onStop');\n\t\t\treturn this;\n\t\t}\n\t},\n\n\t/**\n\t* Stops the animation after a final step\n\t*\n\t* @returns {this} The callee for chaining\n\t* @public\n\t*/\n\tcomplete: function () {\n\t\tif (this.isAnimating()) {\n\t\t\t// set the start time such that the delta will always be greater than the duration\n\t\t\t// causing the animation to complete immediately\n\t\t\tthis.t0 = -this.duration - 1;\n\t\t\tthis.next();\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/** \n\t* Reverses the direction of a running animation.\n\t* \n\t* @return {this} The callee for chaining.\n\t* @public\n\t*/\n\treverse: function () {\n\t\tif (this.isAnimating()) {\n\t\t\tthis.reversed = !this.reversed;\n\t\t\tvar now = this.t1 = utils.perfNow();\n\t\t\t// adjust start time (t0) to allow for animation done so far to replay\n\t\t\tvar elapsed = now - this.t0;\n\t\t\tthis.t0 = now + elapsed - this.duration;\n\t\t\t// swap start and end values\n\t\t\tvar startValue = this.startValue;\n\t\t\tthis.startValue = this.endValue;\n\t\t\tthis.endValue = startValue;\n\t\t\treturn this;\n\t\t}\n\t},\n\n\t/**\n\t* Determines whether an animation is in progress.\n\t*\n\t* @returns {Boolean} `true` if there is an animation currently running; otherwise, `false`.\n\t* @private\n\t*/\n\tisAnimating: function () {\n\t\treturn Boolean(this.job);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestNext: function () {\n\t\tthis.job = animation.requestAnimationFrame(this._next, this.node);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcancel: function () {\n\t\tanimation.cancelRequestAnimationFrame(this.job);\n\t\tthis.node = null;\n\t\tthis.job = null;\n\n\t\t// unblock job queue\n\t\tJobs.unregisterPriority(this.id);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshouldEnd: function () {\n\t\treturn (this.dt >= this.duration);\n\t},\n\n\t/**\n\t* Runs the next step of the animation.\n\t*\n\t* @fires enyo.Animator#onStep\n\t* @fires enyo.Animator#onEnd\n\t* @private\n\t*/\n\tnext: function () {\n\t\tthis.t1 = utils.perfNow();\n\t\tthis.dt = this.t1 - this.t0;\n\t\tvar args = this.easingFunction.length;\n\t\tvar f;\n\n\t\tif (args === 1) {\n\t\t\t// time independent\n\t\t\tf = this.fraction = animation.easedLerp(this.t0, this.duration, this.easingFunction, this.reversed);\n\t\t\tthis.value = this.startValue + f * (this.endValue - this.startValue);\n\t\t} else {\n\t\t\tthis.value = animation.easedComplexLerp(this.t0, this.duration, this.easingFunction, this.reversed,\n\t\t\t\tthis.dt, this.startValue, (this.endValue - this.startValue));\n\t\t}\n\t\tif (((f >= 1) && (args === 1)) || this.shouldEnd()) {\n\t\t\tthis.value = this.endValue;\n\t\t\tthis.fraction = 1;\n\t\t\tthis.fire('onStep');\n\t\t\tthis.cancel();\n\t\t\tutils.asyncMethod(this.bindSafely(function() {\n\t\t\t\tthis.fire('onEnd');\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.fire('onStep');\n\t\t\tthis.requestNext();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tfire: function (nom) {\n\t\tvar fn = this[nom];\n\t\tif (utils.isString(fn)) {\n\t\t\tthis.bubble(nom);\n\t\t} else if (fn) {\n\t\t\tfn.call(this.context || global, this);\n\t\t}\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar\n\tComponent = require('./Component'),\n\tEventEmitter = require('./EventEmitter'),\n\tModel = require('./Model'),\n\tModelList = require('./ModelList'),\n\tStateSupport = require('./StateSupport'),\n\tSource = require('./Source'),\n\tStore = require('./Store'),\n\tStates = require('./States');\n\n/**\n* This is only necessary because of the order in which mixins are applied.\n*\n* @class\n* @private\n*/\nvar BaseCollection = kind({\n\tkind: Component,\n\tmixins: [EventEmitter, StateSupport]\n});\n\n/**\n* Fires when [models]{@link enyo.Model} have been [added]{@link enyo.Collection#add}\n* to the [collection]{@link enyo.Collection}.\n*\n* @event enyo.Collection#add\n* @type {Object}\n* @property {enyo.Model[]} models - An [array]{@glossary Array} of\n*\t[models]{@link enyo.Model} that were [added]{@link enyo.Collection#add} to the\n*\t[collection]{@link enyo.Collection}.\n* @property {enyo.Collection} collection - A reference to the\n*\tcollection that [emitted]{@link enyo.EventEmitter.emit} the event.\n* @property {Number} index - The index in the given collection where the models were inserted.\n* @public\n*/\n\n/**\n* Fires when [models]{@link enyo.Model} have been [removed]{@link enyo.Collection#remove}\n* from the [collection]{@link enyo.Collection}.\n*\n* @event enyo.Collection#remove\n* @type {Object}\n* @property {enyo.Model[]} models - An [array]{@glossary Array} of\n*\t[models]{@link enyo.Model} that were [removed]{@link enyo.Collection#remove} from the\n*\t[collection]{@link enyo.Collection}.\n* @property {enyo.Collection} collection - A reference to the\n*\tcollection that [emitted]{@link enyo.EventEmitter.emit} the event.\n* @public\n*/\n\n/**\n* Fires when the [collection]{@link enyo.Collection} has been\n* [sorted]{@link enyo.Collection#sort}.\n*\n* @event enyo.Collection#sort\n* @type {Object}\n* @property {enyo.Model[]} models - An [array]{@glossary Array} of all\n*\t[models]{@link enyo.Model} in the correct, [sorted]{@link enyo.Collection#sort} order.\n* @property {enyo.Collection} collection - A reference to the\n*\t[collection]{@link enyo.Collection} that [emitted]{@link enyo.EventEmitter.emit} the event.\n* @property {Function} comparator - A reference to the\n*\t[comparator]{@link enyo.Collection#comparator} that was used when\n*\tsorting the collection.\n* @public\n*/\n\n/**\n* Fires when the [collection]{@link enyo.Collection} has been reset and its\n* contents have been updated arbitrarily.\n*\n* @event enyo.Collection#reset\n* @type {Object}\n* @property {enyo.Model[]} models - An [array]{@glossary Array} of all\n*\t[models]{@link enyo.Model} as they are currently.\n* @property {enyo.Collection} collection - A reference to the\n*\t[collection]{@link enyo.Collection} that [emitted]{@link enyo.EventEmitter.emit} the event.\n* @public\n*/\n\n/**\n* The default configurable [options]{@link enyo.Collection#options} used by certain API\n* methods of {@link enyo.Collection}.\n*\n* @typedef {Object} enyo.Collection~Options\n* @property {Boolean} merge=true - If `true`, when data is being added to the\n*\t[collection]{@link enyo.Collection} that already exists (i.e., is matched by\n*\t[primaryKey]{@link enyo.Model#primaryKey}), the new data values will be set\n* with the current [model]{@link enyo.Model} instance. This means that the\n* existing values will be updated with the new ones by calling\n* [set()]{@link enyo.Model#set} on the model.\n* @property {Boolean} silent=false - Many accessor methods of the collection\n*\twill emit events and/or notifications. This value indicates whether or not\n*\tthose events or notifications will be suppressed at times when that behavior\n*\tis necessary. Typically, you will not want to modify this value.\n* @property {Boolean} purge=false - When [adding]{@link enyo.Collection#add}\n*\tmodels, this flag indicates whether or not to [remove]{@link enyo.Collection#remove}\n* (purge) the existing models that are not included in the new dataset.\n* @property {Boolean} parse=false - The collection's [parse()]{@link enyo.Collection#parse}\n*\tmethod can be executed automatically when incoming data is added via the\n*\t[constructor()]{@link enyo.Collection#constructor} method, or, later, via a\n*\t[fetch]{@link enyo.Collection#fetch}. You may need to examine the runtime\n* configuration options of the method(s) to determine whether parsing is needed.\n* In cases where parsing will always be necessary, this may be set to `true`.\n* @property {Boolean} create=true - This value determines whether a new\n*\tmodel will be created when data being added to the collection cannot be found\n* (or the [find]{@link enyo.Collection#options#find} flag is `false`). Models\n* that are created by a collection have their [owner]{@link enyo.Model#owner}\n* property set to the collection that instanced them.\n* @property {Boolean} find=true - When data being added to the collection is not\n* already a model instance, the collection will attempt to find an existing model\n* by its `primaryKey`, if it exists. In most cases, this is the preferred behavior,\n* but if the model [kind]{@glossary kind} being  instanced does not have a\n* `primaryKey`, it is unnecessary and this value may be set to `false`.\n* @property {Boolean} sort=false - When adding models to the collection, the\n* collection can also be sorted. If the [comparator]{@link enyo.Collection#comparator}\n* is a [function]{@glossary Function} and this value is `true`, the comparator\n*\twill be used to sort the entire collection. It may also be a function that\n* will be used to sort the collection, instead of (or in the place of) a defined\n*\tcomparator.\n* @property {Boolean} commit=false - When modifications are made to the\n*\tcollection, this flag ensures that those changes are\n*\t[committed]{@link enyo.Collection#commit} according to the configuration and\n*\tavailability of a [source]{@link enyo.Collection#source}. This may also be\n* configured per-call to methods that use it.\n* @property {Boolean} destroy=false - When models are removed from the collection,\n*\tthis flag indicates whether or not they will be [destroyed]{@link enyo.Model#destroy}\n* as well. Note that this could have a significant impact if the same models are\n* used in other collections.\n* @property {Boolean} complete=false - When models are removed from the\n* collection, this flag indicates whether or not they will also be removed from\n* the [store]{@link enyo.Collection#store}. This is rarely necessary and can\n* cause problems if the models are used in other collections. In addition, this\n* value will be ignored if the [destroy]{@link enyo.Collection#options#destroy}\n* flag is `true`.\n* @property {Boolean} fetch=false - If `true`, when the collection is initialized,\n* it will automatically attempt to fetch data if the\n* [source]{@link enyo.Collection#source} and [url]{@link enyo.Collection#url}\n*\tor [getUrl]{@link enyo.Collection#getUrl} properties are properly configured.\n* @property {Boolean} modelEvents=true - If `false`, this will keep the collection from\n*\tregistering with each model for individual model events.\n*/\n\n/**\n* The configuration options for [add()]{@link enyo.Collection#add}. For complete\n* descriptions of the options and their default values, see\n* {@link enyo.Collection#options}. Note that some properties have different\n* meanings in different contexts. Please review the descriptions below to see\n* how each property is used in this context.\n* \n* @typedef {enyo.Collection~Options} enyo.Collection~AddOptions\n* @property {Boolean} merge - Update existing [models]{@link enyo.Model} when found.\n* @property {Boolean} purge - Remove existing models not in the new dataset.\n* @property {Boolean} silent - Emit [events]{@glossary event} and notifications.\n* @property {Boolean} parse - Parse the incoming dataset before evaluating.\n* @property {Boolean} find - Look for an existing model.\n* @property {(Boolean|Function)} sort - Sort the finalized dataset.\n* @property {Boolean} commit - [Commit]{@link enyo.Collection#commit} changes to the\n*\t{@link enyo.Collection} after completing the [add]{@link enyo.Collection#add}\n* operation.\n* @property {Boolean} create - When an existing {@link enyo.Model} instance cannot be\n*\tresolved, a new instance should be created.\n* @property {number} index - The index at which to add the new dataset. Defaults to the\n*\tend of the current dataset if not explicitly set or invalid.\n* @property {Boolean} destroy - If `purge` is `true`, this will\n* [destroy]{@link enyo.Model#destroy} any models that are\n* [removed]{@link enyo.Collection#remove}.\n* @property {Object} modelOptions - When instancing a model, this\n*\t[object]{@glossary Object} will be passed to the constructor as its `options`\n*\tparameter.\n*/\n\n/**\n* The configuration options for [remove()]{@link enyo.Collection#remove}. For\n* complete descriptions of the options and their defaults, see\n* {@link enyo.Collection~Options}. Note that some properties have different\n* meanings in different contexts. Please review the descriptions below to see\n* how each property is used in this context.\n* \n* @typedef {enyo.Collection~Options} enyo.Collection~RemoveOptions\n* @property {Boolean} silent - Emit [events]{@glossary event} and notifications.\n* @property {Boolean} commit - [Commit]{@link enyo.Collection#commit} changes to the\n*\t[collection]{@link enyo.Collection} after completing the\n*\t[remove]{@link enyo.Collection#remove} operation.\n* @property {Boolean} complete - Remove the [model]{@link enyo.Model} from the\n*\t[store]{@link enyo.Collection#store} as well as the collection.\n* @property {Boolean} destroy - [Destroy]{@link enyo.Model#destroy} models\n*\tthat are removed from the collection.\n*/\n\n/**\n* The configurable options for [fetch()]{@link enyo.Collection#fetch},\n* [commit()]{@link enyo.Collection#commit}, and [destroy()]{@link enyo.Collection#destroy}.\n*\n* @typedef {enyo.Collection~Options} enyo.Collection~ActionOptions\n* @property {enyo.Collection~Success} success - The callback executed upon successful\n*\tcompletion.\n* @property {enyo.Collection~Error} error - The callback executed upon a failed attempt.\n*/\n\n/**\n* @callback enyo.Collection~Success\n* @param {enyo.Collection} collection - The [collection]{@link enyo.Collection}\n* that is returning successfully.\n* @param {enyo.Collection~ActionOptions} - opts The original options passed to the action method\n*\tthat is returning successfully.\n* @param {*} - res The result, if any, returned by the [source]{@link enyo.Source} that\n*\texecuted it.\n* @param {String} source - The name of the [source]{@link enyo.Collection#source} that has\n*\treturned successfully.\n*/\n\n/**\n* @callback enyo.Collection~Error\n* @param {enyo.Collection} collection - The [collection]{@link enyo.Collection}\n* that is returning an error.\n* @param {String} action - The name of the action that failed, one of `'FETCHING'`,\n*\t`'COMMITTING'`, or `'DESTROYING'`.\n* @param {enyo.Collection~ActionOptions} opts - The original options passed to the\n*\taction method that is returning an error.\n* @param {*} res - The result, if any, returned by the [source]{@link enyo.Source}\n*\tthat executed it.\n* @param {String} source - The name of the [source]{@link enyo.Collection#source}\n*\tthat has returned an error.\n*/\n\n/**\n* A method used to compare two elements in an {@link enyo.Collection}. Should be\n* implemented like callbacks used with [Array.sort()]{@glossary Array.sort}.\n*\n* @see {@glossary Array.sort}\n* @see enyo.Collection.sort\n* @see enyo.Collection.comparator\n* @callback enyo.Collection~Comparator\n* @param {enyo.Model} a - The first [model]{@link enyo.Model} to compare.\n* @param {enyo.Model} b - The second model to compare.\n* @returns {Number} `-1` if `a` should have the lower index, `0` if they are the same,\n* or `1` if `b` should have the lower index.\n*/\n\n/**\n* An array-like structure designed to store instances of {@link enyo.Model}.\n* \n* @class enyo.Collection\n* @extends enyo.Component\n* @mixes enyo.StateSupport\n* @mixes enyo.EventEmitter\n* @public\n*/\nvar Collection = module.exports = kind(\n\t/** @lends enyo.Collection.prototype */ {\n\t\n\tname: 'enyo.Collection',\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: BaseCollection,\n\t\n\t/**\n\t* @private\n\t*/\n\n\t\n\t/**\n\t* Used by various [sources]{@link enyo.Collection#source} as part of the\n\t* [URI]{@glossary URI} from which they may be [fetched]{@link enyo.Collection#fetch},\n\t* [committed]{@link enyo.Collection#commit}, or [destroyed]{@link enyo.Collection#destroy}.\n\t* Some sources may use this property in other ways.\n\t*\n\t* @see enyo.Collection.getUrl\n\t* @see enyo.Source\n\t* @see enyo.AjaxSource\n\t* @see enyo.JsonpSource\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\turl: '',\n\t\n\t/**\n\t* Implement this method to be used by [sources]{@link enyo.Model#source} to\n\t* dynamically derive the [URI]{@glossary URI} from which they may be\n\t* [fetched]{@link enyo.Collection#fetch}, [committed]{@link enyo.Collection#commit},\n\t* or [destroyed]{@link enyo.Collection#destroy}. Some\n\t* [sources]{@link enyo.Collection#source} may use this property in other ways.\n\t* Note that if this method is implemented, the [url]{@link enyo.Collection#url}\n\t* property will not be used.\n\t*\n\t* @see enyo.Collection.url\n\t* @see enyo.Source\n\t* @see enyo.AjaxSource\n\t* @see enyo.JsonpSource\n\t* @type {Function}\n\t* @default null\n\t* @virtual\n\t* @public\n\t*/\n\tgetUrl: null,\n\t\n\t/**\n\t* The [kind]{@glossary kind) of {@link enyo.Model} that this\n\t* [collection]{@link enyo.Collection} will contain. This is important to set properly so\n\t* that when [fetching]{@link enyo.Collection#fetch}, the returned data will be instanced\n\t* as the correct model [subkind]{@glossary subkind}.\n\t* \n\t* @type {(enyo.Model|String)}\n\t* @default enyo.Model\n\t* @public\n\t*/\n\tmodel: Model,\n\t\n\t/**\n\t* A special type of [array]{@glossary Array} used internally by\n\t* {@link enyo.Collection}. The array should not be modified directly, nor\n\t* should the property be set directly. It is used as a container by the\n\t* collection. If [set]{@link enyo.Collection#set} directly, it will\n\t* [emit]{@link enyo.EventEmitter.emit} a [reset]{@link enyo.Collection#reset}\n\t* event.\n\t*\n\t* @see enyo.Collection.modelsChanged\n\t* @type enyo.ModelList\n\t* @default null\n\t* @readonly\n\t* @protected\n\t*/\n\tmodels: null,\n\t\n\t/**\n\t* The current [state]{@link enyo~States} of the [collection]{@link enyo.Collection}.\n\t* This value changes automatically and may be observed for more complex state\n\t* monitoring. The default value is [READY]{@link enyo~States.READY}.\n\t* @type enyo.States\n\t* @default enyo~States.READY\n\t* @readonly\n\t* @public\n\t* @see enyo.States\n\t* @see enyo.StateSupport\n\t*/\n\tstatus: States.READY,\n\t\n\t/**\n\t* The configurable default [options]{@link enyo.Collection~Options}. These values will be\n\t* used to modify the behavior of the [collection]{@link enyo.Collection} unless additional\n\t* options are passed into the methods that use them. When modifying these values in a\n\t* [subkind]{@glossary subkind} of {@link enyo.Collection}, they will be merged with\n\t* existing values.\n\t* \n\t* @type {enyo.Collection~Options}\n\t* @public\n\t*/\n\toptions: {\n\t\tmerge: true,\n\t\tsilent: false,\n\t\tpurge: false,\n\t\tparse: false,\n\t\tcreate: true,\n\t\tfind: true,\n\t\tsort: false,\n\t\tcommit: false,\n\t\tdestroy: false,\n\t\tcomplete: false,\n\t\tfetch: false,\n\t\tmodelEvents: true\n\t},\n\t\n\t/**\n\t* Modifies the structure of data so that it can be used by the\n\t* [add()]{@link enyo.Collection#add} method. This method will only be used\n\t* during initialization or after a successful [fetch]{@link enyo.Collection#fetch}\n\t* if the [parse]{@link enyo.Collection~Options.parse} flag is set to `true`.\n\t* It may be used for simple remapping, renaming, or complex restructuring of\n\t* data coming from a [source]{@link enyo.Collection#source} that requires\n\t* modification before it can be added to the [collection]{@link enyo.Collection}.\n\t* This is a virtual method and must be implemented.\n\t* \n\t* @param {*} data - The incoming data passed to the\n\t*\t[constructor]{@link enyo.Collection#constructor} or returned by a successful\n\t*\t[fetch]{@link enyo.Collection#fetch}.\n\t* @returns {Array} The properly formatted data to be accepted by the\n\t*\t[add()]{@link enyo.Collection#add} method.\n\t* @virtual\n\t* @public\n\t*/\n\tparse: function (data) {\n\t\treturn data;\n\t},\n\t\n\t/**\n\t* Adds data to the [collection]{@link enyo.Collection}. This method can add an\n\t* individual [model]{@link enyo.Model} or an [array]{@glossary Array} of models.\n\t* It can splice them into the dataset at a designated index or remove models\n\t* from the existing dataset that are not included in the new one.\n\t* See {@link enyo.Collection~AddOptions} for detailed information on the\n\t* configuration options available for this method. This method is heavily\n\t* optimized for batch operations on arrays of models. For better performance,\n\t* ensure that loops do not consecutively call this method but instead\n\t* build an array to pass as the first parameter.\n\t* \n\t* @fires enyo.Collection#add\n\t* @param {(Object|Object[]|enyo.Model|enyo.Model[])} models The data to add to the\n\t*\t{@link enyo.Collection} that can be a [hash]{@glossary Object}, an array of\n\t*\thashes, an {@link enyo.Model} instance, or and array of `enyo.Model` instances.\n\t* Note that if the [parse]{@link enyo.Collection#options#parse} configuration\n\t* option is `true`, it will use the returned value as this parameter.\n\t* @param {enyo.Collection~AddOptions} [opts] - The configuration options that modify\n\t*\tthe behavior of this method. The default values will be merged with these options\n\t* before evaluating.\n\t* @returns {enyo.Model[]} The models that were added, if any.\n\t* @public\n\t*/\n\tadd: function (models, opts) {\n\t\tvar loc = this.models\n\t\t\t, len = this.length\n\t\t\t, ctor = this.model\n\t\t\t, options = this.options\n\t\t\t, pkey = ctor.prototype.primaryKey\n\t\t\t, idx = len\n\t\t\t, removedBeforeIdx = 0\n\t\t\t, added, keep, removed, model, attrs, found, id;\n\t\t\t\n\t\t// for backwards compatibility with earlier api standards we allow the\n\t\t// second paramter to be the index and third param options when\n\t\t// necessary\n\t\t!isNaN(opts) && (idx = opts);\n\t\targuments.length > 2 && (opts = arguments[2]);\n\t\t\n\t\t// normalize options so we have values\n\t\topts = opts? utils.mixin({}, [options, opts]): options;\n\t\t\n\t\t// our flags\n\t\tvar merge = opts.merge\n\t\t\t, purge = opts.purge\n\t\t\t, silent = opts.silent\n\t\t\t, parse = opts.parse\n\t\t\t, find = opts.find\n\t\t\t, sort = opts.sort\n\t\t\t, commit = opts.commit\n\t\t\t, create = opts.create !== false\n\t\t\t, modelOpts = opts.modelOptions\n\t\t\t, index = opts.index;\n\t\t\t\n\t\tidx = !isNaN(index) ? Math.max(0, Math.min(len, index)) : idx;\n\n\t\t/*jshint -W018 */\n\t\tsort && !(typeof sort == 'function') && (sort = this.comparator);\n\t\t/*jshint +W018 */\n\t\t\n\t\t// for a special case purge to remove records that aren't in the current\n\t\t// set being added\n\t\t\n\t\tif (parse) models = this.parse(models);\n\t\t\t\n\t\t// we treat all additions as an array of additions\n\t\t!(models instanceof Array) && (models = [models]);\n\t\t\n\t\tfor (var i=0, end=models.length; i<end; ++i) {\n\t\t\tmodel = models[i];\n\t\t\tattrs = null;\n\t\t\t\n\t\t\tif (!model && isNaN(model)) continue;\n\t\t\t\n\t\t\t// first determine if the model is an instance of model since\n\t\t\t// everything else hinges on this\n\t\t\tif (!(model instanceof Model)) {\n\t\t\t\t// we need to determine how to handle this\n\t\t\t\tattrs = model;\n\t\t\t}\n\t\t\t\n\t\t\tif (typeof attrs == 'string' || typeof attrs == 'number') {\n\t\t\t\tid = attrs;\n\t\t\t\tattrs = {};\n\t\t\t\tattrs[pkey] = id;\n\t\t\t} else id = attrs? attrs[pkey]: model;\n\t\t\t\t\n\t\t\t\n\t\t\t// see if we have an existing entry for this model/hash\n\t\t\tif (find) found = loc.has(id);\n\t\t\t\n\t\t\t// if it already existed...\n\t\t\tif (found) {\n\t\t\t\t\n\t\t\t\t// we need to ensure we've resolved the model (if necessary)\n\t\t\t\tfound = loc.resolve(id);\n\t\t\t\t\n\t\t\t\tif (merge) {\n\t\t\t\t\tattrs || (attrs = model.attributes);\n\t\t\t\t\tfound.set(attrs, opts);\n\t\t\t\t}\n\t\t\t\t// with the purge flag we endeavor on the expensive track of removing\n\t\t\t\t// those models currently in the collection that aren't in the incoming\n\t\t\t\t// dataset and aren't being created\n\t\t\t\tif (purge) {\n\t\t\t\t\tkeep || (keep = {length: 0});\n\t\t\t\t\tkeep[found.euid] = model;\n\t\t\t\t\tkeep.length++;\n\t\t\t\t}\n\t\t\t} else if (attrs && find && (found = this.store.resolve(ctor, id))) {\n\t\t\t\t// in this case we were asked to search our store for an existing record\n\t\t\t\t// and we found one but we didn't previously have it so we are technically\n\t\t\t\t// adding it\n\t\t\t\t// @NOTE: Setting the _find_ option always assumes _merge_\n\t\t\t\tattrs || (attrs = model.attributes);\n\t\t\t\tparse && (attrs = found.parse(attrs));\n\t\t\t\tadded || (added = []);\n\t\t\t\tadded.push(found);\n\t\t\t\tthis.prepareModel(found, opts);\n\t\t\t\tmerge && found.set(attrs, opts);\n\t\t\t} else if (!attrs) {\n\t\t\t\tadded || (added = []);\n\t\t\t\tadded.push(model);\n\t\t\t\tthis.prepareModel(model);\n\t\t\t} else if (create) {\n\t\t\t\tmodel = this.prepareModel(attrs || model, modelOpts);\n\t\t\t\tadded || (added = []);\n\t\t\t\tadded.push(model);\n\t\t\t\t\n\t\t\t\t// with the purge flag we endeavor on the expensive track of removing\n\t\t\t\t// those models currently in the collection that aren't in the incoming\n\t\t\t\t// dataset and aren't being created\n\t\t\t\tif (purge) {\n\t\t\t\t\tkeep || (keep = {length: 0});\n\t\t\t\t\tkeep[model.euid] = model;\n\t\t\t\t\tkeep.length++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// here we process those models to be removed if purge was true\n\t\t// the other guard is just in case we actually get to keep everything\n\t\t// so we don't do this unnecessary pass\n\t\tif (purge && (keep && keep.length)) {\n\t\t\tremoved || (removed = []);\n\t\t\tkeep || (keep = {});\n\t\t\tfor (i=0; i<len; ++i) {\n\t\t\t\tif (!keep[(model = loc[i]).euid]) {\n\t\t\t\t\tremoved.push(model);\n\t\t\t\t\tif (i < idx) removedBeforeIdx++;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// if we removed any we process that now\n\t\t\tremoved.length && this.remove(removed, opts);\n\t\t\tidx = idx - removedBeforeIdx;\n\t\t}\n\t\t\n\t\t// added && loc.stopNotifications().add(added, idx).startNotifications();\n\t\tif (added) {\n\t\t\tloc.add(added, idx);\n\t\t\tsort && this.sort(sort, {silent: true});\n\t\t\t\n\t\t\t// we batch this operation to make use of its ~efficient array operations\n\t\t\tthis.store.add(added); \n\t\t}\n\t\tthis.length = loc.length;\n\t\t\n\t\t\n\t\tif (!silent) {\n\t\t\t// notify observers of the length change\n\t\t\tlen != this.length && this.notify('length', len, this.length);\n\t\t\t// notify listeners of the addition of records\n\t\t\tif (added) {\n\t\t\t\tthis.emit('add', {models: added, collection: this, index: idx});\n\t\t\t}\n\t\t}\n\t\t\n\t\t// note that if commit is set but this was called from a successful fetch this will be\n\t\t// a nop (as intended)\n\t\tcommit && added && this.commit(opts);\n\t\t\n\t\treturn added || [];\n\t},\n\t\n\t/**\n\t* Removes data from the [collection]{@link enyo.Collection}. It can take a\n\t* [model]{@link enyo.Model} or an [array]{@glossary Array} of models.\n\t* If any of the instances are present in the collection, they will be\n\t* removed in the order in which they are encountered. Emits the\n\t* [remove]{@link enyo.Collection#remove} event if any models were found and\n\t* removed from the collection (and the `silent` option is not `true`).\n\t* \n\t* @fires enyo.Collection#remove\n\t* @param {(enyo.Model|enyo.Model[])} models The [models]{@link enyo.Model} to remove\t\t\n\t*\tif they exist in the [collection]{@link enyo.Collection}.\n\t* @param {enyo.Collection~RemoveOptions} [opts] - The configuration options that modify\n\t*\tthe behavior of this method.\n\t* @returns {enyo.Model[]} The models that were removed, if any.\n\t* @public\n\t*/\n\tremove: function (models, opts) {\n\t\tvar loc = this.models\n\t\t\t, len = loc.length\n\t\t\t, options = this.options\n\t\t\t, removed, model;\n\t\t\n\t\t// normalize options so we have values\n\t\topts = opts? utils.mixin({}, [options, opts]): options;\n\t\t\n\t\t// our flags\n\t\tvar silent = opts.silent\n\t\t\t, destroy = opts.destroy\n\t\t\t, complete = opts.complete\n\t\t\t, commit = opts.commit;\n\t\t\n\t\t// we treat all additions as an array of additions\n\t\t!(models instanceof Array) && (models = [models]);\n\t\t\n\t\tremoved = loc.remove(models);\n\t\t\n\t\tif (removed.length) {\n\t\t\t\n\t\t\t// ensure that we can batch remove from the store\n\t\t\topts.batching = true;\n\t\t\t\n\t\t\tfor (var i=0, end=removed.length; i<end; ++i) {\n\t\t\t\tmodel = removed[i];\n\t\t\t\t\n\t\t\t\t// it is possible but highly, highly unlikely that this would have been set\n\t\t\t\t// to false by default and true at runtime...so we take our chances for the\n\t\t\t\t// small performance gain in those situations where it was defaulted to false\n\t\t\t\tif (options.modelEvents) model.off('*', this._modelEvent, this);\n\t\t\t\tif (destroy) model.destroy(opts);\n\t\t\t}\n\t\t\t\n\t\t\t// if complete or destroy was set we remove them from the store (batched op)\n\t\t\tif (complete || destroy) this.store.remove(removed);\n\t\t}\n\t\t\n\t\tthis.length = loc.length;\n\t\t\n\t\tif (!silent) {\n\t\t\tlen != this.length && this.notify('length', len, this.length);\n\t\t\tif (removed.length) {\n\t\t\t\tthis.emit('remove', {models: removed, collection: this});\n\t\t\t}\n\t\t}\n\t\t\n\t\t// if this is called from an overloaded method (such as fetch or commit) or some \n\t\t// success callback this will be a nop (as intended)\n\t\tcommit && removed.length && this.commit();\n\t\t\n\t\treturn removed;\n\t},\n\t\n\t/**\n\t* Retrieves a [model]{@link enyo.Model} for the provided index.\n\t* \n\t* @param {Number} idx - The index to return from the [collection]{@link enyo.Collection}.\n\t* @returns {(enyo.Model|undefined)} The [model]{@link enyo.Model} at the given index or\n\t*\t`undefined` if it cannot be found.\n\t* @public\n\t*/\n\tat: function (idx) {\n\t\treturn this.models[idx];\n\t},\n\t\n\t/**\n\t* Returns the JSON serializable [array]{@glossary Array} of [models]{@link enyo.Model}\n\t* according to their own [raw()]{@link enyo.Model#raw} output.\n\t*\n\t* @returns {enyo.Model[]} The [models]{@link enyo.Model} according to their\n\t*\t[raw()]{@link enyo.Model#raw} output.\n\t* @public\n\t*/\n\traw: function () {\n\t\treturn this.models.map(function (model) {\n\t\t\treturn model.raw();\n\t\t});\n\t},\n\t\n\t/**\n\t* Determines if the specified [model]{@link enyo.Model} is contained by this\n\t* [collection]{@link enyo.Collection}.\n\t*\n\t* @param {enyo.Model} model - The [model]{@link enyo.Model} to check.\n\t* @returns {Boolean} Whether or not the model belongs to the\n\t*\t[collection]{@link enyo.Collection}.\n\t* @public\n\t*/\n\thas: function (model) {\n\t\treturn this.models.has(model);\n\t},\n\t\n\t/**\n\t* @see {@glossary Array.forEach}\n\t* @public\n\t*/\n\tforEach: function (fn, ctx) {\n\t\t\n\t\t// ensure that this is an immutable reference to the models such that changes will\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\n\t\t// completing\n\t\treturn this.models.slice().forEach(fn, ctx || this);\n\t},\n\t\n\t/**\n\t* @see {@glossary Array.filter}\n\t* @public\n\t*/\n\tfilter: function (fn, ctx) {\n\t\t\n\t\t// ensure that this is an immutable reference to the models such that changes will\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\n\t\t// completing\n\t\treturn this.models.slice().filter(fn, ctx || this);\n\t},\n\t\n\t/**\n\t* @see {@glossary Array.find}\n\t* @public\n\t*/\n\tfind: function (fn, ctx) {\n\t\t\n\t\t// ensure that this is an immutable reference to the models such that changes will\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\n\t\t// completing\n\t\treturn this.models.slice().find(fn, ctx || this);\n\t},\n\t\n\t/**\n\t* @see {@glossary Array.map}\n\t* @public\n\t*/\n\tmap: function (fn, ctx) {\n\t\t\n\t\t// ensure that this is an immutable reference to the models such that changes will\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\n\t\t// completing\n\t\treturn this.models.slice().map(fn, ctx || this);\n\t},\n\t\n\t/**\n\t* @see {@glossary Array.indexOf}\n\t* @public\n\t*/\n\tindexOf: function (model, offset) {\n\t\treturn this.models.indexOf(model, offset);\n\t},\n\t\n\t/**\n\t* Removes all [models]{@link enyo.Model} from the [collection]{@link enyo.Collection}.\n\t* Optionally, a model (or models) may be provided to replace the removed models.\n\t* If this operation is not `silent`, it will emit a `reset` event. Returns the\n\t* removed models, but be aware that, if the `destroy` configuration option is set,\n\t* the returned models will have limited usefulness.\n\t* \n\t* @param {(enyo.Model|enyo.Model[])} [models] The [model or models]{@link enyo.Model}\n\t*\tto use as a replacement for the current set of models in the\n\t*\t{@link enyo.Collection}.\n\t* @param {enyo.Collection~Options} [opts] - The options that will modify the behavior\n\t*\tof this method.\n\t* @returns {enyo.Model[]} The models that were removed from the collection.\n\t* @public\n\t*/\n\tempty: function (models, opts) {\n\t\tvar silent,\n\t\t\tremoved,\n\t\t\tlen = this.length;\n\t\t\n\t\tif (models && !(models instanceof Array || models instanceof Model)) {\n\t\t\t// there were no models but instead some options only\n\t\t\topts = models;\n\t\t\tmodels = null;\n\t\t}\n\t\t\n\t\topts = opts || {};\n\t\t\n\t\t// just in case the entire thing was supposed to be silent\n\t\tsilent = opts.silent;\n\t\topts.silent = true;\n\t\t\n\t\tremoved = this.remove(this.models, opts);\n\t\t\n\t\t// if there are models we are going to propagate the remove quietly and instead issue\n\t\t// a single reset with the new content\n\t\tif (models) this.add(models, opts);\n\t\t\n\t\t// now if the entire thing wasn't supposed to have been done silently we issue\n\t\t// a reset\n\t\tif (!silent) {\n\t\t\tif (len != this.length) this.notify('length', len, this.length);\n\t\t\tthis.emit('reset', {models: this.models.copy(), collection: this});\n\t\t}\n\t\t\n\t\treturn removed;\n\t},\n\t\n\t/**\n\t* Returns the [JSON]{@glossary JSON} serializable [raw()]{@link enyo.Collection#raw}\n\t* output of the [collection]{@link enyo.Collection}. Will automatically be executed by\n\t* [JSON.parse()]{@glossary JSON.parse}.\n\t*\n\t* @see enyo.Collection.raw\n\t* @returns {Object} The return value of [raw()]{@link enyo.Collection#raw}.\n\t* @public\n\t*/\n\ttoJSON: function () {\n\t\treturn this.raw();\n\t},\n\t\n\t/**\n\t* The default behavior of this method is the same as {@glossary Array.sort}. If the\n\t* [function]{@glossary Function} parameter is omitted, it will attempt to use the\n\t* [comparator]{@link enyo.Collection#comparator} (if any) from the\n\t* [collection]{@link enyo.Collection}. Note that the collection is sorted in-place\n\t* and returns a reference to itself. The collection\n\t* [emits]{@link enyo.EventEmitter.emit} the [sort]{@link enyo.Collection#sort}\n\t* event.\n\t*\n\t* @fires enyo.Collection#sort\n\t* @see {@glossary Array.sort}\n\t* @param {enyo.Collection~Comparator} [fn] - The [comparator]{@link enyo.Collection#comparator}\n\t* method.\n\t* @param {enyo.Collection~Options} [opts] - The configuration options.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tsort: function (fn, opts) {\n\t\tif (fn || this.comparator) {\n\t\t\tvar options = {silent: false}, silent;\n\t\t\n\t\t\topts = opts? utils.mixin({}, [options, opts]): options;\n\t\t\tsilent = opts.silent;\n\t\t\tthis.models.sort(fn || this.comparator);\n\t\t\t!silent && this.emit('sort', {\n\t\t\t\tcomparator: fn || this.comparator,\n\t\t\t\tmodels: this.models.copy(),\n\t\t\t\tcollection: this\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Commits the [collection]{@link enyo.Collection} to a\n\t* [source]{@link enyo.Collection#source} or sources. An {@link enyo.Collection}\n\t* cannot be committed if it is in an [error]{@link enyo~States.ERROR}\n\t* ({@link enyo.StateSupport.isError}) or [busy]{@link enyo~States.BUSY}\n\t* ({@link enyo.StateSupport.isBusy}) [state]{@link enyo.Model#status}. While\n\t* executing, it will add the [COMMITTING]{@link enyo~States.COMMITTING} flag\n\t* to the collection's [status]{@link enyo.Collection#status}. Once it has\n\t* completed execution, it will remove this flag (even if it fails).\n\t*\n\t* @see enyo.Collection.committed\n\t* @see enyo.Collection.status\n\t* @param {enyo.Collection~ActionOptions} [opts] - Optional configuration options.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tcommit: function (opts) {\n\t\tvar options,\n\t\t\tsource,\n\t\t\tit = this;\n\t\t\n\t\t// if the current status is not one of the error states we can continue\n\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\n\t\t\t\n\t\t\t// if there were options passed in we copy them quickly so that we can hijack\n\t\t\t// the success and error methods while preserving the originals to use later\n\t\t\toptions = opts ? utils.clone(opts, true) : {};\n\t\t\t\n\t\t\t// make sure we keep track of how many sources we're requesting\n\t\t\tsource = options.source || this.source;\n\t\t\tif (source && ((source instanceof Array) || source === true)) {\n\t\t\t\tthis._waiting = source.length ? source.slice() : Object.keys(Source.sources);\n\t\t\t}\n\t\t\t\t\n\t\t\toptions.success = function (source, res) {\n\t\t\t\tit.committed(opts, res, source);\n\t\t\t};\n\t\t\t\n\t\t\toptions.error = function (source, res) {\n\t\t\t\tit.errored('COMMITTING', opts, res, source);\n\t\t\t};\n\t\t\t\n\t\t\t// set the state\n\t\t\tthis.set('status', (this.status | States.COMMITTING) & ~States.READY);\n\t\t\t\n\t\t\t// now pass this on to the source to execute as it sees fit\n\t\t\tSource.execute('commit', this, options);\n\t\t} else if (this.status & States.ERROR) this.errored(this.status, opts);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Fetches the [collection]{@link enyo.Collection} from a\n\t* [source]{@link enyo.Collection#source} or sources. An {@link enyo.Collection}\n\t* cannot be fetched if it is in an [error]{@link enyo~States.ERROR}\n\t* ({@link enyo.StateSupport.isError}) or [busy]{@link enyo~States.BUSY}\n\t* ({@link enyo.StateSupport.isBusy}) [state]{@link enyo.Model#status}. While\n\t* executing, it will add the [FETCHING]{@link enyo~States.FETCHING} flag to\n\t* the collection's [status]{@link enyo.Collection#status}. Once it has\n\t* completed execution, it will remove this flag (even if it fails).\n\t*\n\t* @see enyo.Collection.fetched\n\t* @see enyo.Collection.status\n\t* @param {enyo.Collection~ActionOptions} [opts] - Optional configuration options.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tfetch: function (opts) {\n\t\tvar options,\n\t\t\tsource,\n\t\t\tit = this;\n\t\t\t\n\t\t// if the current status is not one of the error states we can continue\n\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\n\t\t\t\n\t\t\t// if there were options passed in we copy them quickly so that we can hijack\n\t\t\t// the success and error methods while preserving the originals to use later\n\t\t\toptions = opts ? utils.clone(opts, true) : {};\n\t\t\t\n\t\t\t// make sure we keep track of how many sources we're requesting\n\t\t\tsource = options.source || this.source;\n\t\t\tif (source && ((source instanceof Array) || source === true)) {\n\t\t\t\tthis._waiting = source.length ? source.slice() : Object.keys(Source.sources);\n\t\t\t}\n\t\t\t\n\t\t\toptions.success = function (source, res) {\n\t\t\t\tit.fetched(opts, res, source);\n\t\t\t};\n\t\t\t\n\t\t\toptions.error = function (source, res) {\n\t\t\t\tit.errored('FETCHING', opts, res, source);\n\t\t\t};\n\t\t\t\n\t\t\t// set the state\n\t\t\tthis.set('status', (this.status | States.FETCHING) & ~States.READY);\n\t\t\t\n\t\t\t// now pass this on to the source to execute as it sees fit\n\t\t\tSource.execute('fetch', this, options);\n\t\t} else if (this.status & States.ERROR) this.errored(this.status, opts);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t* Destroys the [collection]{@link enyo.Collection}. By default, the\n\t* collection will only be [destroyed]{@glossary destroy} in the client. To\n\t* execute with a [source]{@link enyo.Collection#source} or sources, the\n\t* [commit default option]{@link enyo.Collection#options} must be `true` or a\n\t* `source` property must be explicitly provided in the `opts` parameter. A\n\t* collection cannot be destroyed (using a source) if it is in an\n\t* [error]{@link enyo~States.ERROR} ({@link enyo.StateSupport.isError}) or\n\t* [busy]{@link enyo~States.BUSY} ({@link enyo.StateSupport.isBusy})\n\t* [state]{@link enyo.Collection#status}. While executing, it will add the\n\t* [DESTROYING]{@link enyo~States.DESTROYING} flag to the collection's\n\t* [status]{@link enyo.Collection#status}. Once it has completed execution,\n\t* it will remove this flag (even if it fails).\n\t*\n\t* @see enyo.Collection.status\n\t* @param {enyo.Collection~ActionOptions} [opts] - Optional configuration options.\n\t* @returns {this} The callee for chaining.\n\t* @method\n\t* @public\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function (opts) {\n\t\t\tvar options = opts ? utils.mixin({}, [this.options, opts]) : this.options,\n\t\t\t\tit = this,\n\t\t\t\tidx;\n\t\t\t\t\t\t\n\t\t\t// this becomes an (potentially) async operation if we are committing this destroy\n\t\t\t// to a source and its kind of tricky to figure out because there are several ways\n\t\t\t// it could be flagged to do this\n\t\t\t\t\t\t\n\t\t\tif (options.commit || options.source) {\n\t\t\t\t\n\t\t\t\t// if the current status is not one of the error states we can continue\n\t\t\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\n\t\t\t\t\n\t\t\t\t\t// remap to the originals\n\t\t\t\t\toptions = opts ? utils.clone(opts, true) : {};\n\t\t\t\t\n\t\t\t\t\toptions.success = function (source, res) {\n\t\t\t\t\n\t\t\t\t\t\tif (it._waiting) {\n\t\t\t\t\t\t\tidx = it._waiting.findIndex(function (ln) {\n\t\t\t\t\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (idx > -1) it._waiting.splice(idx, 1);\n\t\t\t\t\t\t\tif (!it._waiting.length) it._waiting = null;\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t// continue the operation this time with commit false explicitly\n\t\t\t\t\t\tif (!it._waiting) {\n\t\t\t\t\t\t\toptions.commit = options.source = null;\n\t\t\t\t\t\t\tit.destroy(options);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (opts && opts.success) opts.success(this, opts, res, source);\n\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\toptions.error = function (source, res) {\n\t\t\t\t\n\t\t\t\t\t\tif (it._waiting) {\n\t\t\t\t\t\t\tidx = it._waiting.findIndex(function (ln) {\n\t\t\t\t\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (idx > -1) it._waiting.splice(idx, 1);\n\t\t\t\t\t\t\tif (!it._waiting.length) it._waiting = null;\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t// continue the operation this time with commit false explicitly\n\t\t\t\t\t\tif (!it._waiting) {\n\t\t\t\t\t\t\toptions.commit = options.source = null;\n\t\t\t\t\t\t\tit.destroy(options);\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t// we don't bother setting the error state if we aren't waiting because \n\t\t\t\t\t\t// it will be cleared to DESTROYED and it would be pointless\n\t\t\t\t\t\telse this.errored('DESTROYING', opts, res, source);\n\t\t\t\t\t};\n\t\t\t\t\n\t\t\t\t\tthis.set('status', (this.status | States.DESTROYING) & ~States.READY);\n\t\t\t\n\t\t\t\t\tSource.execute('destroy', this, options);\n\t\t\t\t} else if (this.status & States.ERROR) this.errored(this.status, opts);\n\t\t\t\t\n\t\t\t\t// we don't allow the destroy to take place and we don't forcibly break-down\n\t\t\t\t// the collection errantly so there is an opportuniy to resolve the issue\n\t\t\t\t// before we lose access to the collection's content!\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.length && options.destroy) this.empty(options);\n\t\t\t\n\t\t\t// set the final resting state of this collection\n\t\t\tthis.set('status', States.DESTROYED);\n\t\t\t\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* This is a virtual method that, when provided, will be used for sorting during\n\t* [add()]{@link enyo.Collection#add} when the `sort` flag is `true` or when the\n\t* [sort()]{@link enyo.Collection#sort} method is called without a passed-in\n\t* [function]{@glossary Function} parameter.\n\t*\n\t* @see enyo.Collection~Comparator\n\t* @type {enyo.Collection~Comparator}\n\t* @default null\n\t* @virtual\n\t* @method\n\t* @public\n\t*/\n\tcomparator: null,\n\t\n\t/**\n\t* Used during [add()]{@link enyo.Collection#add} when `create` is `true` and\n\t* the data is a [hash]{@glossary Object}.\n\t*\n\t* @private\n\t*/\n\tprepareModel: function (attrs, opts) {\n\t\tvar Ctor = this.model\n\t\t\t, options = this.options\n\t\t\t, model;\n\t\t\n\t\tattrs instanceof Ctor && (model = attrs);\n\t\tif (!model) {\n\t\t\topts = opts || {};\n\t\t\topts.noAdd = true;\n\t\t\tmodel = new Ctor(attrs, null, opts);\n\t\t}\n\t\t\n\t\tif (options.modelEvents) model.on('*', this._modelEvent, this);\n\t\t\n\t\treturn model;\n\t},\n\t\n\t/**\n\t* When a [commit]{@link enyo.Collection#commit} has completed successfully, it is returned\n\t* to this method. This method handles special and important behavior; it should not be\n\t* called directly and, when overloading, care must be taken to ensure that the\n\t* super-method is called. This correctly sets the [status]{@link enyo.Collection#status}\n\t* and, in cases where multiple [sources]{@link enyo.Collection#source} were used, it waits\n\t* until all have responded before clearing the [COMMITTING]{@link enyo~States.COMMITTING}\n\t* flag. If a [success]{@link enyo.Collection~Success} callback was provided, it will be\n\t* called once for each source.\n\t*\n\t* @param {enyo.Collection~ActionOptions} opts - The original options passed to\n\t*\t[commit()]{@link enyo.Collection#commit}, merged with the defaults.\n\t* @param {*} [res] - The result provided from the given\n\t* [source]{@link enyo.Collection#source}, if any. This will vary depending\n\t* on the source.\n\t* @param {String} source - The name of the source that has completed successfully.\n\t* @public\n\t*/\n\tcommitted: function (opts, res, source) {\n\t\tvar idx;\n\t\t\n\t\tif (this._waiting) {\n\t\t\tidx = this._waiting.findIndex(function (ln) {\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t});\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\n\t\t\tif (!this._waiting.length) this._waiting = null;\n\t\t}\n\t\t\n\t\tif (opts && opts.success) opts.success(this, opts, res, source);\n\t\t\n\t\t// clear the state\n\t\tif (!this._waiting) {\n\t\t\tthis.set('status', (this.status | States.READY) & ~States.COMMITTING);\n\t\t}\n\t},\n\t\n\t/**\n\t* When a [fetch]{@link enyo.Collection#fetch} has completed successfully, it is returned\n\t* to this method. This method handles special and important behavior; it should not be\n\t* called directly and, when overloading, care must be taken to ensure that you call the\n\t* super-method. This correctly sets the [status]{@link enyo.Collection#status} and, in\n\t* cases where multiple [sources]{@link enyo.Collection#source} were used, it waits until\n\t* all have responded before clearing the [FETCHING]{@link enyo~States.FETCHING} flag. If\n\t* a [success]{@link enyo.Collection~Success} callback was provided, it will be called\n\t* once for each source.\n\t*\n\t* @param {enyo.Collection~ActionOptions} opts - The original options passed to\n\t*\t[fetch()]{@link enyo.Collection#fetch}, merged with the defaults.\n\t* @param {*} [res] - The result provided from the given\n\t* [source]{@link enyo.Collection#source}, if any. This will vary depending\n\t*\ton the source.\n\t* @param {String} source - The name of the source that has completed successfully.\n\t* @public\n\t*/\n\tfetched: function (opts, res, source) {\n\t\tvar idx;\n\t\t\n\t\tif (this._waiting) {\n\t\t\tidx = this._waiting.findIndex(function (ln) {\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\n\t\t\t});\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\n\t\t\tif (!this._waiting.length) this._waiting = null;\n\t\t}\n\t\t\n\t\t// if there is a result we add it to the collection passing it any per-fetch options\n\t\t// that will override the defaults (e.g. parse) we don't do that here as it will\n\t\t// be done in the add method -- also note we reassign the result to whatever was\n\t\t// actually added and pass that to any other success callback if there is one\n\t\tif (res) res = this.add(res, opts);\n\t\t\n\t\t// now look for an additional success callback\n\t\tif (opts && opts.success) opts.success(this, opts, res, source);\n\t\t\n\t\t// clear the state\n\t\tif (!this._waiting) {\n\t\t\tthis.set('status', (this.status | States.READY) & ~States.FETCHING);\n\t\t}\n\t},\n\t\n\t/**\n\t* If an error is encountered while [fetching]{@link enyo.Collection#fetch},\n\t* [committing]{@link enyo.Collection#commit}, or [destroying]{@link enyo.Collection#destroy}\n\t* the [collection]{@link enyo.Collection}, this method will be called. By\n\t* default, it updates the collection's [status]{@link enyo.Collection#status}\n\t* property and then checks to see if there is a provided\n\t* [error handler]{@link enyo.Collection~ErrorCallback}. If the error handler\n\t* exists, it will be called.\n\t* \n\t* @param {String} action - The name of the action that failed,\n\t* one of `'FETCHING'` or `'COMMITTING'`.\n\t* @param {enyo.Collection~ActionOptions} opts - The options hash originally\n\t* passed along with the original action.\n\t* @param {*} [res] - The result of the requested `action`; varies depending on the\n\t*\trequested [source]{@link enyo.Collection#source}.\n\t* @param {String} source - The name of the source that has returned an error.\n\t* @public\n\t*/\n\terrored: function (action, opts, res, source) {\n\t\tvar stat;\n\t\t\n\t\t// if the error action is a status number then we don't need to update it otherwise\n\t\t// we set it to the known state value\n\t\tif (typeof action == 'string') {\n\t\t\t\n\t\t\t// all built-in errors will pass this as their values are > 0 but we go ahead and\n\t\t\t// ensure that no developer used the 0x00 for an error code\n\t\t\tstat = States['ERROR_' + action];\n\t\t} else stat = action;\n\t\t\n\t\tif (isNaN(stat) || !(stat & States.ERROR)) stat = States.ERROR_UNKNOWN;\n\t\t\n\t\t// if it has changed give observers the opportunity to respond\n\t\tthis.set('status', (this.status | stat) & ~States.READY);\n\t\t\n\t\t// we need to check to see if there is an options handler for this error\n\t\tif (opts && opts.error) opts.error(this, action, opts, res, source);\n\t},\n\t\n\t/**\n\t* Overloaded version of the method to call [set()]{@link enyo.Collection#set}\n\t* instead of simply assigning the value. This allows it to\n\t* [notify observers]{@link enyo.ObserverSupport.notify} and thus update\n\t* [bindings]{@link enyo.BindingSupport.bindings} as well.\n\t*\n\t* @see enyo.StateSupport.clearError\n\t* @public\n\t*/\n\tclearError: function () {\n\t\treturn this.set('status', States.READY);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\t_modelEvent: function (model, e) {\n\t\tswitch (e) {\n\t\tcase 'change':\n\t\t\tthis.emit('change', {model: model});\n\t\t\tbreak;\n\t\tcase 'destroy':\n\t\t\tthis.remove(model);\n\t\t\tbreak;\n\t\t}\n\t},\n\t\n\t/**\n\t* Responds to changes to the [models]{@link enyo.Collection#models} property.\n\t*\n\t* @see enyo.Collection.models\n\t* @fires enyo.Collection#reset\n\t* @type {enyo.ObserverSupport~Observer}\n\t* @public\n\t*/\n\tmodelsChanged: function (was, is, prop) {\n\t\tvar models = this.models.copy(),\n\t\t\tlen = models.length;\n\t\t\n\t\tif (len != this.length) this.set('length', len);\n\t\t\n\t\tthis.emit('reset', {models: models, collection: this});\n\t},\n\t\n\t/**\n\t* Initializes the [collection]{@link enyo.Collection}.\n\t*\n\t* @param {(Object|Object[]|enyo.Model[])} [recs] May be an [array]{@glossary Array}\n\t*\tof either [models]{@link enyo.Model} or [hashes]{@glossary Object} used to\n\t* initialize the [collection]{@link enyo.Collection}, or an [object]{@glossary Object}\n\t*\tequivalent to the `props` parameter.\n\t* @param {Object} [props] - A hash of properties to apply directly to the\n\t* collection.\n\t* @param {Object} [opts] - A hash.\n\t* @method\n\t* @public\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function (recs, props, opts) {\n\t\t\t// opts = opts? (this.options = enyo.mixin({}, [this.options, opts])): this.options;\n\t\t\t\n\t\t\t// if properties were passed in but not a records array\n\t\t\tprops = recs && !(recs instanceof Array)? recs: props;\n\t\t\tif (props === recs) recs = null;\n\t\t\t// initialize our core records\n\t\t\t// this.models = this.models || new ModelList();\n\t\t\t!this.models && (this.set('models', new ModelList()));\n\t\t\t\n\t\t\t// this is backwards compatibility\n\t\t\tif (props && props.records) {\n\t\t\t\trecs = recs? recs.concat(props.records): props.records.slice();\n\t\t\t\tdelete props.records;\n\t\t\t}\n\t\t\t\n\t\t\tif (props && props.models) {\n\t\t\t\trecs = recs? recs.concat(props.models): props.models.slice();\n\t\t\t\tdelete props.models;\n\t\t\t}\n\t\t\t\n\t\t\tif (props && props.options) {\n\t\t\t\tthis.options = utils.mixin({}, [this.options, props.options]);\n\t\t\t\tdelete props.options;\n\t\t\t}\n\t\t\t\n\t\t\topts = opts? utils.mixin({}, [this.options, opts]): this.options;\n\t\t\t\n\t\t\t// @TODO: For now, while there is only one property we manually check for it\n\t\t\t// if more options arrise that should be configurable this way it may need to\n\t\t\t// be modified\n\t\t\topts.fetch && (this.options.fetch = opts.fetch);\n\t\t\t\n\t\t\tthis.length = this.models.length;\n\t\t\tthis.euid = utils.uid('c');\n\t\t\t\n\t\t\tsup.call(this, props);\n\t\t\t\n\t\t\ttypeof this.model == 'string' && (this.model = kind.constructorForKind(this.model));\n\t\t\tthis.store = this.store || Store;\n\t\t\trecs && recs.length && this.add(recs, opts);\n\t\t};\n\t}),\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructed: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\t\n\t\t\t// automatically attempt a fetch after initialization is complete\n\t\t\tif (this.options.fetch) this.fetch();\n\t\t};\n\t})\n\t\n});\n\n/**\n* @name enyo.Collection.concat\n* @static\n* @private\n*/\nCollection.concat = function (ctor, props) {\n\tvar proto = ctor.prototype || ctor;\n\t\n\tif (props.options) {\n\t\tproto.options = utils.mixin({}, [proto.options, props.options]);\n\t\tdelete props.options;\n\t}\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tplatform = require('./platform'),\n\tanimation = require('./animation');\n\nvar\n\tComponent = require('./Component');\n\n/**\n* Fires when a scrolling action starts.\n*\n* @event enyo.ScrollMath#onScrollStart\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently \n*\tpropagated the {@glossary event}.\n* @property {enyo.Scroller~ScrollEvent} event - An [object]{@glossary Object} containing \n*\tevent information.\n* @private\n*/\n\n/**\n* Fires while a scrolling action is in progress.\n*\n* @event enyo.ScrollMath#onScroll\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently \n*\tpropagated the {@glossary event}.\n* @property {enyo.Scroller~ScrollEvent} event - An [object]{@glossary Object} containing \n*\tevent information.\n* @private\n*/\n\n/**\n* Fires when a scrolling action stops.\n*\n* @event enyo.ScrollMath#onScrollStop\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently \n*\tpropagated the {@glossary event}.\n* @property {enyo.Scroller~ScrollEvent} event - An [object]{@glossary Object} containing \n*\tevent information.\n* @private\n*/\n\n/**\n* {@link enyo.ScrollMath} implements a scrolling dynamics simulation. It is a\n* helper [kind]{@glossary kind} used by other [scroller]{@link enyo.Scroller}\n* kinds, such as {@link enyo.TouchScrollStrategy}.\n* \n* `enyo.ScrollMath` is not typically created in application code.\n*\n* @class enyo.ScrollMath\n* @protected\n*/\nmodule.exports = kind(\n\t/** @lends enyo.ScrollMath.prototype */ {\n\n\tname: 'enyo.ScrollMath',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Component,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.ScrollMath.prototype */ {\n\n\t\t/** \n\t\t* Set to `true` to enable vertical scrolling.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @private\n\t\t*/\n\t\tvertical: true,\n\n\t\t/** \n\t\t* Set to `true` to enable horizontal scrolling.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @private\n\t\t*/\n\t\thorizontal: true\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonScrollStart: '',\n\t\tonScroll: '',\n\t\tonScrollStop: '',\n\t\tonStabilize: ''\n\t},\n\n\t/**\n\t* \"Spring\" damping returns the scroll position to a value inside the boundaries. Lower \n\t* values provide faster snapback.\n\t*\n\t* @private\n\t*/\n\tkSpringDamping: 0.93,\n\n\t/** \n\t* \"Drag\" damping resists dragging the scroll position beyond the boundaries. Lower values \n\t* provide more resistance.\n\t*\n\t* @private\n\t*/\n\tkDragDamping: 0.5,\n\t\n\t/** \n\t* \"Friction\" damping reduces momentum over time. Lower values provide more friction.\n\t*\n\t* @private\n\t*/\n\tkFrictionDamping: 0.97,\n\n\t/** \n\t* Additional \"friction\" damping applied when momentum carries the viewport into overscroll. \n\t* Lower values provide more friction.\n\t*\n\t* @private\n\t*/\n\tkSnapFriction: 0.9,\n\t\n\t/** \n\t* Scalar applied to `flick` event velocity.\n\t*\n\t* @private\n\t*/\n\tkFlickScalar: 15,\n\n\t/** \n\t* Limits the maximum allowable flick. On Android > 2, we limit this to prevent compositing \n\t* artifacts.\n\t*\n\t* @private\n\t*/\n\tkMaxFlick: platform.android > 2 ? 2 : 1e9,\n\t\n\t/** \n\t* The value used in [friction()]{@link enyo.ScrollMath#friction} to determine if the delta \n\t* (e.g., y - y0) is close enough to zero to consider as zero.\n\t*\n\t* @private\n\t*/\n\tkFrictionEpsilon: platform.webos >= 4 ? 1e-1 : 1e-2,\n\t\n\t/** \n\t* Top snap boundary, generally `0`.\n\t*\n\t* @private\n\t*/\n\ttopBoundary: 0,\n\t\n\t/** \n\t* Right snap boundary, generally `(viewport width - content width)`.\n\t*\n\t* @private\n\t*/\n\trightBoundary: 0,\n\t\n\t/** \n\t* Bottom snap boundary, generally `(viewport height - content height)`.\n\t*\n\t* @private\n\t*/\n\tbottomBoundary: 0,\n\t\n\t/** \n\t* Left snap boundary, generally `0`.\n\t*\n\t* @private\n\t*/\n\tleftBoundary: 0,\n\t\n\t/** \n\t* Animation time step.\n\t*\n\t* @private\n\t*/\n\tinterval: 20,\n\t\n\t/** \n\t* Flag to enable frame-based animation; if `false`, time-based animation is used.\n\t*\n\t* @private\n\t*/\n\tfixedTime: true,\n\n\t/**\n\t* Simulation state.\n\t*\n\t* @private\n\t*/\n\tx0: 0,\n\n\t/**\n\t* Simulation state.\n\t*\n\t* @private\n\t*/\n\tx: 0,\n\n\t/**\n\t* Simulation state.\n\t*\n\t* @private\n\t*/\n\ty0: 0,\n\n\t/**\n\t* Simulation state.\n\t*\n\t* @private\n\t*/\n\ty: 0,\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.stop();\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Simple Verlet integrator for simulating Newtonian motion.\n\t*\n\t* @private\n\t*/\n\tverlet: function () {\n\t\tvar x = this.x;\n\t\tthis.x += x - this.x0;\n\t\tthis.x0 = x;\n\t\t//\n\t\tvar y = this.y;\n\t\tthis.y += y - this.y0;\n\t\tthis.y0 = y;\n\t},\n\n\t/**\n\t* Boundary damping function. Returns damped `value` based on `coeff` on one side of \n\t* `origin`.\n\t*\n\t* @private\n\t*/\n\tdamping: function (val, origin, coeff, sign) {\n\t\tvar kEpsilon = 0.5;\n\t\t//\n\t\t// this is basically just value *= coeff (generally, coeff < 1)\n\t\t//\n\t\t// 'sign' and the conditional is to force the damping to only occur\n\t\t// on one side of the origin.\n\t\t//\n\t\tvar dv = val - origin;\n\t\t// Force close-to-zero to zero\n\t\tif (Math.abs(dv) < kEpsilon) {\n\t\t\treturn origin;\n\t\t}\n\t\treturn val*sign > origin*sign ? coeff * dv + origin : val;\n\t},\n\n\t/**\n\t* Dual-boundary damping function. Returns damped `value` based on `coeff` when exceeding \n\t* either boundary.\n\t*\n\t* @private\n\t*/\n\tboundaryDamping: function (val, aBoundary, bBoundary, coeff) {\n\t\treturn this.damping(this.damping(val, aBoundary, coeff, 1), bBoundary, coeff, -1);\n\t},\n\n\t/**\n\t* Simulation constraints (spring damping occurs here).\n\t*\n\t* @private\n\t*/\n\tconstrain: function () {\n\t\tvar y = this.boundaryDamping(this.y, this.topBoundary, this.bottomBoundary, this.kSpringDamping);\n\t\tif (y != this.y) {\n\t\t\t// ensure snapping introduces no velocity, add additional friction\n\t\t\tthis.y0 = y - (this.y - this.y0) * this.kSnapFriction;\n\t\t\tthis.y = y;\n\t\t}\n\t\tvar x = this.boundaryDamping(this.x, this.leftBoundary, this.rightBoundary, this.kSpringDamping);\n\t\tif (x != this.x) {\n\t\t\tthis.x0 = x - (this.x - this.x0) * this.kSnapFriction;\n\t\t\tthis.x = x;\n\t\t}\n\t},\n\n\t/**\n\t* The friction function.\n\t*\n\t* @private\n\t*/\n\tfriction: function (ex, ex0, coeff) {\n\t\t// implicit velocity\n\t\tvar dp = this[ex] - this[ex0];\n\t\t// let close-to-zero collapse to zero (i.e. smaller than epsilon is considered zero)\n\t\tvar c = Math.abs(dp) > this.kFrictionEpsilon ? coeff : 0;\n\t\t// reposition using damped velocity\n\t\tthis[ex] = this[ex0] + c * dp;\n\t},\n\n\t/** \n\t* One unit of time for simulation.\n\t*\n\t* @private\n\t*/\n\tframe: 10,\n\t// piece-wise constraint simulation\n\tsimulate: function (t) {\n\t\twhile (t >= this.frame) {\n\t\t\tt -= this.frame;\n\t\t\tif (!this.dragging) {\n\t\t\t\tthis.constrain();\n\t\t\t}\n\t\t\tthis.verlet();\n\t\t\tthis.friction('y', 'y0', this.kFrictionDamping);\n\t\t\tthis.friction('x', 'x0', this.kFrictionDamping);\n\t\t}\n\t\treturn t;\n\t},\n\n\t/**\n\t* @fires enyo.ScrollMath#onScrollStop\n\t* @private\n\t*/\n\tanimate: function () {\n\t\tthis.stop();\n\t\t// time tracking\n\t\tvar t0 = utils.perfNow(), t = 0;\n\t\t// delta tracking\n\t\tvar x0, y0;\n\t\t// animation handler\n\t\tvar fn = this.bindSafely(function() {\n\t\t\t// wall-clock time\n\t\t\tvar t1 = utils.perfNow();\n\t\t\t// schedule next frame\n\t\t\tthis.job = animation.requestAnimationFrame(fn);\n\t\t\t// delta from last wall clock time\n\t\t\tvar dt = t1 - t0;\n\t\t\t// record the time for next delta\n\t\t\tt0 = t1;\n\t\t\t// user drags override animation\n\t\t\tif (this.dragging) {\n\t\t\t\tthis.y0 = this.y = this.uy;\n\t\t\t\tthis.x0 = this.x = this.ux;\n\t\t\t\tthis.endX = this.endY = null;\n\t\t\t}\n\t\t\t// frame-time accumulator\n\t\t\t// min acceptable time is 16ms (60fps)\n\t\t\tt += Math.max(16, dt);\n\t\t\t// prevent snapping to originally desired scroll position if we are in overscroll\n\t\t\tif (this.isInOverScroll()) {\n\t\t\t\tthis.endX = null;\n\t\t\t\tthis.endY = null;\n\t\t\t}\n\t\t\t// alternate fixed-time step strategy:\n\t\t\telse if (this.fixedTime) {\n\t\t\t\tt = this.interval;\n\t\t\t}\n\t\t\t// consume some t in simulation\n\t\t\tt = this.simulate(t);\n\t\t\t// scroll if we have moved, otherwise the animation is stalled and we can stop\n\t\t\tif (y0 != this.y || x0 != this.x) {\n\t\t\t\tthis.scroll();\n\t\t\t} else if (!this.dragging) {\n\t\t\t\t// set final values\n\t\t\t\tif (this.endX != null) {\n\t\t\t\t\tthis.x = this.x0 = this.endX;\n\t\t\t\t}\n\t\t\t\tif (this.endY != null) {\n\t\t\t\t\tthis.y = this.y0 = this.endY;\n\t\t\t\t}\n\n\t\t\t\tthis.stop();\n\t\t\t\tthis.scroll();\n\t\t\t\tthis.doScrollStop();\n\n\t\t\t\tthis.endX = null;\n\t\t\t\tthis.endY = null;\n\t\t\t}\n\t\t\ty0 = this.y;\n\t\t\tx0 = this.x;\n\t\t});\n\t\tthis.job = animation.requestAnimationFrame(fn);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tstart: function () {\n\t\tif (!this.job) {\n\t\t\tthis.doScrollStart();\n\t\t\tthis.animate();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstop: function (fire) {\n\t\tvar job = this.job;\n\t\tif (job) {\n\t\t\tthis.job = animation.cancelRequestAnimationFrame(job);\n\t\t}\n\t\tif (fire) {\n\t\t\tthis.doScrollStop();\n\n\t\t\tthis.endX = undefined;\n\t\t\tthis.endY = undefined;\n\t\t}\n\t},\n\n\t/**\n\t* Adjusts the scroll position to be valid, if necessary (e.g., after the scroll contents\n\t* have changed).\n\t*\n\t* @private\n\t*/\n\tstabilize: function (opts) {\n\t\tvar fire = !opts || opts.fire === undefined || opts.fire;\n\t\tvar y = Math.min(this.topBoundary, Math.max(this.bottomBoundary, this.y));\n\t\tvar x = Math.min(this.leftBoundary, Math.max(this.rightBoundary, this.x));\n\t\tif (y != this.y || x != this.x) {\n\t\t\tthis.y = this.y0 = y;\n\t\t\tthis.x = this.x0 = x;\n\t\t\tif (fire) {\n\t\t\t\tthis.doStabilize();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstartDrag: function (e) {\n\t\tthis.dragging = true;\n\t\t//\n\t\tthis.my = e.pageY;\n\t\tthis.py = this.uy = this.y;\n\t\t//\n\t\tthis.mx = e.pageX;\n\t\tthis.px = this.ux = this.x;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdrag: function (e) {\n\t\tvar dy, dx, v, h;\n\t\tif (this.dragging) {\n\t\t\tv = this.canScrollY();\n\t\t\th = this.canScrollX();\n\t\t\n\t\t\tdy = v ? e.pageY - this.my : 0;\n\t\t\tthis.uy = dy + this.py;\n\t\t\t// provides resistance against dragging into overscroll\n\t\t\tthis.uy = this.boundaryDamping(this.uy, this.topBoundary, this.bottomBoundary, this.kDragDamping);\n\t\t\t//\n\t\t\tdx = h ? e.pageX - this.mx : 0;\n\t\t\tthis.ux = dx + this.px;\n\t\t\t// provides resistance against dragging into overscroll\n\t\t\tthis.ux = this.boundaryDamping(this.ux, this.leftBoundary, this.rightBoundary, this.kDragDamping);\n\t\t\t//\n\t\t\tthis.start();\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragDrop: function () {\n\t\tif (this.dragging && !window.PalmSystem) {\n\t\t\tvar kSimulatedFlickScalar = 0.5;\n\t\t\tthis.y = this.uy;\n\t\t\tthis.y0 = this.y - (this.y - this.y0) * kSimulatedFlickScalar;\n\t\t\tthis.x = this.ux;\n\t\t\tthis.x0 = this.x - (this.x - this.x0) * kSimulatedFlickScalar;\n\t\t}\n\t\tthis.dragFinish();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragFinish: function () {\n\t\tthis.dragging = false;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tflick: function (e) {\n\t\tvar v;\n\t\tif (this.canScrollY()) {\n\t\t\tv = e.yVelocity > 0 ? Math.min(this.kMaxFlick, e.yVelocity) : Math.max(-this.kMaxFlick, e.yVelocity);\n\t\t\tthis.y = this.y0 + v * this.kFlickScalar;\n\t\t}\n\t\tif (this.canScrollX()) {\n\t\t\tv = e.xVelocity > 0 ? Math.min(this.kMaxFlick, e.xVelocity) : Math.max(-this.kMaxFlick, e.xVelocity);\n\t\t\tthis.x = this.x0 + v * this.kFlickScalar;\n\t\t}\n\t\tthis.start();\n\t},\n\n\t/**\n\t* TODO: Refine and test newMousewheel, remove this\n\t* @private\n\t*/\n\tmousewheel: function (e) {\n\t\tvar dy = this.vertical ? e.wheelDeltaY || (!e.wheelDeltaX ? e.wheelDelta : 0) : 0,\n\t\t\tdx = this.horizontal ? e.wheelDeltaX : 0,\n\t\t\tshouldScroll = false;\n\t\tif ((dy > 0 && this.y < this.topBoundary) || (dy < 0 && this.y > this.bottomBoundary)) {\n\t\t\tthis.y = this.y0 = this.y0 + dy;\n\t\t\tshouldScroll = true;\n\t\t}\n\t\tif ((dx > 0 && this.x < this.leftBoundary) || (dx < 0 && this.x > this.rightBoundary)) {\n\t\t\tthis.x = this.x0 = this.x0 + dx;\n\t\t\tshouldScroll = true;\n\t\t}\n\t\tthis.stop(!shouldScroll);\n\t\tif (shouldScroll) {\n\t\t\tthis.start();\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tnewMousewheel: function (e) {\n\t\tvar wdY = (e.wheelDeltaY === undefined) ? e.wheelDelta : e.wheelDeltaY,\n\t\t\tdY = wdY,\n\t\t\tdX = e.wheelDeltaX,\n\t\t\tcanY = this.canScrollY(),\n\t\t\tcanX = this.canScrollX(),\n\t\t\tshouldScroll = false,\n\t\t\tm = 2,\n\t\t\t// TODO: Figure out whether we need to port the configurable\n\t\t\t// max / multiplier feature from Moonstone's implementation,\n\t\t\t// and (if so) how\n\t\t\t// max = 100,\n\t\t\tscr = this.isScrolling(),\n\t\t\tovr = this.isInOverScroll(),\n\t\t\trefY = (scr && this.endY !== null) ? this.endY : this.y,\n\t\t\trefX = (scr && this.endX !== null) ? this.endX : this.x,\n\t\t\ttY = refY,\n\t\t\ttX = refX;\n\n\t\tif (ovr) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If we're getting strictly vertical mousewheel events over a scroller that\n\t\t// can only move horizontally, the user is probably using a one-dimensional\n\t\t// mousewheel and would like us to scroll horizontally instead\n\t\tif (dY && !dX && canX && !canY) {\n\t\t\tdX = dY;\n\t\t\tdY = 0;\n\t\t}\n\t\t\n\t\tif (dY && canY) {\n\t\t\ttY = -(refY + (dY * m));\n\t\t\tshouldScroll = true;\n\t\t}\n\t\tif (dX && canX) {\n\t\t\ttX = -(refX + (dX * m));\n\t\t\tshouldScroll = true;\n\t\t}\n\n\t\tif (shouldScroll) {\n\t\t\tthis.scrollTo(tX, tY, {allowOverScroll: true});\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @fires enyo.ScrollMath#onScroll\n\t* @private\n\t*/\n\tscroll: function () {\n\t\tthis.doScroll();\n\t},\n\n\t// NOTE: Yip/Orvell method for determining scroller instantaneous velocity\n\t// FIXME: incorrect if called when scroller is in overscroll region\n\t// because does not account for additional overscroll damping.\n\t\n\t/**\n\t* Scrolls to the specified position.\n\t*\n\t* @param {Number} x - The `x` position in pixels.\n\t* @param {Number} y - The `y` position in pixels.\n\t* @param {Object} opts - TODO: Document. When behavior == 'instant', we skip animation.\n\t* @private\n\t*/\n\tscrollTo: function (x, y, opts) {\n\t\tvar animate = !opts || opts.behavior !== 'instant',\n\t\t\tallowOverScroll = opts && opts.allowOverScroll,\n\t\t\tmaxX = Math.abs(Math.min(0, this.rightBoundary)),\n\t\t\tmaxY = Math.abs(Math.min(0, this.bottomBoundary));\n\n\t\tif (!animate || !allowOverScroll) {\n\t\t\tx = Math.max(0, Math.min(x, maxX));\n\t\t\ty = Math.max(0, Math.min(y, maxY));\n\t\t}\n\n\t\tif (-x == this.x && -y == this.y) return;\n\n\t\tif (!animate) {\n\t\t\tthis.doScrollStart();\n\t\t\tthis.setScrollX(-x);\n\t\t\tthis.setScrollY(-y);\n\t\t\tthis.doScroll();\n\t\t\tthis.doScrollStop();\n\t\t}\n\t\telse {\n\t\t\tif (y !== null) {\n\t\t\t\tthis.endY = -y;\n\t\t\t\tthis.y = this.y0 - (y + this.y0) * (1 - this.kFrictionDamping);\n\t\t\t}\n\t\t\tif (x !== null) {\n\t\t\t\tthis.endX = -x;\n\t\t\t\tthis.x = this.x0 - (x + this.x0) * (1 - this.kFrictionDamping);\n\t\t\t}\n\t\t\tthis.start();\n\t\t}\n\t},\n\n\t/**\n\t* Sets the scroll position along the x-axis.\n\t*\n\t* @param {Number} x - The x-axis scroll position in pixels.\n\t* @method\n\t* @private\n\t*/\n\tsetScrollX: function (x) {\n\t\tthis.x = this.x0 = x;\n\t},\n\n\t/**\n\t* Sets the scroll position along the y-axis.\n\t*\n\t* @param {Number} y - The y-axis scroll position in pixels.\n\t* @method\n\t* @private\n\t*/\n\tsetScrollY: function (y) {\n\t\tthis.y = this.y0 = y;\n\t},\n\n\t/**\n\t* Sets the scroll position; defaults to setting this position along the y-axis.\n\t*\n\t* @param {Number} pos - The scroll position in pixels.\n\t* @method\n\t* @private\n\t*/\n\tsetScrollPosition: function (pos) {\n\t\tthis.setScrollY(pos);\n\t},\n\t\n\tcanScrollX: function() {\n\t\treturn this.horizontal && this.rightBoundary < 0;\n\t},\n\n\tcanScrollY: function() {\n\t\treturn this.vertical && this.bottomBoundary < 0;\n\t},\n\n\n\t/** \n\t* Determines whether or not the [scroller]{@link enyo.Scroller} is actively moving.\n\t* \n\t* @return {Boolean} `true` if actively moving; otherwise, `false`.\n\t* @private\n\t*/\n\tisScrolling: function () {\n\t\treturn Boolean(this.job);\n\t},\n\n\t/** \n\t* Determines whether or not the [scroller]{@link enyo.Scroller} is in overscroll.\n\t* \n\t* @return {Boolean} `true` if in overscroll; otherwise, `false`.\n\t* @private\n\t*/\n\tisInOverScroll: function () {\n\t\treturn this.job && (this.x > this.leftBoundary || this.x < this.rightBoundary ||\n\t\t\tthis.y > this.topBoundary || this.y < this.bottomBoundary);\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind');\nvar\n\tComponent = require('./Component');\n\n/**\n* The extended {@glossary event} [object]{@glossary Object} that is provided\n* when the [onSelect]{@link enyo.Selection#onSelect} and\n* [onDeselect]{@link enyo.Selection#onDeselect} events are fired.\n*\n* @typedef {Object} enyo.Selection~SelectionEvent\n* @property {Number|String} key The key that was used to register the\n*\t[selection]{@link enyo.Selection} (usually a row index).\n* @property {Object} data - References data registered with the key by the code\n* that made the original selection.\n*/\n\n/**\n* Fires when an item is selected.\n* \n* ```javascript\n* {kind: \"Selection\", onSelect: \"selectRow\"...\n* ...\n* selectRow: function(inSender, inEvent) {\n* ...\n* ```\n*\n* @event enyo.Selection#onSelect\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {enyo.Selection~SelectionEvent} event - An [object]{@glossary Object}\n*\tcontaining event information.\n* @public\n*/\n\n/**\n* Fires when an item is deselected.\n* \n* ```javascript\n* {kind: \"Selection\", onSelect: \"deselectRow\"...\n* ...\n* deselectRow: function(inSender, inEvent)\n* ...\n* ```\n*\n* @event enyo.Selection#onDeselect\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {enyo.Selection~SelectionEvent} event - An [object]{@glossary Object}\n*\tcontaining event information.\n* @public\n*/\n\n/**\n* Fires when selection changes (but not when selection is cleared).\n*\n* @event enyo.Selection#onChange\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* {@link enyo.Selection} is used to manage row selection state for lists. It provides\n* selection state management for both single-select and multi-select lists.\n*\n* ```javascript\n* // The following is an excerpt from enyo.FlyweightRepeater.\n* enyo.kind({\n*\tname: \"enyo.FlyweightRepeater\",\n*\t...\n*\tcomponents: [\n*\t\t{kind: \"Selection\", onSelect: \"selectDeselect\", onDeselect: \"selectDeselect\"},\n*\t\t...\n*\t],\n*\ttap: function(inSender, inEvent) {\n*\t\t...\n*\t\t// mark the tapped row as selected\n*\t\tthis.$.selection.select(inEvent.index);\n*\t\t...\n*\t},\n*\tselectDeselect: function(inSender, inEvent) {\n*\t\t// this is where a row selection highlight might be applied\n*\t\tthis.renderRow(inEvent.key);\n*\t}\n*\t...\n* });\n* ```\n*\n* @class enyo.Selection\n* @extends enyo.Component\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Selection.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Selection',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Component,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Selection.prototype */ {\n\n\t\t/**\n\t\t* If `true`, multiple selections are allowed.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tmulti: false\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonSelect: '',\n\t\tonDeselect: '',\n\t\tonChange: ''\n\t},\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.clear();\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tmultiChanged: function () {\n\t\tif (!this.multi) {\n\t\t\tthis.clear();\n\t\t}\n\t\tthis.doChange();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thighlander: function () {\n\t\tif (!this.multi) {\n\t\t\tthis.deselect(this.lastSelected);\n\t\t}\n\t},\n\n\t/**\n\t* Removes all selections.\n\t* \n\t* @public\n\t*/\n\tclear: function () {\n\t\tthis.selected = {};\n\t},\n\n\t/**\n\t* Determines whether a particular row is selected.\n\t*\n\t* @param {Number|String} key - The unique identifier of the row.\n\t* @returns {Boolean} `true` if the specified row is selected; otherwise, `false`.\n\t* @public\n\t*/\n\tisSelected: function (key) {\n\t\treturn this.selected[key];\n\t},\n\n\t/**\n\t* Manually sets a row's state to selected or unselected.\n\t*\n\t* @param {Number|String} key - The unique identifier of the row.\n\t* @param {Boolean} sel - `true` if the row should be selected; `false` if the row\n\t* should be unselected.\n\t* @param {Object} [data] - An optional data [object]{@glossary Object} to store\n\t*\tin the selection for the key that will be sent with the\n\t*\t[onSelect]{@link enyo.Selection#onSelect} or\n\t*\t[onDeselect]{@link enyo.Selection#onDeselect} {@glossary event}. If\n\t*\tnot used, the `data` will be set to `true`.\n\t* @fires enyo.Selection#onChange\n\t* @public\n\t*/\n\tsetByKey: function (key, sel, data) {\n\t\tif (sel) {\n\t\t\tthis.selected[key] = (data || true);\n\t\t\tthis.lastSelected = key;\n\t\t\tthis.doSelect({key: key, data: this.selected[key]});\n\t\t} else {\n\t\t\tvar was = this.isSelected(key);\n\t\t\tdelete this.selected[key];\n\t\t\tthis.doDeselect({key: key, data: was});\n\t\t}\n\t\tthis.doChange();\n\t},\n\n\t/**\n\t* Deselects a row.\n\t*\n\t* @param {Number|String} key - The unique identifier of the row.\n\t* @public\n\t*/\n\tdeselect: function (key) {\n\t\tif (this.isSelected(key)) {\n\t\t\tthis.setByKey(key, false);\n\t\t}\n\t},\n\n\t/**\n\t* Selects a row. If the [multi]{@link enyo.Selection#multi} property is set to `false`,\n\t* this will also deselect the previous [selection]{@link enyo.Selection}.\n\t*\n\t* @param {Number|String} key - The unique identifier of the row.\n\t* @param {Object} [data] - An optional data [object]{@glossary Object} to store\n\t* in the selection for the key that will be sent with the\n\t*\t[onSelect]{@link enyo.Selection#onSelect} or\n\t*\t[onDeselect]{@link enyo.Selection#onDeselect} {@glossary event}. If\n\t*\tnot used, the `data` will be set to `true`.\n\t* @public\n\t*/\n\tselect: function (key, data) {\n\t\tif (this.multi) {\n\t\t\tthis.setByKey(key, !this.isSelected(key), data);\n\t\t} else if (!this.isSelected(key)) {\n\t\t\tthis.highlander();\n\t\t\tthis.setByKey(key, true, data);\n\t\t}\n\t},\n\n\t/**\n\t* Toggles [selection]{@link enyo.Selection} state for a row. If the\n\t* [multi]{@link enyo.Selection#multi} property is set to `false`, toggling a\n\t* selection \"on\" will deselect the previous selection.\n\t*\n\t* @param {Number|String} key - The unique identifier of the row.\n\t* @param {Object} [data] - An optional data [object]{@glossary Object} to store\n\t* in the selection for the key that will be sent with the\n\t*\t[onSelect]{@link enyo.Selection#onSelect} or\n\t*\t[onDeselect]{@link enyo.Selection#onDeselect} {@glossary event}. If\n\t*\tnot used, the `data` will be set to `true`.\n\t* @public\n\t*/\n\ttoggle: function (key, data) {\n\t\tif (!this.multi && this.lastSelected != key) {\n\t\t\tthis.deselect(this.lastSelected);\n\t\t}\n\t\tthis.setByKey(key, !this.isSelected(key), data);\n\t},\n\n\t/**\n\t* Retrieves the current [selection]{@link enyo.Selection}.\n\t*\n\t* @returns {Object} The selection as a [hash]{@glossary Object} in which each\n\t* selected item has a value; unselected items are [undefined]{@glossary undefined}.\n\t* @public\n\t*/\n\tgetSelected: function () {\n\t\treturn this.selected;\n\t},\n\n\t/**\n\t* Removes a row that's included in the [selection]{@link enyo.Selection} set.\n\t* If this row is selected, it will be unselected.  Any rows above this row\n\t* will have their keys value reduced by one.\n\t*\n\t* @param {Number|String} key - The unique identifier of the row.\n\t* @public\n\t*/\n\tremove: function (key) {\n\t\tvar newSelected = {};\n\t\tfor (var row in this.selected) {\n\t\t\tif (row < key) {\n\t\t\t\tnewSelected[row] = this.selected[row];\n\t\t\t} else if (row > key) {\n\t\t\t\tnewSelected[row - 1] = this.selected[row];\n\t\t\t}\n\t\t}\n\t\tthis.selected = newSelected;\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\n\nvar\n\tComponent = require('./Component');\n\n/**\n* {@link enyo.Signals} is a [component]{@link enyo.Component} used to listen\n* to global messages.\n* \n* An object with a Signals component can listen to messages sent from anywhere\n* by declaring handlers for them.\n* \n* DOM [events]{@glossary event} that have no node targets are broadcast as\n* signals. These events include Window events, such as `onload` and\n* `onbeforeunload`, as well as events that occur directly on `document`, such\n* as `onkeypress` if `document` has the focus.\n* \n* For more information, see the documentation on [Event\n* Handling]{@linkplain $dev-guide/key-concepts/event-handling.html} in the\n* Enyo Developer Guide.\n*\n* @class enyo.Signals\n* @extends enyo.Component\n* @public\n*/\nvar Signals = module.exports = kind(\n\t/** @lends enyo.Signals.prototype */ {\n\n\tname: 'enyo.Signals',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Component,\n\n\t/**\n\t* Needed because of early calls to bind DOM {@glossary event} listeners\n\t* to the [enyo.Signals.send()]{@link enyo.Signals#send} call.\n\t* \n\t* @private\n\t*/\n\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tSignals.addListener(this);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tSignals.removeListener(this);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tnotify: function (msg, load) {\n\t\tthis.dispatchEvent(msg, load);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tprotectedStatics: {\n\t\tlisteners: [],\n\t\taddListener: function(listener) {\n\t\t\tthis.listeners.push(listener);\n\t\t},\n\t\tremoveListener: function(listener) {\n\t\t\tutils.remove(listener, this.listeners);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstatics: \n\t\t/** @lends enyo.Signals.prototype */ {\n\n\t\t/**\n\t\t* Broadcasts a global message to be consumed by subscribers.\n\t\t* \n\t\t* @param {String} msg - The message to send; usually the name of the\n\t\t*\t{@glossary event}.\n\t\t* @param {Object} load - An [object]{@glossary Object} containing any\n\t\t*\tassociated event properties to be accessed by subscribers.\n\t\t* @public\n\t\t*/\n\t\tsend: function (msg, load) {\n\t\t\tutils.forEach(this.listeners, function(l) {\n\t\t\t\tl.notify(msg, load);\n\t\t\t});\n\t\t}\n\t}\n});","require('../../enyo');\n\nvar\n\tSignals = require('./Signals');\n\n/**\n* Provides a stub function for g11n string translation. This allows strings to be wrapped in\n* preparation for localization. If a g11n library is not loaded, this function will return the\n* string as is.\n* \n* `$L('Welcome')`\n* \n* If a compatible g11n library is loaded, this function will be replaced by the g11n library's\n* version, which translates wrapped strings to strings from a developer-provided resource file\n* corresponding to the current user locale.\n*\n* @name $L\n* @scope global\n* @type {Function}\n* @param {String} str - The {@glossary String} to translate.\n* @returns {String} The translated {@glossary String}.\n* @public\n*/\nexports.$L = function (str) {\n\treturn str;\n};\n\n/**\n* THE BELOW MAY NOT BE RELEVANT MOVING FORWARD BUT IS RETAINED FOR POSTERITY.\n*\n* Enyo controls may register for an `onlocalechange` signal to dynamically update their\n* presentation based on changes to the user's locale. This feature is currently used in webOS,\n* where Cordova for webOS listens for changes to the system locales and fires a `localechange`\n* event on the `document` object. Similar functionality could be implemented on other platforms\n* via a Cordova plugin or by other means.\n* \n* Enyo registers an event listener for the `localechange` event and broadcasts the\n* `onlocalechange` signal when the locale has changed. Before broadcasting, Enyo calls\n* `enyo.updateLocale()`. The default implementation of `enyo.updateLocale()` is a stub, but a\n* g11n library may override it to update its internal state before the `onlocalechange` signal\n* is broadcast.\n* \n* This feature is not supported on IE8, which doesn't support `addEventListener()`.\n*\n* @private\n*/\nexports.updateLocale = function updateLocale () {\n\t// This is a stub, to be implemented by a g11n library as needed\n\tSignals.send('onlocalechange');\n};\n\n// this...may not work the way it used to...\nif (document.addEventListener) {\n\tdocument.addEventListener('localechange', function(e) {\n\t\texports.updateLocale();\n\t}, false);\n}","require('../../enyo');\n\nvar\n\tutils = require('./utils');\nvar\n\tComponent = require('./Component'),\n\tSignals = require('./Signals');\n\n/**\n* Default owner assigned to ownerless [UiComponents]{@link enyo.UiComponent},\n* to allow such UiComponents to be notified of important system events like window resize.\n*\n* NOTE: Ownerless [UiComponents]{@link enyo.UiComponent} will not be garbage collected unless \n* explicitly destroyed, as they will be referenced by `enyo.master`.\n*\n* @private\n*/\nvar master = module.exports = new Component({\n\tname: 'master',\n\tnotInstanceOwner: true,\n\teventFlags: {showingOnly: true}, // don't waterfall these events into hidden controls\n\tgetId: function () {\n\t\treturn '';\n\t},\n\tisDescendantOf: utils.nop,\n\tbubble: function (nom, event) {\n\t\t//enyo.log('master event: ' + nom);\n\t\tif (nom == 'onresize') {\n\t\t\t// Resize is special; waterfall this message.\n\t\t\t// This works because master is a Component, so it waterfalls\n\t\t\t// to its owned Components (i.e., master has no children).\n\t\t\tmaster.waterfallDown('onresize', this.eventFlags);\n\t\t\tmaster.waterfallDown('onpostresize', this.eventFlags);\n\t\t} else {\n\t\t\t// All other top-level events are sent only to interested Signal\n\t\t\t// receivers.\n\t\t\tSignals.send(nom, event);\n\t\t}\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tmaster = require('./master');\n\nvar\n\tComponent = require('./Component');\n\n/**\n* {@link enyo.UiComponent} implements a container strategy suitable for presentation layers.\n* \n* `UiComponent` itself is abstract. Concrete [subkinds]{@glossary subkind} include\n* {@link enyo.Control} (for HTML/DOM) and\n* {@link enyo.canvas.Control} (for Canvas contexts).\n*\n* @class enyo.UiComponent\n* @extends enyo.Component\n* @public\n*/\nvar UiComponent = module.exports = kind(\n\t/** @lends enyo.UiComponent.prototype */ {\n\n\tname: 'enyo.UiComponent',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Component,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends  enyo.UiComponent.prototype */ {\n\n\t\t/** \n\t\t* The [UiComponent]{@link enyo.UiComponent} that physically contains this \n\t\t* [component]{@link enyo.Component} in the DOM.\n\t\t*\n\t\t* @type {enyo.UiComponent}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tcontainer: null,\n\n\t\t/**\n\t\t* The [UiComponent]{@link enyo.UiComponent} that owns this\n\t\t* [component]{@link enyo.Component} for purposes of {@glossary event}\n\t\t* propagation.\n\t\t*\n\t\t* @type {enyo.UiComponent}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tparent: null,\n\n\t\t/**\n\t\t* The [UiComponent]{@link enyo.UiComponent} that will physically contain new items added\n\t\t* by calls to [createComponent()]{@link enyo.UiComponent#createComponent}.\n\t\t*\n\t\t* @type {String}\n\t\t* @default 'client'\n\t\t* @public\n\t\t*/\n\t\tcontrolParentName: 'client',\n\t\t\n\t\t/** \n\t\t* A [kind]{@glossary kind} used to manage the size and placement of child \n\t\t* [components]{@link enyo.Component}.\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\tlayoutKind: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonresize: 'handleResize'\n\t},\n\n\t/**\n\t* When set, provides a [control]{@link enyo.Control} reference used to indicate where a\n\t* newly-created [component]{@link enyo.Component} should be added in the\n\t* [UiComponent's]{@link enyo.UiComponent} [array]{@glossary Array} of children. This is\n\t* typically used when creating children dynamically (rather than at design time). If set\n\t* to `null`, the new control will be added at the beginning of the array; if set to a\n\t* specific existing control, the new control will be added before the specified\n\t* control. If left as `undefined`, the default behavior is to add the new control\n\t* at the end of the array.\n\t*\n\t* @type {enyo.Control}\n\t* @default undefined\n\t* @public\n\t*/\n\taddBefore: undefined,\n\t\n\t/**\n\t* @private\n\t*/\n\tprotectedStatics: {\n\t\t_resizeFlags: {showingOnly: true} // don't waterfall these events into hidden controls\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.controls = this.controls || [];\n\t\t\tthis.children = this.children || [];\n\t\t\tthis.containerChanged();\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.layoutKindChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\t// Destroys all non-chrome controls (regardless of owner).\n\t\t\tthis.destroyClientControls();\n\t\t\t// Removes us from our container.\n\t\t\tthis.setContainer(null);\n\t\t\t// Destroys chrome controls owned by this.\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\timportProps: kind.inherit(function (sup) {\n\t\treturn function(inProps) {\n\t\t\tsup.apply(this, arguments);\n\t\t\tif (!this.owner) {\n\t\t\t\tthis.owner = master;\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* Creates [components]{@link enyo.Component} as defined by the [arrays]{@glossary Array}\n\t* of base and additional property [hashes]{@glossary Object}. The standard and \n\t* additional property hashes are combined as described in\n\t* {@link enyo.Component#createComponent}.\n\t* \n\t* ```\n\t* // ask foo to create components 'bar' and 'zot', but set the owner of\n\t* // both components to 'this'.\n\t* this.$.foo.createComponents([\n\t*\t{name: 'bar'},\n\t*\t{name: 'zot'}\n\t* ], {owner: this});\n\t* ```\n\t*\n\t* As implemented, [controlParentName]{@link enyo.UiComponent#controlParentName} only works\n\t* to identify an owned control created via `createComponents()`\n\t* (i.e., usually in our `components` block). To attach a `controlParent` via other means, \n\t* one must call [discoverControlParent()]{@link enyo.UiComponent#discoverControlParent} or \n\t* set `controlParent` directly.\n\t* \n\t* We could call `discoverControlParent()` in\n\t* [addComponent()]{@link enyo.Component#addComponent}, but that would\n\t* cause a lot of useless checking.\n\t* \n\t* @param {Object[]} props The array of {@link enyo.Component} definitions to be created.\n\t* @param {Object} ext - Additional properties to be supplied as defaults for each.\n\t* @returns {enyo.Component[]} The array of components that were created.\n\t* @method\n\t* @public\n\t*/\n\t// \n\tcreateComponents: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tvar results = sup.apply(this, arguments);\n\t\t\tthis.discoverControlParent();\n\t\t\treturn results;\n\t\t};\n\t}),\n\n\t/**\n\t* Determines and sets the current [control's]{@link enyo.Control} parent.\n\t*\n\t* @protected\n\t*/\n\tdiscoverControlParent: function () {\n\t\tthis.controlParent = this.$[this.controlParentName] || this.controlParent;\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tadjustComponentProps: kind.inherit(function (sup) {\n\t\treturn function(inProps) {\n\t\t\t// Components we create have us as a container by default.\n\t\t\tinProps.container = inProps.container || this;\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Containment\n\t* \n\t* @method\n\t* @private\n\t*/\n\tcontainerChanged: function (container) {\n\t\tif (container) {\n\t\t\tcontainer.removeControl(this);\n\t\t}\n\t\tif (this.container) {\n\t\t\tthis.container.addControl(this, this.addBefore);\n\t\t}\n\t},\n\n\t/**\n\t* Parentage\n\t* \n\t* @method\n\t* @private\n\t*/\n\tparentChanged: function (oldParent) {\n\t\tif (oldParent && oldParent != this.parent) {\n\t\t\toldParent.removeChild(this);\n\t\t}\n\t},\n\n\t/**\n\t* Determines whether the [control]{@link enyo.Control} is a descendant of\n\t* another control.\n\t* \n\t* Note: Oddly, a control is considered to be a descendant of itself.\n\t*\n\t* @param {enyo.Control} ancestor - The [control]{@link enyo.Control} whose lineage\n\t*\twill be checked to determine whether the current control is a descendant.\n\t* @public\n\t*/\n\tisDescendantOf: function (ancestor) {\n\t\tvar p = this;\n\t\twhile (p && p!=ancestor) {\n\t\t\tp = p.parent;\n\t\t}\n\t\treturn ancestor && (p === ancestor);\n\t},\n\n\t/**\n\t* Returns all controls.\n\t*\n\t* @returns {enyo.Control[]} An [array]{@glossary Array} of [controls]{@link enyo.Control}.\n\t* @public\n\t*/\n\tgetControls: function () {\n\t\treturn this.controls;\n\t},\n\n\t/**\n\t* Returns all non-chrome controls.\n\t*\n\t* @returns {enyo.Control[]} An [array]{@glossary Array} of [controls]{@link enyo.Control}.\n\t* @public\n\t*/\n\tgetClientControls: function () {\n\t\tvar results = [];\n\t\tfor (var i=0, cs=this.controls, c; (c=cs[i]); i++) {\n\t\t\tif (!c.isChrome) {\n\t\t\t\tresults.push(c);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t},\n\n\t/**\n\t* Destroys \"client controls\", the same set of [controls]{@link enyo.Control} returned by \n\t* [getClientControls()]{@link enyo.UiComponent#getClientControls}.\n\t*\n\t* @public\n\t*/\n\tdestroyClientControls: function () {\n\t\tvar c$ = this.getClientControls();\n\t\tfor (var i=0, c; (c=c$[i]); i++) {\n\t\t\tc.destroy();\n\t\t}\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\taddControl: function (ctl, before) {\n\t\t// Called to add an already created control to the object's control list. It is\n\t\t// not used to create controls and should likely not be called directly.\n\t\t// It can be overridden to detect when controls are added.\n\t\tif (before !== undefined) {\n\t\t\tvar idx = (before === null) ? 0 : this.indexOfControl(before);\n\t\t\tthis.controls.splice(idx, 0, ctl);\n\t\t} else {\n\t\t\tthis.controls.push(ctl);\n\t\t}\n\t\t// When we add a Control, we also establish a parent.\n\t\tthis.addChild(ctl, before);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tremoveControl: function (ctl) {\n\t\t// Called to remove a control from the object's control list. As with addControl it\n\t\t// can be overridden to detect when controls are removed.\n\t\t// When we remove a Control, we also remove it from its parent.\n\t\tctl.setParent(null);\n\t\treturn utils.remove(ctl, this.controls);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tindexOfControl: function (ctl) {\n\t\treturn utils.indexOf(ctl, this.controls);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tindexOfClientControl: function (ctl) {\n\t\treturn utils.indexOf(ctl, this.getClientControls());\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tindexInContainer: function () {\n\t\treturn this.container.indexOfControl(this);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclientIndexInContainer: function () {\n\t\treturn this.container.indexOfClientControl(this);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcontrolAtIndex: function (idx) {\n\t\treturn this.controls[idx];\n\t},\n\t\n\t/**\n\t* Determines what the following sibling [control]{@link enyo.Control} is for the current\n\t* [control]{@link enyo.Control}.\n\t*\n\t* @returns {enyo.Control | null} The [control]{@link enyo.Control} that is the] following\n\t*\tsibling. If no following sibling exists, we return `null`.\n\t* @public\n\t*/\n\tgetNextControl: function () {\n\t\tvar comps = this.getParent().children,\n\t\t\tcomp,\n\t\t\tsibling,\n\t\t\ti;\n\t\n\t\tfor (i = comps.length - 1; i >= 0; i--) {\n\t\t\tcomp = comps[i];\n\t\t\tif (comp === this) return sibling ? sibling : null;\n\t\t\tif (comp.generated) sibling = comp;\n\t\t}\n\t\n\t\treturn null;\n\t},\n\t\n\t/**\n\t* Children\n\t* \n\t* @private\n\t*/\n\taddChild: function (child, before) {\n\t\t// if before is undefined, add to the end of the child list.\n\t\t// If it's null, add to front of list, otherwise add before the\n\t\t// specified control.\n\t\t//\n\t\t// allow delegating the child to a different container\n\t\tif (this.controlParent /*&& !child.isChrome*/) {\n\t\t\t// this.controlParent might have a controlParent, and so on; seek the ultimate parent\n\t\t\tthis.controlParent.addChild(child, before);\n\t\t} else {\n\t\t\t// NOTE: addChild drives setParent.\n\t\t\t// It's the opposite for setContainer, where containerChanged (in Containable)\n\t\t\t// drives addControl.\n\t\t\t// Because of the way 'parent' is derived from 'container', this difference is\n\t\t\t// helpful for implementing controlParent.\n\t\t\t// By the same token, since 'parent' is derived from 'container', setParent is\n\t\t\t// not intended to be called by client code. Therefore, the lack of parallelism\n\t\t\t// should be private to this implementation.\n\t\t\t// Set the child's parent property to this\n\t\t\tchild.setParent(this);\n\t\t\t// track in children array\n\t\t\tif (before !== undefined) {\n\t\t\t\tvar idx = (before === null) ? 0 : this.indexOfChild(before);\n\t\t\t\tthis.children.splice(idx, 0, child);\n\t\t\t} else {\n\t\t\t\tthis.children.push(child);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tremoveChild: function (child) {\n\t\treturn utils.remove(child, this.children);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tindexOfChild: function (child) {\n\t\treturn utils.indexOf(child, this.children);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tlayoutKindChanged: function () {\n\t\tif (this.layout) {\n\t\t\tthis.layout.destroy();\n\t\t}\n\t\tthis.layout = kind.createFromKind(this.layoutKind, this);\n\t\tif (this.generated) {\n\t\t\tthis.render();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tflow: function () {\n\t\tif (this.layout) {\n\t\t\tthis.layout.flow();\n\t\t}\n\t},\n\n\t/**\n\t* CAVEAT: currently we use the entry point for both post-render layout work *and* \n\t* post-resize layout work.\n\t* @private\n\t*/\n\treflow: function () {\n\t\tif (this.layout) {\n\t\t\tthis.layout.reflow();\n\t\t}\n\t},\n\n\t/**\n\t* Call after this [control]{@link enyo.Control} has been resized to allow it to process the \n\t* size change. To respond to a resize, override `handleResize()` instead. Acts as syntactic \n\t* sugar for `waterfall('onresize')`.\n\t* \n\t* @public\n\t*/\n\tresize: function () {\n\t\tthis.waterfall('onresize', UiComponent._resizeFlags);\n\t\tthis.waterfall('onpostresize', UiComponent._resizeFlags);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\thandleResize: function () {\n\t\t// FIXME: once we are in the business of reflowing layouts on resize, then we have an\n\t\t// inside/outside problem: some scenarios will need to reflow before child\n\t\t// controls reflow, and some will need to reflow after. Even more complex scenarios\n\t\t// have circular dependencies, and can require multiple passes or other resolution.\n\t\t// When we can rely on CSS to manage reflows we do not have these problems.\n\t\tthis.reflow();\n\t},\n\n\t/**\n\t* Sends a message to all of my descendants, but not myself. You can stop a\n\t* [waterfall]{@link enyo.Component#waterfall} into [components]{@link enyo.Component}\n\t* owned by a receiving [object]{@glossary Object} by returning a truthy value from the\n\t* {@glossary event} [handler]{@link enyo.Component~EventHandler}.\n\t* \n\t* @param {String} nom - The name of the {@glossary event}.\n\t* @param {Object} [event] - The event object to pass along.\n\t* @param {enyo.Component} [sender=this] - The event's originator.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\twaterfallDown: function (nom, event, sender) {\n\t\tevent = event || {};\n\t\t// Note: Controls will generally be both in a $ hash and a child list somewhere.\n\t\t// Attempt to avoid duplicated messages by sending only to components that are not\n\t\t// UiComponent, as those components are guaranteed not to be in a child list.\n\t\t// May cause a problem if there is a scenario where a UiComponent owns a pure\n\t\t// Component that in turn owns Controls.\n\t\t//\n\t\t// waterfall to all pure components\n\t\tfor (var n in this.$) {\n\t\t\tif (!(this.$[n] instanceof UiComponent)) {\n\t\t\t\tthis.$[n].waterfall(nom, event, sender);\n\t\t\t}\n\t\t}\n\t\t// waterfall to my children\n\t\tfor (var i=0, cs=this.children, c; (c=cs[i]); i++) {\n\t\t\t// Do not send {showingOnly: true} events to hidden controls. This flag is set for resize events\n\t\t\t// which are broadcast from within the framework. This saves a *lot* of unnecessary layout.\n\t\t\t// TODO: Maybe remember that we did this, and re-send those messages on setShowing(true)?\n\t\t\t// No obvious problems with it as-is, though\n\t\t\tif (c.showing || !(event && event.showingOnly)) {\n\t\t\t\tc.waterfall(nom, event, sender);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetBubbleTarget: function (nom, event) {\n\t\tif (event.delegate) return this.owner;\n\t\telse {\n\t\t\treturn (\n\t\t\t\tthis.bubbleTarget\n\t\t\t\t|| (this.cachedBubble && this.cachedBubbleTarget[nom])\n\t\t\t\t|| this.parent\n\t\t\t\t|| this.owner\n\t\t\t);\n\t\t}\n\t}\n});","require('../../enyo');\n\nvar\n\tlogger = require('./logger'),\n\tmaster = require('./master'),\n\tutils = require('./utils'),\n\tplatform = require('./platform');\n\nvar\n\tDom = require('./dom');\n\n/**\n * An [object]{@glossary Object} describing the the last known coordinates of the cursor or\n * user-interaction point in touch environments.\n *\n * @typedef {Object} enyo.dispatcher~CursorCoordinates\n * @property {Number} clientX - The horizontal coordinate within the application's client area.\n * @property {Number} clientY - The vertical coordinate within the application's client area.\n * @property {Number} pageX - The X coordinate of the cursor relative to the viewport, including any\n *   scroll offset.\n * @property {Number} pageY - The Y coordinate of the cursor relative to the viewport, including any\n *   scroll offset.\n * @property {Number} screenX - The X coordinate of the cursor relative to the screen, not including\n *   any scroll offset.\n * @property {Number} screenY - The Y coordinate of the cursor relative to the screen, not including\n *   any scroll offset.\n */\n\n/**\n* @private\n*/\n\n/**\n* @private\n*/\nvar dispatcher = module.exports = dispatcher =\n\t/** @lends enyo.dispatcher.prototype */ {\n\n\t$: {},\n\n\t/**\n\t* These events come from document\n\t*\n\t* @private\n\t*/\n\tevents: [\"mousedown\", \"mouseup\", \"mouseover\", \"mouseout\", \"mousemove\", \"mousewheel\",\n\t\t\"click\", \"dblclick\", \"change\", \"keydown\", \"keyup\", \"keypress\", \"input\",\n\t\t\"paste\", \"copy\", \"cut\", \"webkitTransitionEnd\", \"transitionend\", \"webkitAnimationEnd\", \"animationend\",\n\t\t\"webkitAnimationStart\", \"animationstart\", \"webkitAnimationIteration\", \"animationiteration\"],\n\n\t/**\n\t* These events come from window\n\t*\n\t* @private\n\t*/\n\twindowEvents: [\"resize\", \"load\", \"unload\", \"message\", \"hashchange\", \"popstate\", \"focus\", \"blur\"],\n\n\t/**\n\t* Feature plugins (aka filters)\n\t*\n\t* @private\n\t*/\n\tfeatures: [],\n\n\t/**\n\t* @private\n\t*/\n\tconnect: function() {\n\t\tvar d = dispatcher, i, n;\n\t\tfor (i=0; (n=d.events[i]); i++) {\n\t\t\td.listen(document, n);\n\t\t}\n\t\tfor (i=0; (n=d.windowEvents[i]); i++) {\n\t\t\t// Chrome Packaged Apps don't like \"unload\"\n\t\t\tif(n === \"unload\" &&\n\t\t\t\t(typeof global.chrome === \"object\") &&\n\t\t\t\tglobal.chrome.app) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\td.listen(window, n);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tlisten: function(inListener, inEventName, inHandler) {\n\t\tif (inListener.addEventListener) {\n\t\t\tthis.listen = function(inListener, inEventName, inHandler) {\n\t\t\t\tinListener.addEventListener(inEventName, inHandler || dispatch, false);\n\t\t\t};\n\t\t} else {\n\t\t\t//enyo.log(\"IE8 COMPAT: using 'attachEvent'\");\n\t\t\tthis.listen = function(inListener, inEvent, inHandler) {\n\t\t\t\tinListener.attachEvent(\"on\" + inEvent, function(e) {\n\t\t\t\t\te.target = e.srcElement;\n\t\t\t\t\tif (!e.preventDefault) {\n\t\t\t\t\t\te.preventDefault = this.iePreventDefault;\n\t\t\t\t\t}\n\t\t\t\t\treturn (inHandler || dispatch)(e);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t\tthis.listen(inListener, inEventName, inHandler);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstopListening: function(inListener, inEventName, inHandler) {\n\t\tif (inListener.addEventListener) {\n\t\t\tthis.stopListening = function(inListener, inEventName, inHandler) {\n\t\t\t\tinListener.removeEventListener(inEventName, inHandler || dispatch, false);\n\t\t\t};\n\t\t} else {\n\t\t\t//enyo.log(\"IE8 COMPAT: using 'detachEvent'\");\n\t\t\tthis.stopListening = function(inListener, inEvent, inHandler) {\n\t\t\t\tinListener.detachEvent(\"on\" + inEvent, inHandler || dispatch);\n\t\t\t};\n\t\t}\n\t\tthis.stopListening(inListener, inEventName, inHandler);\n\t},\n\n\t/**\n\t* Fires an event for Enyo to listen for.\n\t*\n\t* @private\n\t*/\n\tdispatch: function(e) {\n\t\t// Find the control who maps to e.target, or the first control that maps to an ancestor of e.target.\n\t\tvar c = this.findDispatchTarget(e.target) || this.findDefaultTarget();\n\t\t// Cache the original target\n\t\te.dispatchTarget = c;\n\t\t// support pluggable features return true to abort immediately or set e.preventDispatch to avoid processing.\n\t\tfor (var i=0, fn; (fn=this.features[i]); i++) {\n\t\t\tif (fn.call(this, e) === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (c && !e.preventDispatch) {\n\t\t\treturn this.dispatchBubble(e, c);\n\t\t}\n\t},\n\n\t/**\n\t* Takes an event target and finds the corresponding Enyo control.\n\t*\n\t* @private\n\t*/\n\tfindDispatchTarget: function(inNode) {\n\t\tvar t, n = inNode;\n\t\t// FIXME: Mozilla: try/catch is here to squelch \"Permission denied to access property xxx from a non-chrome context\"\n\t\t// which appears to happen for scrollbar nodes in particular. It's unclear why those nodes are valid targets if\n\t\t// it is illegal to interrogate them. Would like to trap the bad nodes explicitly rather than using an exception block.\n\t\ttry {\n\t\t\twhile (n) {\n\t\t\t\tif ((t = this.$[n.id])) {\n\t\t\t\t\t// there could be multiple nodes with this id, the relevant node for this event is n\n\t\t\t\t\t// we don't push this directly to t.node because sometimes we are just asking what\n\t\t\t\t\t// the target 'would be' (aka, calling findDispatchTarget from handleMouseOverOut)\n\t\t\t\t\tt.eventNode = n;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tn = n.parentNode;\n\t\t\t}\n\t\t} catch(x) {\n\t\t\tlogger.log(x, n);\n\t\t}\n\t\treturn t;\n\t},\n\n\t/**\n\t* Returns the default Enyo control for events.\n\t*\n\t* @private\n\t*/\n\tfindDefaultTarget: function() {\n\t\treturn master;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdispatchBubble: function(e, c) {\n\t\tvar type = e.type;\n\t\ttype = e.customEvent ? type : \"on\" + type;\n\t\treturn c.bubble(type, e, c);\n\t}\n};\n\n/**\n* Called in the context of an event.\n*\n* @private\n*/\ndispatcher.iePreventDefault = function() {\n\ttry {\n\t\tthis.returnValue = false;\n\t}\n\tcatch(e) {\n\t\t// do nothing\n\t}\n};\n\n/**\n* @private\n*/\nfunction dispatch (inEvent) {\n\treturn dispatcher.dispatch(inEvent);\n}\n\n/**\n* @private\n*/\ndispatcher.bubble = function(inEvent) {\n\t// '|| window.event' clause needed for IE8\n\tvar e = inEvent || global.event;\n\tif (e) {\n\t\t// We depend on e.target existing for event tracking and dispatching.\n\t\tif (!e.target) {\n\t\t\te.target = e.srcElement;\n\t\t}\n\t\tdispatcher.dispatch(e);\n\t}\n};\n\n// This string is set on event handlers attributes for DOM elements that\n// don't normally bubble (like onscroll) so that they can participate in the\n// Enyo event system.\ndispatcher.bubbler = \"enyo.bubble(arguments[0])\";\n\n// The code below helps make Enyo compatible with Google Packaged Apps\n// Content Security Policy(http://developer.chrome.com/extensions/contentSecurityPolicy.html),\n// which, among other things, forbids the use of inline scripts.\n// We replace online scripting with equivalent means, leaving enyo.bubbler\n// for backward compatibility.\n(function() {\n\tvar bubbleUp = function() {\n\t\tdispatcher.bubble(arguments[0]);\n\t};\n\n\t/**\n\t* Makes given events bubble on a specified Enyo control.\n\t*\n\t* @private\n\t*/\n\tdispatcher.makeBubble = function() {\n\t\tvar args = Array.prototype.slice.call(arguments, 0),\n\t\t\tcontrol = args.shift();\n\n\t\tif((typeof control === \"object\") && (typeof control.hasNode === \"function\")) {\n\t\t\tutils.forEach(args, function(event) {\n\t\t\t\tif(this.hasNode()) {\n\t\t\t\t\tdispatcher.listen(this.node, event, bubbleUp);\n\t\t\t\t}\n\t\t\t}, control);\n\t\t}\n\t};\n\n\t/**\n\t* Removes the event listening and bubbling initiated by\n\t* [enyo.makeBubble()]{@link enyo.makeBubble} on a specific control.\n\t*\n\t* @private\n\t*/\n\tdispatcher.unmakeBubble = function() {\n\t\tvar args = Array.prototype.slice.call(arguments, 0),\n\t\t\tcontrol = args.shift();\n\n\t\tif((typeof control === \"object\") && (typeof control.hasNode === \"function\")) {\n\t\t\tutils.forEach(args, function(event) {\n\t\t\t\tif(this.hasNode()) {\n\t\t\t\t\tdispatcher.stopListening(this.node, event, bubbleUp);\n\t\t\t\t}\n\t\t\t}, control);\n\t\t}\n\t};\n})();\n\n/**\n* @private\n*/\n// FIXME: we need to create and initialize dispatcher someplace else to allow overrides\nDom.requiresWindow(dispatcher.connect);\n\n/**\n* Generates a tapped event for a raw-click event.\n*\n* @private\n*/\ndispatcher.features.push(\n\tfunction (e) {\n\t\tif (\"click\" === e.type) {\n\t\t\tif (e.clientX === 0 && e.clientY === 0 && !e.detail) {\n\t\t\t\t// this allows the click to dispatch as well\n\t\t\t\t// but note the tap event will fire first\n\t\t\t\tvar cp = utils.clone(e);\n\t\t\t\tcp.type = \"tap\";\n\t\t\t\tcp.preventDefault = utils.nop;\n\t\t\t\tdispatcher.dispatch(cp);\n\t\t\t}\n\t\t}\n\t}\n);\n\n/**\n* Instead of having multiple `features` pushed and handled in separate methods\n* for these events, we handle them uniformly here to expose the last known\n* interaction coordinates as accurately as possible.\n*\n* @private\n*/\nvar _xy = {};\ndispatcher.features.push(\n\tfunction (e) {\n\t\tif (\n\t\t\t(e.type == \"mousemove\")  ||\n\t\t\t(e.type == \"tap\")        ||\n\t\t\t(e.type == \"click\")      ||\n\t\t\t(e.type == \"touchmove\")\n\t\t) {\n\t\t\t_xy.clientX = e.clientX;\n\t\t\t_xy.clientY = e.clientY;\n\t\t\t// note only ie8 does not support pageX/pageY\n\t\t\t_xy.pageX   = e.pageX;\n\t\t\t_xy.pageY   = e.pageY;\n\t\t\t// note ie8 and opera report these values incorrectly\n\t\t\t_xy.screenX = e.screenX;\n\t\t\t_xy.screenY = e.screenY;\n\t\t}\n\t}\n);\n\n/**\n* Retrieves the last known coordinates of the cursor or user-interaction point\n* in touch environments. Returns an immutable object with the `clientX`,\n* `clientY`, `pageX`, `pageY`, `screenX`, and `screenY` properties. It is\n* important to note that IE8 and Opera have improper reporting for the\n* `screenX` and `screenY` properties (they both use CSS pixels as opposed to\n* device pixels) and IE8 has no support for the `pageX` and `pageY` properties,\n* so they are facaded.\n*\n* @returns {enyo.dispatcher~CursorCoordinates} An [object]{@glossary Object} describing the\n*\tthe last known coordinates of the cursor or user-interaction point in touch environments.\n* @public\n*/\ndispatcher.getPosition = function () {\n\tvar p = utils.clone(_xy);\n\t// if we are in ie8 we facade the _pageX, pageY_ properties\n\tif (platform.ie < 9) {\n\t\tvar d = (document.documentElement || document.body.parentNode || document.body);\n\t\tp.pageX = (p.clientX + d.scrollLeft);\n\t\tp.pageY = (p.clientY + d.scrollTop);\n\t}\n\treturn p;\n};\n\n\n/**\n* Key mapping feature: Adds a `keySymbol` property to key [events]{@glossary event},\n* based on a global key mapping. Use\n* [enyo.dispatcher.registerKeyMap()]{@link enyo.dispatcher.registerKeyMap} to add\n* keyCode-to-keySymbol mappings via a simple hash. This method may be called\n* multiple times from different libraries to mix different maps into the global\n* mapping table; if conflicts arise, the last-in wins.\n*\n* ```\n* enyo.dispatcher.registerKeyMap({\n* \t415 : 'play',\n* \t413 : 'stop',\n* \t19  : 'pause',\n* \t412 : 'rewind',\n* \t417 : 'fastforward'\n* });\n* ```\n* \n* @private\n*/\ndispatcher.features.push(function(e) {\n\tif ((e.type === 'keydown') || (e.type === 'keyup') || (e.type === 'keypress')) {\n\t\te.keySymbol = this.keyMap[e.keyCode];\n\t\t// Dispatch key events to be sent via Signals\n\t\tvar c = this.findDefaultTarget();\n\t\tif (e.dispatchTarget !== c) {\n\t\t\tthis.dispatchBubble(e, c);\n\t\t}\n\t}\n});\n\nutils.mixin(dispatcher, {\n\tkeyMap: {},\n\tregisterKeyMap: function(map) {\n\t\tutils.mixin(this.keyMap, map);\n\t}\n});\n\n\n/**\n* Event modal capture feature. Capture events to a specific control via\n* [enyo.dispatcher.capture(inControl, inShouldForward)]{@linkcode enyo.dispatcher.capture};\n* release events via [enyo.dispatcher.release()]{@link enyo.dispatcher.release}.\n*\n* @private\n*/\ndispatcher.features.push(function(e) {\n\tif (this.captureTarget) {\n\t\tvar c = e.dispatchTarget;\n\t\tvar eventName = (e.customEvent ? '' : 'on') + e.type;\n\t\tvar handlerName = this.captureEvents[eventName];\n\t\tvar handlerScope = this.captureHandlerScope || this.captureTarget;\n\t\tvar handler = handlerName && handlerScope[handlerName];\n\t\tvar shouldCapture = handler && !(c && c.isDescendantOf && c.isDescendantOf(this.captureTarget));\n\t\tif (shouldCapture) {\n\t\t\tvar c1 = e.captureTarget = this.captureTarget;\n\t\t\t// NOTE: We do not want releasing capture while an event is being processed to alter\n\t\t\t// the way the event propagates. Therefore decide if the event should forward\n\t\t\t// before the capture target receives the event (since it may release capture).\n\t\t\te.preventDispatch = handler && handler.apply(handlerScope, [c1, e]) && !this.autoForwardEvents[e.type];\n\t\t}\n\t}\n});\n\n//\n//        NOTE: This object is a plug-in; these methods should\n//        be called on `enyo.dispatcher`, and not on the plug-in itself.\n//\nutils.mixin(dispatcher, {\n\n\t/**\n\t* @private\n\t*/\n\tautoForwardEvents: {leave: 1, resize: 1},\n\n\t/**\n\t* @private\n\t*/\n\tcaptures: [],\n\n\t/** \n\t* Captures [events]{@glossary event} for `inTarget`, where `inEvents` is specified as a\n\t* hash of event names mapped to callback handler names to be called on `inTarget` (or,\n\t* optionally, `inScope`). The callback is called when any of the captured events are\n\t* dispatched outside of the capturing control. Returning `true` from the callback stops\n\t* dispatch of the event to the original `dispatchTarget`.\n\t*\n\t* @private\n\t*/\n\tcapture: function(inTarget, inEvents, inScope) {\n\t\tvar info = {target: inTarget, events: inEvents, scope: inScope};\n\t\tthis.captures.push(info);\n\t\tthis.setCaptureInfo(info);\n\t},\n\n\t/**\n\t* Removes the specified target from the capture list.\n\t* \n\t* @private\n\t*/\n\trelease: function(inTarget) {\n\t\tfor (var i = this.captures.length - 1; i >= 0; i--) {\n\t\t\tif (this.captures[i].target === inTarget) {\n\t\t\t\tthis.captures.splice(i,1);\n\t\t\t\tthis.setCaptureInfo(this.captures[this.captures.length-1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Sets the information for a captured {@glossary event}.\n\t* \n\t* @private\n\t*/\n\tsetCaptureInfo: function(inInfo) {\n\t\tthis.captureTarget = inInfo && inInfo.target;\n\t\tthis.captureEvents = inInfo && inInfo.events;\n\t\tthis.captureHandlerScope = inInfo && inInfo.scope;\n\t}\n});\n\n\n(function () {\n\t/**\n\t* Dispatcher preview feature\n\t* \n\t* Allows {@link enyo.Control} ancestors of the {@glossary event} target\n\t* a chance (eldest first) to react by implementing `previewDomEvent`.\n\t*\n\t* @private\n\t*/\n\tvar fn = 'previewDomEvent';\n\tvar preview = \n\t\t/** @lends enyo.dispatcher.features */ {\n\n\t\t/**\n\t\t* @private\n\t\t*/\n\t\tfeature: function(e) {\n\t\t\tpreview.dispatch(e, e.dispatchTarget);\n\t\t},\n\n\t\t/**\n\t\t* @returns {(Boolean|undefined)} Handlers return `true` to abort preview and prevent default\n\t\t*\tevent processing.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tdispatch: function(evt, control) {\n\t\t\tvar i, l,\n\t\t\tlineage = this.buildLineage(control);\n\t\t\tfor (i=0; (l=lineage[i]); i++) {\n\t\t\t\tif (l[fn] && l[fn](evt) === true) {\n\t\t\t\t\tevt.preventDispatch = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t* We ascend, making a list of Enyo [controls]{@link enyo.Control}.\n\t\t*\n\t\t* Note that a control is considered to be its own ancestor.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tbuildLineage: function(control) {\n\t\t\tvar lineage = [],\n\t\t\t\tc = control;\n\t\t\twhile (c) {\n\t\t\t\tlineage.unshift(c);\n\t\t\t\tc = c.parent;\n\t\t\t}\n\t\t\treturn lineage;\n\t\t}\n\t};\n\n\tdispatcher.features.push(preview.feature);\n})();","require('../../../enyo');\n\n\n\nvar\n\tdispatcher = require('../dispatcher'),\n\tutils = require('../utils');\nvar\n\tSignals = require('../Signals'),\n\tReady = require('../ready');\n\n/**\n* Normalizes and provides fullscreen support for [controls]{@link enyo.Control},\n* based on the [fullscreen]{@glossary fullscreen} API.\n*\n* @name enyo.fullscreen\n* @type Object\n* @public\n*/\nvar fullscreen = module.exports = {\n\t\n\t/**\n\t* Reference to the current fullscreen [control]{@link enyo.Control}.\n\t*\n\t* @private\n\t*/\n\tfullscreenControl: null,\n\n\t/**\n\t* Reference to the current fullscreen element (fallback for platforms\n\t* without native support).\n\t*\n\t* @private\n\t*/\n\tfullscreenElement: null,\n\n\t/** \n\t* Reference to that [control]{@link enyo.Control} that requested fullscreen.\n\t* \n\t* @private\n\t*/\n\trequestor: null,\n\n\t/** \n\t* Native accessor used to get reference to the current fullscreen element.\n\t*\n\t* @private\n\t*/\n\telementAccessor:\n\t\t('fullscreenElement' in document) ? 'fullscreenElement' :\n\t\t('mozFullScreenElement' in document) ? 'mozFullScreenElement' :\n\t\t('webkitFullscreenElement' in document) ? 'webkitFullscreenElement' :\n\t\tnull,\n\n\t/** \n\t* Native accessor used to request fullscreen.\n\t*\n\t* @private\n\t*/\n\trequestAccessor:\n\t\t('requestFullscreen' in document.documentElement) ? 'requestFullscreen' :\n\t\t('mozRequestFullScreen' in document.documentElement) ? 'mozRequestFullScreen' :\n\t\t('webkitRequestFullscreen' in document.documentElement) ? 'webkitRequestFullscreen' :\n\t\tnull,\n\n\t/** \n\t* Native accessor used to cancel fullscreen.\n\t*\n\t* @private\n\t*/\n\tcancelAccessor:\n\t\t('cancelFullScreen' in document) ? 'cancelFullScreen' :\n\t\t('mozCancelFullScreen' in document) ? 'mozCancelFullScreen' :\n\t\t('webkitCancelFullScreen' in document) ? 'webkitCancelFullScreen' :\n\t\tnull,\n\n\t/**\n\t* Determines whether the platform supports the [fullscreen]{@glossary fullscreen} API.\n\t* \n\t* @returns {Boolean} Returns `true` if platform supports all of the \n\t*\t[fullscreen]{@glossary fullscreen} API, `false` otherwise.\n\t* @public\n\t*/\n\tnativeSupport: function() {\n\t\treturn (this.elementAccessor !== null && this.requestAccessor !== null && this.cancelAccessor !== null);\n\t},\n\n\t/** \n\t* Normalizes `getFullscreenElement()`.\n\t*\n\t* @public\n\t*/\n\tgetFullscreenElement: function() {\n\t\treturn (this.nativeSupport()) ? document[this.elementAccessor] : this.fullscreenElement;\n\t},\n\n\t/** \n\t* Returns current fullscreen [control]{@link enyo.Control}.\n\t*\n\t* @public\n\t*/\n\tgetFullscreenControl: function() {\n\t\treturn this.fullscreenControl;\n\t},\n\n\t/**\n\t* Normalizes `requestFullscreen()`.\n\t*\n\t* @public\n\t*/\n\trequestFullscreen: function(ctl) {\n\t\tif (this.getFullscreenControl() || !(ctl.hasNode())) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.requestor = ctl;\n\n\t\t// Only use native request if platform supports all of the API\n\t\tif (this.nativeSupport()) {\n\t\t\tctl.hasNode()[this.requestAccessor]();\n\t\t} else {\n\t\t\tthis.fallbackRequestFullscreen();\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/** \n\t* Normalizes `cancelFullscreen()`.\n\t*\n\t* @public\n\t*/\n\tcancelFullscreen: function() {\n\t\tif (this.nativeSupport()) {\n\t\t\tdocument[this.cancelAccessor]();\n\t\t} else {\n\t\t\tthis.fallbackCancelFullscreen();\n\t\t}\n\t},\n\n\t/** \n\t* Fallback support for setting fullscreen element (done by browser on platforms with\n\t* native support).\n\t*\n\t* @private\n\t*/\n\tsetFullscreenElement: function(node) {\n\t\tthis.fullscreenElement = node;\n\t},\n\n\t/** \n\t* Sets current fullscreen [control]{@link enyo.Control}.\n\t*\n\t* @private\n\t*/\n\tsetFullscreenControl: function(ctl) {\n\t\tthis.fullscreenControl = ctl;\n\t},\n\n\t/** \n\t* Fallback fullscreen request for platforms without fullscreen support.\n\t*\n\t* @private\n\t*/\n\tfallbackRequestFullscreen: function() {\n\t\tvar control = this.requestor;\n\n\t\tif (!control) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get before node to allow us to exit floating layer to the proper position\n\t\tcontrol.prevAddBefore = control.parent.controlAtIndex(control.indexInContainer() + 1);\n\t\t\n\t\tvar floatingLayer = Control.floatingLayer;\n\t\t\n\t\t// Render floating layer if we need to\n\t\tif (!floatingLayer.hasNode()) {\n\t\t\tfloatingLayer.render();\n\t\t}\n\n\t\tcontrol.addClass('enyo-fullscreen');\n\t\tcontrol.appendNodeToParent(floatingLayer.hasNode());\n\t\tcontrol.resize();\n\n\t\tthis.setFullscreenControl(control);\n\t\tthis.setFullscreenElement(control.hasNode());\n\t},\n\n\t/** \n\t* Fallback cancel fullscreen for platforms without fullscreen support.\n\t*\n\t* @private\n\t*/\n\tfallbackCancelFullscreen: function() {\n\t\tvar control = this.fullscreenControl,\n\t\t\tbeforeNode,\n\t\t\tparentNode\n\t\t;\n\n\t\tif (!control) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find beforeNode based on _this.addBefore_ and _this.prevAddBefore_\n\t\tbeforeNode = (control.prevAddBefore) ? control.prevAddBefore.hasNode() : null;\n\t\tparentNode = control.parent.hasNode();\n\t\tcontrol.prevAddBefore = null;\n\n\t\tcontrol.removeClass('enyo-fullscreen');\n\n\t\tif (!beforeNode) {\n\t\t\tcontrol.appendNodeToParent(parentNode);\n\t\t} else {\n\t\t\tcontrol.insertNodeInParent(parentNode, beforeNode);\n\t\t}\n\n\t\tcontrol.resize();\n\n\t\tthis.setFullscreenControl(null);\n\t\tthis.setFullscreenElement(null);\n\t},\n\n\t/** \n\t* Listens for fullscreen change {@glossary event} and broadcasts it as a\n\t* normalized event.\n\t*\n\t* @private\n\t*/\n\tdetectFullscreenChangeEvent: function() {\n\t\tthis.setFullscreenControl(this.requestor);\n\t\tthis.requestor = null;\n\n\t\t// Broadcast change\n\t\tSignals.send('onFullscreenChange');\n\t}\n};\n\n/**\n* Normalizes platform-specific fullscreen change [events]{@glossary event}.\n*\n* @private\n*/\nReady(function() {\n\t// no need for IE8 fallback, since it won't ever send this event\n\tif (document.addEventListener) {\n\t\tdocument.addEventListener('webkitfullscreenchange', utils.bind(fullscreen, 'detectFullscreenChangeEvent'), false);\n\t\tdocument.addEventListener('mozfullscreenchange',    utils.bind(fullscreen, 'detectFullscreenChangeEvent'), false);\n\t\tdocument.addEventListener('fullscreenchange',       utils.bind(fullscreen, 'detectFullscreenChangeEvent'), false);\n\t}\n});\n\n/**\n* If this platform doesn't have native support for fullscreen, add an escape handler to mimic \n* native behavior.\n*/\nif(!fullscreen.nativeSupport()) {\n\tdispatcher.features.push(\n\t\tfunction(e) {\n\t\t\tif (e.type === 'keydown' && e.keyCode === 27) {\n\t\t\t\tfullscreen.cancelFullscreen();\n\t\t\t}\n\t\t}\n\t);\n}","require('../../enyo');\n\nvar\n\tutils = require('./utils'),\n\tplatform = require('./platform'),\n\tdispatcher = require('./dispatcher');\n\nvar\n\tDom = require('./dom');\n\n\n/**\n* Enyo supports a set of normalized events that work similarly across all supported platforms.\n* These events are provided so that users can write a single set of event handlers for\n* applications that run on both mobile and desktop platforms. They are needed because desktop\n* and mobile platforms handle basic input differently.\n*\n* For more information on normalized input events and their associated properties, see the\n* documentation on [Event Handling]{@linkplain $dev-guide/key-concepts/event-handling.html}\n* in the Enyo Developer Guide.\n*\n* @namespace gesture\n* @public\n*/\nvar gesture = module.exports =\n\t/** @lends gesture */ {\n\n\t/**\n\t* @private\n\t*/\n\teventProps: ['target', 'relatedTarget', 'clientX', 'clientY', 'pageX', 'pageY',\n\t\t'screenX', 'screenY', 'altKey', 'ctrlKey', 'metaKey', 'shiftKey',\n\t\t'detail', 'identifier', 'dispatchTarget', 'which', 'srcEvent'],\n\n\t/**\n\t* Creates an {@glossary event} of type `type` and returns it.\n\t* `evt` should be an event [object]{@glossary Object}.\n\t*\n\t* @param {String} type - The type of {@glossary event} to make.\n\t* @param {(Event|Object)} evt - The event you'd like to clone or an object that looks like it.\n\t* @returns {Object} The new event [object]{@glossary Object}.\n\t* @public\n\t*/\n\tmakeEvent: function(type, evt) {\n\t\tvar e = {};\n\t\te.type = type;\n\t\tfor (var i=0, p; (p=this.eventProps[i]); i++) {\n\t\t\te[p] = evt[p];\n\t\t}\n\t\te.srcEvent = e.srcEvent || evt;\n\t\te.preventDefault = this.preventDefault;\n\t\te.disablePrevention = this.disablePrevention;\n\n\t\tif (Dom._bodyScaleFactorX !== 1 || Dom._bodyScaleFactorY !== 1) {\n\t\t\t// Intercept only these events, not all events, like: hold, release, tap, etc,\n\t\t\t// to avoid doing the operation again.\n\t\t\tif (e.type == 'move' || e.type == 'up' || e.type == 'down' || e.type == 'enter' || e.type == 'leave') {\n\t\t\t\te.clientX *= Dom._bodyScaleFactorX;\n\t\t\t\te.clientY *= Dom._bodyScaleFactorY;\n\t\t\t}\n\t\t}\n\t\t//\n\t\t// normalize event.which and event.pageX/event.pageY\n\t\t// Note that while 'which' works in IE9, it is broken for mousemove. Therefore,\n\t\t// in IE, use global.event.button\n\t\tif (platform.ie < 10) {\n\t\t\t//Fix for IE8, which doesn't include pageX and pageY properties\n\t\t\tif(platform.ie==8 && e.target) {\n\t\t\t\te.pageX = e.clientX + e.target.scrollLeft;\n\t\t\t\te.pageY = e.clientY + e.target.scrollTop;\n\t\t\t}\n\t\t\tvar b = global.event && global.event.button;\n\t\t\tif (b) {\n\t\t\t\t// multi-button not supported, priority: left, right, middle\n\t\t\t\t// (note: IE bitmask is 1=left, 2=right, 4=center);\n\t\t\t\te.which = b & 1 ? 1 : (b & 2 ? 2 : (b & 4 ? 3 : 0));\n\t\t\t}\n\t\t} else if (platform.webos || global.PalmSystem) {\n\t\t\t// Temporary fix for owos: it does not currently supply 'which' on move events\n\t\t\t// and the user agent string doesn't identify itself so we test for PalmSystem\n\t\t\tif (e.which === 0) {\n\t\t\t\te.which = 1;\n\t\t\t}\n\t\t}\n\t\treturn e;\n\t},\n\n\t/**\n\t* Handles \"down\" [events]{@glossary event}, including `mousedown` and `keydown`. This is\n\t* responsible for the press-and-hold key repeater.\n\t*\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\n\t* @public\n\t*/\n\tdown: function(evt) {\n\t\tvar e = this.makeEvent('down', evt);\n\n\t\t// prepare for hold\n\t\tthis.drag.prepareHold(e);\n\n\t\t// enable prevention of tap event\n\t\te.preventTap = function() {\n\t\t\te._tapPrevented = true;\n\t\t};\n\n\t\tdispatcher.dispatch(e);\n\t\tthis.downEvent = e;\n\n\t\t// start hold, now that control has had a chance\n\t\t// to override the holdPulse configuration\n\t\tthis.drag.beginHold(e);\n\t},\n\n\t/**\n\t* Handles `mousemove` [events]{@glossary event}.\n\t*\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\n\t* @public\n\t*/\n\tmove: function(evt) {\n\t\tvar e = this.makeEvent('move', evt);\n\t\t// include delta and direction v. down info in move event\n\t\te.dx = e.dy = e.horizontal = e.vertical = 0;\n\t\tif (e.which && this.downEvent) {\n\t\t\te.dx = evt.clientX - this.downEvent.clientX;\n\t\t\te.dy = evt.clientY - this.downEvent.clientY;\n\t\t\te.horizontal = Math.abs(e.dx) > Math.abs(e.dy);\n\t\t\te.vertical = !e.horizontal;\n\t\t}\n\t\tdispatcher.dispatch(e);\n\t},\n\n\t/**\n\t* Handles \"up\" [events]{@glossary event}, including `mouseup` and `keyup`.\n\t*\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\n\t* @public\n\t*/\n\tup: function(evt) {\n\t\tvar e = this.makeEvent('up', evt);\n\n\t\t// We have added some logic to synchronize up and down events in certain scenarios (i.e.\n\t\t// clicking multiple buttons with a mouse) and to generally guard against any potential\n\t\t// asymmetry, but a full solution would be to maintain a map of up/down events as an \n\t\t// ideal solution, for future work.\n\t\te._tapPrevented = this.downEvent && this.downEvent._tapPrevented && this.downEvent.which == e.which;\n\t\te.preventTap = function() {\n\t\t\te._tapPrevented = true;\n\t\t};\n\n\t\tdispatcher.dispatch(e);\n\t\tif (!e._tapPrevented && this.downEvent && this.downEvent.which == 1) {\n\t\t\tvar target = this.findCommonAncestor(this.downEvent.target, evt.target);\n\n\t\t\t// the common ancestor of the down/up events is the target of the tap\n\t\t\tif(target) {\n\t\t\t\tif(this.supportsDoubleTap(target)) {\n\t\t\t\t\tthis.doubleTap(e, target);\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendTap(e, target);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.downEvent && this.downEvent.which == e.which) {\n\t\t\tthis.downEvent = null;\n\t\t}\n\t},\n\n\t/**\n\t* Handles `mouseover` [events]{@glossary event}.\n\t*\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\n\t* @public\n\t*/\n\tover: function(evt) {\n\t\tvar e = this.makeEvent('enter', evt);\n\t\tdispatcher.dispatch(e);\n\t},\n\n\t/**\n\t* Handles `mouseout` [events]{@glossary event}.\n\t*\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\n\t* @public\n\t*/\n\tout: function(evt) {\n\t\tvar e = this.makeEvent('leave', evt);\n\t\tdispatcher.dispatch(e);\n\t},\n\n\t/**\n\t* Generates `tap` [events]{@glossary event}.\n\t*\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\n\t* @public\n\t*/\n\tsendTap: function(evt, target) {\n\t\tvar e = this.makeEvent('tap', evt);\n\t\te.target = target;\n\t\tdispatcher.dispatch(e);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttapData: {\n\t\tid: null,\n\t\ttimer: null,\n\t\tstart: 0\n\t},\n\n\t/**\n\t* Global configuration for double tap support. If this is true, all tap events for Controls\n\t* that do not have {@link enyo.Control#doubleTapEnabled} explicitly set to false will be\n\t* delayed by the {@link enyo.Control#doubleTapInterval}.\n\t*\n\t* @type {Boolean}\n\t* @default  false\n\t* @public\n\t*/\n\tdoubleTapEnabled: false,\n\n\t/**\n\t* Determines if the provided target node supports double tap events\n\t*\n\t* @param {Node} target\n\t* @return {Boolean}\n\t* @private\n\t*/\n\tsupportsDoubleTap: function(target) {\n\t\tvar obj = dispatcher.findDispatchTarget(target);\n\n\t\tif(obj) {\n\t\t\t// Control.doubleTapEnabled is a tri-value property. The default is 'inherit'\n\t\t\t// which takes its cue from gesture's doubleTapEnabled. Values of true or false\n\t\t\t// override the default. So, if the global is true, any truthy value on Control\n\t\t\t// results in true. If the global is false, only an explicit true on Control\n\t\t\t// results in true.\n\t\t\treturn this.doubleTapEnabled? !!obj.doubleTapEnabled : obj.doubleTapEnabled === true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t/**\n\t* private\n\t*/\n\tdoubleTap: function(evt, t) {\n\t\tvar obj = dispatcher.findDispatchTarget(t);\n\n\t\tif(this.tapData.id !== obj.id) {\t// this is the first tap\n\t\t\tthis.resetTapData(true);\n\n\t\t\tthis.tapData.id = obj.id;\n\t\t\tthis.tapData.event = evt;\n\t\t\tthis.tapData.target = t;\n\t\t\tthis.tapData.timer = setTimeout(utils.bind(this, \"resetTapData\", true), obj.doubleTapInterval);\n\t\t\tthis.tapData.start = utils.perfNow();\n\t\t} else {\t\t\t\t\t\t\t// this is the double tap\n\t\t\tvar e2 = this.makeEvent('doubletap', evt);\n\t\t\te2.target = t;\n\t\t\te2.tapInterval = utils.perfNow() - this.tapData.start;\n\t\t\tthis.resetTapData(false);\n\t\t\tdispatcher.dispatch(e2);\n\t\t}\n\t},\n\n\tresetTapData: function(sendTap) {\n\t\tvar data = this.tapData;\n\n\t\tif(sendTap && data.id) {\n\t\t\tthis.sendTap(data.event, data.target);\n\t\t}\n\n\t\tclearTimeout(data.timer);\n\t\tdata.id = data.start = data.event = data.target = data.timer = null;\n\t},\n\n\t/**\n\t* Given two [DOM nodes]{@glossary Node}, searches for a shared ancestor (looks up\n\t* the hierarchic [DOM]{@glossary DOM} tree of [nodes]{@glossary Node}). The shared\n\t* ancestor node is returned.\n\t*\n\t* @param {Node} controlA - Control one.\n\t* @param {Node} controlB - Control two.\n\t* @returns {(Node|undefined)} The shared ancestor.\n\t* @public\n\t*/\n\tfindCommonAncestor: function(controlA, controlB) {\n\t\tvar p = controlB;\n\t\twhile (p) {\n\t\t\tif (this.isTargetDescendantOf(controlA, p)) {\n\t\t\t\treturn p;\n\t\t\t}\n\t\t\tp = p.parentNode;\n\t\t}\n\t},\n\n\t/**\n\t* Given two controls, returns `true` if the `child` is inside the `parent`.\n\t*\n\t* @param {Node} child - The child to search for.\n\t* @param {Node} parent - The expected parent.\n\t* @returns {(Boolean|undefined)} `true` if the `child` is actually a child of `parent`.\n\t*/\n\tisTargetDescendantOf: function(child, parent) {\n\t\tvar c = child;\n\t\twhile(c) {\n\t\t\tif (c == parent) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tc = c.parentNode;\n\t\t}\n\t}\n};\n\n/**\n* Installed on [events]{@glossary event} and called in event context.\n*\n* @private\n*/\ngesture.preventDefault = function() {\n\tif (this.srcEvent) {\n\t\tthis.srcEvent.preventDefault();\n\t}\n};\n\n/**\n* @private\n*/\ngesture.disablePrevention = function() {\n\tthis.preventDefault = utils.nop;\n\tif (this.srcEvent) {\n\t\tthis.srcEvent.preventDefault = utils.nop;\n\t}\n};\n\ndispatcher.features.push(\n\tfunction(e) {\n\t\t// NOTE: beware of properties in gesture inadvertently mapped to event types\n\t\tif (gesture.events[e.type]) {\n\t\t\treturn gesture.events[e.type](e);\n\t\t}\n\t}\n);\n\n/**\n* @namespace gesture.events\n* @public\n*/\ngesture.events =\n\t/** @lends gesture.events */ {\n\n\t/**\n\t* Shortcut to [gesture.down()]{@link gesture.down}.\n\t*\n\t* @public\n\t*/\n\tmousedown: function(e) {\n\t\tgesture.down(e);\n\t},\n\n\t/**\n\t* Shortcut to [gesture.up()]{@link gesture.up}.\n\t*\n\t* @public\n\t*/\n\tmouseup: function(e) {\n\t\tgesture.up(e);\n\t},\n\n\t/**\n\t* Shortcut to [gesture.move()]{@link gesture.move}.\n\t*\n\t* @public\n\t*/\n\tmousemove:  function(e) {\n\t\tgesture.move(e);\n\t},\n\n\t/**\n\t* Shortcut to [gesture.over()]{@link gesture.over}.\n\t*\n\t* @public\n\t*/\n\tmouseover:  function(e) {\n\t\tgesture.over(e);\n\t},\n\n\t/**\n\t* Shortcut to [gesture.out()]{@link gesture.out}.\n\t*\n\t* @public\n\t*/\n\tmouseout:  function(e) {\n\t\tgesture.out(e);\n\t}\n};\n\n// Firefox mousewheel handling\nDom.requiresWindow(function() {\n\tif (document.addEventListener) {\n\t\tdocument.addEventListener('DOMMouseScroll', function(inEvent) {\n\t\t\tvar e = utils.clone(inEvent);\n\t\t\te.preventDefault = function() {\n\t\t\t\tinEvent.preventDefault();\n\t\t\t};\n\t\t\te.type = 'mousewheel';\n\t\t\tvar p = e.VERTICAL_AXIS == e.axis ? 'wheelDeltaY' : 'wheelDeltaX';\n\t\t\te[p] =  e.detail * -40;\n\t\t\tdispatcher.dispatch(e);\n\t\t}, false);\n\t}\n});\n\n\n\n/**\n* The extended {@glossary event} [object]{@glossary Object} that is provided when we\n* emulate iOS gesture events on non-iOS devices.\n*\n* @typedef {Object} enyo.gesture~EmulatedGestureEvent\n* @property {Number} pageX - The x-coordinate of the center point between fingers.\n* @property {Number} pageY - The y-coordinate of the center point between fingers.\n* @property {Number} rotation - The degrees of rotation from the beginning of the gesture.\n* @property {Number} scale - The percent change of distance between fingers.\n*/\n\n/**\n* @private\n*/\nif (!platform.gesture && platform.touch) {\n\tdispatcher.features.push(function(e) {\n\t\tif (handlers[e.type]) {\n\t\t\ttouchGestures[e.type](e);\n\t\t}\n\t});\n}\n\n/**\n* @private\n*/\nvar handlers = {\n\ttouchstart: true,\n\ttouchmove: true,\n\ttouchend: true\n};\n\n/**\n* @private\n*/\nvar touchGestures = {\n\n\t/**\n\t* @private\n\t*/\n\torderedTouches: [],\n\n\t/**\n\t* @private\n\t*/\n\tgesture: null,\n\n\t/**\n\t* @private\n\t*/\n\ttouchstart: function (e) {\n\t\t// some devices can send multiple changed touches on start and end\n\t\tvar i,\n\t\t\tchangedTouches = e.changedTouches,\n\t\t\tlength = changedTouches.length;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tvar id = changedTouches[i].identifier;\n\n\t\t\t// some devices can send multiple touchstarts\n\t\t\tif (utils.indexOf(id, this.orderedTouches) < 0) {\n\t\t\t\tthis.orderedTouches.push(id);\n\t\t\t}\n\t\t}\n\n\t\tif (e.touches.length >= 2 && !this.gesture) {\n\t\t\tvar p = this.gesturePositions(e);\n\n\t\t\tthis.gesture = this.gestureVector(p);\n\t\t\tthis.gesture.angle = this.gestureAngle(p);\n\t\t\tthis.gesture.scale = 1;\n\t\t\tthis.gesture.rotation = 0;\n\t\t\tvar g = this.makeGesture('gesturestart', e, {vector: this.gesture, scale: 1, rotation: 0});\n\t\t\tdispatcher.dispatch(g);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttouchend: function (e) {\n\t\t// some devices can send multiple changed touches on start and end\n\t\tvar i,\n\t\t\tchangedTouches = e.changedTouches,\n\t\t\tlength = changedTouches.length;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tutils.remove(changedTouches[i].identifier, this.orderedTouches);\n\t\t}\n\n\t\tif (e.touches.length <= 1 && this.gesture) {\n\t\t\tvar t = e.touches[0] || e.changedTouches[e.changedTouches.length - 1];\n\n\t\t\t// gesture end sends last rotation and scale, with the x/y of the last finger\n\t\t\tdispatcher.dispatch(this.makeGesture('gestureend', e, {vector: {xcenter: t.pageX, ycenter: t.pageY}, scale: this.gesture.scale, rotation: this.gesture.rotation}));\n\t\t\tthis.gesture = null;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttouchmove: function (e) {\n\t\tif (this.gesture) {\n\t\t\tvar g = this.makeGesture('gesturechange', e);\n\t\t\tthis.gesture.scale = g.scale;\n\t\t\tthis.gesture.rotation = g.rotation;\n\t\t\tdispatcher.dispatch(g);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tfindIdentifiedTouch: function (touches, id) {\n\t\tfor (var i = 0, t; (t = touches[i]); i++) {\n\t\t\tif (t.identifier === id) {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgesturePositions: function (e) {\n\t\tvar first = this.findIdentifiedTouch(e.touches, this.orderedTouches[0]);\n\t\tvar last = this.findIdentifiedTouch(e.touches, this.orderedTouches[this.orderedTouches.length - 1]);\n\t\tvar fx = first.pageX, lx = last.pageX, fy = first.pageY, ly = last.pageY;\n\t\t// center the first touch as 0,0\n\t\tvar x = lx - fx, y = ly - fy;\n\t\tvar h = Math.sqrt(x*x + y*y);\n\t\treturn {x: x, y: y, h: h, fx: fx, lx: lx, fy: fy, ly: ly};\n\t},\n\n\t/**\n\t* Finds rotation angle.\n\t* \n\t* @private\n\t*/\n\tgestureAngle: function (positions) {\n\t\tvar p = positions;\n\t\t// yay math!, rad -> deg\n\t\tvar a = Math.asin(p.y / p.h) * (180 / Math.PI);\n\t\t// fix for range limits of asin (-90 to 90)\n\t\t// Quadrants II and III\n\t\tif (p.x < 0) {\n\t\t\ta = 180 - a;\n\t\t}\n\t\t// Quadrant IV\n\t\tif (p.x > 0 && p.y < 0) {\n\t\t\ta += 360;\n\t\t}\n\t\treturn a;\n\t},\n\n\t/**\n\t* Finds bounding box.\n\t* \n\t* @private\n\t*/\n\tgestureVector: function (positions) {\n\t\t// the least recent touch and the most recent touch determine the bounding box of the gesture event\n\t\tvar p = positions;\n\t\t// center the first touch as 0,0\n\t\treturn {\n\t\t\tmagnitude: p.h,\n\t\t\txcenter: Math.abs(Math.round(p.fx + (p.x / 2))),\n\t\t\tycenter: Math.abs(Math.round(p.fy + (p.y / 2)))\n\t\t};\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmakeGesture: function (type, e, cache) {\n\t\tvar vector, scale, rotation;\n\t\tif (cache) {\n\t\t\tvector = cache.vector;\n\t\t\tscale = cache.scale;\n\t\t\trotation = cache.rotation;\n\t\t} else {\n\t\t\tvar p = this.gesturePositions(e);\n\t\t\tvector = this.gestureVector(p);\n\t\t\tscale = vector.magnitude / this.gesture.magnitude;\n\t\t\t// gestureEvent.rotation is difference from the starting angle, clockwise\n\t\t\trotation = (360 + this.gestureAngle(p) - this.gesture.angle) % 360;\n\t\t}\n\t\tvar event = utils.clone(e);\n\t\treturn utils.mixin(event, {\n\t\t\ttype: type,\n\t\t\tscale: scale,\n\t\t\tpageX: vector.xcenter,\n\t\t\tpageY: vector.ycenter,\n\t\t\trotation: rotation\n\t\t});\n\t}\n};","var\n\tkind = require('../../../enyo/lib/kind'),\n\tdispatcher = require('../../../enyo/lib/dispatcher'),\n\tdom = require('../../../enyo/lib/dom'),\n\tplatform = require('../../../enyo/lib/platform'),\n\tutils = require('../../../enyo/lib/utils'),\n\tAnimator = require('../../../enyo/lib/Animator');\n\nvar\n\tCardArranger = require('../CardArranger');\n\n/**\n* Fires at the start of a panel transition, when [setIndex()]{@link enyo.Panels#setIndex}\n* is called, and also during dragging.\n*\n* @event enyo.Panels#onTransitionStart\n* @type {Object}\n* @property {Number} fromIndex - The index of the old panel.\n* @property {Number} toIndex   - The index of the new panel.\n* @public\n*/\n\n/**\n* Fires at the end of a panel transition, when [setIndex()]{@link enyo.Panels#setIndex}\n* is called, and also during dragging.\n*\n* @event enyo.Panels#onTransitionFinish\n* @type {Object}\n* @property {Number} fromIndex - The index of the old panel.\n* @property {Number} toIndex   - The index of the new panel.\n* @public\n*/\n\n/**\n* The {@link enyo.Panels} kind is designed to satisfy a variety of common use cases\n* for application layout. Using `enyo.Panels`, controls may be arranged as (among\n* other things) a carousel, a set of collapsing panels, a card stack that fades\n* between panels, or a grid.\n*\n* Any Enyo control may be placed inside an `enyo.Panels`, but by convention we\n* refer to each of these controls as a \"panel\". From the set of panels in an\n* `enyo.Panels`, one is considered to be active. The active panel is set by index\n* using the [setIndex()]{@link enyo.Panels#setIndex} method. The actual layout of\n* the panels typically changes each time the active panel is set, such that the new\n* active panel has the most prominent position.\n*\n* For more information, see the documentation on\n* [Panels]{@linkplain $dev-guide/building-apps/layout/panels.html} in the\n* Enyo Developer Guide.\n*\n* @ui\n* @class enyo.Panels\n* @extends enyo.Control\n* @public\n*/\nvar Panels = module.exports = kind(\n\t/** @lends  enyo.Panels.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Panels',\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-panels',\n\n\t/**\n\t* @lends enyo.Panels.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* The index of the active panel. The layout of panels is controlled by the\n\t\t* [layoutKind]{@link enyo.Panels#layoutKind}, but as a rule, the active panel\n\t\t* is displayed in the most prominent position. For example, in the (default)\n\t\t* {@link enyo.CardArranger} layout, the active panel is shown and the other\n\t\t* panels are hidden.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tindex: 0,\n\n\t\t/**\n\t\t* Indicates whether the user may drag between panels.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tdraggable: true,\n\n\t\t/**\n\t\t* Indicates whether the panels animate when transitioning, e.g., when\n\t\t* [setIndex()]{@link enyo.Panels#setIndex} is called.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tanimate: true,\n\n\t\t/**\n\t\t* Indicates whether panels \"wrap around\" when moving past the end.\n\t\t* The actual effect depends upon the arranger in use.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  false\n\t\t* @public\n\t\t*/\n\t\twrap: false,\n\n\t\t/**\n\t\t* The arranger kind to be used for dynamic layout.\n\t\t*\n\t\t* @type {String}\n\t\t* @default  'CardArranger'\n\t\t* @public\n\t\t*/\n\t\tarrangerKind: CardArranger,\n\n\t\t/**\n\t\t* By default, each panel will be sized to fit the Panels' width when the\n\t\t* screen size is sufficiently narrow (less than 800px). Set to `false` to\n\t\t* avoid this behavior.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tnarrowFit: true\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonTransitionStart: '',\n\t\tonTransitionFinish: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tondragstart: 'dragstart',\n\t\tondrag: 'drag',\n\t\tondragfinish: 'dragfinish',\n\t\tonscroll: 'domScroll'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttools: [\n\t\t{kind: Animator, onStep: 'step', onEnd: 'animationEnded'}\n\t],\n\n\t/**\n\t* Tracks completion percentage for a transition between two panels.\n\t*\n\t* @private\n\t*/\n\tfraction: 0,\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tthis.transitionPoints = [];\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.arrangerKindChanged();\n\t\t\tthis.narrowFitChanged();\n\t\t\tthis.indexChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tdispatcher.makeBubble(this, 'scroll');\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tdomScroll: function (sender, event) {\n\t\tif (this.hasNode()) {\n\t\t\tif (this.node.scrollLeft > 0) {\n\t\t\t\t// Reset scrollLeft position\n\t\t\t\tthis.node.scrollLeft = 0;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tinitComponents: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tthis.createChrome(this.tools);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tarrangerKindChanged: function () {\n\t\tthis.setLayoutKind(this.arrangerKind);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tnarrowFitChanged: function () {\n\t\tthis.addRemoveClass(Panels.getNarrowClass(), this.narrowFit);\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\t// When the entire panels is going away, take note so we don't try and do single-panel\n\t\t\t// remove logic such as changing the index and reflowing when each panel is destroyed\n\t\t\tthis.destroying = true;\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Adjusts the index if the removed control is the active panel and reflows the layout.\n\t*\n\t* @method\n\t* @private\n\t*/\n\tremoveControl: kind.inherit(function (sup) {\n\t\treturn function (control) {\n\t\t\t// Skip extra work during panel destruction.\n\t\t\tif (this.destroying) {\n\t\t\t\treturn sup.apply(this, arguments);\n\t\t\t}\n\t\t\t// adjust index if the current panel is being removed\n\t\t\t// so it's either the previous panel or the first one.\n\t\t\tvar newIndex = -1;\n\t\t\tvar controlIndex = utils.indexOf(control, this.controls);\n\t\t\tif (controlIndex === this.index) {\n\t\t\t\tnewIndex = Math.max(controlIndex - 1, 0);\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t\tif (newIndex !== -1 && this.controls.length > 0) {\n\t\t\t\tthis.setIndex(newIndex);\n\t\t\t\tthis.flow();\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* Designed to be overridden in kinds derived from Panels that have\n\t* non-panel client controls.\n\t*\n\t* @return {Boolean} [description]\n\t* @protected\n\t* @todo  Assume that this should take a control as a parameter.\n\t*/\n\tisPanel: function () {\n\t\treturn true;\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tflow: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tthis.arrangements = [];\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\treflow: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tthis.arrangements = [];\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.refresh();\n\t\t};\n\t}),\n\n\t/**\n\t* Returns the array of contained panels. Subclasses may override this if they\n\t* don't want the arranger to lay out all of their children.\n\t*\n\t* @return {enyo.Control[]} - The array of contained panels.\n\t*/\n\tgetPanels: function () {\n\t\tvar p = this.controlParent || this;\n\t\treturn p.children;\n\t},\n\n\t/**\n\t* Returns a reference to the active panel--i.e., the panel at the specified index.\n\t*\n\t* @return {enyo.Control} - The active panel.\n\t*/\n\tgetActive: function () {\n\t\tvar p$ = this.getPanels();\n\t\t//Constrain the index within the array of panels, needed if wrapping is enabled\n\t\tvar index = this.index % p$.length;\n\t\tif (index < 0) {\n\t\t\tindex += p$.length;\n\t\t}\n\t\treturn p$[index];\n\t},\n\n\t/**\n\t* Returns a reference to the {@link enyo.Animator} instance used to\n\t* animate panel transitions. The Panels' animator may be used to set the\n\t* duration of panel transitions, e.g.:\n\t*\n\t* ```\n\t* this.getAnimator().setDuration(1000);\n\t* ```\n\t*\n\t* @return {enyo.Animator} - The {@link enyo.Animator} instance used to animate\n\t* panel transitions.\n\t* @public\n\t*/\n\tgetAnimator: function () {\n\t\treturn this.$.animator;\n\t},\n\n\t/**\n\t* Sets the active panel to the panel specified by the given index.\n\t* Note that if the [animate]{@link enyo.Panels#animate} property is set to\n\t* `true`, the active panel will animate into view.\n\t*\n\t* @param {Number} index - The index of the panel to activate.\n\t* @public\n\t*/\n\tsetIndex: function (index) {\n\t\t// override setIndex so that indexChanged is called\n\t\t// whether this.index has actually changed or not. Also, do\n\t\t// index clamping here.\n\t\tvar prevIndex = this.get('index'),\n\t\t\tnewIndex = this.clamp(index);\n\t\tthis.index = newIndex;\n\t\tthis.notifyObservers('index', prevIndex, newIndex);\n\t},\n\n\t/**\n\t* Sets the active panel to the panel specified by the given index.\n\t* The transition to the next panel will be immediate and will not be animated,\n\t* regardless of the value of the [animate]{@link enyo.Panels#animate} property.\n\t*\n\t* @param {Number} index - The index of the panel to activate.\n\t* @public\n\t*/\n\tsetIndexDirect: function (index) {\n\t\tif (this.animate) {\n\t\t\tthis.animate = false;\n\t\t\tthis.setIndex(index);\n\t\t\tthis.animate = true;\n\t\t} else {\n\t\t\tthis.setIndex(index);\n\t\t}\n\t},\n\n\t/**\n\t* Selects the named component owned by the Panels and returns its index.\n\t*\n\t* @param  {String} name - The name of the panel to activate.\n\t* @return {Number} The index of the newly activated panel.\n\t* @public\n\t*/\n\tselectPanelByName: function (name) {\n\t\tif (!name) {\n\t\t\treturn;\n\t\t}\n\t\tvar idx = 0;\n\t\tvar panels = this.getPanels();\n\t\tvar len = panels.length;\n\t\tfor (; idx < len; ++idx) {\n\t\t\tif (name === panels[idx].name) {\n\t\t\t\tthis.setIndex(idx);\n\t\t\t\treturn idx;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Transitions to the previous panel--i.e., the panel whose index value is one\n\t* less than that of the current active panel.\n\t*\n\t* @public\n\t*/\n\tprevious: function () {\n\t\tvar prevIndex = this.index - 1;\n\t\tif (this.wrap && prevIndex < 0) {\n\t\t\tprevIndex = this.getPanels().length - 1;\n\t\t}\n\t\tthis.setIndex(prevIndex);\n\t},\n\n\t/**\n\t* Transitions to the next panel--i.e., the panel whose index value is one\n\t* greater than that of the current active panel.\n\t*\n\t* @public\n\t*/\n\tnext: function () {\n\t\tvar nextIndex = this.index+1;\n\t\tif (this.wrap && nextIndex >= this.getPanels().length) {\n\t\t\tnextIndex = 0;\n\t\t}\n\t\tthis.setIndex(nextIndex);\n\t},\n\n\t/**\n\t* Ensures that `value` references a valid panel, accounting for\n\t* [wrapping]{@link enyo.Panels#wrap}.\n\t*\n\t* @param  {Number} value - The index of a panel.\n\t* @return {Number}       - The valid index of a panel.\n\t* @private\n\t*/\n\tclamp: function (value) {\n\t\tvar l = this.getPanels().length;\n\t\tif (this.wrap) {\n\t\t\t// FIXME: dragging makes assumptions about direction and from->start indexes.\n\t\t\t//return value < 0 ? l : (value > l ? 0 : value);\n\t\t\tvalue %= l;\n\t\t\treturn (value < 0) ? value + l : value;\n\t\t} else {\n\t\t\treturn Math.max(0, Math.min(value, l - 1));\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tindexChanged: function (old) {\n\t\tthis.lastIndex = old;\n\t\tif (!this.dragging && this.$.animator && this.hasNode()) {\n\t\t\tif (this.shouldAnimate()) {\n\t\t\t\t// If we're mid-transition, complete it and indicate we need to transition\n\t\t\t\tif (this.$.animator.isAnimating()) {\n\t\t\t\t\tthis.transitionOnComplete = true;\n\t\t\t\t\tthis.$.animator.complete();\n\t\t\t\t} else {\n\t\t\t\t\tthis.animateTransition();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.directTransition();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Returns `true` if the panels should animate in the transition from `fromIndex` to\n\t* `toIndex`. This can be overridden in a {@glossary subkind} for greater customization.\n\t*\n\t* @protected\n\t*/\n\tshouldAnimate: function () {\n\t\treturn this.animate;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstep: function (sender) {\n\t\tthis.fraction = sender.value;\n\t\tthis.stepTransition();\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tanimationEnded: function (sender, event) {\n\t\tthis.completed();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcompleted: function () {\n\t\tthis.finishTransition();\n\n\t\t// Animator.onEnd fires asynchronously so we need an internal flag to indicate we need\n\t\t// to start the next transition when the previous completes\n\t\tif (this.transitionOnComplete) {\n\t\t\tthis.transitionOnComplete = false;\n\t\t\tthis.animateTransition();\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragstart: function (sender, event) {\n\t\tif (this.draggable && this.layout && this.layout.canDragEvent(event)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.dragstartTransition(event);\n\t\t\tthis.dragging = true;\n\t\t\tthis.$.animator.stop();\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdrag: function (sender, event) {\n\t\tif (this.dragging) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.dragTransition(event);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragfinish: function (sender, event) {\n\t\tif (this.dragging) {\n\t\t\tthis.dragging = false;\n\t\t\tevent.preventTap();\n\t\t\tthis.dragfinishTransition(event);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragstartTransition: function (event) {\n\t\tif (!this.$.animator.isAnimating()) {\n\t\t\tvar f = this.fromIndex = this.index;\n\t\t\tthis.toIndex = f - (this.layout ? this.layout.calcDragDirection(event) : 0);\n\t\t} else {\n\t\t\tthis.verifyDragTransition(event);\n\t\t}\n\t\tthis.fromIndex = this.clamp(this.fromIndex);\n\t\tthis.toIndex = this.clamp(this.toIndex);\n\t\t//this.log(this.fromIndex, this.toIndex);\n\t\tthis.fireTransitionStart();\n\t\tif (this.layout) {\n\t\t\tthis.layout.start();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragTransition: function (event) {\n\t\t// note: for simplicity we choose to calculate the distance directly between\n\t\t// the first and last transition point.\n\t\tvar d = this.layout ? this.layout.calcDrag(event) : 0;\n\t\tvar t$ = this.transitionPoints, s = t$[0], f = t$[t$.length-1];\n\t\tvar as = this.fetchArrangement(s);\n\t\tvar af = this.fetchArrangement(f);\n\t\tvar dx = this.layout ? this.layout.drag(d, s, as, f, af) : 0;\n\t\tvar dragFail = d && !dx;\n\t\tif (dragFail) {\n\t\t\t//this.log(dx, s, as, f, af);\n\t\t}\n\t\tthis.fraction += dx;\n\t\tvar fr = this.fraction;\n\t\tif (fr > 1 || fr < 0 || dragFail) {\n\t\t\tif (fr > 0 || dragFail) {\n\t\t\t\tthis.dragfinishTransition(event);\n\t\t\t}\n\t\t\tthis.dragstartTransition(event);\n\t\t\tthis.fraction = 0;\n\t\t\t// FIXME: account for lost fraction\n\t\t\t//this.dragTransition(event);\n\t\t}\n\t\tthis.stepTransition();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragfinishTransition: function (event) {\n\t\tthis.verifyDragTransition(event);\n\t\tthis.setIndex(this.toIndex);\n\t\t// note: if we're still dragging, then we're at a transition boundary\n\t\t// and should fire the finish event\n\t\tif (this.dragging) {\n\t\t\tthis.fireTransitionFinish();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tverifyDragTransition: function (event) {\n\t\tvar d = this.layout ? this.layout.calcDragDirection(event) : 0;\n\t\tvar f = Math.min(this.fromIndex, this.toIndex);\n\t\tvar t = Math.max(this.fromIndex, this.toIndex);\n\t\tif (d > 0) {\n\t\t\tvar s = f;\n\t\t\tf = t;\n\t\t\tt = s;\n\t\t}\n\t\tif (f != this.fromIndex) {\n\t\t\tthis.fraction = 1 - this.fraction;\n\t\t}\n\t\t//this.log('old', this.fromIndex, this.toIndex, 'new', f, t);\n\t\tthis.fromIndex = f;\n\t\tthis.toIndex = t;\n\t},\n\n\t/**\n\t* Resets the panels without sending any events.\n\t*\n\t* @private\n\t*/\n\trefresh: function () {\n\t\tif (this.$.animator && this.$.animator.isAnimating()) {\n\t\t\tthis.$.animator.stop();\n\t\t}\n\t\tthis.setupTransition();\n\t\tthis.fraction = 1;\n\t\tthis.stepTransition();\n\t\tthis.transitioning = false;\n\t\tthis.completeTransition();\n\t},\n\n\t/**\n\t* Transitions to the new index without animation\n\t*\n\t* @private\n\t*/\n\tdirectTransition: function () {\n\t\tthis.startTransition();\n\t\tthis.fraction = 1;\n\t\tthis.stepTransition();\n\t\tthis.finishTransition();\n\t},\n\n\t/**\n\t* Animates the transition to the new index\n\t*\n\t* @private\n\t*/\n\tanimateTransition: function () {\n\t\tthis.startTransition();\n\t\tthis.$.animator.play({\n\t\t\tstartValue: this.fraction\n\t\t});\n\t},\n\n\t/**\n\t* Starts the transition between two panels. if a transition is already in progress, this is\n\t* a no-op.\n\t*\n\t* @private\n\t*/\n\tstartTransition: function () {\n\t\tif (!this.transitioning) {\n\t\t\tthis.transitioning = true;\n\t\t\tthis.setupTransition();\n\t\t\tthis.fireTransitionStart();\n\t\t}\n\t},\n\n\t/**\n\t* Sets up transition state\n\t*\n\t* @private\n\t*/\n\tsetupTransition: function () {\n\t\tthis.fromIndex = this.fromIndex != null ? this.fromIndex : this.lastIndex || 0;\n\t\tthis.toIndex = this.toIndex != null ? this.toIndex : this.index;\n\t\tif (this.layout) {\n\t\t\tthis.layout.start();\n\t\t}\n\t},\n\n\t/**\n\t* Completes the transition between two panels.\n\t*\n\t* @private\n\t*/\n\tfinishTransition: function () {\n\t\tthis.transitioning = false;\n\t\tthis.completeTransition(true);\n\t},\n\n\t/**\n\t* Completes the transition by performing any tasks to be run when the transition ends,\n\t* including firing events and clean-up.\n\t*\n\t* @param {Boolean} [fire] - If `true`, will fire the {@link enyo.Panels#onTransitionFinish}\n\t*\tevent if deemed necessary.\n\t* @private\n\t*/\n\tcompleteTransition: function (fire) {\n\t\tif (this.layout) {\n\t\t\tthis.layout.finish();\n\t\t}\n\n\t\tif (fire) {\n\t\t\tthis.fireTransitionFinish(true);\n\t\t} else {\n\t\t\tthis.clearTransitionData();\n\t\t}\n\t},\n\n\t/**\n\t* Clears transition-related data.\n\t*\n\t* @private\n\t*/\n\tclearTransitionData: function() {\n\t\tthis.transitionPoints = [];\n\t\tthis.fraction = 0;\n\t\tthis.fromIndex = this.toIndex = null;\n\t},\n\n\t/**\n\t* @fires enyo.Panels#onTransitionStart\n\t* @private\n\t*/\n\tfireTransitionStart: function () {\n\t\tvar t = this.startTransitionInfo;\n\t\tif (this.hasNode() && (!t || (t.fromIndex != this.fromIndex || t.toIndex != this.toIndex))) {\n\t\t\tthis.startTransitionInfo = {fromIndex: this.fromIndex, toIndex: this.toIndex};\n\t\t\tthis.doTransitionStart(utils.clone(this.startTransitionInfo));\n\t\t}\n\t},\n\n\t/**\n\t* @fires enyo.Panels#onTransitionFinish\n\t* @param {Boolean} [clearData] - If `true`, {@link enyo.Panels#clearTransitionData} will be\n\t*\tcalled after recording the values needed for the callback.\n\t* @private\n\t*/\n\tfireTransitionFinish: function (clearData) {\n\t\tvar t = this.finishTransitionInfo,\n\t\t\tfromIndex = t ? t.fromIndex : null,\n\t\t\ttoIndex = t ? t.toIndex : null;\n\t\tif (this.hasNode() && (!t || (fromIndex != this.fromIndex || toIndex != this.toIndex))) {\n\t\t\t\tif (this.transitionOnComplete) {\n\t\t\t\tthis.finishTransitionInfo = {fromIndex: toIndex, toIndex: this.lastIndex};\n\t\t\t\t} else {\n\t\t\t\t\tthis.finishTransitionInfo = {fromIndex: this.lastIndex, toIndex: this.index};\n\t\t\t\t}\n\t\t\tif (clearData) {\n\t\t\t\tthis.clearTransitionData();\n\t\t\t}\n\t\t\t\tthis.doTransitionFinish(utils.clone(this.finishTransitionInfo));\n\t\t} else if (clearData) {\n\t\t\tthis.clearTransitionData();\n\t\t}\n\t},\n\n\t/**\n\t* Interpolates between arrangements as needed.\n\t*\n\t* @private\n\t*/\n\tstepTransition: function () {\n\t\tif (this.hasNode()) {\n\t\t\t// select correct transition points and normalize fraction.\n\t\t\tvar t$ = this.transitionPoints;\n\t\t\tvar r = (this.fraction || 0) * (t$.length-1);\n\t\t\tvar i = Math.floor(r);\n\t\t\tr = r - i;\n\t\t\tvar s = t$[i], f = t$[i+1];\n\t\t\t// get arrangements and lerp between them\n\t\t\tvar s0 = this.fetchArrangement(s);\n\t\t\tvar s1 = this.fetchArrangement(f);\n\t\t\tthis.arrangement = s0 && s1 ? Panels.lerp(s0, s1, r) : (s0 || s1);\n\t\t\tif (this.arrangement && this.layout) {\n\t\t\t\tthis.layout.flowArrangement();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Fetches the arrangement at a specified index, initializing it if necessary.\n\t*\n\t* @param  {Number} index - The index of the desired arrangement from `transitionPoints`.\n\t* @return {Object} The desired arrangement object.\n\t* @private\n\t*/\n\tfetchArrangement: function (index) {\n\t\tif ((index != null) && !this.arrangements[index] && this.layout) {\n\t\t\tthis.layout._arrange(index);\n\t\t\tthis.arrangements[index] = this.readArrangement(this.getPanels());\n\t\t}\n\t\treturn this.arrangements[index];\n\t},\n\n\t/**\n\t* Iterates over `panels` and retrieves a copy of each panel's `_arranger`.\n\t*\n\t* @param  {enyo.Control[]} panels - The array of panels.\n\t* @return {Object[]}              - The array of arrangement objects.\n\t*/\n\treadArrangement: function (panels) {\n\t\tvar r = [];\n\t\tfor (var i=0, c$=panels, c; (c=c$[i]); i++) {\n\t\t\tr.push(utils.clone(c._arranger));\n\t\t}\n\t\treturn r;\n\t},\n\n\t/**\n\t* @lends  enyo.Panels\n\t* @private\n\t*/\n\tstatics: {\n\t\t/**\n\t\t* Returns `true` for iOS and Android phone form factors, or when window width\n\t\t* is 800px or less. Approximates work done using media queries in `Panels.css`.\n\t\t*\n\t\t* @return {Boolean} `true` for narrow devices or viewports; otherwise, `false`.\n\t\t* @public\n\t\t*/\n\t\tisScreenNarrow: function () {\n\t\t\tif(Panels.isNarrowDevice()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn dom.getWindowWidth() <= 800;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t* Returns the class name to apply for narrow fitting. See media queries\n\t\t* in `Panels.css`.\n\t\t*\n\t\t* @return {String} The CSS class name to apply.\n\t\t*/\n\t\tgetNarrowClass: function () {\n\t\t\tif(Panels.isNarrowDevice()) {\n\t\t\t\treturn 'enyo-panels-force-narrow';\n\t\t\t} else {\n\t\t\t\treturn 'enyo-panels-fit-narrow';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t* Lerps between arrangements.\n\t\t*\n\t\t* @param  {Object[]} a0     - Array of current arrangement objects.\n\t\t* @param  {Object[]} a1     - Array of target arrangement object.\n\t\t* @param  {Number} fraction - The fraction (between 0 and 1) with which to lerp.\n\t\t* @return {Object[]}        - Array of arrangements that is `fraction` between\n\t\t* \t`a0` and `a1`.\n\t\t* @private\n\t\t*/\n\t\tlerp: function (a0, a1, fraction) {\n\t\t\tvar r = [];\n\t\t\tfor (var i=0, k$=utils.keys(a0), k; (k=k$[i]); i++) {\n\t\t\t\tr.push(this.lerpObject(a0[k], a1[k], fraction));\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\n\t\t/**\n\t\t* Lerps between the values of arrangement objects.\n\t\t*\n\t\t* @param  {Object} a0       - The source arragement.\n\t\t* @param  {Object} a1       - The destination arragement.\n\t\t* @param  {Number} fraction - The fraction (between 0 and 1) with which to lerp.\n\t\t*\n\t\t* @return {Object}          - The lerped arrangement.\n\t\t* @private\n\t\t*/\n\t\tlerpObject: function (a0, a1, fraction) {\n\t\t\tvar b = utils.clone(a0), n, o;\n\t\t\t// a1 might be undefined when deleting panels\n\t\t\tif (a1) {\n\t\t\t\tfor (var i in a0) {\n\t\t\t\t\tn = a0[i];\n\t\t\t\t\to = a1[i];\n\t\t\t\t\tif (n != o) {\n\t\t\t\t\t\tb[i] = n - (n - o) * fraction;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn b;\n\t\t},\n\n\t\t/**\n\t\t* Tests User Agent strings to identify narrow devices.\n\t\t*\n\t\t* @return {Boolean} `true` if the current device is a narrow device;\n\t\t* otherwise, `false`.\n\t\t*/\n\t\tisNarrowDevice: function () {\n\t\t\tvar ua = navigator.userAgent;\n\t\t\tswitch (platform.platformName) {\n\t\t\t\tcase 'ios':\n\t\t\t\t\treturn (/iP(?:hone|od;(?: U;)? CPU) OS (\\d+)/).test(ua);\n\t\t\t\tcase 'android':\n\t\t\t\t\treturn (/Mobile/).test(ua) && (platform.android > 2);\n\t\t\t\tcase 'androidChrome':\n\t\t\t\t\treturn (/Mobile/).test(ua);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n});","require('../../../enyo');\n\n\n\nvar\n\tkind = require('../kind'),\n\tutils = require('../utils'),\n\tplatform = require('../platform'),\n\tdispatcher = require('../dispatcher'),\n\tfullscreen = require('../fullscreen'),\n\troots = require('../roots');\n\nvar\n\tUiComponent = require('../UiComponent'),\n\tHTMLStringDelegate = require('../HTMLStringDelegate'),\n\tDom = require('../dom'),\n\tFloatingLayer = require('../floatingLayer');\n\nvar nodePurgatory;\n\n/**\n* Called by `Control.teardownRender()`. In certain circumstances,\n* we need to temporarily keep a DOM node around after tearing down\n* because we're still acting on a stream of touch events emanating\n* from the node. See `Control.retainNode()` for more information.\n*\n* @private\n*/\nfunction storeRetainedNode (control) {\n\tvar p = getNodePurgatory(),\n\t\tn = control._retainedNode;\n\tif (n) {\n\t\tp.appendChild(n);\n\t}\n\tcontrol._retainedNode = null;\n}\n\n/**\n* Called (via a callback) when it's time to release a DOM node\n* that we've retained.\n*\n* @private\n*/\nfunction releaseRetainedNode (retainedNode) {\n\tvar p = getNodePurgatory();\n\tif (retainedNode) {\n\t\tp.removeChild(retainedNode);\n\t}\n}\n\n/**\n* Lazily add a hidden `<div>` to `document.body` to serve as a\n* container for retained DOM nodes.\n*\n* @private\n*/\nfunction getNodePurgatory () {\n\tvar p = nodePurgatory;\n\tif (!p) {\n\t\tp = nodePurgatory = document.createElement(\"div\");\n\t\tp.id = \"node_purgatory\";\n\t\tp.style.display = \"none\";\n\t\tdocument.body.appendChild(p);\n\t}\n\treturn p;\n}\n\n/**\n* {@link enyo.Control} is a [component]{@link enyo.UiComponent} that controls\n* a [DOM]{@glossary DOM} [node]{@glossary Node} (i.e., an element in the user\n* interface). Controls are generally visible and the user often interacts with\n* them directly. While things like buttons and input boxes are obviously\n* controls, in Enyo, a control may be as simple as a text item or as complex\n* as an entire application. Both inherit the same basic core capabilities from\n* this kind.\n*\n* For more information, see the documentation on\n* [Controls]{@linkplain $dev-guide/key-concepts/controls.html} in the\n* Enyo Developer Guide.\n*\n* **If you make changes to `enyo.Control`, be sure to add or update the\n* appropriate unit tests.**\n*\n* @class enyo.Control\n* @extends enyo.UiComponent\n* @ui\n* @public\n*/\nvar Control = module.exports = kind(\n\t/** @lends enyo.Control.prototype */ {\n\n\tname: 'enyo.Control',\n\n\t/**\n\t* @private\n\t*/\n\tkind: UiComponent,\n\n\t/**\n\t* @private\n\t*/\n\n\n\t/**\n\t* @type {String}\n\t* @default 'enyo.Control'\n\t* @public\n\t*/\n\tdefaultKind: null, // set after the fact\n\n\t/**\n\t* The [DOM node]{@glossary DOM} tag name that should be created.\n\t*\n\t* @type {String}\n\t* @default 'div'\n\t* @public\n\t*/\n\ttag: 'div',\n\n\t/**\n\t* A [hash]{@glossary Object} of attributes to be applied to the created\n\t* [DOM]{@glossary DOM} node.\n\t*\n\t* @type {Object}\n\t* @default null\n\t* @public\n\t*/\n\tattributes: null,\n\n\t/**\n\t* [Boolean]{@glossary Boolean} flag indicating whether this element should\n\t* \"fit\", or fill its container's size.\n\t*\n\t* @type {Boolean}\n\t* @default null\n\t* @public\n\t*/\n\tfit: null,\n\n\t/**\n\t* [Boolean]{@glossary Boolean} flag indicating whether HTML is allowed in\n\t* this control's [content]{@link enyo.Control#content} property. If `false`\n\t* (the default), HTML will be encoded into [HTML entities]{@glossary entity}\n\t* (e.g., `&lt;` and `&gt;`) for literal visual representation.\n\t*\n\t* @type {Boolean}\n\t* @default null\n\t* @public\n\t*/\n\tallowHtml: false,\n\n\t/**\n\t* Mimics the HTML `style` attribute.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\tstyle: '',\n\n\t/**\n\t* @private\n\t*/\n\tkindStyle: '',\n\n\t/**\n\t* Mimics the HTML `class` attribute.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\tclasses: '',\n\n\t/**\n\t* @private\n\t*/\n\tkindClasses: '',\n\n\t/**\n\t* [Classes]{@link enyo.Control#classes} that are applied to all controls.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\tcontrolClasses: '',\n\n\t/**\n\t* The text-based content of the Control. If the [allowHtml]{@link enyo.Control#allowHtml}\n\t* flag is set to `true`, you may set this property to an HTML string.\n\t* @public\n\t*/\n\tcontent: '',\n\n\t/**\n\t* If true or 'inherit' and enyo.gesture.doubleTabEnabled == true, will fire a doubletap\n\t* event, and will temporarily suppress a single tap while waiting for a double tap.\n\t*\n\t* @type {String|Boolean}\n\t* @default 'inherit'\n\t* @public\n\t*/\n\tdoubleTapEnabled: 'inherit',\n\n\t/**\n\t* Time in milliseconds to wait to detect a double tap\n\t*\n\t* @type {Number}\n\t* @default 300\n\t* @public\n\t*/\n\tdoubleTapInterval: 300,\n\n\t/**\n\t* If set to `true`, the [control]{@link enyo.Control} will not be rendered until its\n\t* [showing]{@link enyo.Control#showing} property has been set to `true`. This can be used\n\t* directly or is used by some widgets to control when children are rendered.\n\t*\n\t* It is important to note that setting this to `true` will _force_\n\t* [canGenerate]{@link enyo.Control#canGenerate} and [showing]{@link enyo.Control#showing}\n\t* to be `false`. Arbitrarily modifying the values of these properties prior to its initial\n\t* render may have unexpected results.\n\t*\n\t* Once a control has been shown/rendered with `renderOnShow` `true` the behavior will not\n\t* be used again.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\trenderOnShow: false,\n\t\n\t/**\n\t* @todo Find out how to document \"handlers\".\n\t* @public\n\t*/\n\thandlers: {\n\t\tontap: 'tap',\n\t\tonShowingChanged: 'showingChangedHandler'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstrictlyInternalEvents: {onenter: 1, onleave: 1},\n\n\t/**\n\t* @private\n\t*/\n\tisInternalEvent: function (event) {\n\t\tvar rdt = dispatcher.findDispatchTarget(event.relatedTarget);\n\t\treturn rdt && rdt.isDescendantOf(this);\n\t},\n\n\t// .................................\n\t// DOM NODE MANIPULATION API\n\n\t/**\n\t* Gets the bounds for this control. The `top` and `left` properties returned\n\t* by this method represent the control's positional distance in pixels from\n\t* either A) the first parent of this control that is absolutely or relatively\n\t* positioned, or B) the `document.body`.\n\t*\n\t* This is a shortcut convenience method for {@link enyo.dom.getBounds}.\n\t*\n\t* @returns {Object} An [object]{@glossary Object} containing `top`, `left`,\n\t* `width`, and `height` properties.\n\t* @public\n\t*/\n\tgetBounds: function () {\n\t\tvar node = this.hasNode(),\n\t\t\tbounds = node && Dom.getBounds(node);\n\n\t\treturn bounds || {left: undefined, top: undefined, width: undefined, height: undefined};\n\t},\n\n\t/**\n\t* Sets the absolute/relative position and/or size for this control. Values\n\t* of `null` or `undefined` for the `bounds` properties will be ignored. You\n\t* may optionally specify a `unit` (i.e., a valid CSS measurement unit) as a\n\t* [string]{@glossary String} to be applied to each of the position/size\n\t* assignments.\n\t*\n\t* @param {Object} bounds - An [object]{@glossary Object}, optionally\n\t* containing one or more of the following properties: `width`, `height`,\n\t* `top`, `right`, `bottom`, and `left`.\n\t* @param {String} [unit='px']\n\t* @public\n\t*/\n\tsetBounds: function (bounds, unit) {\n\t\tvar newStyle = '',\n\t\t\textents = ['width', 'height', 'left', 'top', 'right', 'bottom'],\n\t\t\ti = 0,\n\t\t\tval,\n\t\t\text;\n\n\t\t// if no unit is supplied, we default to pixels\n\t\tunit = unit || 'px';\n\n\t\tfor (; (ext = extents[i]); ++i) {\n\t\t\tval = bounds[ext];\n\t\t\tif (val || val === 0) {\n\t\t\t\tnewStyle += (ext + ':' + val + (typeof val == 'string' ? '' : unit) + ';');\n\t\t\t}\n\t\t}\n\n\t\tthis.set('style', this.style + newStyle);\n\t},\n\n\t/**\n\t* Gets the bounds for this control. The `top` and `left` properties returned\n\t* by this method represent the control's positional distance in pixels from\n\t* `document.body`. To get the bounds relative to this control's parent(s),\n\t* use [getBounds()]{@link enyo.Control#getBounds}.\n\t*\n\t* This is a shortcut convenience method for {@link enyo.dom.getAbsoluteBounds}.\n\t*\n\t* @returns {Object} An [object]{@glossary Object} containing `top`, `left`,\n\t* `width`, and `height` properties.\n\t* @public\n\t*/\n\tgetAbsoluteBounds: function () {\n\t\tvar node = this.hasNode(),\n\t\t\tbounds = node && Dom.getAbsoluteBounds(node);\n\n\t\treturn bounds || {\n\t\t\tleft: undefined,\n\t\t\ttop: undefined,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tbottom: undefined,\n\t\t\tright: undefined\n\t\t};\n\t},\n\n\t/**\n\t* Shortcut method to set [showing]{@link enyo.Control#showing} to `true`.\n\t*\n\t* @public\n\t*/\n\tshow: function () {\n\t\tthis.set('showing', true);\n\t},\n\n\t/**\n\t* Shortcut method to set [showing]{@link enyo.Control#showing} to `false`.\n\t*\n\t* @public\n\t*/\n\thide: function () {\n\t\tthis.set('showing', false);\n\t},\n\n\t/**\n\t* Sets this control to be [focused]{@glossary focus}.\n\t*\n\t* @public\n\t*/\n\tfocus: function () {\n\t\tif (this.hasNode()) this.node.focus();\n\t},\n\n\t/**\n\t* [Blurs]{@glossary blur} this control. (The opposite of\n\t* [focus()]{@link enyo.Control#focus}.)\n\t*\n\t* @public\n\t*/\n\tblur: function () {\n\t\tif (this.hasNode()) this.node.blur();\n\t},\n\n\t/**\n\t* Determines whether this control currently has the [focus]{@glossary focus}.\n\t*\n\t* @returns {Boolean} Whether this control has focus. `true` if the control\n\t* has focus; otherwise, `false`.\n\t* @public\n\t*/\n\thasFocus: function () {\n\t\tif (this.hasNode()) return document.activeElement === this.node;\n\t},\n\n\t/**\n\t* Determines whether this control's [DOM node]{@glossary Node} has been created.\n\t*\n\t* @returns {Boolean} Whether this control's [DOM node]{@glossary Node} has\n\t* been created. `true` if it has been created; otherwise, `false`.\n\t* @public\n\t*/\n\thasNode: function () {\n\t\treturn this.generated && (this.node || this.findNodeById());\n\t},\n\n\t/**\n\t* Gets the requested property (`name`) from the control's attributes\n\t* [hash]{@glossary Object}, from its cache of node attributes, or, if it has\n\t* yet to be cached, from the [node]{@glossary Node} itself.\n\t*\n\t* @param {String} name - The attribute name to get.\n\t* @returns {(String|Null)} The value of the requested attribute, or `null`\n\t* if there isn't a [DOM node]{@glossary Node} yet.\n\t* @public\n\t*/\n\tgetAttribute: function (name) {\n\t\tvar node;\n\n\t\t// TODO: This is a fixed API assuming that no changes will happen to the DOM that\n\t\t// do not use it...original implementation of this method used the node's own\n\t\t// getAttribute method every time it could but we really only need to do that if we\n\t\t// weren't the ones that set the value to begin with -- in slow DOM situations this\n\t\t// could still be faster but it needs to be verified\n\t\tif (this.attributes.hasOwnProperty(name)) return this.attributes[name];\n\t\telse {\n\t\t\tnode = this.hasNode();\n\n\t\t\t// we store the value so that next time we'll know what it is\n\t\t\t/*jshint -W093 */\n\t\t\treturn (this.attributes[name] = (node ? node.getAttribute(name) : null));\n\t\t\t/*jshint +W093 */\n\t\t}\n\t},\n\n\t/**\n\t* Assigns an attribute to a control's [node]{@glossary Node}. Assigning\n\t* `name` a value of `null`, `false`, or the empty string `(\"\")` will remove\n\t* the attribute from the node altogether.\n\t*\n\t* @param {String} name - Attribute name to assign/remove.\n\t* @param {(String|Number|null)} value - The value to assign to `name`\n\t* @returns {this} Callee for chaining.\n\t* @public\n\t*/\n\tsetAttribute: function (name, value) {\n\t\tvar attrs = this.attributes,\n\t\t\tnode = this.hasNode(),\n\t\t\tdelegate = this.renderDelegate || Control.renderDelegate;\n\n\t\tif (name) {\n\t\t\tattrs[name] = value;\n\n\t\t\tif (node) {\n\t\t\t\tif (value == null || value === false || value === '') {\n\t\t\t\t\tnode.removeAttribute(name);\n\t\t\t\t} else node.setAttribute(name, value);\n\t\t\t} else delegate.invalidate(this, 'attributes');\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Reads the `name` property directly from the [node]{@glossary Node}. You\n\t* may provide a default (`def`) to use if there is no node yet.\n\t*\n\t* @param {String} name - The [node]{@glossary Node} property name to get.\n\t* @param {*} def - The default value to apply if there is no node.\n\t* @returns {String} The value of the `name` property, or `def` if the node\n\t* was not available.\n\t* @public\n\t*/\n\tgetNodeProperty: function (name, def) {\n\t\treturn this.hasNode() ? this.node[name] : def;\n\t},\n\n\t/**\n\t* Sets the value of a property (`name`) directly on the [node]{@glossary Node}.\n\t*\n\t* @param {String} name - The [node]{@glossary Node} property name to set.\n\t* @param {*} value - The value to assign to the property.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tsetNodeProperty: function (name, value) {\n\t\tif (this.hasNode()) this.node[name] = value;\n\t\treturn this;\n\t},\n\n\t/**\n\t* Appends additional content to this control.\n\t*\n\t* @param {String} content - The new string to add to the end of the `content`\n\t* property.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\taddContent: function (content) {\n\t\treturn this.set('content', this.get('content') + content);\n\t},\n\n\t// .................................\n\n\t// .................................\n\t// STYLE/CLASS API\n\n\t/**\n\t* Determines whether this control has the class `name`.\n\t*\n\t* @param {String} name - The name of the class (or classes) to check for.\n\t* @returns {Boolean} Whether the control has the class `name`.\n\t* @public\n\t*/\n\thasClass: function (name) {\n\t\treturn name && (' ' + this.classes + ' ').indexOf(' ' + name + ' ') > -1;\n\t},\n\n\t/**\n\t* Adds the specified class to this control's list of classes.\n\t*\n\t* @param {String} name - The name of the class to add.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\taddClass: function (name) {\n\t\tvar classes = this.classes || '';\n\n\t\t// NOTE: Because this method accepts a string and for efficiency does not wish to\n\t\t// parse it to determine if it is actually multiple classes we later pull a trick\n\t\t// to keep it normalized and synchronized with our attributes hash and the node's\n\t\tif (!this.hasClass(name)) {\n\n\t\t\t// this is hooked\n\t\t\tthis.set('classes', classes + (classes ? (' ' + name) : name));\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Removes the specified class from this control's list of classes.\n\t*\n\t* **Note: It is not advisable to pass a string of multiple, space-delimited\n\t* class names into this method. Instead, call the method once for each class\n\t* name that you want to remove.**\n\t*\n\t* @param {String} name - The name of the class to remove.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\tremoveClass: function (name) {\n\t\tvar classes = this.classes;\n\n\t\tif (name) {\n\t\t\tthis.set('classes', (' ' + classes + ' ').replace(' ' + name + ' ', ' ').trim());\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Adds or removes the specified class conditionally, based on the state\n\t* of the `add` argument.\n\t*\n\t* @param {String} name - The name of the class to add or remove.\n\t* @param {Boolean} add - If `true`, `name` will be added as a class; if\n\t* `false`, it will be removed.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\taddRemoveClass: function (name, add) {\n\t\treturn name ? this[add ? 'addClass' : 'removeClass'](name) : this;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclassesChanged: function () {\n\t\tvar classes = this.classes,\n\t\t\tnode = this.hasNode(),\n\t\t\tattrs = this.attributes,\n\t\t\tdelegate = this.renderDelegate || Control.renderDelegate;\n\n\t\tif (node) {\n\t\t\tif (classes || this.kindClasses) {\n\t\t\t\tnode.setAttribute('class', classes || this.kindClasses);\n\t\t\t} else node.removeAttribute('class');\n\n\t\t\tthis.classes = classes = node.getAttribute('class');\n\t\t}\n\n\t\t// we need to update our attributes.class value and flag ourselves to be\n\t\t// updated\n\t\tattrs['class'] = classes;\n\n\t\t// we want to notify the delegate that the attributes have changed in case it wants\n\t\t// to handle this is some special way\n\t\tdelegate.invalidate(this, 'attributes');\n\t},\n\n\t/**\n\t* Applies a CSS style directly to the control. Use the `prop` argument to\n\t* specify the CSS property name you'd like to set, and `value` to specify\n\t* the desired value. Setting `value` to `null` will remove the CSS property\n\t* `prop` altogether.\n\t*\n\t* @param {String} prop - The CSS property to assign.\n\t* @param {(String|Number|null|undefined)} value - The value to assign to\n\t* `prop`. Setting a value of `null`, `undefined`, or the empty string `(\"\")`\n\t* will remove the property `prop` from the control.\n\t* @returns {this} Callee for chaining.\n\t* @public\n\t*/\n\tapplyStyle: function (prop, value) {\n\n\t\t// NOTE: This method deliberately avoids calling set('style', ...) for performance\n\t\t// as it will have already been parsed by the browser so we pass it on via the\n\t\t// notification system which is the same\n\n\t\t// TODO: Wish we could delay this potentially...\n\t\t// if we have a node we render the value immediately and update our style string\n\t\t// in the process to keep them synchronized\n\t\tvar node = this.hasNode(),\n\t\t\tstyle = this.style,\n\t\t\tdelegate = this.renderDelegate || Control.renderDelegate;\n\n\t\t// FIXME: This is put in place for a Firefox bug where setting a style value of a node\n\t\t// via its CSSStyleDeclaration object (by accessing its node.style property) does\n\t\t// not work when using a CSS property name that contains one or more dash, and requires\n\t\t// setting the property via the JavaScript-style property name. This fix should be\n\t\t// removed once this issue has been resolved in the Firefox mainline and its variants\n\t\t// (it is currently resolved in the 36.0a1 nightly):\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=1083457\n\t\tif (node && (platform.firefox < 35 || platform.firefoxOS || platform.androidFirefox)) {\n\t\t\tprop = prop.replace(/-([a-z])/gi, function(match, submatch) {\n\t\t\t\treturn submatch.toUpperCase();\n\t\t\t});\n\t\t}\n\n\t\tif (value !== null && value !== '' && value !== undefined) {\n\t\t\t// update our current cached value\n\t\t\tif (node) {\n\t\t\t\tnode.style[prop] = value;\n\n\t\t\t\t// cssText is an internal property used to help know when to sync and not\n\t\t\t\t// sync with the node in styleChanged\n\t\t\t\tthis.style = this.cssText = node.style.cssText;\n\n\t\t\t\t// we need to invalidate the style for the delegate\n\t\t\t\tdelegate.invalidate(this, 'style');\n\n\t\t\t\t// otherwise we have to try and prepare it for the next time it is rendered we\n\t\t\t\t// will need to update it because it will not be synchronized\n\t\t\t} else this.set('style', style + (' ' + prop + ':' + value + ';'));\n\t\t} else {\n\n\t\t\t// in this case we are trying to clear the style property so if we have the node\n\t\t\t// we let the browser handle whatever the value should be now and otherwise\n\t\t\t// we have to parse it out of the style string and wait to be rendered\n\n\t\t\tif (node) {\n\t\t\t\tnode.style[prop] = '';\n\t\t\t\tthis.style = this.cssText = node.style.cssText;\n\n\t\t\t\t// we need to invalidate the style for the delegate\n\t\t\t\tdelegate.invalidate(this, 'style');\n\t\t\t} else {\n\n\t\t\t\t// this is a rare case to nullify the style of a control that is not\n\t\t\t\t// rendered or does not have a node\n\t\t\t\tstyle = style.replace(new RegExp(\n\t\t\t\t\t// This looks a lot worse than it is. The complexity stems from needing to\n\t\t\t\t\t// match a url container that can have other characters including semi-\n\t\t\t\t\t// colon and also that the last property may/may-not end with one\n\t\t\t\t\t'\\\\s*' + prop + '\\\\s*:\\\\s*[a-zA-Z0-9\\\\ ()_\\\\-\\'\"%,]*(?:url\\\\(.*\\\\)\\\\s*[a-zA-Z0-9\\\\ ()_\\\\-\\'\"%,]*)?\\\\s*(?:;|;?$)',\n\t\t\t\t\t'gi'\n\t\t\t\t),'');\n\t\t\t\tthis.set('style', style);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Allows the addition of several CSS properties and values at once, via a\n\t* single string, similar to how the HTML `style` attribute works.\n\t*\n\t* @param {String} css - A string containing one or more valid CSS styles.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\taddStyles: function (css) {\n\t\tvar key,\n\t\t\tnewStyle = '';\n\n\t\tif (typeof css == 'object') {\n\t\t\tfor (key in css) newStyle += (key + ':' + css[key] + ';');\n\t\t} else newStyle = css || '';\n\n\t\tthis.set('style', this.style + newStyle);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstyleChanged: function () {\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\n\n\t\t// if the cssText internal string doesn't match then we know style was set directly\n\t\tif (this.cssText !== this.style) {\n\n\t\t\t// we need to render the changes and synchronize - this means that the style\n\t\t\t// property was set directly so we will reset it prepending it with the original\n\t\t\t// style (if any) for the kind and keeping whatever the browser is keeping\n\t\t\tif (this.hasNode()) {\n\t\t\t\tthis.node.style.cssText = this.kindStyle + (this.style || '');\n\t\t\t\t// now we store the parsed version\n\t\t\t\tthis.cssText = this.style = this.node.style.cssText;\n\t\t\t}\n\n\t\t\t// we need to ensure that the delegate has an opportunity to handle this change\n\t\t\t// separately if it needs to\n\t\t\tdelegate.invalidate(this, 'style');\n\t\t}\n\t},\n\n\t/**\n\t* Retrieves a control's CSS property value. This doesn't just pull the\n\t* assigned value of `prop`; it returns the browser's understanding of `prop`,\n\t* the \"computed\" value. If the control isn't been rendered yet, and you need\n\t* a default value (such as `0`), include it in the arguments as `def`.\n\t*\n\t* @param {String} prop - The property name to get.\n\t* @param {*} [def] - An optional default value, in case the control isn't\n\t* rendered yet.\n\t* @returns {(String|Number)} The computed value of `prop`, as the browser\n\t* sees it.\n\t* @public\n\t*/\n\tgetComputedStyleValue: function (prop, def) {\n\t\treturn this.hasNode() ? Dom.getComputedStyleValue(this.node, prop) : def;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tfindNodeById: function () {\n\t\treturn this.id && (this.node = Dom.byId(this.id));\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tidChanged: function (was) {\n\t\tif (was) Control.unregisterDomEvents(was);\n\t\tif (this.id) {\n\t\t\tControl.registerDomEvents(this.id, this);\n\t\t\tthis.setAttribute('id', this.id);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcontentChanged: function () {\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\n\t\tdelegate.invalidate(this, 'content');\n\t},\n\n\t/**\n\t* If the control has been generated, re-flows the control.\n\t*\n\t* @public\n\t*/\n\tbeforeChildRender: function () {\n\t\t// if we are generated, we should flow before rendering a child;\n\t\t// if not, the render context isn't ready anyway\n\t\tif (this.generated) this.flow();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowingChanged: function (was) {\n\t\tvar nextControl;\n\t\t// if we are changing from not showing to showing we attempt to find whatever\n\t\t// our last known value for display was or use the default\n\t\tif (!was && this.showing) {\n\t\t\tthis.applyStyle('display', this._display || '');\n\t\t\t\n\t\t\t// note the check for generated and canGenerate as changes to canGenerate will force\n\t\t\t// us to ignore the renderOnShow value so we don't undo whatever the developer was\n\t\t\t// intending\n\t\t\tif (!this.generated && !this.canGenerate && this.renderOnShow) {\n\t\t\t\tnextControl = this.getNextControl();\n\t\t\t\tif (nextControl && !this.addBefore) this.addBefore = nextControl;\n\t\t\t\tthis.set('canGenerate', true);\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\t\n\t\t\tthis.sendShowingChangedEvent(was);\n\t\t}\n\n\t\t// if we are supposed to be hiding the control then we need to cache our current\n\t\t// display state\n\t\telse if (was && !this.showing) {\n\t\t\tthis.sendShowingChangedEvent(was);\n\t\t\t// we can't truly cache this because it _could_ potentially be set to multiple\n\t\t\t// values throughout its lifecycle although that seems highly unlikely...\n\t\t\tthis._display = this.hasNode() ? this.node.style.display : '';\n\t\t\tthis.applyStyle('display', 'none');\n\t\t}\n\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trenderOnShowChanged: function () {\n\t\t// ensure that the default value assigned to showing is actually a boolean\n\t\t// and that it is only true if the renderOnShow is also false\n\t\tthis.showing = ((!!this.showing) && !this.renderOnShow);\n\t\t// we want to check and make sure that the canGenerate value is correct given\n\t\t// the state of renderOnShow\n\t\tthis.canGenerate = (this.canGenerate && !this.renderOnShow);\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tsendShowingChangedEvent: function (was) {\n\t\tvar waterfall = (was === true || was === false),\n\t\t\tparent = this.parent;\n\n\t\t// make sure that we don't trigger the waterfall when this method\n\t\t// is arbitrarily called during _create_ and it should only matter\n\t\t// that it changed if our parent's are all showing as well\n\t\tif (waterfall && (parent ? parent.getAbsoluteShowing(true) : true)) {\n\t\t\tthis.waterfall('onShowingChanged', {originator: this, showing: this.showing});\n\t\t}\n\t},\n\n\t/**\n\t* Returns `true` if this control and all parents are showing.\n\t*\n\t* @param {Boolean} ignoreBounds - If `true`, it will not force a layout by retrieving\n\t*\tcomputed bounds and rely on the return from [showing]{@link enyo.Control#showing}\n\t* exclusively.\n\t* @returns {Boolean} Whether the control is showing (visible).\n\t* @public\n\t*/\n\tgetAbsoluteShowing: function (ignoreBounds) {\n\t\tvar bounds = !ignoreBounds ? this.getBounds() : null,\n\t\t\tparent = this.parent;\n\n\t\tif (!this.generated || this.destroyed || !this.showing || (bounds &&\n\t\t\tbounds.height === 0 && bounds.width === 0)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parent && parent.getAbsoluteShowing) {\n\n\t\t\t// we actually don't care what the parent says if it is the floating layer\n\t\t\tif (!this.parentNode || (this.parentNode !== Control.floatingLayer.hasNode())) {\n\t\t\t\treturn parent.getAbsoluteShowing(ignoreBounds);\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t* Handles the `onShowingChanged` event that is waterfalled by controls when\n\t* their `showing` value is modified. If the control is not showing itself\n\t* already, it will not continue the waterfall. Overload this method to\n\t* provide additional handling for this event.\n\t*\n\t* @private\n\t*/\n\tshowingChangedHandler: function (sender, event) {\n\t\treturn sender === this ? false : !this.showing;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tfitChanged: function () {\n\t\tthis.parent.reflow();\n\t},\n\n\t/**\n\t* Determines whether we are in fullscreen mode or not.\n\t*\n\t* @returns {Boolean} Whether we are currently in fullscreen mode.\n\t* @public\n\t*/\n\tisFullscreen: function () {\n\t\treturn (this.hasNode() && this.node === fullscreen.getFullscreenElement());\n\t},\n\n\t/**\n\t* Requests that this control be displayed fullscreen (like a video\n\t* container). If the request is granted, the control fills the screen and\n\t* `true` is returned; if the request is denied, the control is not resized\n\t* and `false` is returned.\n\t*\n\t* @returns {Boolean} `true` on success; otherwise, `false`.\n\t* @public\n\t*/\n\trequestFullscreen: function () {\n\t\tif (!this.hasNode()) return false;\n\n\t\tif (fullscreen.requestFullscreen(this)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t* Ends fullscreen mode for this control.\n\t*\n\t* @returns {Boolean} If the control was in fullscreen mode before this\n\t* method was called, it is taken out of that mode and `true` is returned;\n\t* otherwise, `false` is returned.\n\t* @public\n\t*/\n\tcancelFullscreen: function() {\n\t\tif (this.isFullscreen()) {\n\t\t\tfullscreen.cancelFullscreen();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// .................................\n\n\t// .................................\n\t// RENDER-SCHEME API\n\n\t/**\n\t* Indicates whether the control is allowed to be generated, i.e., rendered\n\t* into the [DOM]{@glossary DOM} tree.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\tcanGenerate: true,\n\n\t/**\n\t* Indicates whether the control is visible.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\tshowing: true,\n\n\t/**\n\t* The [node]{@glossary Node} that this control will be rendered into.\n\t*\n\t* @type {enyo.Control}\n\t* @default null\n\t* @public\n\t*/\n\trenderDelegate: null,\n\n\t/**\n\t* Indicates whether the control has been generated yet.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @private\n\t*/\n\tgenerated: false,\n\n\t/**\n\t* Forces the control to be rendered. You should use this sparingly, as it\n\t* can be costly, but it may be necessary in cases where a control or its\n\t* contents have been updated surreptitiously.\n\t*\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\trender: function () {\n\n\t\t// prioritize the delegate set for this control otherwise use the default\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\n\n\t\t// the render delegate acts on the control\n\t\tdelegate.render(this);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* Takes this control and drops it into a (new/different)\n\t* [DOM node]{@glossary Node}. This will replace any existing nodes in the\n\t* target `parentNode`.\n\t*\n\t* @param {Node} parentNode - The new parent of this control.\n\t* @param {Boolean} preventRooting - If `true`, this control will not be treated as a root\n\t*\tview and will not be added to the set of roots.\n\t* @returns {this} The callee for chaining.\n\t* @public\n\t*/\n\trenderInto: function (parentNode, preventRooting) {\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate,\n\t\t\tnoFit = this.fit === false;\n\n\t\t// attempt to retrieve the parentNode\n\t\tparentNode = Dom.byId(parentNode);\n\n\t\t// teardown in case of previous render\n\t\tdelegate.teardownRender(this);\n\n\t\tif (parentNode == document.body && !noFit) this.setupBodyFitting();\n\t\telse if (this.fit) this.addClass('enyo-fit enyo-clip');\n\n\t\t// for IE10 support, we want full support over touch actions in enyo-rendered areas\n\t\tthis.addClass('enyo-no-touch-action');\n\n\t\t// add css to enable hw-accelerated scrolling on non-android platforms\n\t\t// ENYO-900, ENYO-901\n\t\tthis.setupOverflowScrolling();\n\n\t\t// if there are unflushed body classes we flush them now...\n\t\tDom.flushBodyClasses();\n\n\t\t// we inject this as a root view because, well, apparently that is just an assumption\n\t\t// we've been making...\n\t\tif (!preventRooting) {\n\t\t\troots.addToRoots(this);\n\t\t}\n\n\t\t// now let the delegate render it the way it needs to\n\t\tdelegate.renderInto(this, parentNode);\n\n\t\tDom.updateScaleFactor();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* A function that fires after the control has rendered. This performs a\n\t* reflow.\n\t*\n\t* @public\n\t*/\n\trendered: function () {\n\t\tvar child,\n\t\t\ti = 0;\n\n\t\t// CAVEAT: Currently we use one entry point ('reflow') for\n\t\t// post-render layout work *and* post-resize layout work.\n\t\tthis.reflow();\n\n\t\tfor (; (child = this.children[i]); ++i) {\n\t\t\tif (child.generated) child.rendered();\n\t\t}\n\t},\n\n\t/**\n\t* You should generally not need to call this method in your app code.\n\t* It is used internally by some Enyo UI libraries to handle a rare\n\t* issue that sometimes arises when using a virtualized list or repeater\n\t* on a touch device.\n\t*\n\t* This issue occurs when a gesture (e.g. a drag) originates with a DOM\n\t* node that ends up being destroyed in mid-gesture as the list updates.\n\t* When the node is destroyed, the stream of DOM events representing the\n\t* gesture stops, causing the associated action to stop or otherwise\n\t* fail.\n\t*\n\t* You can prevent this problem from occurring by calling `retainNode`\n\t* on the {@link enyo.Control} from which the gesture originates. Doing\n\t* so will cause Enyo to keep the DOM node around (hidden from view)\n\t* until you explicitly release it. You should call `retainNode` in the\n\t* event handler for the event that starts the gesture.\n\t*\n\t* `retainNode` returns a function that you must call when the gesture\n\t* ends to release the node. Make sure you call this function to avoid\n\t* \"leaking\" the DOM node (failing to remove it from the DOM).\n\t*\n\t* @param {Node} node - Optional. Defaults to the node associated with\n\t* the Control (`Control.node`). You can generally omit this parameter\n\t* when working with {@link enyo.DataList} or {@link enyo.DataGridList},\n\t* but should generally pass in the event's target node (`event.target`)\n\t* when working with {@link enyo.List}. (Because {@link enyo.List} is\n\t* based on the Flyweight pattern, the event's target node is often not\n\t* the node currently associated with the Control at the time the event\n\t* occurs.)\n\t* @returns {Function} Keep a reference to this function and call it\n\t* to release the node when the gesture has ended.\n\t* @public\n\t*/\n\tretainNode: function(node) {\n\t\tvar control = this,\n\t\t\tretainedNode = this._retainedNode = (node || this.hasNode());\n\t\treturn function() {\n\t\t\tif (control && (control._retainedNode == retainedNode)) {\n\t\t\t\tcontrol._retainedNode = null;\n\t\t\t} else {\n\t\t\t\treleaseRetainedNode(retainedNode);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t* @param {Boolean} [cache] - Whether or not we are tearing down as part of a destroy\n\t*\toperation, or if we are just caching. If `true`, the `showing` and `canGenerate`\n\t*\tproperties of the control will not be reset.\n\t* @private\n\t*/\n\tteardownRender: function (cache) {\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\n\n\t\tif (this._retainedNode) {\n\t\t\tstoreRetainedNode(this);\n\t\t}\n\n\t\tdelegate.teardownRender(this, cache);\n\n\t\t// if the original state was set with renderOnShow true then we need to reset these\n\t\t// values as well to coordinate the original intent\n\t\tif (this.renderOnShow && !cache) {\n\t\t\tthis.set('showing', false);\n\t\t\tthis.set('canGenerate', false);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tteardownChildren: function () {\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\n\n\t\tdelegate.teardownChildren(this);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\taddNodeToParent: function () {\n\t\tvar pn;\n\n\t\tif (this.node) {\n\t\t\tpn = this.getParentNode();\n\t\t\tif (pn) {\n\t\t\t\tif (this.addBefore !== undefined) {\n\t\t\t\t\tthis.insertNodeInParent(pn, this.addBefore && this.addBefore.hasNode());\n\t\t\t\t} else this.appendNodeToParent(pn);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tappendNodeToParent: function(parentNode) {\n\t\tparentNode.appendChild(this.node);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinsertNodeInParent: function(parentNode, beforeNode) {\n\t\tparentNode.insertBefore(this.node, beforeNode || parentNode.firstChild);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tremoveNodeFromDom: function() {\n\t\tif (this.hasNode() && this.node.parentNode) {\n\t\t\tthis.node.parentNode.removeChild(this.node);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetParentNode: function () {\n\t\treturn this.parentNode || (this.parent && (\n\t\t\tthis.parent.hasNode() || this.parent.getParentNode())\n\t\t);\n\t},\n\n\t// .................................\n\n\t/**\n\t* @private\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function (props) {\n\t\t\tvar attrs = props && props.attributes;\n\n\t\t\t// ensure that we both keep an instance copy of defined attributes but also\n\t\t\t// update the hash with any additional instance definitions at runtime\n\t\t\tthis.attributes = this.attributes ? utils.clone(this.attributes) : {};\n\t\t\tif (attrs) {\n\t\t\t\tutils.mixin(this.attributes, attrs);\n\t\t\t\tdelete  props.attributes;\n\t\t\t}\n\n\t\t\treturn sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function (props) {\n\t\t\tvar classes;\n\n\t\t\t// initialize the styles for this instance\n\t\t\tthis.style = this.kindStyle + this.style;\n\n\t\t\t// set initial values based on renderOnShow\n\t\t\tthis.renderOnShowChanged();\n\n\t\t\t// super initialization\n\t\t\tsup.apply(this, arguments);\n\n\t\t\t// ensure that if we aren't showing -> true then the correct style\n\t\t\t// is applied - note that there might be issues with this because we are\n\t\t\t// trying not to have to parse out any other explicit display value during\n\t\t\t// initialization and we can't check because we haven't rendered yet\n\t\t\tif (!this.showing) this.style += ' display: none;';\n\n\t\t\t// try and make it so we only need to call the method once during\n\t\t\t// initialization and only then when we have something to add\n\t\t\tclasses = this.kindClasses;\n\t\t\tif (classes && this.classes) classes += (' ' + this.classes);\n\t\t\telse if (this.classes) classes = this.classes;\n\n\t\t\t// if there are known classes needed to be applied from the kind\n\t\t\t// definition and the instance definition (such as a component block)\n\t\t\tthis.classes = this.attributes['class'] = classes ? classes.trim() : classes;\n\n\t\t\t// setup the id for this control if we have one\n\t\t\tthis.idChanged();\n\t\t\tthis.contentChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* Destroys the control and removes it from the [DOM]{@glossary DOM}. Also\n\t* removes the control's ability to receive bubbled events.\n\t*\n\t* @public\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\t// if the control has been rendered we ensure it is removed from the DOM\n\t\t\tthis.removeNodeFromDom();\n\n\t\t\t// ensure no other bubbled events can be dispatched to this control\n\t\t\tdispatcher.$[this.id] = null;\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tdispatchEvent: kind.inherit(function (sup) {\n\t\treturn function (name, event, sender) {\n\t\t\t// prevent dispatch and bubble of events that are strictly internal (e.g.\n\t\t\t// enter/leave)\n\t\t\tif (this.strictlyInternalEvents[name] && this.isInternalEvent(event)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\taddChild: kind.inherit(function (sup) {\n\t\treturn function (control) {\n\t\t\tcontrol.addClass(this.controlClasses);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tremoveChild: kind.inherit(function (sup) {\n\t\treturn function (control) {\n\t\t\tsup.apply(this, arguments);\n\t\t\tcontrol.removeClass(this.controlClasses);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tset: kind.inherit(function (sup) {\n\t\treturn function (path, value, opts) {\n\t\t\t// this should be updated if a better api for hooking becomes available but for\n\t\t\t// now we just do this directly to ensure that the showing value is actually\n\t\t\t// a boolean\n\t\t\tif (path == 'showing') {\n\t\t\t\treturn sup.call(this, path, !! value, opts);\n\t\t\t} else return sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t// .................................\n\t// BACKWARDS COMPATIBLE API, LEGACY METHODS AND PUBLIC PROPERTY\n\t// METHODS OR PROPERTIES THAT PROBABLY SHOULD NOT BE HERE BUT ARE ANYWAY\n\n\t/**\n\t* Apparently used by Ares 2 still but we have the property embedded in the kind...\n\t*\n\t* @deprecated\n\t* @private\n\t*/\n\tisContainer: false,\n\n\t/**\n\t* @private\n\t*/\n\trtl: false,\n\n\t/**\n\t* @private\n\t*/\n\tsetupBodyFitting: function () {\n\t\tDom.applyBodyFit();\n\t\tthis.addClass('enyo-fit enyo-clip');\n\t},\n\n\t/*\n\t* If the platform is Android or Android-Chrome, don't include the css rule\n\t* `-webkit-overflow-scrolling: touch`, as it is not supported in Android and leads to\n\t* overflow issues (ENYO-900 and ENYO-901). Similarly, BB10 has issues repainting\n\t* out-of-viewport content when `-webkit-overflow-scrolling` is used (ENYO-1396).\n\t*\n\t* @private\n\t*/\n\tsetupOverflowScrolling: function () {\n\t\tif(platform.android || platform.androidChrome || platform.blackberry) {\n\t\t\treturn;\n\t\t}\n\t\tDom.addBodyClass('webkitOverflowScrolling');\n\t},\n\n\t/**\n\t* Sets the control's directionality based on its content, or an optional `stringInstead`.\n\t*\n\t* @param {String} [stringInstead] An alternate string for consideration may be sent instead,\n\t*\tin-case the string to test the directionality of the control is stored in `this.value`,\n\t*\tor some other property, for example.\n\t* @private\n\t*/\n\tdetectTextDirectionality: function (stringInstead) {\n\t\t// If an argument was supplied at all, use it, even if it's undefined.\n\t\t// Values that are null or undefined, or are numbers, arrays, and some objects are safe\n\t\t// to be tested.\n\t\tvar str = (arguments.length) ? stringInstead : this.content;\n\t\tif (str || str === 0) {\n\t\t\tthis.rtl = utils.isRtl(str);\n\t\t\tthis.applyStyle('direction', this.rtl ? 'rtl' : 'ltr');\n\t\t} else {\n\t\t\tthis.applyStyle('direction', null);\n\t\t}\n\n\t},\n\n\t// .................................\n\n\t// .................................\n\t// DEPRECATED\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetTag: function () {\n\t\treturn this.tag;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetTag: function (tag) {\n\t\tvar was = this.tag;\n\n\t\tif (tag && typeof tag == 'string') {\n\t\t\tthis.tag = tag;\n\t\t\tif (was !== tag) this.notify('tag', was, tag);\n\t\t}\n\t\treturn this;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetAttributes: function () {\n\t\treturn this.attributes;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetAttributes: function (attrs) {\n\t\tvar was = this.attributes;\n\n\t\tif (typeof attrs == 'object') {\n\t\t\tthis.attributes = attrs;\n\t\t\tif (attrs !== was) this.notify('attributes', was, attrs);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetClasses: function () {\n\t\treturn this.classes;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetClasses: function (classes) {\n\t\tvar was = this.classes;\n\n\t\tthis.classes = classes;\n\t\tif (was != classes) this.notify('classes', was, classes);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetStyle: function () {\n\t\treturn this.style;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetStyle: function (style) {\n\t\tvar was = this.style;\n\n\t\tthis.style = style;\n\t\tif (was != style) this.notify('style', was, style);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetContent: function () {\n\t\treturn this.content;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetContent: function (content) {\n\t\tvar was = this.content;\n\t\tthis.content = content;\n\n\t\tif (was != content) this.notify('content', was, content);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetShowing: function () {\n\t\treturn this.showing;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetShowing: function (showing) {\n\t\tvar was = this.showing;\n\n\t\t// force the showing property to always be a boolean value\n\t\tthis.showing = !! showing;\n\n\t\tif (was != showing) this.notify('showing', was, showing);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetAllowHtml: function () {\n\t\treturn this.allowHtml;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetAllowHtml: function (allow) {\n\t\tvar was = this.allowHtml;\n\t\tthis.allowHtml = !! allow;\n\n\t\tif (was !== allow) this.notify('allowHtml', was, allow);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetCanGenerate: function () {\n\t\treturn this.canGenerate;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetCanGenerate: function (can) {\n\t\tvar was = this.canGenerate;\n\t\tthis.canGenerate = !! can;\n\n\t\tif (was !== can) this.notify('canGenerate', was, can);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tgetFit: function () {\n\t\treturn this.fit;\n\t},\n\n\t/**\n\t* @deprecated\n\t* @public\n\t*/\n\tsetFit: function (fit) {\n\t\tvar was = this.fit;\n\t\tthis.fit = !! fit;\n\n\t\tif (was !== fit) this.notify('fit', was, fit);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t* @ares\n\t* @deprecated\n\t* @public\n\t*/\n\tgetIsContainer: function () {\n\t\treturn this.isContainer;\n\t},\n\n\t/**\n\t* @ares\n\t* @deprecated\n\t* @public\n\t*/\n\tsetIsContainer: function (isContainer) {\n\t\tvar was = this.isContainer;\n\t\tthis.isContainer = !! isContainer;\n\n\t\tif (was !== isContainer) this.notify('isContainer', was, isContainer);\n\n\t\treturn this;\n\t}\n\n\t// .................................\n\n});\n\n/**\n* @static\n* @public\n*/\nkind.setDefaultCtor(Control);\n\n/**\n* @static\n* @public\n*/\nControl.renderDelegate = HTMLStringDelegate;\n\n/**\n* @private\n*/\nControl.registerDomEvents = function (id, control) {\n\tdispatcher.$[id] = control;\n};\n\n/**\n* @private\n*/\nControl.unregisterDomEvents = function (id) {\n\tdispatcher.$[id] = null;\n};\n\n/**\n* @private\n*/\nControl.normalizeCssStyleString = function (style) {\n\treturn style ? (\n\t\t(\";\" + style)\n\t\t// add a semi-colon if it's not the last character (also trim possible unnecessary whitespace)\n\t\t.replace(/([^;])\\s*$/, \"$1;\")\n\t\t// ensure we have one space after each colon or semi-colon\n\t\t.replace(/\\s*;\\s*([\\w-]+)\\s*:\\s*/g, \"; $1: \")\n\t\t// remove first semi-colon and space\n\t\t.substr(2).trim()\n\t) : \"\";\n};\n\n/**\n* @private\n*/\nControl.concat = function (ctor, props, instance) {\n\tvar proto = ctor.prototype || ctor,\n\t\tattrs,\n\t\tstr;\n\n\tif (props.classes) {\n\t\tif (instance) {\n\t\t\tstr = (proto.classes ? (proto.classes + ' ') : '') + props.classes;\n\t\t\tproto.classes = str;\n\t\t} else {\n\t\t\tstr = (proto.kindClasses || '') + (proto.classes ? (' ' + proto.classes) : '');\n\t\t\tproto.kindClasses = str;\n\t\t\tproto.classes = props.classes;\n\t\t}\n\t\tdelete props.classes;\n\t}\n\n\tif (props.style) {\n\t\tif (instance) {\n\t\t\tstr = (proto.style ? (proto.style + ';') : '') + (props.style + ';');\n\t\t\tproto.style = Control.normalizeCssStyleString(str);\n\t\t} else {\n\t\t\tstr = proto.kindStyle ? proto.kindStyle : '';\n\t\t\tstr += proto.style ? (';' + proto.style) : '';\n\t\t\tstr += props.style;\n\n\t\t\t// moved it all to kindStyle so that it will be available whenever instanced\n\t\t\tproto.kindStyle = Control.normalizeCssStyleString(str);\n\t\t}\n\t\tdelete props.style;\n\t}\n\n\tif (props.attributes) {\n\t\tattrs = proto.attributes;\n\t\tproto.attributes = attrs ? utils.mixin({}, [attrs, props.attributes]) : props.attributes;\n\t\tdelete props.attributes;\n\t}\n};\n\nControl.prototype.defaultKind = Control;\n\n// Control has to be *completely* set up before creating the floating layer otherwise things will\n// error out during construction.\n\n/**\n* @static\n* @public\n*/\nControl.FloatingLayer = FloatingLayer(Control);\n\n/**\n* @static\n* @public\n*/\nControl.floatingLayer = new Control.FloatingLayer({id: 'floatingLayer'});","require('../../enyo');\n\nvar\n\tdispatcher = require('./dispatcher'),\n\tgesture = require('./gesture'),\n\tplatform = require('./platform'),\n\tutils = require('./utils');\n\n/**\n* @private\n*/\ndispatcher.features.push(\n\tfunction(e) {\n\t\t// NOTE: beware of properties in gesture inadvertently mapped to event types\n\t\tif (gesture.drag[e.type]) {\n\t\t\treturn gesture.drag[e.type](e);\n\t\t}\n\t}\n);\n\n/**\n* Enyo supports a cross-platform set of drag [events]{@glossary event}. These\n* events allow users to write a single set of event handlers for applications\n* that run on both mobile and desktop platforms.\n*\n* The following events are provided:\n*\n* * 'dragstart'\n* * 'dragfinish'\n* * 'drag'\n* * 'drop'\n* * 'dragover'\n* * 'dragout'\n* * 'hold'\n* * 'release'\n* * 'holdpulse'\n* * 'flick'\n*\n* For more information on these events, see the documentation on\n* [Event Handling]{@linkplain $dev-guide/key-concepts/event-handling.html} in\n* the Enyo Developer Guide.\n*\n* @namespace gesture.drag\n* @public\n*/\nmodule.exports = gesture.drag =\n\t/** @lends gesture.drag */ {\n\n\t/**\n\t* @private\n\t*/\n\tholdPulseDefaultConfig: {\n\t\tfrequency: 200,\n\t\tevents: [{name: 'hold', time: 200}],\n\t\tresume: false,\n\t\tmoveTolerance: 16,\n\t\tendHold: 'onMove'\n\t},\n\n\t/**\n\t* Call this method to specify the framework's 'holdPulse' behavior, which\n\t* determines the nature of the events generated when a user presses and holds\n\t* on a user interface element.\n\t*\n\t* By default, an `onhold` event fires after 200 ms. After that, an `onholdpulse`\n\t* event fires every 200 ms until the user stops holding, at which point a\n\t* `onrelease` event fires.\n\t*\n\t* To change the default behavior, call this method and pass it a holdPulse\n\t* configuration object. The holdPulse configuration object has a number of\n\t* properties.\n\t*\n\t* You can specify a set of custom hold events by setting the `events` property\n\t* to an array containing one or more objects. Each object specifies a custom\n\t* hold event, in the form of a `name` / `time` pair. Notes:\n\t*\n\t*  * Your custom event names should not include the 'on' prefix; that will be\n\t*    added automatically by the framework.\n\t*\n\t*  * Times should be specified in milliseconds.\n\t*\n\t*  * Your `events` array overrides the framework defaults entirely, so if you\n\t*    want the standard `hold` event to fire at 200 ms (in addition to whatever\n\t*    custom events you define), you'll need to redefine it yourself as part of\n\t*    your `events` array.\n\t*\n\t* Regardless of how many custom hold events you define, `onholdpulse` events\n\t* will start firing after the first custom hold event fires, and continue until\n\t* the user stops holding. Likewise, only one `onrelease` event will fire,\n\t* regardless of how many custom hold events you define.\n\t*\n\t* The`frequency` parameter determines not only how often `holdpulse` events are\n\t* sent, but the frequency with which the hold duration is measured. This means\n\t* that the value you set for `frequency` should always be a common factor of the\n\t* times you set for your custom hold events, to ensure accurate event timing.\n\t*\n\t* You can use the `endHold` property to specify the circumstances under which a\n\t* hold is considered to end. Set `endHold` to `onMove` (the default) if you want\n\t* the hold to end as soon as the user's finger or pointer moves. Set `endHold`\n\t* to `onLeave` if you want the hold to end only when the finger or pointer\n\t* leaves the element altogether. When specifying `onMove`, you can also provide\n\t* a `moveTolerance` value (default: `16`) that determines how tolerant you want\n\t* to be of small movements when deciding whether a hold has ended. The higher\n\t* the value, the further a user's finger or pointer may move without causing\n\t* the hold to end.\n\t*\n\t* Finally, the `resume` parameter (default: `false`) specifies whether a hold\n\t* that has ended due to finger / pointer movement should be resumed if the\n\t* user's finger or pointer moves back inside the tolerance threshold (in the\n\t* case of `endHold: onMove`) or back over the element (in the case of\n\t* `endHold: onLeave`).\n\t*\n\t* Here is an example:\n\t*\n\t* ```\n\t* gesture.drag.configureHoldPulse({\n\t*     frequency: 100,\n\t*     events: [\n\t*         {name: 'hold', time: 200},\n\t*         {name: 'longpress', time: 500}\n\t*     ],\n\t*     endHold: 'onLeave',\n\t*     resume: true\n\t* });\n\t* ```\n\t* For comparison, here are the out-of-the-box defaults:\n\t*\n\t* ```\n\t* gesture.drag.configureHoldPulse({\n\t*     frequency: 200,\n\t*     events: [\n\t*         {name: 'hold', time: 200}\n\t*     ],\n\t*     endHold: 'onMove',\n\t*     moveTolerance: 16,\n\t*     resume: false\n\t* });\n\t* ```\n\t*\n\t* The settings you provide via this method will be applied globally, affecting\n\t* every Control. Note that you can also override the defaults on a case-by-case\n\t* basis by handling the `down` event for any Control and calling the\n\t* `configureHoldPulse` method exposed by the event itself. That method works\n\t* exactly like this one, except that the settings you provide will apply only to\n\t* holds on that particular Control.\n\t*\n\t* @public\n\t*/\n\tconfigureHoldPulse: function(config) {\n\t\t// TODO: Might be nice to do some validation, error handling\n\t\tthis.holdPulseDefaultConfig = config;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tholdPulseConfig: {},\n\n\t/**\n\t* @private\n\t*/\n\ttrackCount: 5,\n\n\t/**\n\t* @private\n\t*/\n\tminFlick: 0.1,\n\n\t/**\n\t* @private\n\t*/\n\tminTrack: 8,\n\n\t/**\n\t* @private\n\t*/\n\tdown: function(e) {\n\t\t// tracking if the mouse is down\n\t\t//enyo.log('tracking ON');\n\t\t// Note: 'tracking' flag indicates interest in mousemove, it's turned off\n\t\t// on mouseup\n\t\t// make sure to stop dragging in case the up event was not received.\n\t\tthis.stopDragging(e);\n\t\tthis.target = e.target;\n\t\tthis.startTracking(e);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmove: function(e) {\n\t\tif (this.tracking) {\n\t\t\tthis.track(e);\n\t\t\t// If the mouse is not down and we're tracking a drag, abort.\n\t\t\t// this error condition can occur on IE/Webkit after interaction with a scrollbar.\n\t\t\tif (!e.which) {\n\t\t\t\tthis.stopDragging(e);\n\t\t\t\tthis.endHold();\n\t\t\t\tthis.tracking = false;\n\t\t\t\t//enyo.log('gesture.drag: mouse must be down to drag.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.dragEvent) {\n\t\t\t\tthis.sendDrag(e);\n\t\t\t} else if (this.holdPulseConfig.endHold === 'onMove') {\n\t\t\t\tif (this.dy*this.dy + this.dx*this.dx >= this.holdPulseConfig.moveTolerance) { // outside of target\n\t\t\t\t\tif (this.holdJob) { // only stop/cancel hold job if it currently exists\n\t\t\t\t\t\tif (this.holdPulseConfig.resume) { // pause hold to potentially resume later\n\t\t\t\t\t\t\tthis.suspendHold();\n\t\t\t\t\t\t} else { // completely cancel hold\n\t\t\t\t\t\t\tthis.endHold();\n\t\t\t\t\t\t\tthis.sendDragStart(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (this.holdPulseConfig.resume && !this.holdJob) { // when moving inside target, only resume hold job if it was previously paused\n\t\t\t\t\tthis.resumeHold();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tup: function(e) {\n\t\tthis.endTracking(e);\n\t\tthis.stopDragging(e);\n\t\tthis.endHold();\n\t\tthis.target = null;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tenter: function(e) {\n\t\t// resume hold when re-entering original target when using 'onLeave' endHold value\n\t\tif (this.holdPulseConfig.resume && this.holdPulseConfig.endHold === 'onLeave' && this.target && e.target === this.target) {\n\t\t\tthis.resumeHold();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tleave: function(e) {\n\t\tif (this.dragEvent) {\n\t\t\tthis.sendDragOut(e);\n\t\t} else if (this.holdPulseConfig.endHold === 'onLeave') {\n\t\t\tif (this.holdPulseConfig.resume) { // pause hold to potentially resume later\n\t\t\t\tthis.suspendHold();\n\t\t\t} else { // completely cancel hold\n\t\t\t\tthis.endHold();\n\t\t\t\tthis.sendDragStart(e);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstopDragging: function(e) {\n\t\tif (this.dragEvent) {\n\t\t\tthis.sendDrop(e);\n\t\t\tvar handled = this.sendDragFinish(e);\n\t\t\tthis.dragEvent = null;\n\t\t\treturn handled;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmakeDragEvent: function(inType, inTarget, inEvent, inInfo) {\n\t\tvar adx = Math.abs(this.dx), ady = Math.abs(this.dy);\n\t\tvar h = adx > ady;\n\t\t// suggest locking if off-axis < 22.5 degrees\n\t\tvar l = (h ? ady/adx : adx/ady) < 0.414;\n\t\tvar e = {};\n\t\t// var e = {\n\t\te.type = inType;\n\t\te.dx = this.dx;\n\t\te.dy = this.dy;\n\t\te.ddx = this.dx - this.lastDx;\n\t\te.ddy = this.dy - this.lastDy;\n\t\te.xDirection = this.xDirection;\n\t\te.yDirection = this.yDirection;\n\t\te.pageX = inEvent.pageX;\n\t\te.pageY = inEvent.pageY;\n\t\te.clientX = inEvent.clientX;\n\t\te.clientY = inEvent.clientY;\n\t\te.horizontal = h;\n\t\te.vertical = !h;\n\t\te.lockable = l;\n\t\te.target = inTarget;\n\t\te.dragInfo = inInfo;\n\t\te.ctrlKey = inEvent.ctrlKey;\n\t\te.altKey = inEvent.altKey;\n\t\te.metaKey = inEvent.metaKey;\n\t\te.shiftKey = inEvent.shiftKey;\n\t\te.srcEvent = inEvent.srcEvent;\n\t\t// };\n\t\t//Fix for IE8, which doesn't include pageX and pageY properties\n\t\tif(platform.ie==8 && e.target) {\n\t\t\te.pageX = e.clientX + e.target.scrollLeft;\n\t\t\te.pageY = e.clientY + e.target.scrollTop;\n\t\t}\n\t\te.preventDefault = gesture.preventDefault;\n\t\te.disablePrevention = gesture.disablePrevention;\n\t\treturn e;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsendDragStart: function(e) {\n\t\t//enyo.log('dragstart');\n\t\tthis.dragEvent = this.makeDragEvent('dragstart', this.target, e);\n\t\tdispatcher.dispatch(this.dragEvent);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsendDrag: function(e) {\n\t\t//enyo.log('sendDrag to ' + this.dragEvent.target.id + ', over to ' + e.target.id);\n\t\t// send dragOver event to the standard event target\n\t\tvar synth = this.makeDragEvent('dragover', e.target, e, this.dragEvent.dragInfo);\n\t\tdispatcher.dispatch(synth);\n\t\t// send drag event to the drag source\n\t\tsynth.type = 'drag';\n\t\tsynth.target = this.dragEvent.target;\n\t\tdispatcher.dispatch(synth);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsendDragFinish: function(e) {\n\t\t//enyo.log('dragfinish');\n\t\tvar synth = this.makeDragEvent('dragfinish', this.dragEvent.target, e, this.dragEvent.dragInfo);\n\t\tsynth.preventTap = function() {\n\t\t\tif (e.preventTap) {\n\t\t\t\te.preventTap();\n\t\t\t}\n\t\t};\n\t\tdispatcher.dispatch(synth);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsendDragOut: function(e) {\n\t\tvar synth = this.makeDragEvent('dragout', e.target, e, this.dragEvent.dragInfo);\n\t\tdispatcher.dispatch(synth);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsendDrop: function(e) {\n\t\tvar synth = this.makeDragEvent('drop', e.target, e, this.dragEvent.dragInfo);\n\t\tsynth.preventTap = function() {\n\t\t\tif (e.preventTap) {\n\t\t\t\te.preventTap();\n\t\t\t}\n\t\t};\n\t\tdispatcher.dispatch(synth);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstartTracking: function(e) {\n\t\tthis.tracking = true;\n\t\t// note: use clientX/Y to be compatible with ie8\n\t\tthis.px0 = e.clientX;\n\t\tthis.py0 = e.clientY;\n\t\t// this.flickInfo = {startEvent: e, moves: []};\n\t\tthis.flickInfo = {};\n\t\tthis.flickInfo.startEvent = e;\n\t\t// FIXME: so we're trying to reuse objects where possible, should\n\t\t// do the same in scenarios like this for arrays\n\t\tthis.flickInfo.moves = [];\n\t\tthis.track(e);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttrack: function(e) {\n\t\tthis.lastDx = this.dx;\n\t\tthis.lastDy = this.dy;\n\t\tthis.dx = e.clientX - this.px0;\n\t\tthis.dy = e.clientY - this.py0;\n\t\tthis.xDirection = this.calcDirection(this.dx - this.lastDx, 0);\n\t\tthis.yDirection = this.calcDirection(this.dy - this.lastDy, 0);\n\t\t//\n\t\tvar ti = this.flickInfo;\n\t\tti.moves.push({\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t\tt: utils.perfNow()\n\t\t});\n\t\t// track specified # of points\n\t\tif (ti.moves.length > this.trackCount) {\n\t\t\tti.moves.shift();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tendTracking: function() {\n\t\tthis.tracking = false;\n\t\tvar ti = this.flickInfo;\n\t\tvar moves = ti && ti.moves;\n\t\tif (moves && moves.length > 1) {\n\t\t\t// note: important to use up time to reduce flick\n\t\t\t// velocity based on time between move and up.\n\t\t\tvar l = moves[moves.length-1];\n\t\t\tvar n = utils.perfNow();\n\t\t\t// take the greatest of flick between each tracked move and last move\n\t\t\tfor (var i=moves.length-2, dt=0, x1=0, y1=0, x=0, y=0, sx=0, sy=0, m; (m=moves[i]); i--) {\n\t\t\t\t// this flick (this move - last move) / (this time - last time)\n\t\t\t\tdt = n - m.t;\n\t\t\t\tx1 = (l.x - m.x) / dt;\n\t\t\t\ty1 = (l.y - m.y) / dt;\n\t\t\t\t// establish flick direction\n\t\t\t\tsx = sx || (x1 < 0 ? -1 : (x1 > 0 ? 1 : 0));\n\t\t\t\tsy = sy || (y1 < 0 ? -1 : (y1 > 0 ? 1 : 0));\n\t\t\t\t// if either axis is a greater flick than previously recorded use this one\n\t\t\t\tif ((x1 * sx > x * sx) || (y1 * sy > y * sy)) {\n\t\t\t\t\tx = x1;\n\t\t\t\t\ty = y1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar v = Math.sqrt(x*x + y*y);\n\t\t\tif (v > this.minFlick) {\n\t\t\t\t// generate the flick using the start event so it has those coordinates\n\t\t\t\tthis.sendFlick(ti.startEvent, x, y, v);\n\t\t\t}\n\t\t}\n\t\tthis.flickInfo = null;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcDirection: function(inNum, inDefault) {\n\t\treturn inNum > 0 ? 1 : (inNum < 0 ? -1 : inDefault);\n\t},\n\n\t/**\n\t* Translate the old format for holdPulseConfig to the new one, to\n\t* preserve backward compatibility.\n\t*\n\t* @private\n\t*/\n\tnormalizeHoldPulseConfig: function (oldOpts) {\n\t\tvar nOpts = utils.clone(oldOpts);\n\t\tnOpts.frequency = nOpts.delay;\n\t\tnOpts.events = [{name: 'hold', time: nOpts.delay}];\n\t\treturn nOpts;\n\t},\n\n\t/**\n\t* Method to override holdPulseConfig for a given gesture. This method isn't\n\t* accessed directly from gesture.drag, but exposed by the `down` event.\n\t* See `prepareHold()`.\n\t*\n\t* @private\n\t*/\n\t_configureHoldPulse: function(opts) {\n\t\tvar nOpts = (opts.delay === undefined) ?\n\t\t\topts :\n\t\t\tthis.normalizeHoldPulseConfig(opts);\n\t\tutils.mixin(this.holdPulseConfig, nOpts);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tprepareHold: function(e) {\n\t\t// quick copy as the prototype of the new overridable config\n\t\tthis.holdPulseConfig = utils.clone(this.holdPulseDefaultConfig, true);\n\n\t\t// expose method for configuring holdpulse options\n\t\te.configureHoldPulse = this._configureHoldPulse.bind(this);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tbeginHold: function(e) {\n\t\tvar ce;\n\t\t// cancel any existing hold since it's possible in corner cases to get a down without an up\n\t\tthis.endHold();\n\t\tthis.holdStart = utils.perfNow();\n\t\tthis._holdJobFunction = utils.bind(this, 'handleHoldPulse');\n\t\t// clone the event to ensure it stays alive on IE upon returning to event loop\n\t\tce = this._holdJobEvent = utils.clone(e);\n\t\tce.srcEvent = utils.clone(e.srcEvent);\n\t\tthis._pulsing = false;\n\t\tthis._unsent = utils.clone(this.holdPulseConfig.events);\n\t\tthis._unsent.sort(this.sortEvents);\n\t\tthis._next = this._unsent.shift();\n\t\tif (this._next) {\n\t\t\tthis.holdJob = setInterval(this._holdJobFunction, this.holdPulseConfig.frequency);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tresumeHold: function() {\n\t\tthis.handleHoldPulse();\n\t\tthis.holdJob = setInterval(this._holdJobFunction, this.holdPulseConfig.frequency);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsortEvents: function(a, b) {\n\t\t\tif (a.time < b.time) return -1;\n\t\t\tif (a.time > b.time) return 1;\n\t\t\treturn 0;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tendHold: function() {\n\t\tvar e = this._holdJobEvent;\n\t\tthis.suspendHold();\n\t\tif (e && this._pulsing) {\n\t\t\tthis.sendRelease(e);\n\t\t}\n\t\tthis._pulsing = false;\n\t\tthis._unsent = null;\n\t\tthis._holdJobFunction = null;\n\t\tthis._holdJobEvent = null;\n\t\tthis._next = null;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsuspendHold: function() {\n\t\tclearInterval(this.holdJob);\n\t\tthis.holdJob = null;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandleHoldPulse: function() {\n\t\tvar holdTime = utils.perfNow() - this.holdStart,\n\t\t\thje = this._holdJobEvent,\n\t\t\te;\n\t\tthis.maybeSendHold(hje, holdTime);\n\t\tif (this._pulsing) {\n\t\t\te = gesture.makeEvent('holdpulse', hje);\n\t\t\te.holdTime = holdTime;\n\t\t\tdispatcher.dispatch(e);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaybeSendHold: function(inEvent, inHoldTime) {\n\t\tvar n = this._next;\n\t\twhile (n && n.time <= inHoldTime) {\n\t\t\tvar e = gesture.makeEvent(n.name, inEvent);\n\t\t\tthis._pulsing = true;\n\t\t\tdispatcher.dispatch(e);\n\t\t\tn = this._next = this._unsent.shift();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsendRelease: function(inEvent) {\n\t\tvar e = gesture.makeEvent('release', inEvent);\n\t\tdispatcher.dispatch(e);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsendFlick: function(inEvent, inX, inY, inV) {\n\t\tvar e = gesture.makeEvent('flick', inEvent);\n\t\te.xVelocity = inX;\n\t\te.yVelocity = inY;\n\t\te.velocity = inV;\n\t\tdispatcher.dispatch(e);\n\t}\n};","/*\n * glue.js - glue code to fit ilib into enyo\n *\n * Copyright © 2013-2014 LG Electronics, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar\n\tdom = require('../../enyo/lib/dom'),\n\thooks = require('../../enyo/lib/hooks'),\n\tplatform = require('../../enyo/lib/platform'),\n\tutils = require('../../enyo/lib/utils'),\n\tAjax = require('../../enyo/lib/Ajax'),\n\tControl = require('../../enyo/lib/Control');\n\nvar\n\tZoneInfoFile = require('./zoneinfo');\n\nmodule.exports = function (ilib) {\n\n\tvar enyoLoader = function() {\n\t\tthis.base = \"ilib/\";\n\t\tif (platform.platformName === \"webos\") {\n\t\t\tthis.webos = true;\n\t\t}\n\t};\n\n\tenyoLoader.prototype = new ilib.Loader();\n\tenyoLoader.prototype.constructor = enyoLoader;\n\n\tenyoLoader.prototype._createZoneFile = function (path) {\n\t\tvar zone = path.substring(path.indexOf(\"zoneinfo\"));\n\n\t\t// remove the .json suffix to get the name of the zone\n\t\tzone = zone.substring(0, zone.length-5);\n\n\t\ttry {\n\t\t\tvar zif = new ZoneInfoFile(\"/usr/share/\" + zone);\n\n\t\t\t// only get the info for this year. Later we can get the info\n\t\t\t// for any historical or future year too\n\t\t\treturn zif.getIlibZoneInfo(new Date());\n\t\t} catch (e) {\n\t\t\t// no file, so just return nothing\n\t\t\treturn undefined;\n\t\t}\n\t};\n\n\tenyoLoader.prototype._pathjoin = function (root, subpath) {\n\t\tif (!root || !root.length) {\n\t\t\treturn subpath;\n\t\t}\n\t\tif (!subpath || !subpath.length) {\n\t\t\treturn root;\n\t\t}\n\t\treturn root + (root.charAt(root.length-1) !== '/' ? '/' : \"\") + subpath;\n\t};\n\n\t/**\n\t * Load the list of files asynchronously. This uses recursion in\n\t * order to create a queue of files that will be loaded serially.\n\t * Each layer, starting at the bottom, loads a file and then loads\n\t * the layer on top of it. The very top file on the stack will have\n\t * zero files to load, so instead it will be the one to call the\n\t * callback to notify the caller that all the content is loaded.\n\t *\n\t * @param {Object} context function to call this method in the context of\n\t * @param {Array.<string>} paths array of strings containing relative paths for required locale data files\n\t * @param {Array} results empty array in which to place the resulting json when it is loaded from a file\n\t * @param {Object} params An object full of parameters that the caller is passing to this function to help load the files\n\t * @param {function(Array.<Object>)} callback callback to call when this function is finished attempting\n\t * to load all the files that exist and can be loaded\n\t */\n\tenyoLoader.prototype._loadFilesAsync = function (context, paths, results, params, callback) {\n\t\tvar root = \"resources\";\n\t\tif (params && typeof(params.root) !== \"undefined\") {\n\t\t\troot = params.root;\n\t\t}\n\t\tif (paths.length > 0) {\n\t\t\tvar path = paths.shift(),\n\t\t\t\turl = undefined;\n\n\t\t\tif (this.webos && path.indexOf(\"zoneinfo\") !== -1) {\n\t\t\t\tresults.push(this._createZoneFile(path));\n\t\t\t} else {\n\t\t\t\tif (this.isAvailable(root, path)) {\n\t\t\t\t\turl = this._pathjoin(root, path);\n\t\t\t\t} else if (this.isAvailable(this.base + \"locale\", path)) {\n\t\t\t\t\turl = this._pathjoin(this._pathjoin(this.base, \"locale\"), path)\n\t\t\t\t}\n\n\t\t\t\tvar resultFunc = function(inSender, json) {\n\t                // console.log(\"enyo-ilib/glue: \" + (!inSender.failed && json ? \"success\" : \"failed\"));\n\t\t\t\t\tresults.push(!inSender.failed && (typeof(json) === 'object') ? json : undefined);\n\t\t\t\t\tif (paths.length > 0) {\n\t\t\t\t\t\tthis._loadFilesAsync(context, paths, results, params, callback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// only the bottom item on the stack will call\n\t\t\t\t\t\t// the callback\n\t\t\t\t\t\tcallback.call(context, results);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tif (url) {\n\t\t\t\t\tvar ajax = new Ajax({\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tcacheBust: false\n\t\t\t\t\t});\n\t\t\t\t\t// console.log(\"enyo-ilib/glue: browser/async: attempting to load \" + url);\n\t\t\t\t\tajax.response(this, resultFunc);\n\t\t\t\t\tajax.error(this, resultFunc);\n\t\t\t\t\tajax.go();\n\t\t\t\t} else {\n\t\t\t\t\t// nothing to load, so go to the next file\n\t\t\t\t\tresultFunc({}, undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tenyoLoader.prototype.loadFiles = function(paths, sync, params, callback) {\n\t\tif (sync) {\n\t\t\tvar ret = [];\n\t\t\tvar root = \"resources\";\n\t\t\tvar locdata = this._pathjoin(this.base, \"locale\");\n\t\t\tif (params && typeof(params.root) !== \"undefined\") {\n\t\t\t\troot = params.root;\n\t\t\t}\n\t\t\t// synchronous\n\t\t\tutils.forEach(paths, function (path) {\n\t\t\t\tif (this.webos && path.indexOf(\"zoneinfo\") !== -1) {\n\t\t\t\t\tret.push(this._createZoneFile(path));\n\t\t\t\t} else {\n\t\t\t\t\tvar found = false;\n\n\t\t\t\t\tvar handler = function(inSender, json) {\n\t                    // console.log((!inSender.failed && json ? \"success\" : \"failed\"));\n\t\t\t\t\t\tif (!inSender.failed && typeof(json) === 'object') {\n\t\t\t\t\t\t\tret.push(json);\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// console.log(\"browser/sync: attempting to load lib/enyo-ilib/ilib/locale/\" + path);\n\t\t\t\t\tif (this.isAvailable(root, path)) {\n\t\t\t\t\t\tvar ajax = new Ajax({\n\t\t\t\t\t\t\turl: this._pathjoin(root, path),\n\t\t\t\t\t\t\tsync: true,\n\t\t\t\t\t\t\tcacheBust: false\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tajax.response(this, handler);\n\t\t\t\t\t\tajax.error(this, handler);\n\t\t\t\t\t\tajax.go();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!found && this.isAvailable(locdata, path)) {\n\t\t\t\t\t\tvar ajax = new Ajax({\n\t\t\t\t\t\t\turl: this._pathjoin(locdata, path),\n\t\t\t\t\t\t\tsync: true,\n\t\t\t\t\t\t\tcacheBust: false\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tajax.response(this, handler);\n\t\t\t\t\t\tajax.error(this, handler);\n\t\t\t\t\t\tajax.go();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\t// not there, so fill in a blank entry in the array\n\t\t\t\t\t\tret.push(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tif (typeof(callback) === 'function') {\n\t\t\t\tcallback.call(this, ret);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\t// asynchronous\n\t\tvar results = [];\n\t\tthis._loadFilesAsync(this, paths, results, params, callback);\n\t};\n\n\tenyoLoader.prototype._loadManifest = function (root, subpath) {\n\t\tif (!this.manifest) {\n\t\t\tthis.manifest = {};\n\t\t}\n\n\t\tvar dirpath = this._pathjoin(root, subpath);\n\t\tvar filepath = this._pathjoin(dirpath, \"ilibmanifest.json\");\n\n\t\t// util.print(\"enyo loader: loading manifest \" + filepath + \"\\n\");\n\t\tvar ajax = new Ajax({\n\t\t\turl: filepath,\n\t\t\tsync: true,\n\t\t\tcacheBust: false,\n\t\t\thandleAs: \"json\"\n\t\t});\n\n\t\tvar handler = function(inSender, json) {\n\t        // console.log((!inSender.failed && json ? \"success\" : \"failed\"));\n\t\t\t// star indicates there was no ilibmanifest.json, so always try to load files from that dir\n\t\t\tthis.manifest[dirpath] = (!inSender.failed && typeof(json) === 'object') ? json.files : \"*\";\n\t\t};\n\n\t\tajax.response(this, handler);\n\t\tajax.error(this, handler);\n\t\tajax.go();\n\t},\n\n\tenyoLoader.prototype._loadStandardManifests = function() {\n\t\t// util.print(\"enyo loader: load manifests\\n\");\n\t\tif (!this.manifest) {\n\t\t\tthis._loadManifest(this.base, \"locale\"); // standard ilib locale data\n\t\t\tthis._loadManifest(\"\", \"resources\");     // the app's resources dir\n\t\t}\n\t};\n\tenyoLoader.prototype.listAvailableFiles = function() {\n\t\t// util.print(\"enyo loader: list available files called\\n\");\n\t\tthis._loadStandardManifests();\n\t\treturn this.manifest;\n\t};\n\tenyoLoader.prototype.isAvailable = function(root, path) {\n\t\tthis._loadStandardManifests();\n\n\t\tif (!this.manifest[root]) {\n\t\t\t// maybe it's a custom root? If so, try to load\n\t\t\t// the manifest file first in case it is there\n\t\t\tthis._loadManifest(root, \"\");\n\t\t}\n\n\t\t// util.print(\"enyo loader: isAvailable \" + path + \"? \");\n\t\t// star means attempt to load everything because there was no manifest in that dir\n\t\tif (this.manifest[root] === \"*\" || ilib.indexOf(this.manifest[root], path) !== -1) {\n\t\t\t// util.print(\"true\\n\");\n\t\t\treturn true;\n\t\t}\n\n\t\t// util.print(\"false\\n\");\n\t\treturn false;\n\t};\n\n\tilib.setLoaderCallback(new enyoLoader());\n\n\tif (typeof(window.UILocale) !== 'undefined') {\n\t\t// this is a hack until GF-1581 is fixed\n\t\tilib.setLocale(window.UILocale);\n\t}\n\n\t/*\n\t * Tell whether or not the given locale is considered a non-Latin locale for webOS purposes. This controls\n\t * which fonts are used in various places to show the various languages. An undefined spec parameter means\n\t * to test the current locale.\n\t *\n\t * @param {ilib.Locale|string|undefined} spec locale specifier or locale object of the locale to test, or undefined\n\t * to test the current locale\n\t */\n\tfunction isNonLatinLocale (spec) {\n\t\tvar li = new ilib.LocaleInfo(spec),\n\t\t\tlocale = li.getLocale();\n\n\t    // We use the non-latin fonts for these languages (even though their scripts are technically considered latin)\n\t    var nonLatinLanguageOverrides = [\"bs\", \"cs\", \"ha\", \"hr\", \"hu\", \"lv\", \"lt\", \"pl\", \"ro\", \"sr\", \"sl\", \"tr\", \"vi\"];\n\t    // We use the latin fonts (with non-Latin fallback) for these languages (even though their scripts are non-latin)\n\t    var latinLanguageOverrides = [\"ko\"];\n\t\treturn ((li.getScript() !== \"Latn\" || utils.indexOf(locale.getLanguage(), nonLatinLanguageOverrides) !== -1) &&\n\t\t\t(utils.indexOf(locale.getLanguage(), latinLanguageOverrides) < 0));\n\t};\n\n\t// enyo.updateI18NClasses should be called after every setLocale, but there isn't such a callback in current version\n\tfunction updateI18NClasses () {\n\t    var li = new ilib.LocaleInfo(); // for the current locale\n\t    var locale = li.getLocale();\n\t\tvar base = \"enyo-locale-\";\n\n\t    // Remove old style definitions (hack style becouse enyo.dom doesn't have methods like enyo.dom.getBodyClasses, enyo.dom.removeBodyClass)\n\t    if (document && document.body && document.body.className && document.body.className) {\n\t        document.body.className = document.body.className.replace(new RegExp('(^|\\\\s)'+ base +'[^\\\\s]*', 'g'), '');\n\t    }\n\n\t\tif (isNonLatinLocale(locale)) {\n\t\t\t// allow enyo to define other fonts for non-Latin languages, or for certain\n\t\t\t// Latin-based languages where the characters with some accents don't appear in the\n\t\t\t// regular fonts, creating a strange \"ransom note\" look with a mix of fonts in the\n\t\t\t// same word. So, treat it like a non-Latin language in order to get all the characters\n\t\t\t// to display with the same font.\n\t\t\tdom.addBodyClass(base + \"non-latin\");\n\t\t}\n\n\t\tvar scriptName = li.getScript();\n\t\tif (scriptName !== 'Latn' && scriptName !== 'Cyrl' && scriptName !== 'Grek') {\n\t\t\t// GF-45884: allow enyo to avoid setting italic fonts for those scripts that do not\n\t\t\t// commonly use italics\n\t\t\tdom.addBodyClass(base + \"non-italic\");\n\t\t}\n\n\t\t// allow enyo to apply right-to-left styles to the app and widgets if necessary\n\t\tvar script = new ilib.ScriptInfo(scriptName);\n\t\tif (script.getScriptDirection() === \"rtl\") {\n\t\t\tdom.addBodyClass(base + \"right-to-left\");\n\t\t\tControl.prototype.rtl = true;\n\t\t} else {\n\t\t\tControl.prototype.rtl = false;\n\t\t}\n\n\t\t// allow enyo or the apps to give CSS classes that are specific to the language, country, or script\n\t\tif (locale.getLanguage()) {\n\t\t\tdom.addBodyClass(base + locale.getLanguage());\n\t\t\tif (locale.getScript()) {\n\t\t\t\tdom.addBodyClass(base + locale.getLanguage() + \"-\" + locale.getScript());\n\t\t\t\tif (locale.getRegion()) {\n\t\t\t\t\tdom.addBodyClass(base + locale.getLanguage() + \"-\" + locale.getScript() + \"-\" + locale.getRegion());\n\t\t\t\t}\n\t\t\t} else if (locale.getRegion()) {\n\t\t\t\tdom.addBodyClass(base + locale.getLanguage() + \"-\" + locale.getRegion());\n\t\t\t}\n\t\t}\n\t\tif (locale.getScript()) {\n\t\t\tdom.addBodyClass(base + locale.getScript());\n\t\t}\n\t\tif (locale.getRegion()) {\n\t\t\tdom.addBodyClass(base + locale.getRegion());\n\t\t}\n\t\t// Recreate the case mappers to use the just-recently-set locale\n\t \tsetCaseMappers();\n\t};\n\n\t/*\n\t * Reset the $L function to use ilib instead of the dummy function that enyo\n\t * comes with by default.\n\t */\n\thooks.$L = function (string) {\n\t\tvar str;\n\t\tif (!hooks.$L.rb) {\n\t\t\thooks.$L.setLocale();\n\t\t}\n\t\tif (typeof(string) === 'string') {\n\t\t\tif (!hooks.$L.rb) {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t\tstr = hooks.$L.rb.getString(string);\n\t\t} else if (typeof(string) === 'object') {\n\t\t\tif (typeof(string.key) !== 'undefined' && typeof(string.value) !== 'undefined') {\n\t\t\t\tif (!hooks.$L.rb) {\n\t\t\t\t\treturn string.value;\n\t\t\t\t}\n\t\t\t\tstr = hooks.$L.rb.getString(string.value, string.key);\n\t\t\t} else {\n\t\t\t\tstr = \"\";\n\t\t\t}\n\t\t} else {\n\t\t\tstr = string;\n\t\t}\n\t\treturn str.toString();\n\t};\n\n\t/**\n\t * Set the locale for the strings that $L loads. This may reload the\n\t * string resources if necessary.\n\t * @param {string} spec the locale specifier\n\t */\n\thooks.$L.setLocale = function (spec) {\n\t\tvar locale = new ilib.Locale(spec);\n\t\tif (!hooks.$L.rb || spec !== hooks.$L.rb.getLocale().getSpec()) {\n\t\t\thooks.$L.rb = new ilib.ResBundle({\n\t\t\t\tlocale: locale,\n\t\t\t\ttype: \"html\",\n\t\t\t\tname: \"strings\",\n\t\t\t\tsync: true,\n\t\t\t\tlengthen: true\t\t// if pseudo-localizing, this tells it to lengthen strings\n\t\t\t});\n\t\t}\n\t};\n\n\tvar toLowerCaseMapper, toUpperCaseMapper;\n\n\t/**\n\t * Set CaseMapper object references to ilib's current locale (its most recently set, by default)\n\t */\n\tfunction setCaseMappers () {\n\t\ttoLowerCaseMapper = new ilib.CaseMapper({direction: \"tolower\"});\n\t\ttoUpperCaseMapper = new ilib.CaseMapper({direction: \"toupper\"});\n\t};\n\n\t/**\n\t * Override Enyo's toLowerCase and toUpperCase methods with these fancy ones\n\t * that call iLib's locale-safe case mapper.\n\t */\n\tutils.toLowerCase = function (inString) {\n\t\tif (inString != null) {\n\t\t\treturn toLowerCaseMapper.map(inString.toString());\n\t\t}\n\t\treturn inString;\n\t};\n\tutils.toUpperCase = function (inString) {\n\t\tif (inString != null) {\n\t\t\treturn toUpperCaseMapper.map(inString.toString());\n\t\t}\n\t\treturn inString;\n\t};\n\n\t/**\n\t * This Enyo hook lets us know that the system locale has changed and gives\n\t * us a chance to update the iLib locale before Enyo broadcasts its\n\t * `onlocalechange` signal.\n\t * Provide an inLocale string, like \"en-US\" or \"ja-JP\", to conveniently set\n\t * that locale immediately. Provide nothing, and reset the locale back to the\n\t * browser's default language.\n\t */\n\t(function(originalUpdateLocale) {\n\t\thooks.updateLocale = function(inLocale) {\n\t\t\t// blow away the cache to force it to reload the manifest files for the new app\n\t\t\tif (ilib._load) ilib._load.manifest = undefined;\n\t\t\tilib.setLocale(inLocale || navigator.language);\n\t\t\thooks.$L.setLocale(inLocale || navigator.language);\n\t\t\tupdateI18NClasses();\n\t\t\toriginalUpdateLocale();\n\t\t};\n\t})(hooks.updateLocale);\n\n\t// we go ahead and run this once during loading of iLib settings are valid\n\t// during the loads of later libraries.\n\thooks.updateLocale(null, true);\n\n\treturn {\n\t\tupdateI18NClasses: updateI18NClasses,\n\t\tisNonLatinLocale: isNonLatinLocale\n\t};\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind');\nvar\n\tControl = require('./Control');\n\n/**\n* {@link enyo.Anchor} implements an HTML [anchor]{@glossary Anchor} (&lt;a&gt;) tag.\n* Published properties allow you to [bind]{@link enyo.BindingSupport} the anchor's\n* [href]{@link enyo.Anchor#href} and [title]{@link enyo.Anchor#title}\n* [attributes]{@glossary Attribute} to appropriate fields on data\n* [objects]{@glossary Object}.\n* \n* @class enyo.Anchor\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Anchor.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Anchor',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\ttag: 'a',\n\n\t/** \n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Anchor.prototype */ {\n\t\t\n\t\t/** \n\t\t* Maps to the `href` [attribute]{@glossary Attribute} of the &lt;a&gt; tag.\n\t\t* \n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\thref: '',\n\n\t\t/**\n\t\t* Maps to the `title` [attribute]{@glossary Attribute} of the &lt;a&gt; tag.\n\t\t* \n\t\t* @type {String}\n\t\t* @default  ''\n\t\t* @public\n\t\t*/\n\t\ttitle: ''\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.hrefChanged();\n\t\t\tthis.titleChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\threfChanged: function () {\n\t\tthis.setAttribute('href', this.href);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttitleChanged: function () {\n\t\tthis.setAttribute('title', this.title);\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils');\nvar\n\tControl = require('./Control'),\n\tRepeaterChildSupport = require('./RepeaterChildSupport');\n\n/**\n* {@link enyo.DataRepeater} iterates over the items in an {@link enyo.Collection} to\n* repeatedly render and synchronize records (instances of {@link enyo.Model}) to its\n* own children. For any record in the collection, a new child will be rendered in\n* the repeater. If the record is destroyed, the child will be destroyed. These\n* [controls]{@link enyo.Control} will automatically update when properties on the\n* underlying records are modified if they have been bound using\n* [bindings]{@link enyo.Binding}.\n*\n* @class enyo.DataRepeater\n* @extends enyo.Control\n* @ui\n* @public\n*/\nvar DataRepeater = module.exports = kind(\n\t/** @lends enyo.DataRepeater.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.DataRepeater',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* Set this to `true` to enable selection support. Note that selection stores a\n\t* reference to the [model]{@link enyo.Model} that is selected, via the\n\t* [selected]{@link enyo.DataRepeater#selected} method.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\tselection: true,\n\n\t/**\n\t* Specifies the type of selection (if enabled), that we want to enable. The possible values\n\t* are 'single', 'multi', and 'group'. The default is 'single' selection mode, which enables\n\t* selection and deselection of a single item at a time. The 'multi' selection mode allows\n\t* multiple children to be selected simultaneously, while the 'group' selection mode allows\n\t* group-selection behavior such that only one child may be selected at a time and, once a\n\t* child is selected, it cannot be deselected via user input. The child may still be \n\t* deselected via the selection API methods.\n\t* \n\t* @type {String}\n\t* @default 'single'\n\t* @public\n\t*/\n\tselectionType: 'single',\n\n\t/**\n\t* Set this to `true` to allow multiple children to be selected simultaneously.\n\t*\n\t* @deprecated since version 2.6\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tmultipleSelection: false,\n\n\t/**\n\t* Set this to `true` to allow group-selection behavior such that only one child\n\t* may be selected at a time and, once a child is selected, it cannot be\n\t* deselected via user input. The child may still be deselected via the selection\n\t* API methods. Note that setting this property to `true` will set the\n\t* [multipleSelection]{@link enyo.DataRepeater#multipleSelection} property to\n\t* `false`.\n\t*\n\t* @deprecated since version 2.6\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tgroupSelection: false,\n\n\t/**\n\t* This class will be applied to the [repeater]{@link enyo.DataRepeater} when\n\t* [selection]{@link enyo.DataRepeater#selection} is enabled. It will also be\n\t* applied if [multipleSelection]{@link enyo.DataRepeater#multipleSelection}\n\t* is `true`.\n\t*\n\t* @type {String}\n\t* @default 'selection-enabled'\n\t* @public\n\t*/\n\tselectionClass: 'selection-enabled',\n\n\t/**\n\t* This class will be applied to the [repeater]{@link enyo.DataRepeater} when\n\t* [selectionType]{@link enyo.DataRepeater#selectionType} is `multi`.\n\t* When that is the case, the [selectionClass]{@link enyo.DataRepeater#selectionClass}\n\t* will also be applied.\n\t*\n\t* @type {String}\n\t* @default 'multiple-selection-enabled'\n\t* @public\n\t*/\n\tmultipleSelectionClass: 'multiple-selection-enabled',\n\n\t/**\n\t* In cases where selection should be detected from the state of the\n\t* [model]{@link enyo.Model}, this property should be set to the property on\n\t* the model that the [repeater]{@link enyo.DataRepeater} should observe for\n\t* changes. If the model changes, the repeater will reflect the change without\n\t* having to interact directly with the model. Note that this property must be\n\t* part of the model's schema, or else its changes will not be detected\n\t* properly.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @public\n\t*/\n\tselectionProperty: '',\n\n\t/**\n\t* Set this to a space-delimited string of [events]{@glossary event} or an\n\t* [array]{@glossary Array} that can trigger the selection of a particular\n\t* child. To prevent selection entirely, set\n\t* [selection]{@link enyo.DataRepeater#selection} to `false`.\n\t*\n\t* @type {String}\n\t* @default 'ontap'\n\t* @public\n\t*/\n\tselectionEvents: 'ontap',\n\n\t/**\n\t* Use this [hash]{@glossary Object} to define default [binding]{@link enyo.Binding}\n\t* properties for **all** children (even children of children) of this\n\t* [repeater]{@link enyo.DataRepeater}. This can eliminate the need to write the\n\t* same paths over and over. You may also use any binding macros. Any property\n\t* defined here will be superseded by the same property if defined for an individual\n\t* binding.\n\t*\n\t* @type {Object}\n\t* @default null\n\t* @public\n\t*/\n\tchildBindingDefaults: null,\n\n\t/**\n\t* @private\n\t*/\n\tinitComponents: function () {\n\t\tthis.initContainer();\n\t\tvar components = this.kindComponents || this.components || [],\n\t\t\towner = this.getInstanceOwner(),\n\t\t\tprops = this.defaultProps? utils.clone(this.defaultProps, true): (this.defaultProps = {});\n\t\t// ensure that children know who their binding owner is\n\t\tprops.bindingTransformOwner = this;\n\t\tprops.bindingDefaults = this.childBindingDefaults;\n\t\tif (components) {\n\t\t\t// if there are multiple components in the components block they will become nested\n\t\t\t// children of the default kind set for the repeater\n\t\t\tif (components.length > 1) {\n\t\t\t\tprops.components = components;\n\t\t\t}\n\t\t\t// if there is only one child, the properties will be the default kind of the repeater\n\t\t\telse {\n\t\t\t\tutils.mixin(props, components[0]);\n\t\t\t}\n\t\t\tprops.repeater = this;\n\t\t\tprops.owner = owner;\n\t\t\tprops.mixins = props.mixins? props.mixins.concat(this.childMixins): this.childMixins;\n\t\t}\n\n\t\tthis.defaultProps = props;\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructor: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tthis._selection = [];\n\t\t\t// we need to initialize our selectionEvents array\n\t\t\tvar se = this.selectionEvents;\n\t\t\tthis.selectionEvents = (typeof se == 'string'? se.split(' '): se);\n\t\t\t// we need to pre-bind these methods so they can easily be added\n\t\t\t// and removed as listeners later\n\t\t\tvar h = this._handlers = utils.clone(this._handlers);\n\t\t\tfor (var e in h) {\n\t\t\t\th[e] = this.bindSafely(h[e]);\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.collectionChanged();\n\t\t\t// Converting deprecated selection properties to our current selection API\n\t\t\tthis.selectionType = this.multipleSelection ? (this.groupSelection ? 'group' : 'multi') : this.selectionType;\n\t\t\tthis.selectionTypeChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tgroupSelectionChanged: function () {\n\t\tthis.set('selectionType', this.groupSelection ? 'group' : 'single');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmultipleSelectionChanged: function () {\n\t\tthis.set('selectionType', this.multipleSelection ? 'multi' : 'single');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tselectionTypeChanged: function (was) {\n\t\t// Synchronizing our deprecated properties\n\t\tthis.groupSelection = this.selectionType == 'group';\n\t\tthis.multipleSelection = this.selectionType == 'multi';\n\n\t\tif (was == 'multi') {\n\t\t\tif (this._selection.length > 1) {\n\t\t\t\tthis.deselectAll();\n\t\t\t}\n\t\t}\n\t\tthis.selectionChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tselectionChanged: function () {\n\t\tthis.addRemoveClass(this.selectionClass, this.selection);\n\t\tthis.addRemoveClass(this.multipleSelectionClass, this.selectionType == 'multi' && this.selection);\n\t},\n\n\t/**\n\t* Destroys any existing children in the [repeater]{@link enyo.DataRepeater} and creates all\n\t* new children based on the current [data]{@link enyo.Repeater#data}.\n\t*\n\t* @public\n\t*/\n\treset: function () {\n\t\t// use the facaded dataset because this could be any\n\t\t// collection of records\n\t\tvar dd = this.get('data');\n\t\t// destroy the client controls we might already have\n\t\tthis.destroyClientControls();\n\t\t// and now we create new ones for each new record we have\n\t\tfor (var i=0, r; (r=dd.at(i)); ++i) {\n\t\t\tthis.add(r, i);\n\t\t}\n\t\tthis.hasReset = true;\n\t},\n\t/**\n\t* Refreshes each [control]{@link enyo.Control} in the dataset.\n\t*\n\t* @param {Boolean} immediate - If `true`, refresh will occur immediately; otherwise,\n\t* it will be queued up as a job.\n\t* @public\n\t*/\n\trefresh: function (immediate) {\n\t\tif (!this.hasReset) { return this.reset(); }\n\t\tvar refresh = this.bindSafely(function () {\n\t\t\tvar dd = this.get('data'),\n\t\t\t\tcc = this.getClientControls();\n\t\t\tfor (var i=0, c, d; (d=dd.at(i)); ++i) {\n\t\t\t\tc = cc[i];\n\t\t\t\tif (c) {\n\t\t\t\t\tc.set('model', d);\n\t\t\t\t} else {\n\t\t\t\t\tthis.add(d, i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.prune();\n\t\t});\n\n\t\t// refresh is used as the event handler for\n\t\t// collection resets so checking for truthy isn't\n\t\t// enough. it must be true.\n\t\tif(immediate === true) {\n\t\t\trefresh();\n\t\t} else {\n\t\t\tthis.startJob('refreshing', refresh, 16);\n\t\t}\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tsup.apply(this, arguments);\n\t\t\tif (this.collection && this.collection.length) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\tthis.hasRendered = true;\n\t\t};\n\t}),\n\n\t/**\n\t* Adds a [record]{@link enyo.Model} at a particular index.\n\t*\n\t* @param {enyo.Model} rec - The [record]{@link enyo.Model} to add.\n\t* @param {Number} idx - The index at which the record should be added.\n\t* @public\n\t*/\n\tadd: function (rec, idx) {\n\t\tvar c = this.createComponent({model: rec, index: idx});\n\t\tif (this.generated && !this.batching) {\n\t\t\tc.render();\n\t\t}\n\t},\n\n\t/**\n\t* Removes the [record]{@link enyo.Model} at a particular index.\n\t*\n\t* @param {Number} idx - The index of the [record]{@link enyo.Model} to be removed.\n\t* @public\n\t*/\n\tremove: function (idx) {\n\t\tvar controls = this.getClientControls()\n\t\t\t, control;\n\n\t\tcontrol = controls[idx];\n\n\t\tif (control) control.destroy();\n\t},\n\n\t/**\n\t* Removes any [controls]{@link enyo.Control} that are outside the boundaries of the\n\t* [data]{@link enyo.DataRepeater#data} [collection]{@link enyo.Collection} for the\n\t* [repeater]{@link enyo.DataRepeater}.\n\t*\n\t* @public\n\t*/\n\tprune: function () {\n\t\tvar g = this.getClientControls()\n\t\t\t, len = (this.collection? this.collection.length: 0)\n\t\t\t, x;\n\t\tif (g.length > len) {\n\t\t\tx = g.slice(len);\n\t\t\tfor (var i=0, c; (c=x[i]); ++i) {\n\t\t\t\tc.destroy();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinitContainer: function () {\n\t\tvar ops = this.get('containerOptions'),\n\t\t\tnom = ops.name || (ops.name = this.containerName);\n\t\tthis.createChrome([ops]);\n\t\tthis.discoverControlParent();\n\t\tif (nom != this.containerName) {\n\t\t\tthis.$[this.containerName] = this.$[nom];\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonSelected: 'childSelected',\n\t\tonDeselected: 'childDeselected'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_handlers: {\n\t\tadd: 'modelsAdded',\n\t\tremove: 'modelsRemoved',\n\t\treset: 'refresh',\n\t\tsort: 'refresh',\n\t\tfilter: 'refresh'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponentsChanged: function (p) {\n\t\tthis.initComponents();\n\t\tthis.reset();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcollectionChanged: function (p) {\n\t\tvar c = this.collection;\n\t\tif (typeof c == 'string') {\n\t\t\tc = this.collection = utils.getPath.call(global, c);\n\t\t}\n\t\tif (c) {\n\t\t\tthis.initCollection(c, p);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinitCollection: function (c, p) {\n\t\tvar e;\n\t\tif (c && c.addListener) {\n\t\t\tfor (e in this._handlers) {\n\t\t\t\tc.addListener(e, this._handlers[e]);\n\t\t\t}\n\t\t}\n\t\tif (p && p.removeListener) {\n\t\t\tfor (e in this._handlers) {\n\t\t\t\tp.removeListener(e, this._handlers[e]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmodelsAdded: function (sender, e, props) {\n\t\tif (sender === this.collection) this.refresh();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmodelsRemoved: function (sender, e, props) {\n\t\tif (sender === this.collection) {\n\t\t\tthis.deselectRemovedModels(props.models);\n\t\t\tthis.refresh();\n\t\t}\n\t},\n\n\t/**\n\t* Deselect removed models from _selected array.\n\t* After calling it, we can ensure that the removed models aren't currently selected.\n\t* @param {array} models - The array of models that are removed from collection.\n\t* @private\n\t*/\n\tdeselectRemovedModels: function(models) {\n\t\tvar selected = this._selection,\n\t\t\torig,\n\t\t\tmodel,\n\t\t\tidx,\n\t\t\tlen = selected && selected.length,\n\t\t\ti = models.length - 1;\n\n\t\t// We have selected models\n\t\tif (len) {\n\t\t\t// unfortunately we need to make a copy to preserve what the original was\n\t\t\t// so we can pass it with the notification if any of these are deselected\n\t\t\torig = selected.slice();\n\n\t\t\t// we have _selected array to track currently selected models\n\t\t\t// if some removed models are in _selected, we should remove them from _selected\n\t\t\t// clearly we won't need to continue checking if selected does not have any models\n\t\t\tfor (; (model = models[i]) && selected.length; --i) {\n\t\t\t\tidx = selected.indexOf(model);\n\t\t\t\tif (idx > -1) selected.splice(idx, 1);\n\t\t\t}\n\n\t\t\t// Some selected models are discovered, so we need to notify\n\t\t\tif (len != selected.length) {\n\t\t\t\tif (this.selection) {\n\t\t\t\t\tif (this.selectionType == 'multi') this.notify('selected', orig, selected);\n\t\t\t\t\telse this.notify('selected', orig[0], selected[0] || null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tbatchingChanged: function (prev, val) {\n\t\tif (this.generated && false === val) {\n\t\t\tthis.$[this.containerName].render();\n\t\t\tthis.refresh(true);\n\t\t}\n\t},\n\n\t/**\n\t* Calls [childForIndex()]{@link enyo.DataRepeater#getChildForIndex}. Leaving for posterity.\n\t*\n\t* @param {Number} idx - The index of the child to retrieve.\n\t* @returns {enyo.Control|undefined} The [control]{@link enyo.Control} at the specified\n\t* index, or `undefined` if it could not be found or the index is out of bounds.\n\t* @public\n\t*/\n\tgetChildForIndex: function (idx) {\n\t\treturn this.childForIndex(idx);\n\t},\n\n\t/**\n\t* Attempts to return the [control]{@link enyo.Control} representation at a particular index.\n\t*\n\t* @param {Number} idx - The index of the child to retrieve.\n\t* @returns {enyo.Control|undefined} The [control]{@link enyo.Control} at the specified\n\t* index, or `undefined` if it could not be found or the index is out of bounds.\n\t* @public\n\t*/\n\tchildForIndex: function (idx) {\n\t\treturn this.$.container.children[idx];\n\t},\n\n\t/**\n\t* Retrieves the data associated with the [repeater]{@link enyo.DataRepeater}.\n\t*\n\t* @returns {enyo.Collection} The {@link enyo.Collection} that comprises the data.\n\t* @public\n\t*/\n\tdata: function () {\n\t\treturn this.collection;\n\t},\n\n\t/**\n\t* Consolidates selection logic and allows for deselection of a [model]{@link enyo.Model}\n\t* that has already been removed from the [collection]{@link enyo.Collection}.\n\t*\n\t* @private\n\t*/\n\t_select: function (idx, model, select) {\n\t\tif (!this.selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar c = this.getChildForIndex(idx),\n\t\t\ts = this._selection,\n\t\t\ti = utils.indexOf(model, s);\n\n\t\tif (select) {\n\t\t\tif(i == -1) {\n\t\t\t\tif(this.selectionType != 'multi') {\n\t\t\t\t\twhile (s.length) {\n\t\t\t\t\t\ti = this.collection.indexOf(s.pop());\n\t\t\t\t\t\tthis.deselect(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ts.push(model);\n\t\t\t}\n\t\t} else {\n\t\t\tif(i >= 0) {\n\t\t\t\ts.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (c) {\n\t\t\tc.set('selected', select);\n\t\t}\n\t\tif (this.selectionProperty && model) {\n\t\t\t(s=this.selectionProperty) && model.set(s, select);\n\t\t}\n\t\tthis.notifyObservers('selected');\n\t},\n\n\t/**\n\t* Selects the item at the given index.\n\t*\n\t* @param {Number} idx - The index of the item to select.\n\t* @public\n\t*/\n\tselect: function (idx) {\n\t\tthis._select(idx, this.collection.at(idx), true);\n\t},\n\n\t/**\n\t* Deselects the item at the given index.\n\t*\n\t* @param {Number} idx - The index of the item to deselect.\n\t* @public\n\t*/\n\tdeselect: function (idx) {\n\t\tthis._select(idx, this.collection.at(idx), false);\n\t},\n\n\t/**\n\t* Determines whether a [model]{@link enyo.Model} is currently selected.\n\t*\n\t* @param {enyo.Model} model - The [model]{@link enyo.Model} whose selection status\n\t* is to be determined.\n\t* @returns {Boolean} `true` if the given model is selected; otherwise, `false`.\n\t* @public\n\t*/\n\tisSelected: function (model) {\n\t\treturn !!~utils.indexOf(model, this._selection);\n\t},\n\n\t/**\n\t* Selects all items (if [selectionType]{@link enyo.DataRepeater#selectionType} is `multi`).\n\t*\n\t* @public\n\t*/\n\tselectAll: function () {\n\t\tif (this.selectionType == 'multi') {\n\t\t\tthis.stopNotifications();\n\t\t\tvar s = this._selection\n\t\t\t\t, len = this.collection? this.collection.length: 0;\n\t\t\ts.length = 0;\n\t\t\tfor (var i=0; i<len; ++i) {\n\t\t\t\tthis.select(i);\n\t\t\t}\n\t\t\tthis.startNotifications();\n\t\t}\n\t},\n\n\t/**\n\t* Deselects all items.\n\t*\n\t* @public\n\t*/\n\tdeselectAll: function () {\n\t\tif (this.selection) {\n\t\t\tthis.stopNotifications();\n\t\t\tvar s = this._selection, m, i;\n\t\t\twhile (s.length) {\n\t\t\t\tm = s.pop();\n\t\t\t\ti = this.collection.indexOf(m);\n\t\t\t\tthis.deselect(i);\n\t\t\t}\n\t\t\tthis.startNotifications();\n\t\t}\n\t},\n\n\t/**\n\t* A computed property that returns the currently selected [model]{@link enyo.Model}\n\t* (if [selectionType]{@link enyo.DataRepeater#selectionType} is not `multi'`),\n\t* or an immutable [array]{@glossary Array} of all currently selected models (if\n\t* `selectionType` is `multi'`).\n\t*\n\t* @public\n\t*/\n\tselected: function() {\n\t\t// to ensure that bindings will clear properly according to their api\n\t\treturn (this.selectionType == 'multi' ? this._selection : this._selection[0]) || null;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdataChanged: function () {\n\t\tif (this.collection && this.hasRendered) {\n\t\t\tthis.reset();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomputed: [\n\t\t{method: 'selected'},\n\t\t{method: 'data', path: ['controller', 'collection']}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\n\n\t/**\n\t* @private\n\t*/\n\tchildMixins: [RepeaterChildSupport],\n\n\t/**\n\t* @private\n\t*/\n\tcontrolParentName: 'container',\n\n\t/**\n\t* @private\n\t*/\n\tcontainerName: 'container',\n\n\t/**\n\t* @private\n\t*/\n\tcontainerOptions: {name: 'container', classes: 'enyo-fill enyo-data-repeater-container'},\n\n\t/**\n\t* @private\n\t*/\n\tbatching: false,\n\n\t/**\n\t* @private\n\t*/\n\t_selection: null\n});\n\n/**\n* @static\n* @private\n*/\nDataRepeater.concat = function (ctor, props) {\n\tvar p = ctor.prototype || ctor;\n\tif (props.childMixins) {\n\t\tp.childMixins = (p.childMixins? utils.merge(p.childMixins, props.childMixins): props.childMixins.slice());\n\t\tdelete props.childMixins;\n\t}\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind');\n\nvar\n\tAnimator = require('../../enyo/lib/Animator'),\n\tControl = require('./Control');\n\n/**\n* Fires when the [drawer]{@link enyo.Drawer} has been opened or closed. The handler can \n* determine whether the drawer was just opened or just closed based on the\n* [open]{@link enyo.Drawer#open} property. If `this.getOpen()` returns `true`,\n* the drawer was opened; if not, it was closed.\n*\n* @event enyo.Drawer#onDrawerAnimationStep\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* Fires when the [drawer]{@link enyo.Drawer} has been opened or closed. The handler\n* can determine whether the drawer was just opened or just closed based on the\n* [open]{@link enyo.Drawer#open} property. If `this.getOpen()` returns `true`,\n* the drawer was opened; if not, it was closed.\n*\n* @event enyo.Drawer#onDrawerAnimationEnd\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently \n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* {@link enyo.Drawer} is a control that appears or disappears based on its\n* [open]{@link enyo.Drawer#open} property. By default, the drawer appears\n* or disappears with a sliding animation whose direction is determined by the\n* [orient]{@link enyo.Drawer#orient} property.\n*\n* For more information, see the documentation on\n* [Drawers]{@linkplain $dev-guide/building-apps/layout/drawers.html} in the\n* Enyo Developer Guide.\n*\n* @class enyo.Drawer\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Drawer.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Drawer',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Drawer.prototype */ {\n\t\t\n\t\t/**\n\t\t* The visibility state of the [drawer's]{@link enyo.Drawer} associated control.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\topen : true,\n\n\t\t/**\n\t\t* The direction of the opening/closing animation; will be either `'v'` for vertical\n\t\t* or `'h'` for horizontal.\n\t\t* \n\t\t* @type {String}\n\t\t* @default 'v'\n\t\t* @public\n\t\t*/\n\t\torient : 'v',\n\n\t\t/**\n\t\t* If `true`, the opening/closing transition will be animated.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tanimated : true,\n\n\t\t/**\n\t\t* If `true`, the [drawer]{@link enyo.Drawer} will resize its container as it is\n\t\t* animating, which is useful when the drawer is placed inside a\n\t\t* [FittableLayout]{@link enyo.FittableLayout}.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tresizeContainer: true\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonDrawerAnimationStep: '',\n\t\tonDrawerAnimationEnd: ''\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tstyle: 'overflow: hidden; position: relative;',\n\n\t/**\n\t* @private\n\t*/\n\ttools: [\n\t\t{kind: Animator, onStep: 'animatorStep', onEnd: 'animatorEnd'},\n\t\t{name: 'client', style: 'position: relative;', classes: 'enyo-border-box'}\n\t],\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.animatedChanged();\n\t\t\tthis.openChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tinitComponents: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.createChrome(this.tools);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tanimatedChanged: function () {\n\t\tif (!this.animated && this.hasNode() && this.$.animator.isAnimating()) {\n\t\t\tthis.$.animator.stop();\n\t\t\tthis.animatorEnd();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\topenChanged: function () {\n\t\tthis.$.client.show();\n\t\tif (this.hasNode()) {\n\t\t\tif (this.$.animator.isAnimating()) {\n\t\t\t\tthis.$.animator.reverse();\n\t\t\t} else {\n\t\t\t\tvar v = this.orient == 'v';\n\t\t\t\tvar d = v ? 'height' : 'width';\n\t\t\t\tvar p = v ? 'top' : 'left';\n\t\t\t\t// unfixing the height/width is needed to properly\n\t\t\t\t// measure the scrollHeight/Width DOM property, but\n\t\t\t\t// can cause a momentary flash of content on some browsers\n\t\t\t\tthis.applyStyle(d, null);\n\t\t\t\tvar s = this.hasNode()[v ? 'scrollHeight' : 'scrollWidth'];\n\t\t\t\tif (this.animated) {\n\t\t\t\t\tthis.$.animator.play({\n\t\t\t\t\t\tstartValue: this.open ? 0 : s,\n\t\t\t\t\t\tendValue: this.open ? s : 0,\n\t\t\t\t\t\tdimension: d,\n\t\t\t\t\t\tposition: p\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// directly run last frame if not animating\n\t\t\t\t\tthis.animatorEnd();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.$.client.setShowing(this.open);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tanimatorStep: function (sender) {\n\t\t// the actual drawer DOM node adjusts its height\n\t\tif (this.hasNode()) {\n\t\t\tvar d = sender.dimension;\n\t\t\tthis.applyStyle(d, sender.value + 'px');\n\t\t}\n\t\t// while the client inside the drawer adjusts its position to move out of the visible area\n\t\tvar cn = this.$.client.hasNode();\n\t\tif (cn) {\n\t\t\tvar p = sender.position;\n\t\t\tvar o = (this.open ? sender.endValue : sender.startValue);\n\t\t\tthis.$.client.applyStyle(p, (sender.value - o) + 'px');\n\t\t}\n\t\tif (this.container && this.resizeContainer) {\n\t\t\tthis.container.resize();\n\t\t}\n\t\tthis.doDrawerAnimationStep();\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tanimatorEnd: function () {\n\t\tif (!this.open) {\n\t\t\tthis.$.client.hide();\n\t\t}\n\t\telse {\n\t\t\tvar v = (this.orient == 'v');\n\t\t\tvar d = v ? 'height' : 'width';\n\t\t\tvar p = v ? 'top' : 'left';\n\t\t\tvar cn = this.$.client.hasNode();\n\t\t\t// clear out changes to container position & node dimension\n\t\t\tif (cn) {\n\t\t\t\tthis.$.client.applyStyle(p, null);\n\t\t\t}\n\t\t\tif (this.node) {\n\t\t\t\tthis.applyStyle(d, null);\n\t\t\t}\n\t\t}\n\t\tif (this.container && this.resizeContainer) {\n\t\t\tthis.container.resize();\n\t\t}\n\t\tthis.doDrawerAnimationEnd();\n\t\treturn true;\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind');\nvar\n\tControl = require('./Control');\n\n/**\n* The extended {@glossary event} [object]{@glossary Object} that is provided when the\n* [onActiveChanged]{@link enyo.Group#onActiveChanged} event is fired.\n*\n* @typedef {Object} enyo.Group~ActiveChangedEvent\n* @property {enyo.Control} active - The active [control]{@link enyo.Control} for the\n*\t[group]{@link enyo.Group}.\n*/\n\n/**\n* Fires when the active control is changed.\n*\n* @event enyo.Group#onActiveChanged\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {enyo.Group~ActiveChangedEvent} event - An [object]{@glossary Object} containing\n*\tevent information.\n* @public\n*/\n\n/**\n* {@link enyo.Group} provides a wrapper around multiple elements. It enables the creation of\n* radio groups from arbitrary [components]{@link enyo.Component} that support the\n* {@link enyo.GroupItem} API.\n*\n* @class enyo.Group\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Group.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Group',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Group.prototype */ {\n\t\t\n\t\t/**\n\t\t* If `true`, only one [GroupItem]{@link enyo.GroupItem} in the \n\t\t* [component]{@link enyo.Component} list may be active at a given time.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\thighlander: true,\n\n\t\t/**\n\t\t* If `true`, an active highlander item may be deactivated.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tallowHighlanderDeactivate: false,\n\n\t\t/**\n\t\t* The [control]{@link enyo.Control} that was last selected.\n\t\t* \n\t\t* @type {Object}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tactive: null,\n\t\n\t\t/**\n\t\t* This property is used to scope this [group]{@link enyo.Group} to a certain\n\t\t* set of [controls]{@link enyo.Control}.  When this is used, the group only\n\t\t* controls activation of controls that have the same `groupName` property set\n\t\t* on them.\n\t\t* \n\t\t* @type {String}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tgroupName: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonActiveChanged: \"\"\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonActivate: 'activate'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tactivate: function (sender, e) {\n\t\tif ((this.groupName || e.originator.groupName) && (e.originator.groupName != this.groupName)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.highlander) {\n\t\t\t// we can optionally accept an `allowHighlanderDeactivate` property in e without directly \n\t\t\t// specifying it when instatiating the group - used mainly for custom kinds requiring deactivation  \n\t\t\tif (e.allowHighlanderDeactivate !== undefined && e.allowHighlanderDeactivate !== this.allowHighlanderDeactivate) {\n\t\t\t\tthis.setAllowHighlanderDeactivate(e.allowHighlanderDeactivate);\n\t\t\t}\n\t\t\t// deactivation messages are ignored unless it's an attempt\n\t\t\t// to deactivate the highlander\n\t\t\tif (!e.originator.active) {\n\t\t\t\t// this clause prevents deactivating a grouped item once it's been active,\n\t\t\t\t// as long as `allowHighlanderDeactivate` is false. Otherwise, the only\n\t\t\t\t// proper way to deactivate a grouped item is to choose a new highlander.\n\t\t\t\tif (e.originator == this.active) {\n\t\t\t\t\tif (!this.allowHighlanderDeactivate) {\n\t\t\t\t\t\tthis.active.setActive(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setActive(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setActive(e.originator);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @fires enyo.Group#onActiveChanged\n\t* @private\n\t*/\n\tactiveChanged: function (was) {\n\t\tif (was && !was.destroyed) {\n\t\t\twas.setActive(false);\n\t\t\twas.removeClass('active');\n\t\t}\n\t\tif (this.active) {\n\t\t\tthis.active.addClass('active');\n\t\t}\n\t\tthis.doActiveChanged({active: this.active});\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind');\nvar\n\tControl = require('./Control');\n\n/**\n* Fires when the [active state]{@link enyo.GroupItem#active} has changed.\n*\n* @event enyo.GroupItem#onActivate\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* {@link enyo.GroupItem} is the base [kind]{@glossary kind} for the\n* [Grouping]{@link enyo.Group} API. It manages the\n* [active state]{@link enyo.GroupItem#active} of the [component]{@link enyo.Component}\n* (or the [inheriting]{@glossary subkind} component). A subkind may call `setActive()` \n* to set the [active]{@link enyo.GroupItem#active} property to the desired state; this\n* will additionally [bubble]{@link enyo.Component#bubble} an \n* [onActivate]{@link enyo.GroupItem#onActivate} {@glossary event}, which may\n* be handled as needed by the containing components. This is useful for creating\n* groups of items whose state should be managed collectively.\n*\n* For an example of how this works, see the {@link enyo.Group} kind, which enables the\n* creation of radio groups from arbitrary components that\tsupport the Grouping API.\n*\n* @class enyo.GroupItem\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Groupitem.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.GroupItem',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Groupitem.prototype */ {\n\n\t\t/**\n\t\t* Will be `true` if the item is currently selected.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tactive: false\n\t},\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.activeChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @fires enyo.GroupItem#onActivate\n\t* @private\n\t*/\n\tactiveChanged: function () {\n\t\tthis.bubble('onActivate');\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tdispatcher = require('./dispatcher'),\n\tplatform = require('./platform');\nvar\n\tControl = require('./Control');\n\n/**\n* Fires immediately when the text changes.\n*\n* @event enyo.Input#oninput\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* Fires when the text has changed and the [input]{@link enyo.Input} subsequently loses\n* focus.\n*\n* @event enyo.Input#onchange\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* Fires when the [input]{@link enyo.Input} is disabled or enabled.\n*\n* @event enyo.Input#onDisabledChange\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* {@link enyo.Input} implements an HTML [&lt;input&gt;]{@glossary input} element\n* with cross-platform support for change [events]{@glossary event}.\n*\n* You may listen for [oninput]{@link enyo.Input#oninput} and\n* [onchange]{@link enyo.Input#onchange} [DOM events]{@glossary DOMEvent} from\n* this [control]{@link enyo.Control} to know when the text inside has been modified.\n*\n* For more information, see the documentation on\n* [Text Fields]{@linkplain $dev-guide/building-apps/controls/text-fields.html}\n* in the Enyo Developer Guide.\n*\n* @class enyo.Input\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Input.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Input',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tpublished:\n\t\t/** @lends enyo.Input.prototype */ {\n\n\t\t/**\n\t\t* Value of the [input]{@link enyo.Input}. Use this property only to initialize the\n\t\t* value. Call `getValue()` and `setValue()` to manipulate the value at runtime.\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\tvalue: '',\n\n\t\t/**\n\t\t* Text to display when the [input]{@link enyo.Input} is empty\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\tplaceholder: '',\n\n\t\t/**\n\t\t* Type of [input]{@link enyo.Input}; if not specified, it's treated as `'text'`.\n\t\t* This may be anything specified for the `type` attribute in the HTML\n\t\t* specification, including `'url'`, `'email'`, `'search'`, or `'number'`.\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\ttype: '',\n\n\t\t/**\n\t\t* When `true`, prevents input into the [control]{@link enyo.Control}. This maps\n\t\t* to the `disabled` DOM attribute.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tdisabled: false,\n\n\t\t/**\n\t\t* When `true`, the contents of the [input]{@link enyo.Input} will be selected\n\t\t* when the input gains focus.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tselectOnFocus: false\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonDisabledChange: ''\n\t},\n\n\t/**\n\t* Set to `true` to focus this [control]{@link enyo.Control} when it is rendered.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tdefaultFocus: false,\n\n\t/**\n\t* @private\n\t*/\n\ttag: 'input',\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-input',\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonfocus: 'focused',\n\t\toninput: 'input',\n\t\tonclear: 'clear',\n\t\tondragstart: 'dragstart'\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tif (platform.ie) {\n\t\t\t\tthis.handlers.onkeyup = 'iekeyup';\n\t\t\t}\n\t\t\tif (platform.windowsPhone) {\n\t\t\t\tthis.handlers.onkeydown = 'iekeydown';\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.placeholderChanged();\n\t\t\t// prevent overriding a custom attribute with null\n\t\t\tif (this.type) {\n\t\t\t\tthis.typeChanged();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\n\t\t\tdispatcher.makeBubble(this, 'focus', 'blur');\n\n\t\t\t//Force onchange event to be bubbled inside Enyo for IE8\n\t\t\tif(platform.ie == 8){\n\t\t\t\tthis.setAttribute('onchange', dispatcher.bubbler);\n\t\t\t}\n\n\t\t\tthis.disabledChanged();\n\t\t\tif (this.defaultFocus) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\ttypeChanged: function () {\n\t\tthis.setAttribute('type', this.type);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tplaceholderChanged: function () {\n\t\tthis.setAttribute('placeholder', this.placeholder);\n\t\tthis.valueChanged();\n\t},\n\n\t/**\n\t* @fires enyo.Input#onDisabledChange\n\t* @private\n\t*/\n\tdisabledChanged: function () {\n\t\tthis.setAttribute('disabled', this.disabled);\n\t\tthis.bubble('onDisabledChange');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function () {\n\t\tvar node = this.hasNode(),\n\t\t\tattrs = this.attributes;\n\t\tif (node) {\n\t\t\tif (node.value !== this.value) {\n\t\t\t\tnode.value = this.value;\n\t\t\t}\n\t\t\t// we manually update the cached value so that the next time the\n\t\t\t// attribute is requested or the control is re-rendered it will\n\t\t\t// have the correct value - this is because calling setAttribute()\n\t\t\t// in some cases does not receive an appropriate response from the\n\t\t\t// browser\n\t\t\tattrs.value = this.value;\n\t\t} else {\n\t\t\tthis.setAttribute('value', this.value);\n\t\t}\n\t\tthis.detectTextDirectionality((this.value || this.value === 0) ? this.value : this.get('placeholder'));\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tiekeyup: function (sender, e) {\n\t\tvar ie = platform.ie, kc = e.keyCode;\n\t\t// input event missing on ie 8, fails to fire on backspace and delete keys in ie 9\n\t\tif (ie <= 8 || (ie == 9 && (kc == 8 || kc == 46))) {\n\t\t\tthis.bubble('oninput', e);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tiekeydown: function (sender, e) {\n\t\tvar wp = platform.windowsPhone, kc = e.keyCode, dt = e.dispatchTarget;\n\t\t// onchange event fails to fire on enter key for Windows Phone 8, so we force blur\n\t\tif (wp <= 8 && kc == 13 && this.tag == 'input' && dt.hasNode()) {\n\t\t\tdt.node.blur();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclear: function () {\n\t\tthis.setValue('');\n\t},\n\n\t// note: we disallow dragging of an input to allow text selection on all platforms\n\t/**\n\t* @private\n\t*/\n\tdragstart: function () {\n\t\treturn this.hasFocus();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tfocused: function () {\n\t\tif (this.selectOnFocus) {\n\t\t\tutils.asyncMethod(this, 'selectContents');\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tselectContents: function () {\n\t\tvar n = this.hasNode();\n\n\t\tif (n && n.setSelectionRange) {\n\t\t\tn.setSelectionRange(0, n.value.length);\n\t\t} else if (n && n.createTextRange) {\n\t\t\tvar r = n.createTextRange();\n\t\t\tr.expand('textedit');\n\t\t\tr.select();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinput: function () {\n\t\tvar val = this.getNodeProperty('value');\n\t\tthis.setValue(val);\n\t}\n});","require('../../../enyo');\n\n\n\nvar\n\tkind = require('../kind'),\n\tutils = require('../utils');\n\nvar\n\tControl = require('../Control');\n\n/**\n* {@link enyo.Scrim} provides an overlay that will prevent taps from propagating\n* to the controls that it covers.  A scrim may be \"floating\" or \"non-floating\".\n* A floating scrim will fill the entire viewport, while a non-floating scrim will\n* be constrained by the dimensions of its container.\n*\n* The scrim should have a CSS class of `enyo-scrim-transparent`,\n* `enyo-scrim-translucent`, or any other class that has\n* `pointer-events: auto` in its style properties.\n*\n* You may specify the `z-index` at which you want the scrim to appear by calling\n* [showAtZIndex()]{@link enyo.Scrim#showAtZIndex}. If you do so, you must call\n* [hideAtZIndex()]{@link enyo.Scrim#hideAtZIndex} with the same value to hide the\n* scrim.\n*\n* @class  enyo.Scrim\n* @extends enyo.Control\n* @ui\n* @public\n*/\nvar Scrim = module.exports = kind(\n\t/** @lends enyo.Scrim.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Scrim',\n\n\tkind: Control,\n\n\t/**\n\t* Current visibility state\n\t*\n\t* @type {Boolean}\n\t* @private\n\t*/\n\tshowing: false,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-scrim enyo-fit',\n\n\t/**\n\t* If `true`, the scrim is rendered in a floating layer outside of other\n\t* controls. This can be used to guarantee that the scrim will be shown\n\t* on top of other controls.\n\t*\n\t* @type {Boolean}\n\t* @default  false\n\t* @public\n\t*/\n\tfloating: false,\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tthis.inherited(arguments);\n\t\tthis.zStack = [];\n\t\tif (this.floating) {\n\t\t\tthis.setParent(Control.floatingLayer);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowingChanged: function () {\n\t\t// auto render when shown.\n\t\tif (this.floating && this.showing && !this.hasNode()) {\n\t\t\tthis.render();\n\t\t}\n\t\tthis.inherited(arguments);\n\t\t//this.addRemoveClass(this.showingClassName, this.showing);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\taddZIndex: function (zIndex) {\n\t\tif (utils.indexOf(zIndex, this.zStack) < 0) {\n\t\t\tthis.zStack.push(zIndex);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tremoveZIndex: function (control) {\n\t\tutils.remove(control, this.zStack);\n\t},\n\n\t/**\n\t* Shows scrim at the specified z-index. Note that if you call\n\t* `showAtZIndex()`, you must call [hideAtZIndex()]{@link enyo.Scrim#hideAtZIndex}\n\t* to properly unwind the z-index stack.\n\t*\n\t* @param  {Number} zIndex - z-index for the scrim\n\t* @public\n\t*/\n\tshowAtZIndex: function (zIndex) {\n\t\tthis.addZIndex(zIndex);\n\t\tif (zIndex !== undefined) {\n\t\t\tthis.setZIndex(zIndex);\n\t\t}\n\t\tthis.show();\n\t},\n\n\t/**\n\t* Hides scrim at the specified z-index.\n\t*\n\t* @param  {Number} zIndex - z-index of the scrim\n\t* @public\n\t*/\n\thideAtZIndex: function (zIndex) {\n\t\tthis.removeZIndex(zIndex);\n\t\tif (!this.zStack.length) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tvar z = this.zStack[this.zStack.length-1];\n\t\t\tthis.setZIndex(z);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsetZIndex: function (zIndex) {\n\t\tthis.zIndex = zIndex;\n\t\tthis.applyStyle('z-index', zIndex);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmake: function () {\n\t\treturn this;\n\t}\n});\n\n/**\n* Scrim singleton exposing a subset of the Scrim API;\n* it is replaced with a proper {@link enyo.Scrim} instance.\n*\n* @class  enyo.scrimSingleton\n* @private\n*/\nvar ScrimSingleton = kind(\n\t/** @lends  enyo.scrimSingleton.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tkind: null,\n\n\t/**\n\t* @private\n\t*/\n\tconstructor: function (props) {\n\t\tthis.instanceName = name;\n\t\tthis.props = props || {};\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmake: function () {\n\t\tvar s = new Scrim(this.props);\n\t\treturn s;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowAtZIndex: function (zIndex) {\n\t\tvar s = this.make();\n\t\ts.showAtZIndex(zIndex);\n\t},\n\n\t/**\n\t* In case somebody does this out of order\n\t*\n\t* @private\n\t*/\n\thideAtZIndex: utils.nop,\n\n\t/**\n\t* @private\n\t*/\n\tshow: function () {\n\t\tvar s = this.make();\n\t\ts.show();\n\t}\n});\n\nScrim.scrim = new ScrimSingleton({floating: true, classes: 'enyo-scrim-translucent'});\nScrim.scrimTransparent = new ScrimSingleton({floating: true, classes: 'enyo-scrim-transparent'});\nScrim.ScrimSingleton = ScrimSingleton;","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tdispatcher = require('./dispatcher');\n\nvar\n\tControl = require('./Control');\n\n/**\n* {@link enyo.ScrollStrategy} is a helper [kind]{@glossary kind} that implements a default \n* scrolling strategy for an {@link enyo.Scroller}.\n* \n* `enyo.ScrollStrategy` is not typically created in application code. Instead, it is specified \n* as the value of the [strategyKind]{@link enyo.Scroller#strategyKind} property of an\n* `enyo.Scroller` or {@link enyo.List}, or is used by the framework implicitly.\n*\n* @class enyo.ScrollStrategy\n* @protected\n*/\nmodule.exports = kind(\n\t/** @lends enyo.ScrollStrategy.prototype */ {\n\n\tname: 'enyo.ScrollStrategy',\n\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\ttag: null,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.ScrollStrategy.prototype */ {\n\t\t\n\t\t/**\n\t\t* Specifies how to vertically scroll.  Acceptable values are `'scroll'`, `'auto'`,\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\n\t\t* scroll strategy.\n\t\t* \n\t\t* @type {String}\n\t\t* @default 'default'\n\t\t* @public\n\t\t*/\n\t\tvertical: 'default',\n\t\t\n\t\t/**\n\t\t* Specifies how to horizontally scroll.  Acceptable values are `'scroll'`, `'auto'`,\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\n\t\t* scroll strategy.\n\t\t* \n\t\t* @type {String}\n\t\t* @default 'default'\n\t\t* @public\n\t\t*/\n\t\thorizontal: 'default',\n\t\t\n\t\t/**\n\t\t* The horizontal scroll position.\n\t\t* \n\t\t* @type {Number}\n\t\t* @default 0\n\t\t* @public\n\t\t*/\n\t\tscrollLeft: 0,\n\t\t\n\t\t/**\n\t\t* The vertical scroll position.\n\t\t* \n\t\t* @type {Number}\n\t\t* @default 0\n\t\t* @public\n\t\t*/\n\t\tscrollTop: 0,\n\t\t\n\t\t/**\n\t\t* Maximum height of the scroll content.\n\t\t* \n\t\t* @type {Number}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tmaxHeight: null,\n\t\t\n\t\t/**\n\t\t* Indicates whether mouse wheel may be used to move the [scroller]{@link enyo.Scroller}.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tuseMouseWheel: true\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonScrollStart: '',\n\t\tonScrollStop: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tondragstart: 'dragstart',\n\t\tondragfinish: 'dragfinish',\n\t\tondown: 'down',\n\t\tonmove: 'move',\n\t\tonmousewheel: 'mousewheel',\n\t\tonscroll: 'domScroll'\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.horizontalChanged();\n\t\t\tthis.verticalChanged();\n\t\t\tthis.maxHeightChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tdispatcher.makeBubble(this.container, 'scroll');\n\t\t\tthis.scrollNode = this.calcScrollNode();\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tteardownRender: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.scrollNode = null;\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tcalcScrollNode: function () {\n\t\treturn this.container.hasNode();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thorizontalChanged: function () {\n\t\tthis.container.applyStyle('overflow-x', this.horizontal == 'default' ? 'auto' : this.horizontal);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tverticalChanged: function () {\n\t\tthis.container.applyStyle('overflow-y', this.vertical == 'default' ? 'auto' : this.vertical);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxHeightChanged: function () {\n\t\tthis.container.applyStyle('max-height', this.maxHeight);\n\t},\n\n\t/** \n\t* Scrolls to the specified position.\n\t*\n\t* @param {Number} x - The `x` position in pixels.\n\t* @param {Number} y - The `y` position in pixels.\n\t* @public\n\t*/\n\tscrollTo: function (x, y) {\n\t\tif (this.scrollNode) {\n\t\t\tthis.setScrollLeft(x);\n\t\t\tthis.setScrollTop(y);\n\t\t}\n\t},\n\n\t/** \n\t* Ensures that the given node is visible in the [scroller's]{@link enyo.Scroller} viewport.\n\t*\n\t* @param {Node} node - The node to make visible in the [scroller's]{@link enyo.Scroller}\n\t*\tviewport.\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\n\t*\tscroller.\n\t* @public\n\t*/\n\tscrollToNode: function (node, alignWithTop) {\n\t\tif (this.scrollNode) {\n\t\t\tvar sb = this.getScrollBounds();\n\t\t\tvar n = node;\n\t\t\tvar b = {height: n.offsetHeight, width: n.offsetWidth, top: 0, left: 0};\n\t\t\twhile (n && n.parentNode && n.id != this.scrollNode.id) {\n\t\t\t\tb.top += n.offsetTop;\n\t\t\t\tb.left += n.offsetLeft;\n\t\t\t\tn = n.parentNode;\n\t\t\t}\n\t\t\t// By default, the element is scrolled to align with the top of the scroll area.\n\t\t\tthis.setScrollTop(Math.min(sb.maxTop, alignWithTop === false ? b.top - sb.clientHeight + b.height : b.top));\n\t\t\tthis.setScrollLeft(Math.min(sb.maxLeft, alignWithTop === false ? b.left - sb.clientWidth + b.width : b.left));\n\t\t}\n\t},\n\n\t/**\n\t* Scrolls the given [control]{@link enyo.Control} into view.\n\t*\n\t* @param {enyo.Control} ctl - The [control]{@link enyo.Control} to make visible in the\n\t*\t[scroller's]{@link enyo.Scroller} viewport.\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\n\t*\tscroller.\n\t* @public\n\t*/\n\tscrollIntoView: function (ctl, alignWithTop) {\n\t\tif (ctl.hasNode()) {\n\t\t\tctl.node.scrollIntoView(alignWithTop);\n\t\t}\n\t},\n\tisInView: function(inNode) {\n\t\tvar sb = this.getScrollBounds();\n\t\tvar ot = inNode.offsetTop;\n\t\tvar oh = inNode.offsetHeight;\n\t\tvar ol = inNode.offsetLeft;\n\t\tvar ow = inNode.offsetWidth;\n\t\treturn (ot >= sb.top && ot + oh <= sb.top + sb.clientHeight) && (ol >= sb.left && ol + ow <= sb.left + sb.clientWidth);\n\t},\n\n\t/**\n\t* Sets the vertical scroll position.\n\t*\n\t* @param {Number} top - The vertical scroll position in pixels.\n\t* @public\n\t*/\n\tsetScrollTop: function (top) {\n\t\tthis.scrollTop = top;\n\t\tif (this.scrollNode) {\n\t\t\tthis.scrollNode.scrollTop = this.scrollTop;\n\t\t}\n\t},\n\n\t/**\n\t* Sets the horizontal scroll position.\n\t*\n\t* @param {Number} left - The horizontal scroll position in pixels.\n\t* @public\n\t*/\n\tsetScrollLeft: function (left) {\n\t\tthis.scrollLeft = left;\n\t\tif (this.scrollNode) {\n\t\t\tthis.scrollNode.scrollLeft = this.scrollLeft;\n\t\t}\n\t},\n\n\t/**\n\t* Retrieves the horizontal scroll position.\n\t*\n\t* @returns {Number} The horizontal scroll position in pixels.\n\t* @public\n\t*/\n\tgetScrollLeft: function () {\n\t\treturn this.scrollNode ? this.scrollNode.scrollLeft : this.scrollLeft;\n\t},\n\n\t/**\n\t* Retrieves the vertical scroll position.\n\t*\n\t* @returns {Number} The vertical scroll position in pixels.\n\t* @private\n\t*/\n\tgetScrollTop: function () {\n\t\treturn this.scrollNode ? this.scrollNode.scrollTop : this.scrollTop;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_getScrollBounds: function () {\n\t\tvar s = this.getScrollSize(), cn = this.container.hasNode();\n\t\tvar b = {\n\t\t\tleft: this.getScrollLeft(),\n\t\t\ttop: this.getScrollTop(),\n\t\t\tclientHeight: cn ? cn.clientHeight : 0,\n\t\t\tclientWidth: cn ? cn.clientWidth : 0,\n\t\t\theight: s.height,\n\t\t\twidth: s.width\n\t\t};\n\t\tb.maxLeft = Math.max(0, b.width - b.clientWidth);\n\t\tb.maxTop = Math.max(0, b.height - b.clientHeight);\n\t\treturn b;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetScrollSize: function () {\n\t\tvar n = this.scrollNode;\n\t\treturn {width: n ? n.scrollWidth : 0, height: n ? n.scrollHeight : 0};\n\t},\n\n\t/**\n\t* Retrieves the scroll boundaries of the [scroller]{@link enyo.Scroller}.\n\t* \n\t* @returns {enyo.Scroller~BoundaryObject} An [object]{@glossary Object} describing the \n\t*\tscroll boundaries.\n\t* @public\n\t*/\n\tgetScrollBounds: function () {\n\t\treturn this._getScrollBounds();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcStartInfo: function () {\n\t\tvar sb = this.getScrollBounds();\n\t\tvar y = this.getScrollTop(), x = this.getScrollLeft();\n\t\tthis.canVertical = sb.maxTop > 0 && this.vertical != 'hidden';\n\t\tthis.canHorizontal = sb.maxLeft > 0 && this.horizontal != 'hidden';\n\t\tthis.startEdges = {\n\t\t\ttop: y === 0,\n\t\t\tbottom: y === sb.maxTop,\n\t\t\tleft: x === 0,\n\t\t\tright: x === sb.maxLeft\n\t\t};\n\t},\n\n\t// NOTE: down, move, and drag handlers are needed only for native touch scrollers\n\n\t/**\n\t* @private\n\t*/\n\tshouldDrag: function (e) {\n\t\tvar requestV = e.vertical;\n\t\treturn (requestV && this.canVertical  || !requestV && this.canHorizontal) /*&& !this.isOobVerticalScroll(event)*/;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragstart: function (sender, e) {\n\t\tthis.dragging = this.shouldDrag(e);\n\t\tif (this.dragging) {\n\t\t\treturn this.preventDragPropagation;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragfinish: function (sender, e) {\n\t\tif (this.dragging) {\n\t\t\tthis.dragging = false;\n\t\t\te.preventTap();\n\t\t}\n\t},\n\n\t/**\n\t* Avoid allowing scroll when starting at a vertical boundary to prevent iOS from window \n\t* scrolling.\n\t* \n\t* @private\n\t*/\n\tdown: function (sender, e) {\n\t\tif (this.isScrolling()) {\n\t\t\te.preventTap();\n\t\t}\n\t\tthis.calcStartInfo();\n\t},\n\n\t/**\n\t* NOTE: Mobile native [scrollers]{@link enyo.Scroller} need `touchmove`. Indicate this by \n\t* setting the `requireTouchmove` property to `true`.\n\t* \n\t* @private\n\t*/\n\tmove: function (sender, e) {\n\t\tif (e.which && (this.canVertical && e.vertical || this.canHorizontal && e.horizontal)) {\n\t\t\te.disablePrevention();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmousewheel: function (sender, e) {\n\t\t//* We disable mouse wheel scrolling by preventing the default\n\t\tif (!this.useMouseWheel) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdomScroll: function(sender, e) {\n\t\tif (!this._scrolling) {\n\t\t\tthis.doScrollStart();\n\t\t}\n\t\tthis._scrolling = true;\n\t\tthis.startJob('stopScrolling', function() {\n\t\t\tthis._scrolling = false;\n\t\t\tthis.doScrollStop();\n\t\t}, 100);\n\t},\n\n\t/**\n\t* @public\n\t*/\n\tisScrolling: function() {\n\t\treturn this._scrolling;\n\t}\n});","require('../../../enyo');\n\n\n\nvar\n\tkind = require('../kind');\n\nvar\n\tControl = require('../Control'),\n\tDom = require('../dom');\n\n/**\n* {@link enyo.ScrollThumb} is a helper [kind]{@glossary kind} used by \n* {@link enyo.TouchScrollStrategy} and {@link enyo.TranslateScrollStrategy} to\n* display a small visual scroll indicator.\n* \n* `enyo.ScrollThumb` is not typically created in application code.\n*\n* @class enyo.ScrollThumb\n* @protected\n*/\nmodule.exports = kind(\n\t/** @lends enyo.ScrollThumb.prototype */ {\n\t\n\tname: 'enyo.ScrollThumb',\n\t\n\tkind: Control,\n\n\t/**\n\t* The orientation of the scroll indicator bar; 'v' for vertical or 'h' for horizontal.\n\t* \n\t* @type {String}\n\t* @default 'v'\n\t* @public\n\t*/\n\taxis: 'v',\n\n\t/**\n\t* Minimum size of the indicator.\n\t* \n\t* @private\n\t*/\n\tminSize: 4,\n\n\t/**\n\t* Size of the indicator's corners.\n\t* \n\t* @private\n\t*/\n\tcornerSize: 6,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-thumb',\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tvar v = this.axis == 'v';\n\t\t\tthis.dimension = v ? 'height' : 'width';\n\t\t\tthis.offset = v ? 'top' : 'left';\n\t\t\tthis.translation = v ? 'translateY' : 'translateX';\n\t\t\tthis.positionMethod = v ? 'getScrollTop' : 'getScrollLeft';\n\t\t\tthis.sizeDimension = v ? 'clientHeight' : 'clientWidth';\n\t\t\tthis.addClass('enyo-' + this.axis + 'thumb');\n\t\t\tthis.transform = Dom.canTransform();\n\t\t\tif (Dom.canAccelerate()) {\n\t\t\t\tDom.transformValue(this, 'translateZ', 0);\n\t\t\t}\n\t\t};\n\t}),\n\n\t/** \n\t* Syncs the scroll indicator bar to the [scroller]{@link enyo.Scroller} size and position,\n\t* as determined by the passed-in scroll strategy.\n\t*\n\t* @param {enyo.ScrollStrategy} strategy - The scroll strategy to be synced with.\n\t* @public\n\t*/\n\tsync: function (strategy) {\n\t\tthis.scrollBounds = strategy._getScrollBounds();\n\t\tthis.update(strategy);\n\t},\n\n\t/**\n\t* Updates the scroll indicator bar based on the scroll bounds of the strategy, the available\n\t* scroll area, and whether there is overscrolling. If the scroll indicator bar is not\n\t* needed, it will be not be displayed.\n\t* \n\t* @param {enyo.ScrollStrategy} strategy - The scroll strategy to update from.\n\t* @public\n\t*/\n\tupdate: function (strategy) {\n\t\tif (this.showing) {\n\t\t\tvar d = this.dimension, o = this.offset;\n\t\t\tvar bd = this.scrollBounds[this.sizeDimension], sbd = this.scrollBounds[d];\n\t\t\tvar overs = 0, overp = 0, over = 0;\n\t\t\tif (bd >= sbd) {\n\t\t\t\tthis.hide();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (strategy.isOverscrolling()) {\n\t\t\t\tover = strategy.getOverScrollBounds()['over' + o];\n\t\t\t\tovers = Math.abs(over);\n\t\t\t\toverp = Math.max(over, 0);\n\t\t\t}\n\t\t\tvar sbo = strategy[this.positionMethod]() - over;\n\t\t\t// calc size & position\n\t\t\tvar bdc = bd - this.cornerSize;\n\t\t\tvar s = Math.floor((bd * bd / sbd) - overs);\n\t\t\ts = Math.max(this.minSize, s);\n\t\t\tvar p = Math.floor((bdc * sbo / sbd) + overp);\n\t\t\tp = Math.max(0, Math.min(bdc - this.minSize, p));\n\t\t\t// apply thumb styling\n\t\t\tthis.needed = s < bd;\n\t\t\tif (this.needed && this.hasNode()) {\n\t\t\t\tif (this._pos !== p) {\n\t\t\t\t\tthis._pos = p;\n\t\t\t\t\tif(!this.transform) {\n\t\t\t\t\t\t//adjust top/left for browsers that don't support translations\n\t\t\t\t\t\tif(this.axis=='v') {\n\t\t\t\t\t\t\tthis.setBounds({top:p + 'px'});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setBounds({left:p + 'px'});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tDom.transformValue(this, this.translation, p + 'px');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this._size !== s) {\n\t\t\t\t\tthis._size = s;\n\t\t\t\t\tthis.applyStyle(d, s + 'px');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* We implement `setShowing()` and cancel the [delayHide()]{@link enyo.ScrollThumb#delayHide} \n\t* because [showing]{@link enyo.Control#showing} is not changed while we execute\n\t* `delayHide()`.\n\t*\n\t* @param {Boolean} showing - If `true`, displays the {@link enyo.ScrollThumb} if appropriate;\n\t*\totherwise, hides the ScrollThumb.\n\t* @public\n\t*/\n\tsetShowing: function (showing) {\n\t\tif (showing && showing != this.showing) {\n\t\t\tif (this.scrollBounds[this.sizeDimension] >= this.scrollBounds[this.dimension]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (this.hasNode()) {\n\t\t\tthis.cancelDelayHide();\n\t\t}\n\t\tif (showing != this.showing) {\n\t\t\tvar last = this.showing;\n\t\t\tthis.showing = showing;\n\t\t\tthis.showingChanged(last);\n\t\t}\n\t},\n\n\t/**\n\t* Delays automatic hiding of the {@link enyo.ScrollThumb}.\n\t*\n\t* @param {Number} delay - The number of milliseconds to delay hiding of the\n\t*\t{@link enyo.ScrollThumb}.\n\t* @public\n\t*/\n\tdelayHide: function (delay) {\n\t\tif (this.showing) {\n\t\t\tthis.startJob('hide', this.hide, delay || 0);\n\t\t}\n\t},\n\n\t/**\n\t* Cancels any pending [delayHide()]{@link enyo.ScrollThumb#delayHide} jobs.\n\t* \n\t* @public\n\t*/\n\tcancelDelayHide: function () {\n\t\tthis.stopJob('hide');\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tdom = require('../../../enyo/lib/dom'),\n\tControl = require('../../../enyo/lib/Control'),\n\tLayout = require('../../../enyo/lib/Layout');\n\nvar detector = document.createElement('div'),\n\tflexAvailable =\n\t\t(detector.style.flexBasis !== undefined) ||\n\t\t(detector.style.webkitFlexBasis !== undefined) ||\n\t\t(detector.style.mozFlexBasis !== undefined) ||\n\t\t(detector.style.msFlexBasis !== undefined);\n\n/**\n* {@link enyo.FittableLayout} provides the base positioning and boundary logic for\n* the fittable layout strategy. The fittable layout strategy is based on\n* laying out items in either a set of rows or a set of columns, with most of\n* the items having natural size, but one item expanding to fill the remaining\n* space. The item that expands is labeled with the attribute `fit: true`.\n*\n* The subkinds {@link enyo.FittableColumnsLayout} and {@link enyo.FittableRowsLayout}\n* (or _their_ subkinds) are used for layout rather than `enyo.FittableLayout` because\n* they specify properties that the framework expects to be available when laying items\n* out.\n*\n* When available on the platform, you can opt-in to have `enyo.FittableLayout` use CSS\n* flexible box (flexbox) to implement fitting behavior on the platform for better\n* performance; Enyo will fall back to JavaScript-based layout on older platforms.\n* Three subtle differences between the flexbox and JavaScript implementations\n* should be noted:\n\n* - When using flexbox, vertical margins (i.e., `margin-top`, `margin-bottom`) will\n* not collapse; when using JavaScript layout, vertical margins will collapse according\n* to static layout rules.\n*\n* - When using flexbox, non-fitting children of the Fittable must not be sized\n* using percentages of the container (even if set to `position: relative`);\n* this is explicitly not supported by the flexbox 2013 spec.\n*\n* - The flexbox-based Fittable implementation will respect multiple children\n* with `fit: true` (the fitting space will be divided equally between them).\n* This is NOT supported by the JavaScript implementation, and you should not rely\n* upon this behavior if you are deploying to platforms without flexbox support.\n*\n* The flexbox implementation was added to Enyo 2.5.0 as an optional performance\n* optimization; to use the optimization, set `useFlex: true` on the Fittable\n* container.  This will cause flexbox to be used when possible.\n*\n* @class  enyo.FittableLayout\n* @extends enyo.Layout\n* @public\n*/\nvar FittableLayout = module.exports = kind(/** @lends  enyo.FittableLayout.prototype */{\n\tname: 'enyo.FittableLayout',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Layout,\n\n\t/**\n\t* @private\n\t*/\n\tnoDefer: true,\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tconstructor: function () {\n\t\tLayout.prototype._constructor.apply(this, arguments);\n\n\t\t// Add the force-ltr class if we're in RTL mode, but this control is set explicitly to NOT be in RTL mode.\n\t\tthis.container.addRemoveClass('force-left-to-right', (Control.prototype.rtl && !this.container.get('rtl')) );\n\n\t\t// Flexbox optimization is determined by global flexAvailable and per-instance opt-in useFlex flag\n\t\tthis.useFlex = flexAvailable && (this.container.useFlex === true);\n\t\tif (this.useFlex) {\n\t\t\tthis.container.addClass(this.flexLayoutClass);\n\t\t} else {\n\t\t\tthis.container.addClass(this.fitLayoutClass);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcFitIndex: function () {\n\t\tvar aChildren = this.container.children,\n\t\t\toChild,\n\t\t\tn;\n\n\t\tfor (n=0; n<aChildren.length; n++) {\n\t\t\toChild = aChildren[n];\n\t\t\tif (oChild.fit && oChild.showing) {\n\t\t\t\treturn n;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetFitControl: function () {\n\t\tvar aChildren = this.container.children,\n\t\t\toFitChild = aChildren[this.fitIndex];\n\n\t\tif (!(oFitChild && oFitChild.fit && oFitChild.showing)) {\n\t\t\tthis.fitIndex = this.calcFitIndex();\n\t\t\toFitChild = aChildren[this.fitIndex];\n\t\t}\n\t\treturn oFitChild;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshouldReverse: function () {\n\t\treturn this.container.rtl && this.orient === 'h';\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tdestroy: function () {\n\t\tLayout.prototype.destroy.apply(this, arguments);\n\t\t\n\t\tif (this.container) {\n\t\t\tthis.container.removeClass(this.useFlex ? this.flexLayoutClass : this.fitLayoutClass);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetFirstChild: function() {\n\t\tvar aChildren = this.getShowingChildren();\n\n\t\tif (this.shouldReverse()) {\n\t\t\treturn aChildren[aChildren.length - 1];\n\t\t} else {\n\t\t\treturn aChildren[0];\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetLastChild: function() {\n\t\tvar aChildren = this.getShowingChildren();\n\n\t\tif (this.shouldReverse()) {\n\t\t\treturn aChildren[0];\n\t\t} else {\n\t\t\treturn aChildren[aChildren.length - 1];\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetShowingChildren: function() {\n\t\tvar a = [],\n\t\t\tn = 0,\n\t\t\taChildren = this.container.children,\n\t\t\tnLength   = aChildren.length;\n\n\t\tfor (;n<nLength; n++) {\n\t\t\tif (aChildren[n].showing) {\n\t\t\t\ta.push(aChildren[n]);\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_reflow: function(sMeasureName, sClienMeasure, sAttrBefore, sAttrAfter) {\n\t\tthis.container.addRemoveClass('enyo-stretch', !this.container.noStretch);\n\n\t\tvar oFitChild       = this.getFitControl(),\n\t\t\toContainerNode  = this.container.hasNode(),  // Container node\n\t\t\tnTotalSize     = 0,                          // Total container width or height without padding\n\t\t\tnBeforeOffset   = 0,                         // Offset before fit child\n\t\t\tnAfterOffset    = 0,                         // Offset after fit child\n\t\t\toPadding,                                    // Object containing t,b,r,l paddings\n\t\t\toBounds,                                     // Bounds object of fit control\n\t\t\toLastChild,\n\t\t\toFirstChild,\n\t\t\tnFitSize;\n\n\t\tif (!oFitChild || !oContainerNode) { return; }\n\n\t\toPadding   = dom.calcPaddingExtents(oContainerNode);\n\t\toBounds    = oFitChild.getBounds();\n\t\tnTotalSize = oContainerNode[sClienMeasure] - (oPadding[sAttrBefore] + oPadding[sAttrAfter]);\n\n\t\tif (this.shouldReverse()) {\n\t\t\toFirstChild  = this.getFirstChild();\n\t\t\tnAfterOffset = nTotalSize - (oBounds[sAttrBefore] + oBounds[sMeasureName]);\n\n\t\t\tvar nMarginBeforeFirstChild = dom.getComputedBoxValue(oFirstChild.hasNode(), 'margin', sAttrBefore) || 0;\n\n\t\t\tif (oFirstChild == oFitChild) {\n\t\t\t\tnBeforeOffset = nMarginBeforeFirstChild;\n\t\t\t} else {\n\t\t\t\tvar oFirstChildBounds      = oFirstChild.getBounds(),\n\t\t\t\t\tnSpaceBeforeFirstChild = oFirstChildBounds[sAttrBefore];\n\n\t\t\t\tnBeforeOffset = oBounds[sAttrBefore] + nMarginBeforeFirstChild - nSpaceBeforeFirstChild;\n\t\t\t}\n\t\t} else {\n\t\t\toLastChild    = this.getLastChild();\n\t\t\tnBeforeOffset = oBounds[sAttrBefore] - (oPadding[sAttrBefore] || 0);\n\n\t\t\tvar nMarginAfterLastChild = dom.getComputedBoxValue(oLastChild.hasNode(), 'margin', sAttrAfter) || 0;\n\n\t\t\tif (oLastChild == oFitChild) {\n\t\t\t\tnAfterOffset = nMarginAfterLastChild;\n\t\t\t} else {\n\t\t\t\tvar oLastChildBounds = oLastChild.getBounds(),\n\t\t\t\t\tnFitChildEnd     = oBounds[sAttrBefore] + oBounds[sMeasureName],\n\t\t\t\t\tnLastChildEnd    = oLastChildBounds[sAttrBefore] + oLastChildBounds[sMeasureName] +  nMarginAfterLastChild;\n\n\t\t\t\tnAfterOffset = nLastChildEnd - nFitChildEnd;\n\t\t\t}\n\t\t}\n\n\t\tnFitSize = nTotalSize - (nBeforeOffset + nAfterOffset);\n\t\toFitChild.applyStyle(sMeasureName, nFitSize + 'px');\n\t},\n\n\t/**\n\t* Assigns any static layout properties not dependent on changes to the\n\t* rendered component or container sizes, etc.\n\t* \n\t* @public\n\t*/\n\tflow: function() {\n\t\tif (this.useFlex) {\n\t\t\tvar i,\n\t\t\t\tchildren = this.container.children,\n\t\t\t\tchild;\n\t\t\tthis.container.addClass(this.flexLayoutClass);\n\t\t\tthis.container.addRemoveClass('nostretch', this.container.noStretch);\n\t\t\tfor (i=0; i<children.length; i++) {\n\t\t\t\tchild = children[i];\n\t\t\t\tchild.addClass('enyo-flex-item');\n\t\t\t\tchild.addRemoveClass('flex', child.fit);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Updates the layout to reflect any changes made to the layout container or\n\t* the contained components.\n\t*\n\t* @public\n\t*/\n\treflow: function() {\n\t\tif (!this.useFlex) {\n\t\t\tif (this.orient == 'h') {\n\t\t\t\tthis._reflow('width', 'clientWidth', 'left', 'right');\n\t\t\t} else {\n\t\t\t\tthis._reflow('height', 'clientHeight', 'top', 'bottom');\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t* @lends  enyo.FittableLayout.prototype\n\t*/\n\tstatics: {\n\t\t/**\n\t\t* Indicates whether flexbox optimization can be used.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  false\n\t\t* @private\n\t\t*/\n\t\tflexAvailable: flexAvailable\n\t}\n});\n\n/**\n* {@link enyo.FittableColumnsLayout} provides a container in which items are laid\n* out in a set of vertical columns, with most of the items having natural\n* size, but one expanding to fill the remaining space. The one that expands is\n* labeled with the attribute `fit: true`.\n*\n* `enyo.FittableColumnsLayout` is meant to be used as a value for the\n* `layoutKind` property of other kinds. `layoutKind` provides a way to add\n* layout behavior in a pluggable fashion while retaining the ability to use a\n* specific base kind.\n*\n* For more information, see the documentation on\n* [Fittables]{@linkplain $dev-guide/building-apps/layout/fittables.html} in the\n* Enyo Developer Guide.\n*\n* @class  enyo.FittableColumnsLayout\n* @extends enyo.FittableLayout\n* @public\n*/\nFittableLayout.Columns = kind(/** @lends  enyo.FittableColumnsLayout.prototype */{\n\tname        : 'enyo.FittableColumnsLayout',\n\tkind        : FittableLayout,\n\torient      : 'h',\n\tfitLayoutClass : 'enyo-fittable-columns-layout',\n\tflexLayoutClass: 'enyo-flex-container columns'\n});\n\n\n/**\n* {@link enyo.FittableRowsLayout} provides a container in which items are laid out\n* in a set of horizontal rows, with most of the items having natural size, but\n* one expanding to fill the remaining space. The one that expands is labeled\n* with the attribute `fit: true`.\n*\n* `enyo.FittableRowsLayout` is meant to be used as a value for the\n* `layoutKind` property of other kinds. `layoutKind` provides a way to add\n* layout behavior in a pluggable fashion while retaining the ability to use a\n* specific base kind.\n*\n* For more information, see the documentation on\n* [Fittables]{@linkplain $dev-guide/building-apps/layout/fittables.html} in the\n* Enyo Developer Guide.\n*\n* @class  enyo.FittableRowsLayout\n* @extends enyo.FittableLayout\n* @public\n*/\nFittableLayout.Rows = kind(\n\t/** @lends enyo.FittableRowsLayout.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname        : 'enyo.FittableRowsLayout',\n\n\t/**\n\t* @private\n\t*/\n\tkind        : FittableLayout,\n\n\t/**\n\t* Layout CSS class used to fit rows.\n\t*\n\t* @type {String}\n\t* @default 'enyo-fittable-rows-layout'\n\t* @public\n\t*/\n\tfitLayoutClass : 'enyo-fittable-rows-layout',\n\n\t/**\n\t* The orientation of the layout.\n\t*\n\t* @type {String}\n\t* @default 'v'\n\t* @public\n\t*/\n\torient      : 'v',\n\n\t/**\n\t* @private\n\t*/\n\tflexLayoutClass: 'enyo-flex-container rows'\n});","var\n\tkind = require('../../enyo/lib/kind'),\n\tdom = require('../../enyo/lib/dom'),\n\tutils = require('../../enyo/lib/utils'),\n\tControl = require('../../enyo/lib/Control'),\n\tHTMLStringDelegate = require('../../enyo/lib/HTMLStringDelegate'),\n\tSelection = require('../../enyo/lib/Selection');\n\nvar FlyweightRepeaterDelegate = Object.create(HTMLStringDelegate);\n\nFlyweightRepeaterDelegate.generateInnerHtml = function (control) {\n\tvar h = '';\n\tcontrol.index = null;\n\t// note: can supply a rowOffset\n\t// and indicate if rows should be rendered top down or bottomUp\n\tfor (var i=0, r=0; i<control.count; i++) {\n\t\tr = control.rowOffset + (this.bottomUp ? control.count - i-1 : i);\n\t\tcontrol.setupItem(r);\n\t\tcontrol.$.client.setAttribute('data-enyo-index', r);\n\t\tif (control.orient == 'h') {\n\t\t\tcontrol.$.client.setStyle('display:inline-block;');\n\t\t}\n\t\th += HTMLStringDelegate.generateChildHtml(control);\n\t\tcontrol.$.client.teardownRender();\n\t}\n\treturn h;\n};\n\n/**\n* Fires once per row at render time.\n*\n* @event enyo.FlyweightRepeater#onSetupItem\n* @type {Object}\n* @property {Number} index     - The index of the row being rendered.\n* @property {Boolean} selected - `true` if the row is selected; otherwise, `false`.\n* @public\n*/\n\n/**\n* Fires after an individual row has been rendered.\n*\n* @event enyo.FlyweightRepeater#onRenderRow\n* @type {Object}\n* @property {Number} rowIndex - The index of the row that was rendered.\n* @public\n*/\n\n/**\n* {@link enyo.FlyweightRepeater} is a control that displays a repeating list of\n* rows, suitable for displaying medium-sized lists (up to ~100 items). A\n* flyweight strategy is employed to render one set of row controls, as needed,\n* for as many rows as are contained in the repeater.\n*\n* The FlyweightRepeater's `components` block contains the controls to be used\n* for a single row. This set of controls will be rendered for each row. You\n* may customize row rendering by handling the\n* [onSetupItem]{@link enyo.FlyweightRepeater#onSetupItem} event.\n*\n* The controls inside a FlyweightRepeater are non-interactive. This means that\n* calling methods that would normally cause rendering to occur (e.g.,\n* `set('content', <value>)`) will not do so. However, you may force a row to\n* render by calling [renderRow()]{@link enyo.FlyweightRepeater#renderRow}.\n*\n* In addition, you may force a row to be temporarily interactive by calling\n* [prepareRow()]{@link enyo.FlyweightRepeater#prepareRow}. Call\n* [lockRow()]{@link enyo.FlyweightRepeater#lockRow} when the interaction\n* is complete.\n*\n* For more information, see the documentation on\n* [Lists]{@linkplain $dev-guide/building-apps/layout/lists.html} in the\n* Enyo Developer Guide.\n*\n* @ui\n* @class enyo.FlyweightRepeater\n* @extends enyo.Control\n* @public\n*/\nvar FlyweightRepeater = module.exports = kind(\n\t/** @lends enyo.FlyweightRepeater.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.FlyweightRepeater',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @lends enyo.FlyweightRepeater.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t * The number of rows to render.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @public\n\t\t */\n\t\tcount: 0,\n\n\t\t/**\n\t\t* If `true`, the selection mechanism is disabled. Tap events are still\n\t\t* sent, but items won't be automatically re-rendered when tapped.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tnoSelect: false,\n\n\t\t/**\n\t\t * If `true`, multiple selection is allowed.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tmultiSelect: false,\n\n\t\t/**\n\t\t * If `true`, the selected item will toggle.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\ttoggleSelected: false,\n\n\t\t/**\n\t\t* Used to specify CSS classes for the repeater's wrapper component (client).\n\t\t* Input is identical to that of {@link enyo.Control#setClasses}.\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\tclientClasses: '',\n\n\t\t/**\n\t\t* Used to specify custom styling for the repeater's wrapper component\n\t\t* (client). Input is identical to that of {@link enyo.Control#setStyle}.\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\tclientStyle: '',\n\n\t\t/**\n\t\t* Numerical offset applied to row number during row generation. Allows items\n\t\t* to have natural indices instead of `0`-based ones. This value must be\n\t\t* positive, as row number `-1` is used to represent undefined rows in the\n\t\t* event system.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 0\n\t\t* @public\n\t\t*/\n\t\trowOffset: 0,\n\n\t\t/**\n\t\t* Direction in which items will be laid out. Valid values are `'v'` for\n\t\t* vertical or `'h'` for horizontal.\n\t\t*\n\t\t* @type {String}\n\t\t* @default 'h'\n\t\t* @public\n\t\t*/\n\t\torient: 'v'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonSetupItem: '',\n\t\tonRenderRow: ''\n\t},\n\n\t/**\n\t* Setting cachePoint: true ensures that events from the repeater's subtree will\n\t* always bubble up through the repeater, allowing the events to be decorated with repeater-\n\t* related metadata and references.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @private\n\t*/\n\tcachePoint: true,\n\n\t/**\n\t* Design-time attribute indicating whether row indices run\n\t* from `0` to [`count`]{@link enyo.FlyweightRepeater#count}`-1` `(false)` or\n\t* from [`count`]{@link enyo.FlyweightRepeater#count}`-1` to `0` `(true)`.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tbottomUp: false,\n\n\t/**\n\t* @private\n\t*/\n\trenderDelegate: FlyweightRepeaterDelegate,\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{kind: Selection, onSelect: 'selectDeselect', onDeselect: 'selectDeselect'},\n\t\t{name: 'client'}\n\t],\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tthis.noSelectChanged();\n\t\tthis.multiSelectChanged();\n\t\tthis.clientClassesChanged();\n\t\tthis.clientStyleChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tnoSelectChanged: function () {\n\t\tif (this.noSelect) {\n\t\t\tthis.$.selection.clear();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmultiSelectChanged: function () {\n\t\tthis.$.selection.setMulti(this.multiSelect);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclientClassesChanged: function () {\n\t\tthis.$.client.setClasses(this.clientClasses);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclientStyleChanged: function () {\n\t\tthis.$.client.setStyle(this.clientStyle);\n\t},\n\n\t/**\n\t* @fires enyo.FlyweightRepeater#onSetupItem\n\t* @private\n\t*/\n\tsetupItem: function (index) {\n\t\tthis.doSetupItem({index: index, selected: this.isSelected(index)});\n\t},\n\n\t/**\n\t* Renders the list.\n\t*\n\t* @private\n\t*/\n\tgenerateChildHtml: function () {\n\t\treturn this.renderDelegate.generateInnerHtml(this);\n\t},\n\n\t/**\n\t* @todo add link to preview.js\n\t* @private\n\t*/\n\tpreviewDomEvent: function (event) {\n\t\tvar i = this.index = this.rowForEvent(event);\n\t\tevent.rowIndex = event.index = i;\n\t\tevent.flyweight = this;\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdecorateEvent: function (eventName, event, sender) {\n\t\t// decorate event with index found via dom iff event does not already contain an index.\n\t\tvar i = (event && event.index != null) ? event.index : this.index;\n\t\tif (event && i != null) {\n\t\t\tevent.index = i;\n\t\t\tevent.flyweight = this;\n\t\t}\n\t\tControl.prototype.decorateEvent.apply(this, arguments);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttap: function (sender, event) {\n\t\t// ignore taps if selecting is disabled or if they don't target a row\n\t\tif (this.noSelect || event.index === -1) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.toggleSelected) {\n\t\t\tthis.$.selection.toggle(event.index);\n\t\t} else {\n\t\t\tthis.$.selection.select(event.index);\n\t\t}\n\t},\n\n\t/**\n\t* Handler for selection and deselection.\n\t*\n\t* @private\n\t*/\n\tselectDeselect: function (sender, event) {\n\t\tthis.renderRow(event.key);\n\t},\n\n\t/**\n\t* Returns the repeater's [selection]{@link enyo.Selection} component.\n\t*\n\t* @return {enyo.Selection} The repeater's selection component.\n\t* @public\n\t*/\n\tgetSelection: function () {\n\t\treturn this.$.selection;\n\t},\n\n\t/**\n\t* Gets the selection state for the given row index.\n\t*\n\t* @return {Boolean} `true` if the row is currently selected; otherwise, `false`.\n\t* @public\n\t*/\n\tisSelected: function (index) {\n\t\treturn this.getSelection().isSelected(index);\n\t},\n\n\t/**\n\t* Renders the row with the specified index.\n\t*\n\t* @param {Number} index - The index of the row to render.\n\t* @fires enyo.FlyweightRepeater#onRenderRow\n\t* @public\n\t*/\n\trenderRow: function (index) {\n\t\t// do nothing if index is out-of-range\n\t\tif (index < this.rowOffset || index >= this.count + this.rowOffset) {\n\t\t\treturn;\n\t\t}\n\t\t//this.index = null;\n\t\t// always call the setupItem callback, as we may rely on the post-render state\n\t\tthis.setupItem(index);\n\t\tvar node = this.fetchRowNode(index);\n\t\tif (node) {\n\t\t\t// hack to keep this working...\n\t\t\tvar delegate = HTMLStringDelegate;\n\n\t\t\tdom.setInnerHtml(node, delegate.generateChildHtml(this.$.client));\n\t\t\tthis.$.client.teardownChildren();\n\t\t\tthis.doRenderRow({rowIndex: index});\n\t\t}\n\t},\n\n\t/**\n\t* Fetches the DOM node for the given row index.\n\t*\n\t* @param {Number} index - The index of the row whose DOM node is to be fetched.\n\t* @return {Node} The DOM node for the specified row.\n\t* @public\n\t*/\n\tfetchRowNode: function (index) {\n\t\tif (this.hasNode()) {\n\t\t\treturn this.node.querySelector('[data-enyo-index=\"' + index + '\"]');\n\t\t}\n\t},\n\n\t/**\n\t* Fetches the row number corresponding to the target of a given event.\n\t*\n\t* @param {Object} event - Event object.\n\t* @return {Number} The index of the row corresponding to the event's target.\n\t* @public\n\t*/\n\trowForEvent: function (event) {\n\t\tif (!this.hasNode()) {\n\t\t\treturn -1;\n\t\t}\n\t\tvar n = event.target;\n\t\twhile (n && n !== this.node) {\n\t\t\tvar i = n.getAttribute && n.getAttribute('data-enyo-index');\n\t\t\tif (i !== null) {\n\t\t\t\treturn Number(i);\n\t\t\t}\n\t\t\tn = n.parentNode;\n\t\t}\n\t\treturn -1;\n\t},\n\n\t/**\n\t* Prepares the specified row such that changes made to the controls inside\n\t* the repeater will be rendered for the row.\n\t*\n\t* @param {Number} index - The index of the row to be prepared.\n\t* @public\n\t*/\n\tprepareRow: function (index) {\n\t\t// do nothing if index is out-of-range\n\t\tif (index < this.rowOffset || index >= this.count + this.rowOffset) {\n\t\t\treturn;\n\t\t}\n\t\t// update row internals to match model\n\t\tthis.setupItem(index);\n\t\tvar n = this.fetchRowNode(index);\n\t\tFlyweightRepeater.claimNode(this.$.client, n);\n\t},\n\n\t/**\n\t* Prevents rendering of changes made to controls inside the repeater.\n\t*\n\t* @public\n\t*/\n\tlockRow: function () {\n\t\tthis.$.client.teardownChildren();\n\t},\n\n\t/**\n\t* Prepares the specified row such that changes made to the controls in the\n\t* repeater will be rendered in the row; then performs the function `func`\n\t* and, finally, locks the row.\n\t*\n\t* @param {Number} index   - The index of the row to be acted upon.\n\t* @param {Function} func  - The function to perform.\n\t* @param {Object} context - The context to which `func` is bound.\n\t* @private\n\t*/\n\tperformOnRow: function (index, func, context) {\n\t\t// do nothing if index is out-of-range\n\t\tif (index < this.rowOffset || index >= this.count + this.rowOffset) {\n\t\t\treturn;\n\t\t}\n\t\tif (func) {\n\t\t\tthis.prepareRow(index);\n\t\t\tutils.call(context || null, func);\n\t\t\tthis.lockRow();\n\t\t}\n\t},\n\n\t/**\n\t* @lends enyo.FlyweightRepeater\n\t* @private\n\t*/\n\tstatics: {\n\t\t/**\n\t\t* Associates a flyweight rendered control (`control`) with a\n\t\t* rendering context specified by `node`.\n\t\t*\n\t\t* @param {enyo.Control} control - A flyweight-rendered control.\n\t\t* @param {Node} node - The DOM node to be associated with `control`.\n\t\t* @public\n\t\t*/\n\t\tclaimNode: function (control, node) {\n\t\t\tvar n;\n\t\t\tif (node) {\n\t\t\t\tif (node.id !== control.id) {\n\t\t\t\t\tn = node.querySelector('#' + control.id);\n\t\t\t\t} else {\n\t\t\t\t\t// node is already the right node, so just use it\n\t\t\t\t\tn = node;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// FIXME: consider controls generated if we found a node or tag: null, the later so can teardown render\n\t\t\tcontrol.generated = Boolean(n || !control.tag);\n\t\t\tcontrol.node = n;\n\t\t\tif (control.node) {\n\t\t\t\tcontrol.rendered();\n\t\t\t} else {\n\t\t\t\t//enyo.log('Failed to find node for',  control.id, control.generated);\n\t\t\t}\n\t\t\t// update control's class cache based on the node contents\n\t\t\tfor (var i=0, c$=control.children, c; (c=c$[i]); i++) {\n\t\t\t\tthis.claimNode(c, node);\n\t\t\t}\n\t\t}\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\n/**\n* {@link onyx.Grabber} is a control styled to indicate that an object may be grabbed\n* and moved. It should only be used in this limited context--to indicate that\n* dragging an object will result in movement.\n*\n* ```\n* \t{kind: 'onyx.Toolbar', components: [\n* \t\t{kind: 'onyx.Grabber', ondragstart: 'grabberDragstart',\n* \t\t\tondrag: 'grabberDrag', ondragfinish: 'grabberDragFinish'},\n* \t\t{kind: 'onyx.Button', content: 'More stuff'}\n* \t]}\n* ```\n*\n* When using a Grabber inside a [Fittable]{@link enyo.FittableLayout} control,\n* be sure to set `'noStretch: true'` on the Fittable, or else give it an explicit\n* height. Otherwise, the Grabber may not be visible.\n*\n* @class  onyx.Grabber\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Grabber.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Grabber',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-grabber'\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tpath = require('../../../enyo/lib/path'),\n\tControl = require('../../../enyo/lib/Control');\n\n/**\n* {@link onyx.Icon} is a control that displays an icon. To set the icon image,\n* specify a URL for the image's location in the Icon's [src]{@link onyx.Icon#src}\n* property.\n*\n* In Onyx, icons have a size of 32x32 pixels. Since the icon image is applied\n* as a CSS background, the height and width of the icon must be set if an image\n* of a different size is used.\n*\n* ```\n* {kind: 'onyx.Icon', src: 'images/search.png'}\n* ```\n*\n* When an icon should act like a button, use an {@link onyx.IconButton}.\n*\n* @class  onyx.Icon\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends onyx.Icon.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Icon',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-icon',\n\n\t/**\n\t* @lends  onyx.Icon.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* URL specifying path to icon image.\n\t\t* @type {String}\n\t\t* @default  ''\n\t\t* @public\n\t\t*/\n\t\tsrc: '',\n\n\t\t/**\n\t\t* If `true`, icon is shown as disabled.\n\t\t* @type {Boolean}\n\t\t* @default  false\n\t\t* @public\n\t\t*/\n\t\tdisabled: false\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tif (this.src) {\n\t\t\tthis.srcChanged();\n\t\t}\n\t\tthis.disabledChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdisabledChanged: function () {\n\t\tthis.addRemoveClass('disabled', this.disabled);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsrcChanged: function () {\n\t\tthis.applyStyle('background-image', 'url(' + path.rewrite(this.src) + ')');\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tAnimator = require('../../../enyo/lib/Animator'),\n\tControl = require('../../../enyo/lib/Control');\n\n/**\n* Fires when progress bar finishes animating to a position.\n*\n* @event onyx.ProgressBar#onAnimateProgressFinish\n* @type {enyo.Animator}\n* @todo Not sure why the animator is passed as the payload to the event ...\n* @public\n*/\n\n/**\n* {@link onyx.ProgressBar} is a control that shows the current progress of a\n* process in a horizontal bar.\n*\n* ```\n* {kind: 'onyx.ProgressBar', progress: 10}\n* ```\n*\n* To animate a progress change, call the\n* [animateProgressTo()]{@link onyx.ProgressBar#animateProgressTo} method:\n*\n* ```\n* this.$.progressBar.animateProgressTo(50);\n* ```\n*\n* You may customize the color of the bar by applying a style via the\n* [barClasses]{@link onyx.ProgressBar#barClasses} property, e.g.:\n*\n* ```\n* {kind: 'onyx.ProgressBar', barClasses: 'onyx-dark'}\n* ```\n*\n* @class  onyx.ProgressBar\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.ProgressBar.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.ProgressBar',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-progress-bar',\n\n\t/**\n\t* @lends  onyx.ProgressBar.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Current position of progress bar.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tprogress: 0,\n\n\t\t/**\n\t\t* Minimum progress value (i.e., no progress made).\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tmin: 0,\n\n\t\t/**\n\t\t* Maximum progress value (i.e., process complete).\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  100\n\t\t* @public\n\t\t*/\n\t\tmax: 100,\n\n\t\t/**\n\t\t* CSS classes to apply to progress bar.\n\t\t*\n\t\t* @type {String}\n\t\t* @default  ''\n\t\t* @public\n\t\t*/\n\t\tbarClasses: '',\n\n\t\t/**\n\t\t* When `true`, stripes are shown in progress bar.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tshowStripes: true,\n\n\t\t/**\n\t\t* If `true` (and [showStripes]{@link onyx.ProgressBar#showStripes} is `true`),\n\t\t* stripes shown in progress bar are animated.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tanimateStripes: true,\n\n\t\t/**\n\t\t* Sliders may be \"snapped to\" multiples of this value in either direction.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t* @todo  This doesn't appear to be supported. Only referenced by a method which\n\t\t* \titself isn't called by anthing\n\t\t*/\n\t\tincrement: 0\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonAnimateProgressFinish: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{name: 'progressAnimator', kind: Animator, onStep: 'progressAnimatorStep', onEnd: 'progressAnimatorComplete'},\n\t\t{name: 'bar', classes: 'onyx-progress-bar-bar'}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tthis.progressChanged();\n\t\tthis.barClassesChanged();\n\t\tthis.showStripesChanged();\n\t\tthis.animateStripesChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tbarClassesChanged: function (old) {\n\t\tthis.$.bar.removeClass(old);\n\t\tthis.$.bar.addClass(this.barClasses);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowStripesChanged: function () {\n\t\tthis.$.bar.addRemoveClass('striped', this.showStripes);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tanimateStripesChanged: function () {\n\t\tthis.$.bar.addRemoveClass('animated', this.animateStripes);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tprogressChanged: function () {\n\t\tthis.progress = this.clampValue(this.min, this.max, this.progress);\n\t\tvar p = this.calcPercent(this.progress);\n\t\tthis.updateBarPosition(p);\n\t},\n\n\t/**\n\t* Clamps a specified value to the nearest [increment]{@link onyx.ProgressBar#increment}\n\t* value.\n\t*\n\t* @param  {Number} value - The value to clamp.\n\t* @return {Number}         - The clamped value.\n\t* @private\n\t*/\n\tcalcIncrement: function (value) {\n\t\treturn (Math.round(value / this.increment) * this.increment);\n\t},\n\n\t/**\n\t* Ensures that passed-in value is between the specified minimum and maximum.\n\t*\n\t* @param  {Number} min   - Minimum value.\n\t* @param  {Number} max   - Maximum value.\n\t* @param  {Number} value - The value to clamp.\n\t* @return {Number}         - The clamped value.\n\t* @private\n\t*/\n\tclampValue: function (min, max, value) {\n\t\treturn Math.max(min, Math.min(value, max));\n\t},\n\n\t/**\n\t* Calculates the completion ratio.\n\t*\n\t* @param  {Number} value - Value between `min` and `max`.\n\t* @return {Number}         - Completion ratio (between `0` and `1`).\n\t* @private\n\t*/\n\tcalcRatio: function (value) {\n\t\treturn (value - this.min) / (this.max - this.min);\n\t},\n\n\t/**\n\t* Calculates the completion percentage.\n\t*\n\t* @param  {Number} value - Value between `min` and `max`.\n\t* @return {Number}         - Completion percentage (between `0` and `100`).\n\t* @private\n\t*/\n\tcalcPercent: function (value) {\n\t\treturn this.calcRatio(value) * 100;\n\t},\n\n\t/**\n\t* Positions the progress bar at specified completion percentage.\n\t*\n\t* @param  {Number} percent - Completion percentage corresponding to desired position.\n\t* @private\n\t*/\n\tupdateBarPosition: function (percent) {\n\t\tthis.$.bar.applyStyle('width', percent + '%');\n\t},\n\n\t/**\n\t* Animates progress to the given value.\n\t*\n\t* @param  {Number} value - The desired value. Will be clamped between\n\t* \t[min]{@link onyx.ProgressBar#min} and [max]{@link onyx.ProgressBar#max}.\n\t* @public\n\t*/\n\tanimateProgressTo: function (value) {\n\t\tthis.$.progressAnimator.play({\n\t\t\tstartValue: this.progress,\n\t\t\tendValue: value,\n\t\t\tnode: this.hasNode()\n\t\t});\n\t},\n\n\t/**\n\t* Handles [onStep]{@link enyo.Animator#onStep} animation events.\n\t*\n\t* @private\n\t*/\n\tprogressAnimatorStep: function (sender) {\n\t\tthis.setProgress(sender.value);\n\t\treturn true;\n\t},\n\n\t/**\n\t* Handles [onEnd]{@link enyo.Animator#onEnd} animation events.\n\t*\n\t* @fires onyx.ProgressBar#onAnimateProgressFinish\n\t* @private\n\t*/\n\tprogressAnimatorComplete: function (sender) {\n\t\tthis.doAnimateProgressFinish(sender);\n\t\treturn true;\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\n/**\n* {@link onyx.Spinner} is a control that displays a spinning animation to indicate\n* that activity is taking place. By default, a light spinner, suitable for\n* displaying against a dark background, is shown. To get a dark spinner\n* (suitable for use on a lighter background), apply the `'onyx-light'` CSS class:\n*\n* ```\n* {kind: 'onyx.Spinner', classes: 'onyx-light'}\n* ```\n*\n* Typically, a spinner is shown to indicate activity and hidden to indicate\n* that the activity has ended. The spinning animation will automatically start\n* when the spinner is shown. If you wish, you may control the animation directly\n* by calling the [start()]{@link onyx.Spinner#start}, [stop()]{@link onyx.Spinner#stop},\n* and [toggle()]{@link onyx.Spinner#toggle} methods.\n*\n* @class  onyx.Spinner\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Spinner.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Spinner',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-spinner',\n\n\t/**\n\t* Stops the spinner animation.\n\t*\n\t* @public\n\t*/\n\tstop: function () {\n\t\tthis.setShowing(false);\n\t},\n\n\t/**\n\t* Starts the spinner animation.\n\t*\n\t* @public\n\t*/\n\tstart: function () {\n\t\tthis.setShowing(true);\n\t},\n\n\t/**\n\t* Toggles the spinner animation on or off.\n\t*\n\t* @public\n\t*/\n\ttoggle: function () {\n\t\tthis.setShowing(!this.getShowing());\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\n/**\n* Fires when the user changes the value of the toggle button, but not\n* when the value is changed programmatically.\n*\n* @event onyx.ToggleButton#onChange\n* @type {Object}\n* @property {Boolean} value - Current value of the button.\n* @public\n*/\n\n/**\n* {@link onyx.ToggleButton} is a control that looks like a switch with labels for\n* two states. Each time a\tToggleButton is tapped, it switches its value and fires\n* an [onChange]{@link onyx.ToggleButton#onChange} event.\n*\n* @ui\n* @class onyx.ToggleButton\n* @extends enyo.Control\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.ToggleButton.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.ToggleButton',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-toggle-button',\n\n\t/**\n\t* @lends onyx.ToggleButton.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Used when the ToggleButton is part of an {@link enyo.Group}. A value\n\t\t* of `true` indicates that this is the active button of the group.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tactive: false,\n\n\t\t/**\n\t\t* Indicates whether toggle button is currently in the `'on'` state.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tvalue: false,\n\n\t\t/**\n\t\t* Label for the `'on'` state.\n\t\t*\n\t\t* @type {String}\n\t\t* @default 'On'\n\t\t* @public\n\t\t*/\n\t\tonContent: 'On',\n\n\t\t/**\n\t\t* Label for the `'off'` state.\n\t\t*\n\t\t* @type {String}\n\t\t* @default 'Off'\n\t\t* @public\n\t\t*/\n\t\toffContent: 'Off',\n\n\t\t/**\n\t\t* If `true`, toggle button cannot be tapped and thus will not generate any\n\t\t* events.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tdisabled: false\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonChange: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tondragstart: 'dragstart',\n\t\tondrag: 'drag',\n\t\tondragfinish: 'dragfinish'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{name: 'contentOn', classes: 'onyx-toggle-content on'},\n\t\t{name: 'contentOff', classes: 'onyx-toggle-content off'},\n\t\t{classes: 'onyx-toggle-button-knob'}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tthis.value = Boolean(this.value || this.active);\n\t\tthis.onContentChanged();\n\t\tthis.offContentChanged();\n\t\tthis.disabledChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trendered: function () {\n\t\tControl.prototype.rendered.apply(this, arguments);\n\t\tthis.updateVisualState();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdateVisualState: function () {\n\t\tthis.addRemoveClass('off', !this.value);\n\t\tthis.$.contentOn.setShowing(this.value);\n\t\tthis.$.contentOff.setShowing(!this.value);\n\t\tthis.setActive(this.value);\n\t},\n\n\t/**\n\t* @fires onyx.ToggleButton#onChange\n\t* @private\n\t*/\n\tvalueChanged: function () {\n\t\tthis.updateVisualState();\n\t\tthis.doChange({value: this.value});\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tactiveChanged: function () {\n\t\tthis.setValue(this.active);\n\t\tthis.bubble('onActivate');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tonContentChanged: function () {\n\t\tthis.$.contentOn.setContent(this.onContent || '');\n\t\tthis.$.contentOn.addRemoveClass('empty', !this.onContent);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\toffContentChanged: function () {\n\t\tthis.$.contentOff.setContent(this.offContent || '');\n\t\tthis.$.contentOff.addRemoveClass('empty', !this.onContent);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdisabledChanged: function () {\n\t\tthis.addRemoveClass('disabled', this.disabled);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdateValue: function (value) {\n\t\tif (!this.disabled) {\n\t\t\tthis.setValue(value);\n\t\t}\n\t},\n\n\t/**\n\t* Programmatically simulates a user tap of the toggle button.\n\t*\n\t* @public\n\t*/\n\ttap: function () {\n\t\tthis.updateValue(!this.value);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragstart: function (sender, event) {\n\t\tif (event.horizontal) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.dragging = true;\n\t\t\tthis.dragged = false;\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdrag: function (sender, event) {\n\t\tif (this.dragging) {\n\t\t\tvar d = event.dx;\n\t\t\tif (Math.abs(d) > 10) {\n\t\t\t\tthis.updateValue(d > 0);\n\t\t\t\tthis.dragged = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragfinish: function (sender, event) {\n\t\tthis.dragging = false;\n\t\tif (this.dragged) {\n\t\t\tevent.preventTap();\n\t\t}\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tplatform = require('../../../enyo/lib/platform'),\n\tControl = require('../../../enyo/lib/Control');\n\n/**\n* {@link onyx.Toolbar} is a horizontal bar containing controls used to perform\n* common UI actions.\n*\n* A toolbar customizes the styling of the controls it hosts, including buttons,\n* icons, and inputs.\n*\n*  ```\n*\t{kind: 'onyx.Toolbar', components: [\n*\t\t{kind: 'onyx.Button', content: 'Favorites'},\n*\t\t{kind: 'onyx.InputDecorator', components: [\n*\t\t\t{kind: 'onyx.Input', placeholder: 'Enter a search term...'}\n*\t\t]},\n*\t\t{kind: 'onyx.IconButton', src: 'go.png'}\n*\t]}\n*  ```\n*\n* @ui\n* @class onyx.Toolbar\n* @extends enyo.Control\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Toolbar.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Toolbar',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx onyx-toolbar onyx-toolbar-inline',\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\n\t\t//workaround for android 4.0.3 rendering glitch (ENYO-674)\n\t\tif (this.hasClass('onyx-menu-toolbar') && (platform.android >= 4)) {\n\t\t\tthis.applyStyle('position', 'static');\n\t\t}\n\t}\n});","var\n\tglue = require('./lib/glue'),\n\tilib = require('./ilib/js/ilib-dyn-standard').ilib;\n\nilib.enyo = glue(ilib);\nilib.enyo.version = '2.6.0-pre.5-dev';\n\nmodule.exports = ilib;","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind'),\n\tDrawer = require('../../enyo/lib/Drawer');\n\n/**\n* {@link onyx.Drawer} is now an empty kind derived from {@link enyo.Drawer}.\n* All of its functionality has been moved into the latter kind, found in Enyo\n* Core's `ui` module.\n*\n* For more information, see the documentation on\n* [Drawers]{@linkplain $dev-guide/building-apps/layout/drawers.html} in the\n* Enyo Developer Guide.\n*\n* @class  onyx.Drawer\n* @extends enyo.Drawer\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends onyx.Drawer.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Drawer',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Drawer\n});","require('../../../enyo');\n\n\n\nvar\n\tkind = require('../kind');\nvar\n\tGroupItem = require('../GroupItem');\n\n/**\n* {@link enyo.ToolDecorator} lines up [components]{@link enyo.Component} in a row,\n* centered vertically.\n*\n* @class enyo.ToolDecorator\n* @extends enyo.GroupItem\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.ToolDecorator.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.ToolDecorator',\n\n\t/**\n\t* @private\n\t*/\n\tkind: GroupItem,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-tool-decorator'\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tplatform = require('./platform');\nvar\n\tInput = require('./Input');\n\n/**\n* Fires when checkbox is tapped.\n*\n* @event enyo.Checkbox#onActivate\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* {@link enyo.Checkbox} implements an HTML checkbox [input]{@glossary input}, with\n* support for grouping using {@link enyo.Group}.\n*\n* @class enyo.Checkbox\n* @extends enyo.Input\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Checkbox.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Checkbox',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Input,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-checkbox',\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonActivate: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Checkbox.prototype */ {\n\t\t\n\t\t/**\n\t\t* Value of the checkbox; will be `true` if checked.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tchecked: false,\n\t\t\n\t\t/**\n\t\t* A [Group API]{@link enyo.Group} requirement for determining the selected item.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tactive: false,\n\t\t\n\t\t/**\n\t\t* @private\n\t\t*/\n\t\ttype: 'checkbox'\n\t},\n\t\n\t/**\n\t* Disable classes inherited from {@link enyo.Input}.\n\t* \n\t* @private\n\t*/\n\tkindClasses: \"\",\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonchange: 'change',\n\t\tonclick: 'click'\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tif (this.active) {\n\t\t\t\tthis.activeChanged();\n\t\t\t}\n\t\t\tthis.checkedChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tcheckedChanged: function () {\n\t\tthis.setNodeProperty('checked', this.checked);\n\t\tthis.setAttribute('checked', this.checked ? 'checked' : '');\n\t\tthis.setActive(this.checked);\n\t},\n\n\t/**\n\t* The [active]{@link enyo.Checkbox#active} property and `onActivate`\n\t* {@glossary event} are part of the [GroupItem]{@link enyo.GroupItem}\n\t* interface supported by this [object]{@glossary Object}.\n\t* \n\t* @private\n\t*/\n\tactiveChanged: function () {\n\t\tthis.active = utils.isTrue(this.active);\n\t\tthis.setChecked(this.active);\n\t\tthis.bubble('onActivate');\n\t},\n\n\t/**\n\t* All [input]{@link enyo.Input} type [controls]{@link enyo.Control} support the \n\t* [value]{@link enyo.Input#value} property.\n\t*\n\t* @param {Boolean} val - Whether or not the [checkbox]{@link enyo.Checkbox} should\n\t* be checked. The value will be treated as `true` if it is truthy; otherwise,\n\t* `false`.\n\t* @public\n\t*/\n\tsetValue: function (val) {\n\t\tthis.setChecked(utils.isTrue(val));\n\t},\n\n\t/**\n\t* Retrieves the current [value]{@link enyo.Input#value} of the\n\t* [checkbox]{@link enyo.Checkbox}.\n\t*\n\t* @returns {Boolean} `true` if the [checkbox]{@link enyo.Checkbox} is checked;\n\t* otherwise, `false`.\n\t* @public\n\t*/\n\tgetValue: function () {\n\t\treturn this.getChecked();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function () {\n\n\t/**\n\t* @private\n\t*/\n\t// inherited behavior is to set \"value\" attribute and node-property\n\t// which does not apply to checkbox (uses \"checked\") so\n\t// we squelch the inherited method\n\t},\n\tchange: function () {\n\t\tvar nodeChecked = utils.isTrue(this.getNodeProperty('checked'));\n\t\tthis.setActive(nodeChecked);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclick: function (sender, e) {\n\t\t// Various versions of IE (notably IE8) do not fire 'onchange' for\n\t\t// checkboxes, so we discern change via 'click'.\n\t\t// Note: keyboard interaction (e.g. pressing space when focused) fires\n\t\t// a click event.\n\t\tif (platform.ie <= 8) {\n\t\t\tthis.bubble('onchange', e);\n\t\t}\n\t}\n});","require('../../../enyo');\n\n\n\nvar\n\tkind = require('../kind'),\n\tutils = require('../utils'),\n\tplatform = require('../platform');\nvar\n\tInput = require('../Input');\n\n/**\n* The type of change to apply. Possible values are `'move'` and `'extend'`.\n*\n* @typedef {String} enyo.RichText~ModifyType\n*/\n\n/**\n* The direction in which to apply the change. Possible values include: `'forward'`,\n* `'backward'`, `'left'`, and `'right'`.\n*\n* @typedef {String} enyo.RichText~ModifyDirection\n*/\n\n/**\n* The granularity of the change. Possible values include: `'character'`, `'word'`,\n* `'sentence'`, `'line'`, `'paragraph'`, `'lineboundary'`, `'sentenceboundary'`,\n* `'paragraphboundary'`, and `'documentboundary'`.\n*\n* @typedef {String} enyo.RichText~ModifyAmount\n*/\n\n/**\n* {@link enyo.RichText} is a multi-line text [input]{@link enyo.Input} that supports rich\n* formatting, such as bold, italics, and underlining.\n*\n* The content displayed in a RichText may be accessed at runtime via `get('value')`\n* and `set('value')`.\n*\n* For more information, see the documentation on\n* [Text Fields]{@linkplain $dev-guide/building-apps/controls/text-fields.html}\n* in the Enyo Developer Guide.\n*\n* @class enyo.RichText\n* @extends enyo.Input\n* @ui\n* @public\n*/\nvar RichText = module.exports = kind(\n\t/** @lends enyo.RichText.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.RichText',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Input,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-richtext enyo-selectable',\n\n\t/**\n\t* @private\n\t*/\n\tpublished:\n\t\t/** @lends enyo.RichText.prototype */ {\n\n\t\t/**\n\t\t* This flag is enabled by default in {@link enyo.RichText} to take advantage\n\t\t* of all the rich editing properties. However, this allows for **any** HTML to be\n\t\t* inserted into the RichText, including [&lt;iframe&gt;]{@glossary iframe} and\n\t\t* [&lt;script&gt;]{@glossary script} tags, which can be a security concern in\n\t\t* some situations. If set to `false`, any inserted HTML will be escaped.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tallowHtml: true,\n\n\t\t/**\n\t\t* If `true`, the [RichText]{@link enyo.RichText} will not accept input or generate\n\t\t* [events]{@glossary event}.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tdisabled: false,\n\n\t\t/**\n\t\t* Value of the text field.\n\t\t*\n\t\t* @type {String}\n\t\t* @default ''\n\t\t* @public\n\t\t*/\n\t\tvalue: ''\n\t},\n\n\t/**\n\t* Set to `true` to focus this [control]{@link enyo.Control} when it is rendered.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tdefaultFocus: false,\n\n\t/**\n\t* @private\n\t*/\n\tprotectedStatics: {\n\t\tosInfo: [\n\t\t\t{os: 'android', version: 3},\n\t\t\t{os: 'ios', version: 5}\n\t\t],\n\t\t//* Returns true if the platform has contenteditable attribute.\n\t\thasContentEditable: function() {\n\t\t\tfor (var i=0, t; (t=RichText.osInfo[i]); i++) {\n\t\t\t\tif (platform[t.os] < t.version) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tattributes: {\n\t\tcontenteditable: true\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonfocus: 'focusHandler',\n\t\tonblur: 'blurHandler',\n\t\tonkeyup: 'updateValue',\n\t\toncut: 'updateValueAsync',\n\t\tonpaste: 'updateValueAsync',\n\t\t// prevent oninput handler from being called lower in the inheritance chain\n\t\toninput: null\n\t},\n\n\t/**\n\t* Creates [RichText]{@link enyo.RichText} as a `<div>` if the platform has the\n\t* `contenteditable` attribute; otherwise, creates it as a `<textarea>`.\n\t*\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.setTag(RichText.hasContentEditable()?'div':'textarea');\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.disabledChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tfocusHandler: function () {\n\t\tthis._value = this.get('value');\n\t},\n\t/**\n\t* Simulates [onchange]{@link enyo.Input#onchange} {@glossary event}\n\t* exposed by [inputs]{@link enyo.Input}.\n\t*\n\t* @fires enyo.Input#onchange\n\t* @private\n\t*/\n\tblurHandler: function () {\n\t\tif (this._value !== this.get('value')) {\n\t\t\tthis.bubble('onchange');\n\t\t}\n\t},\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function () {\n\t\tvar val = this.get('value');\n\t\tif (this.hasFocus() && val !== this.node.innerHTML) {\n\t\t\tthis.selectAll();\n\t\t\tthis.insertAtCursor(val);\n\t\t} else if(!this.hasFocus()) {\n\t\t\tthis.set('content', val);\n\t\t}\n\t\tthis.detectTextDirectionality((this.value || this.value === 0) ? this.value : '');\n\t},\n\t/**\n\t* @private\n\t*/\n\tdisabledChanged: function () {\n\t\tif(this.tag === 'div') {\n\t\t\tthis.setAttribute('contenteditable', this.disabled ? null : 'true');\n\t\t} else {\n\t\t\tthis.setAttribute('disabled', this.disabled);\n\t\t}\n\t\tthis.bubble('onDisabledChange');\n\t},\n\t/**\n\t* @private\n\t*/\n\tupdateValue: function () {\n\t\tvar val = this.node.innerHTML;\n\t\tthis.set('value', val);\n\t},\n\t/**\n\t* @private\n\t*/\n\tupdateValueAsync: function () {\n\t\tutils.asyncMethod(this.bindSafely('updateValue'));\n\t},\n\n\t/**\n\t* Determines whether this [control]{@link enyo.Control} has focus.\n\t*\n\t* @returns {Boolean} `true` if the [RichText]{@link enyo.RichText} is focused;\n\t* otherwise, `false`.\n\t* @public\n\t*/\n\thasFocus: function () {\n\t\tif (this.hasNode()) {\n\t\t\treturn document.activeElement === this.node;\n\t\t}\n\t},\n\t/**\n\t* Retrieves the current [selection]{@glossary Selection} from the\n\t* [RichText]{@link enyo.RichText}.\n\t*\n\t* @returns {Selection} The [selection]{@glossary Selection} [object]{@glossary Object}.\n\t* @public\n\t*/\n\tgetSelection: function () {\n\t\tif (this.hasFocus()) {\n\t\t\treturn global.getSelection();\n\t\t}\n\t},\n\n\t/**\n\t* Removes the [selection]{@glossary Selection} [object]{@glossary Object}.\n\t*\n\t* @param {Boolean} start - If `true`, the [selection]{@glossary Selection} is\n\t*\t[collapsed to the start]{@glossary Selection.collapseToStart} of the\n\t*\t[range]{@glossary Range}; otherwise, it is\n\t*\t[collapsed to the end]{@glossary Selection.collapseToEnd} of the range.\n\t* @public\n\t*/\n\tremoveSelection: function (start) {\n\t\tvar s = this.getSelection();\n\t\tif (s) {\n\t\t\ts[start ? 'collapseToStart' : 'collapseToEnd']();\n\t\t}\n\t},\n\n\t/**\n\t* Modifies the [selection]{@glossary Selection} [object]{@glossary Object}. Please\n\t* see the [Selection.modify]{@glossary Selection.modify} API for more information.\n\t*\n\t* @param {enyo.RichText~ModifyType} type - The type of change to apply.\n\t* @param {enyo.RichText~ModifyDirection} dir - The direction in which to apply the change.\n\t* @param {enyo.RichText~ModifyAmount} amount - The granularity of the change.\n\t* @public\n\t*/\n\tmodifySelection: function (type, dir, amount) {\n\t\tvar s = this.getSelection();\n\t\tif (s) {\n\t\t\ts.modify(type || 'move', dir, amount);\n\t\t}\n\t},\n\n\t/**\n\t* Moves the cursor according to the [Editing API]{@glossary Selection.modify}.\n\t*\n\t* @param {enyo.RichText~ModifyDirection} dir - The direction in which to apply the change.\n\t* @param {enyo.RichText~ModifyAmount} amount - The granularity of the change.\n\t* @public\n\t*/\n\tmoveCursor: function (dir, amount) {\n\t\tthis.modifySelection('move', dir, amount);\n\t},\n\n\t/**\n\t* Moves the cursor to end of text field.\n\t*\n\t* @public\n\t*/\n\tmoveCursorToEnd: function () {\n\t\tthis.moveCursor('forward', 'documentboundary');\n\t},\n\n\t/**\n\t* Moves the cursor to start of text field.\n\t*\n\t* @public\n\t*/\n\tmoveCursorToStart: function () {\n\t\tthis.moveCursor('backward', 'documentboundary');\n\t},\n\n\t/**\n\t* Selects all content in text field.\n\t*\n\t* @public\n\t*/\n\tselectAll: function () {\n\t\tif (this.hasFocus()) {\n\t\t\tdocument.execCommand('selectAll');\n\t\t}\n\t},\n\n\t/**\n\t* Inserts HTML at the cursor position. HTML will be escaped unless the\n\t* [allowHtml]{@link enyo.RichText#allowHtml} property is `true`.\n\t*\n\t* @param {String} val - The HTML to insert at the current cursor position.\n\t* @public\n\t*/\n\tinsertAtCursor: function (val) {\n\t\tif (this.hasFocus()) {\n\t\t\tvar v = this.allowHtml ? val : Control.escapeHtml(val).replace(/\\n/g, '<br/>');\n\t\t\tdocument.execCommand('insertHTML', false, v);\n\t\t}\n\t}\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind');\nvar\n\tInput = require('./Input');\n\n/**\n* {@link enyo.TextArea} implements an HTML [&lt;textarea&gt;]{@glossary textarea}\n* element with cross-platform support for change [events]{@glossary event}.\n*\n* For more information, see the documentation on\n* [Text Fields]{@linkplain $dev-guide/building-apps/controls/text-fields.html}\n* in the Enyo Developer Guide.\n*\n* @class enyo.TextArea\n* @extends enyo.Input\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.TextArea.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.TextArea',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Input,\n\n\t/**\n\t* @private\n\t*/\n\ttag: 'textarea',\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-textarea',\n\n\t/**\n\t* [TextArea]{@link enyo.TextArea} does use the [value]{@link enyo.Input#value} attribute;\n\t* it needs to be kicked when rendered.\n\t*\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.valueChanged();\n\t\t};\n\t})\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tInput = require('../../../enyo/lib/Input');\n\n/**\n* {@link onyx.Input} is an Onyx-styled input control, derived from {@link enyo.Input}.\n* Typically, an `onyx.Input` is placed inside an {@link onyx.InputDecorator}, which\n* provides styling, e.g.:\n*\n* ```\n* {kind: 'onyx.InputDecorator', components: [\n* \t{kind: 'onyx.Input', placeholder: 'Enter some text...', onchange: 'inputChange'}\n* ]}\n* ```\n*\n* For more information, see the documentation on\n* [Text Fields]{@linkplain $dev-guide/building-apps/controls/text-fields.html}\n* in the Enyo Developer Guide.\n*\n* @class  onyx.Input\n* @extends enyo.Input\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Input.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Input',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Input,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-input'\n});","require('../../../enyo');\n\n\n\nvar\n\tkind = require('../kind'),\n\tutils = require('../utils'),\n\tdispatcher = require('../dispatcher');\nvar\n\tControl = require('../Control'),\n\tSignals = require('../Signals'),\n\tScrim = require('../Scrim'),\n\tDom = require('../dom');\n\n/**\n* Fires after the [popup]{@link enyo.Popup} is shown.\n*\n* @event enyo.Popup#onShow\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* Fires after the [popup]{@link enyo.Popup} is hidden.\n*\n* @event enyo.Popup#onHide\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing event information.\n* @public\n*/\n\n/**\n* {@link enyo.Popup} is a [control]{@link enyo.Control} used to display certain content\n* on top of other content.\n*\n* Popups are initially hidden on creation; they may be shown by calling the\n* [show()]{@link enyo.Control#show} method and re-hidden by calling\n* [hide()]{@link enyo.Control#hide}. Popups may be centered using the\n* [centered]{@link enyo.Popup#centered} property; if not centered, they should\n* be given a specific position.\n*\n* A popup may be optionally floated above all\n* [application]{@link enyo.Application} content by setting its\n* [floating]{@link enyo.Popup#floating} property to `true`. This has the\n* advantage of guaranteeing that the popup will be displayed on top of other\n* content. This usage is appropriate when the popup does not need to scroll\n* along with other content.\n*\n* To avoid obscuring popup contents, scrims require the dialog to be floating;\n* otherwise, they won't render. A modal popup will get a transparent scrim\n* unless the popup isn't floating. To get a translucent scrim when modal,\n* specify `[scrim]{@link enyo.Popup#scrim}: true` and\n* `[scrimWhenModal]{@link enyo.Popup#scrimWhenModal}: false`.\n*\n* Finally, there is a WebKit bug affecting the behavior of popups that are\n* displayed on top of text input controls.  For more information, including a\n* workaround, see the documentation on\n* [Popups]{@linkplain $dev-guide/building-apps/controls/popups.html}\n* in the Enyo Developer Guide.\n*\n* @class enyo.Popup\n* @extends enyo.Control\n* @ui\n* @public\n*/\nvar Popup = module.exports = kind(\n\t/** @lends enyo.Popup.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Popup',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-popup enyo-no-touch-action',\n\n\t/**\n\t* @private\n\t*/\n\tpublished:\n\t\t/** @lends enyo.Popup.prototype */ {\n\n\t\t/**\n\t\t* Set to `true` to prevent [controls]{@link enyo.Control} outside the\n\t\t* [popup]{@link enyo.Popup} from receiving [events]{@glossary event} while the\n\t\t* popup is showing.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tmodal: false,\n\n\t\t/**\n\t\t* By default, the [popup]{@link enyo.Popup} will hide when the user taps outside it or\n\t\t* presses `ESC`.  Set to `false` to prevent this behavior.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tautoDismiss: true,\n\n\t\t/**\n\t\t* Set to `true` to render the [popup]{@link enyo.Popup} in a\n\t\t* [floating layer]{@link enyo.FloatingLayer} outside of other\n\t\t* [controls]{@link enyo.Control}.  This may be used to guarantee that the\n\t\t* popup will be shown on top of other controls.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tfloating: false,\n\n\t\t/**\n\t\t* Set to `true` to automatically center the [popup]{@link enyo.Popup} in\n\t\t* the middle of the viewport.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tcentered: false,\n\n\t\t/**\n\t\t* Set to `true` to be able to show transition on the style modifications;\n\t\t* otherwise the transition is invisible `(visibility: hidden)`.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tshowTransitions: false,\n\n\t\t/**\n\t\t* Set to `true` to stop `preventDefault()` from being called on captured\n\t\t* [events]{@glossary event}.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tallowDefault: false,\n\n\t\t/**\n\t\t* Boolean that controls whether a scrim will appear when the dialog is\n\t\t* modal. Note that modal scrims are transparent, so you won't see them.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tscrimWhenModal: true,\n\n\t\t/**\n\t\t* Boolean that controls whether or not a scrim will be displayed. Scrims are\n\t\t* only displayed when the dialog is floating.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  false\n\t\t* @public\n\t\t*/\n\t\tscrim: false,\n\n\t\t/**\n\t\t* Optional class name to apply to the scrim. Be aware that the scrim\n\t\t* is a singleton and you will be modifying the scrim instance used for\n\t\t* other popups.\n\t\t*\n\t\t* @type {String}\n\t\t* @default  ''\n\t\t* @public\n\t\t*/\n\t\tscrimClassName: '',\n\n\t\t/**\n\t\t* Lowest z-index that may be applied to a popup\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  120\n\t\t* @public\n\t\t*/\n\t\tdefaultZ: 120\n\t},\n\n\t/**\n\t* @lends  enyo.Popup\n\t* @private\n\t*/\n\tprotectedStatics: {\n\t\t/**\n\t\t* Count of currently showing popups\n\t\t* @type {Number}\n\t\t* @static\n\t\t* @private\n\t\t*/\n\t\tcount: 0,\n\n\t\t/**\n\t\t* Highest possible z-index for a popup\n\t\t* @type {Number}\n\t\t* @static\n\t\t* @private\n\t\t*/\n\t\thighestZ: 120\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowing: false,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonkeydown: 'keydown',\n\t\tondragstart: 'dragstart',\n\t\tonfocus: 'focus',\n\t\tonblur: 'blur',\n\t\tonRequestShow: 'requestShow',\n\t\tonRequestHide: 'requestHide'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcaptureEvents: true,\n\n\t/**\n\t* @private\n\t*/\n\teventsToCapture: {\n\t\tondown: 'capturedDown',\n\t\tontap: 'capturedTap'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonShow: '',\n\t\tonHide: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttools: [\n\t\t{kind: Signals, onKeydown: 'keydown'}\n\t],\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tvar showing = this.showing;\n\t\t\tthis.showing = false;\n\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.canGenerate = !this.floating;\n\n\t\t\t// if the showing flag was true we know the intent was to automatically show the\n\t\t\t// popup on render...but it can't be rendered in the normal flow...but the rendered\n\t\t\t// method won't be called because it wasn't generated...SO...we arbitrarily flag\n\t\t\t// it as generated even though it wasn't to ensure that its rendered method will\n\t\t\t// be called and we then check for this scenario in rendered\n\t\t\tthis.generated = showing;\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trender: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tif (this.floating) {\n\t\t\t\tif (!Control.floatingLayer.hasNode()) {\n\t\t\t\t\tControl.floatingLayer.render();\n\t\t\t\t}\n\t\t\t\tthis.parentNode = Control.floatingLayer.hasNode();\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tteardownRender: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\t// if this is a rendered floating popup, remove the node from the\n\t\t\t// floating layer because it won't be removed otherwise\n\t\t\tvar node = this.hasNode();\n\t\t\tif(this.floating && node) {\n\t\t\t\tthis.node.remove();\n\t\t\t}\n\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.release();\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\treflow: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.updatePosition();\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tcalcViewportSize: function () {\n\t\tif (global.innerWidth) {\n\t\t\treturn {\n\t\t\t\twidth: global.innerWidth,\n\t\t\t\theight: global.innerHeight\n\t\t\t};\n\t\t} else {\n\t\t\tvar e = document.documentElement;\n\t\t\treturn {\n\t\t\t\twidth: e.offsetWidth,\n\t\t\t\theight: e.offsetHeight\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdatePosition: function () {\n\t\tvar d = this.calcViewportSize(),\n\t\t\tb = this.getBounds();\n\n\t\tif (this.targetPosition) {\n\t\t\t// For brevity's sake...\n\t\t\tvar p = this.targetPosition;\n\n\t\t\t// Test and optionally adjust our target bounds (only first is commented, because logic is effectively identical for all scenarios)\n\t\t\tif (typeof p.left == 'number') {\n\t\t\t\t// If popup will be outside global bounds, switch anchor\n\t\t\t\tif (p.left + b.width > d.width) {\n\t\t\t\t\tif (p.left - b.width >= 0) {\n\t\t\t\t\t\t// Switching to right corner will fit in global\n\t\t\t\t\t\tp.right = d.width - p.left;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Neither corner will work; stick at side of global\n\t\t\t\t\t\tp.right = 0;\n\t\t\t\t\t}\n\t\t\t\t\tp.left = null;\n\t\t\t\t} else {\n\t\t\t\t\tp.right = null;\n\t\t\t\t}\n\t\t\t} else if (typeof p.right == 'number') {\n\t\t\t\tif (p.right + b.width > d.width) {\n\t\t\t\t\tif (p.right - b.width >= 0) {\n\t\t\t\t\t\tp.left = d.width - p.right;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp.left = 0;\n\t\t\t\t\t}\n\t\t\t\t\tp.right = null;\n\t\t\t\t} else {\n\t\t\t\t\tp.left = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof p.top == 'number') {\n\t\t\t\tif (p.top + b.height > d.height) {\n\t\t\t\t\tif (p.top - b.height >= 0) {\n\t\t\t\t\t\tp.bottom = d.height - p.top;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp.bottom = 0;\n\t\t\t\t\t}\n\t\t\t\t\tp.top = null;\n\t\t\t\t} else {\n\t\t\t\t\tp.bottom = null;\n\t\t\t\t}\n\t\t\t} else if (typeof p.bottom == 'number') {\n\t\t\t\tif (p.bottom + b.height > d.height) {\n\t\t\t\t\tif (p.bottom - b.height >= 0) {\n\t\t\t\t\t\tp.top = d.height - p.bottom;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp.top = 0;\n\t\t\t\t\t}\n\t\t\t\t\tp.bottom = null;\n\t\t\t\t} else {\n\t\t\t\t\tp.top = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 'initial' values are necessary to override positioning rules in the CSS\n\t\t\tthis.addStyles('left: ' + (p.left !== null ? p.left + 'px' : 'initial') + '; right: ' + (p.right !== null ? p.right + 'px' : 'initial') + '; top: ' + (p.top !== null ? p.top + 'px' : 'initial') + '; bottom: ' + (p.bottom !== null ? p.bottom + 'px' : 'initial') + ';');\n\t\t} else if (this.centered) {\n\t\t\tvar o = this.floating ? d : this.getInstanceOwner().getBounds();\n\t\t\tthis.addStyles( 'top: ' + Math.max( ( ( o.height - b.height ) / 2 ), 0 ) + 'px; left: ' + Math.max( ( ( o.width - b.width ) / 2 ), 0 ) + 'px;' );\n\t\t}\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\t// generated won't be true when this method is called with showing false unless\n\t\t\t// we set it that way so we need to go ahead and do our actual render now that the container (parent)\n\t\t\t// has been rendered and the floating layer can be rendered and we should be able to carry on normally\n\t\t\tif (this.generated && !this.showing && !this.hasNode()) {\n\t\t\t\tthis.generated = false;\n\t\t\t\tthis.showing = true;\n\t\t\t\tthis.showingChanged();\n\t\t\t} else sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @fires enyo.Popup#onShow\n\t* @fires enyo.Popup#onHide\n\t* @private\n\t*/\n\tshowingChanged: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\t// auto render when shown.\n\t\t\tif (this.floating && this.showing && !this.hasNode()) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\t// hide while sizing, and move to top corner for accurate sizing\n\t\t\tif (this.centered || this.targetPosition) {\n\t\t\t\tif (!this.showTransitions) {\n\t\t\t\t\tthis.applyStyle('visibility', 'hidden');\n\t\t\t\t}\n\t\t\t\tthis.addStyles('top: 0px; left: 0px; right: initial; bottom: initial;');\n\t\t\t}\n\t\t\tsup.apply(this, arguments);\n\t\t\tif (this.showing) {\n\t\t\t\tthis.resize();\n\t\t\t\tPopup.count++;\n\t\t\t\tthis.applyZIndex();\n\t\t\t\tif (this.captureEvents) {\n\t\t\t\t\tthis.capture();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(Popup.count > 0) {\n\t\t\t\t\tPopup.count--;\n\t\t\t\t}\n\t\t\t\tif (this.captureEvents) {\n\t\t\t\t\tthis.release();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.showHideScrim(this.showing);\n\t\t\t// show after sizing\n\t\t\tif (this.centered || this.targetPosition && !this.showTransitions) {\n\t\t\t\tthis.applyStyle('visibility', null);\n\t\t\t}\n\t\t\t// events desired due to programmatic show/hide\n\t\t\tif (this.hasNode()) {\n\t\t\t\tthis[this.showing ? 'doShow' : 'doHide']();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tcapture: function () {\n\t\tdispatcher.capture(this, this.eventsToCapture);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trelease: function () {\n\t\tdispatcher.release(this);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcapturedDown: function (sender, e) {\n\t\t//record the down event to verify in tap\n\t\tthis.downEvent = e;\n\n\t\t// prevent focus from shifting outside the popup when modal.\n\t\tif (this.modal && !this.allowDefault) {\n\t\t\te.preventDefault();\n\t\t}\n\t\treturn this.modal;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcapturedTap: function (sender, e) {\n\t\t// dismiss on tap if property is set and click started & ended outside the popup\n\t\tif (this.autoDismiss && (!e.dispatchTarget.isDescendantOf(this)) && this.downEvent &&\n\t\t\t(!this.downEvent.dispatchTarget.isDescendantOf(this))) {\n\t\t\tthis.downEvent = null;\n\t\t\tthis.hide();\n\t\t}\n\t\treturn this.modal;\n\t},\n\n\t/**\n\t* If a drag event occurs outside a [popup]{@link enyo.Popup}, hide.\n\t*\n\t* @private\n\t*/\n\tdragstart: function (sender, e) {\n\t\tvar inScope = (e.dispatchTarget === this || e.dispatchTarget.isDescendantOf(this));\n\t\tif (sender.autoDismiss && !inScope) {\n\t\t\tsender.setShowing(false);\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tkeydown: function (sender, e) {\n\t\tif (this.showing && this.autoDismiss && e.keyCode == 27 /* escape */) {\n\t\t\tthis.hide();\n\t\t}\n\t},\n\n\t/**\n\t* If something inside the [popup]{@link enyo.Popup} blurred, keep track of it.\n\t*\n\t* @private\n\t*/\n\tblur: function (sender, e) {\n\t\tif (e.dispatchTarget.isDescendantOf(this)) {\n\t\t\tthis.lastFocus = e.originator;\n\t\t}\n\t},\n\n\t/**\n\t* When something outside the [popup]{@link enyo.Popup} focuses (e.g., due to tab key), focus\n\t* our last focused [control]{@link enyo.Control}.\n\t*\n\t* @private\n\t*/\n\tfocus: function (sender, e) {\n\t\tvar dt = e.dispatchTarget;\n\t\tif (this.modal && !dt.isDescendantOf(this)) {\n\t\t\tif (dt.hasNode()) {\n\t\t\t\tdt.node.blur();\n\t\t\t}\n\t\t\tvar n = (this.lastFocus && this.lastFocus.hasNode()) || this.hasNode();\n\t\t\tif (n) {\n\t\t\t\tn.focus();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestShow: function () {\n\t\tthis.show();\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestHide: function () {\n\t\tthis.hide();\n\t\treturn true;\n\t},\n\n\t/**\n\t* Opens the [popup]{@link enyo.Popup} at the location of a mouse\n\t* {@glossary event}. The popup's position is automatically constrained so\n\t* that it does not display outside the viewport, and defaults to anchoring\n\t* the top left corner of the popup to the position of the mouse event.\n\t*\n\t* @param {Object} e - The mouse {@glossary event} that initiated this call.\n\t* @param {Object} [offset] - An optional [object]{@glossary Object} that may\n\t* contain `left` and `top` properties to specify an offset relative to the\n\t* location where the [popup]{@link enyo.Popup} would otherwise be positioned.\n\t* @public\n\t*/\n\tshowAtEvent: function (e, offset) {\n\t\t// Calculate our ideal target based on the event position and offset\n\t\tvar p = {\n\t\t\tleft: e.centerX || e.clientX || e.pageX,\n\t\t\ttop: e.centerY || e.clientY || e.pageY\n\t\t};\n\t\tif (offset) {\n\t\t\tp.left += offset.left || 0;\n\t\t\tp.top += offset.top || 0;\n\t\t}\n\n\t\tthis.showAtPosition(p);\n\t},\n\n\t/**\n\t* Opens the [popup]{@link enyo.Popup} at a specific position. The final\n\t* location of the popup will be automatically constrained so that it does\n\t* not display outside the viewport.\n\t*\n\t* @param {Object} pos An [object]{@glossary Object} that may contain `left`,\n\t* `top`, `bottom`, and `right` properties to specify where the\n\t* [popup]{@link enyo.Popup} will be anchored. If both `left` and `right` are\n\t* included, the preference will be to anchor on the left; similarly, if both\n\t* `top` and `bottom` are specified, the preference will be to anchor at the\n\t* top.\n\t* @public\n\t*/\n\tshowAtPosition: function (pos) {\n\t\t// Save our target position for later processing\n\t\tthis.targetPosition = pos;\n\n\t\t// Show the dialog\n\t\tthis.show();\n\t},\n\n\t/**\n\t* Toggles the display of the scrim\n\t*\n\t* @param  {Boolean} show - Show the scrim\n\t* @private\n\t*/\n\tshowHideScrim: function (show) {\n\t\tif (this.floating && (this.scrim || (this.modal && this.scrimWhenModal))) {\n\t\t\tvar scrim = this.getScrim();\n\t\t\tif (show) {\n\t\t\t\t// move scrim to just under the popup to obscure rest of screen\n\t\t\t\tvar i = this.getScrimZIndex();\n\t\t\t\tthis._scrimZ = i;\n\t\t\t\tscrim.showAtZIndex(i);\n\t\t\t} else {\n\t\t\t\tscrim.hideAtZIndex(this._scrimZ);\n\t\t\t}\n\t\t\tutils.call(scrim, 'addRemoveClass', [this.scrimClassName, scrim.showing]);\n\t\t}\n\t},\n\n\t/**\n\t* Calculates the z-index for the scrim so it's directly below the popup\n\t*\n\t* @private\n\t*/\n\tgetScrimZIndex: function () {\n\t\treturn Popup.highestZ >= this._zIndex ? this._zIndex - 1 : Popup.highestZ;\n\t},\n\n\t/**\n\t* Show a transparent scrim for modal popups if {@link enyo.Popup#scrimWhenModal} is `true`\n\t* if {@link enyo.Popup#scrim} is `true`, then show a regular scrim.\n\t*\n\t* @return {enyo.Scrim}\n\t* @private\n\t*/\n\tgetScrim: function () {\n\t\t//\n\t\tif (this.modal && this.scrimWhenModal && !this.scrim) {\n\t\t\treturn Scrim.scrimTransparent.make();\n\t\t}\n\t\treturn Scrim.scrim.make();\n\t},\n\n\t/**\n\t* Adjust the zIndex so that popups will properly stack on each other.\n\t*\n\t* @private\n\t*/\n\tapplyZIndex: function () {\n\t\tthis._zIndex = (Popup.count * 2) + this.findZIndex() + 1;\n\t\tif (this._zIndex <= Popup.highestZ) {\n\t\t\tthis._zIndex = Popup.highestZ + 1;\n\t\t}\n\t\tif (this._zIndex > Popup.highestZ) {\n\t\t\tPopup.highestZ = this._zIndex;\n\t\t}\n\t\t// leave room for scrim\n\t\tthis.applyStyle('z-index', this._zIndex);\n\t},\n\n\t/**\n\t* Find the z-index for this popup, clamped by {@link enyo.Popup#defaultZ}\n\t*\n\t* @return {Number} z-index value\n\t* @private\n\t*/\n\tfindZIndex: function () {\n\t\t// a default z value\n\t\tvar z = this.defaultZ;\n\t\tif (this._zIndex) {\n\t\t\tz = this._zIndex;\n\t\t} else if (this.hasNode()) {\n\t\t\t// Re-use existing zIndex if it has one\n\t\t\tz = Number(Dom.getComputedStyleValue(this.node, 'z-index')) || z;\n\t\t}\n\t\tif (z < this.defaultZ) {\n\t\t\tz = this.defaultZ;\n\t\t}\n\t\tthis._zIndex = z;\n\t\treturn this._zIndex;\n\t}\n});\n\n/**\n* By default, we capture `ondown` and `ontap` to implement the [popup's]{@link enyo.Popup}\n* modal behavior, but in certain circumstances it may be necessary to capture other\n* [events]{@glossary event} as well, so we provide this hook to extend. (We are currently\n* using this in Moonstone to capture `onSpotlightFocus` [events]{@glossary event}).\n*\n* @private\n*/\nPopup.concat = function (ctor, props, instance) {\n\tvar proto = ctor.prototype || ctor,\n\t\tevts = proto.eventsToCapture;\n\tproto.eventsToCapture = evts ? utils.mixin({}, [evts, props.eventsToCapture]) : props.eventsToCapture;\n\tdelete props.eventsToCapture;\n};","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tutils = require('./utils'),\n\tdispatcher = require('./dispatcher'),\n\tplatform = require('./platform');\n\nvar\n\tScrollMath = require('./ScrollMath'),\n\tScrollStrategy = require('./ScrollStrategy'),\n\tScrollThumb = require('./ScrollThumb'),\n\tDom = require('./dom');\n\n/**\n* Fires when dragging has started, allowing drags to propagate to parent\n* [scrollers]{@link enyo.Scroller}.\n*\n* @event enyo.TouchScrollStrategy#onShouldDrag\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently\n*\tpropagated the {@glossary event}.\n* @property {enyo.Scroller~ScrollEvent} event - An [object]{@glossary Object} containing\n*\tevent information.\n* @private\n*/\n\n/**\n* {@link enyo.TouchScrollStrategy} is a helper [kind]{@glossary kind} for implementing a\n* touch-based [scroller]{@link enyo.Scroller}. It integrates the scrolling simulation provided\n* by {@link enyo.ScrollMath} into an `enyo.Scroller`.\n*\n* `enyo.TouchScrollStrategy` is not typically created in application code. Instead, it is\n* specified as the value of the [strategyKind]{@link enyo.Scroller#strategyKind} property\n* of an `enyo.Scroller` or {@link enyo.List}, or is used by the framework implicitly.\n*\n* @class enyo.TouchScrollStrategy\n* @extends enyo.ScrollStrategy\n* @protected\n*/\nmodule.exports = kind(\n\t/** @lends enyo.TouchScrollStrategy.prototype */ {\n\n\tname: 'enyo.TouchScrollStrategy',\n\n\t/**\n\t* @private\n\t*/\n\tkind: ScrollStrategy,\n\n\t/**\n\t\tIf `true` (the default), the scroller will overscroll and bounce back at the edges.\n\t*/\n\toverscroll: true,\n\n\t/**\n\t\tIf `true` (the default), the scroller will not propagate `dragstart`\n\t\tevents that cause it to start scrolling.\n\t*/\n\tpreventDragPropagation: true,\n\n\t/**\n\t* @private\n\t*/\n\tpublished:\n\t\t/** @lends enyo.TouchScrollStrategy.prototype */ {\n\n\t\t/**\n\t\t* Specifies how to vertically scroll.  Acceptable values are `'scroll'`, `'auto'`,\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\n\t\t* scroll strategy.\n\t\t*\n\t\t* @type {String}\n\t\t* @default 'default'\n\t\t* @public\n\t\t*/\n\t\tvertical: 'default',\n\n\t\t/**\n\t\t* Specifies how to horizontally scroll.  Acceptable values are `'scroll'`, `'auto'`,\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\n\t\t* scroll strategy.\n\t\t*\n\t\t* @type {String}\n\t\t* @default 'default'\n\t\t* @public\n\t\t*/\n\t\thorizontal: 'default',\n\n\t\t/**\n\t\t* Set to `true` to display a scroll thumb.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tthumb: true,\n\n\t\t/**\n\t\t* Set to `true` to display a transparent overlay while scrolling. This can help improve\n\t\t* performance of complex, large scroll regions on some platforms (e.g., Android).\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tscrim: false,\n\n\t\t/**\n\t\t* Indicates whether to allow drag [events]{@glossary event} to be sent while gesture\n\t\t* events are happening simultaneously.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tdragDuringGesture: true,\n\n\t\t/**\n\t\t* Facades animation time step from [ScrollMath]{@link enyo.ScrollMath}.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 20\n\t\t* @public\n\t\t*/\n\t\tinterval: 20,\n\n\t\t/**\n\t\t* Facades animation interval type from [ScrollMath]{@link enyo.ScrollMath}.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tfixedTime: true,\n\n\t\t/**\n\t\t* Facades one unit of time for simulation from [ScrollMath]{@link enyo.ScrollMath}.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 10\n\t\t* @public\n\t\t*/\n\t\tframe: 10,\n\n\t\t/**\n\t\t* Indicates whether default [events]{@glossary event} (e.g., native scrolling\n\t\t* events) should be suppressed.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tpreventDefault: true\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonShouldDrag: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonflick: 'flick',\n\t\tonShouldDrag: 'shouldDrag',\n\t\tondrag: 'drag'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttools: [\n\t\t{kind: ScrollMath, onScrollStart: 'scrollMathStart', onScroll: 'scrollMathScroll', onScrollStop: 'scrollMathStop', onStabilize: 'scrollMathStabilize'},\n\t\t{name: 'vthumb', kind: ScrollThumb, axis: 'v', showing: false},\n\t\t{name: 'hthumb', kind: ScrollThumb, axis: 'h', showing: false}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tscrimTools: [{name: 'scrim', classes: 'enyo-fit', style: 'z-index: 1;', showing: false}],\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{name: 'client', classes: 'enyo-touch-scroller'}\n\t],\n\n\t/**\n\t* Flag indicating whether the list is currently reordering.\n\t*\n\t* @readonly\n\t* @public\n\t*/\n\tlistReordering: false,\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.transform = Dom.canTransform();\n\t\t\tif(!this.transform) {\n\t\t\t\tif(this.overscroll) {\n\t\t\t\t\t//so we can adjust top/left if browser can't handle translations\n\t\t\t\t\tthis.$.client.applyStyle('position', 'relative');\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.accel = Dom.canAccelerate();\n\t\t\tvar containerClasses = 'enyo-touch-strategy-container';\n\t\t\t// note: needed for ios to avoid incorrect clipping of thumb\n\t\t\t// and need to avoid on Android as it causes problems hiding the thumb\n\t\t\tif (platform.ios && this.accel) {\n\t\t\t\tcontainerClasses += ' enyo-composite';\n\t\t\t}\n\t\t\tthis.scrimChanged();\n\t\t\tthis.intervalChanged();\n\t\t\tthis.fixedTimeChanged();\n\t\t\tthis.frameChanged();\n\t\t\tthis.container.addClass(containerClasses);\n\t\t\tthis.translation = this.accel ? 'translate3d' : 'translate';\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tinitComponents: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.createChrome(this.tools);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tdestroy: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.container.removeClass('enyo-touch-strategy-container');\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tdispatcher.makeBubble(this.$.client, 'scroll');\n\t\t\tthis.calcBoundaries();\n\t\t\tthis.syncScrollMath();\n\t\t\tif (this.thumb) {\n\t\t\t\tthis.alertThumbs();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tscrimChanged: function () {\n\t\tif (this.scrim && !this.$.scrim) {\n\t\t\tthis.makeScrim();\n\t\t}\n\t\tif (!this.scrim && this.$.scrim) {\n\t\t\tthis.$.scrim.destroy();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmakeScrim: function () {\n\t\t// reset control parent so scrim doesn't go into client.\n\t\tvar cp = this.controlParent;\n\t\tthis.controlParent = null;\n\t\tthis.createChrome(this.scrimTools);\n\t\tthis.controlParent = cp;\n\t\tvar cn = this.container.hasNode();\n\t\t// render scrim in container, strategy has no dom.\n\t\tif (cn) {\n\t\t\tthis.$.scrim.parentNode = cn;\n\t\t\tthis.$.scrim.render();\n\t\t}\n\t},\n\n\t/**\n\t* Determines whether or not the scroller is actively moving.\n\t*\n\t* @return {Boolean} `true` if actively moving; otherwise, `false`.\n\t* @public\n\t*/\n\tisScrolling: function () {\n\t\tvar m = this.$.scrollMath;\n\t\treturn m ? m.isScrolling() : this.scrolling;\n\t},\n\n\t/**\n\t* Determines whether or not the scroller is in overscroll.\n\t*\n\t* @return {Boolean} `true` if in overscroll; otherwise, `false`.\n\t* @public\n\t*/\n\tisOverscrolling: function () {\n\t\tvar m = this.$.scrollMath || this;\n\t\treturn (this.overscroll) ? Boolean(m.isInOverScroll()) : false;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdomScroll: function () {\n\t\tif (!this.isScrolling()) {\n\t\t\tthis.calcBoundaries();\n\t\t\tthis.syncScrollMath();\n\t\t\tif (this.thumb) {\n\t\t\t\tthis.alertThumbs();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thorizontalChanged: function () {\n\t\tthis.$.scrollMath.horizontal = (this.horizontal != 'hidden');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tverticalChanged: function () {\n\t\tthis.$.scrollMath.vertical = (this.vertical != 'hidden');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxHeightChanged: function () {\n\t\tthis.$.client.applyStyle('max-height', this.maxHeight);\n\t\t// note: previously used enyo-fit here but IE would reset scroll position when the scroll thumb\n\t\t// was hidden; in general IE resets scrollTop when there are 2 abs position siblings, one has\n\t\t// scrollTop and the other is hidden.\n\t\tthis.$.client.addRemoveClass('enyo-scrollee-fit', !this.maxHeight);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tthumbChanged: function () {\n\t\tthis.hideThumbs();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tintervalChanged: function () {\n\t\tif (this.$.scrollMath) {\n\t\t\tthis.$.scrollMath.interval = this.interval;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tfixedTimeChanged: function () {\n\t\tif (this.$.scrollMath) {\n\t\t\tthis.$.scrollMath.fixedTime = this.fixedTime;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tframeChanged: function () {\n\t\tif (this.$.scrollMath) {\n\t\t\tthis.$.scrollMath.frame = this.frame;\n\t\t}\n\t},\n\n\t/**\n\t* Stops any active scroll movement.\n\t*\n\t* @todo Doc update made while merging, need official documentation update!\n\t*\n\t* @param {Boolean} emit - Whether or not to fire the `onScrollStop` event.\n\t* @public\n\t*/\n\tstop: function (emit) {\n\t\tif (this.isScrolling()) {\n\t\t\tthis.$.scrollMath.stop(emit);\n\t\t}\n\t},\n\n\t/**\n\t* Adjusts the scroll position to be valid, if necessary (e.g., after the scroll contents\n\t* have changed).\n\t*\n\t* @public\n\t*/\n\tstabilize: function () {\n\t\tif(this.$.scrollMath) {\n\t\t\tthis.$.scrollMath.stabilize();\n\t\t}\n\t},\n\n\t/**\n\t* Scrolls to a specific position within the scroll area.\n\t*\n\t* @param {Number} x - The `x` position in pixels.\n\t* @param {Number} y - The `y` position in pixels.\n\t* @public\n\t*/\n\tscrollTo: function (x, y) {\n\t\tthis.stop(true);\n\t\tthis.$.scrollMath.scrollTo(x, y || y === 0 ? y : null);\n\t},\n\n\t/**\n\t* Scrolls the given [control]{@link enyo.Control} into view.\n\t*\n\t* @param {enyo.Control} ctl - The [control]{@link enyo.Control} to make visible in the\n\t*\t[scroller's]{@link enyo.Scroller} viewport.\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\n\t*\tscroller.\n\t* @method\n\t* @public\n\t*/\n\tscrollIntoView: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.stop(true);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Sets the horizontal scroll position.\n\t*\n\t* @param {Number} left - The horizontal scroll position in pixels.\n\t* @method\n\t* @public\n\t*/\n\tsetScrollLeft: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.stop(true);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Sets the vertical scroll position.\n\t*\n\t* @param {Number} top - The vertical scroll position in pixels.\n\t* @method\n\t* @public\n\t*/\n\tsetScrollTop: kind.inherit(function (sup) {\n\t\treturn function(top) {\n\t\t\tthis.stop(true);\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Retrieves the horizontal scroll position.\n\t*\n\t* @returns {Number} The horizontal scroll position in pixels.\n\t* @method\n\t* @public\n\t*/\n\tgetScrollLeft: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\treturn this.isScrolling() ? this.scrollLeft : sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* Retrieves the vertical scroll position.\n\t*\n\t* @returns {Number} The vertical scroll position in pixels.\n\t* @method\n\t* @private\n\t*/\n\tgetScrollTop: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\treturn this.isScrolling() ? this.scrollTop : sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tcalcScrollNode: function () {\n\t\treturn this.$.client.hasNode();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcAutoScrolling: function () {\n\t\tvar v = (this.vertical == 'auto');\n\t\tvar h = (this.horizontal == 'auto') || (this.horizontal == 'default');\n\t\tif ((v || h) && this.scrollNode) {\n\t\t\tvar b = this.getScrollBounds();\n\t\t\tif (v) {\n\t\t\t\tthis.$.scrollMath.vertical = b.height > b.clientHeight;\n\t\t\t}\n\t\t\tif (h) {\n\t\t\t\tthis.$.scrollMath.horizontal = b.width > b.clientWidth;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshouldDrag: function (sender, e) {\n\t\tthis.calcAutoScrolling();\n\t\tvar requestV = e.vertical;\n\t\tvar canH = this.$.scrollMath.horizontal && !requestV;\n\t\tvar canV = this.$.scrollMath.vertical && requestV;\n\t\tvar down = e.dy < 0, right = e.dx < 0;\n\t\tvar oobV = (!down && this.startEdges.top || down && this.startEdges.bottom);\n\t\tvar oobH = (!right && this.startEdges.left || right && this.startEdges.right);\n\t\t// we would scroll if not at a boundary\n\t\tif (!e.boundaryDragger && (canH || canV)) {\n\t\t\te.boundaryDragger = this;\n\t\t}\n\t\t// include boundary exclusion\n\t\tif ((!oobV && canV) || (!oobH && canH)) {\n\t\t\te.dragger = this;\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tflick: function (sender, e) {\n\t\tvar onAxis = Math.abs(e.xVelocity) > Math.abs(e.yVelocity) ? this.$.scrollMath.horizontal : this.$.scrollMath.vertical;\n\t\tif (onAxis && this.dragging) {\n\t\t\tthis.$.scrollMath.flick(e);\n\t\t\treturn this.preventDragPropagation;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdown: kind.inherit(function (sup) {\n\t\treturn function (sender, e) {\n\t\t\tif (!this.isOverscrolling()) {\n\t\t\t\tsup.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tmove: function (sender, e) {\n\t},\n\n\t// Special synthetic DOM events served up by the Gesture system\n\n\t/**\n\t* @fires enyo.TouchScrollStrategy#onShouldDrag\n\t* @private\n\t*/\n\tdragstart: function (sender, e) {\n\t\t// Ignore drags sent from multi-touch events\n\t\tif(!this.dragDuringGesture && e.srcEvent.touches && e.srcEvent.touches.length > 1) {\n\t\t\treturn true;\n\t\t}\n\t\t// note: allow drags to propagate to parent scrollers via data returned in the shouldDrag event.\n\t\tthis.doShouldDrag(e);\n\t\tthis.dragging = (e.dragger == this || (!e.dragger && e.boundaryDragger == this));\n\t\tif (this.dragging) {\n\t\t\tif(this.preventDefault){\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t\t// note: needed because show/hide changes\n\t\t\t// the position so sync'ing is required when\n\t\t\t// dragging begins (needed because show/hide does not trigger onscroll)\n\t\t\tthis.syncScrollMath();\n\t\t\tthis.$.scrollMath.startDrag(e);\n\t\t\tif (this.preventDragPropagation) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdrag: function (sender, e) {\n\t\t// if the list is doing a reorder, don't scroll\n\t\tif(this.listReordering) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.dragging) {\n\t\t\tif(this.preventDefault){\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t\tthis.$.scrollMath.drag(e);\n\t\t\tif (this.scrim) {\n\t\t\t\tthis.$.scrim.show();\n\t\t\t}\n\t\t}\n\t},\n\tdragfinish: function (sender, e) {\n\t\tif (this.dragging) {\n\t\t\te.preventTap();\n\t\t\tthis.$.scrollMath.dragFinish();\n\t\t\tthis.dragging = false;\n\t\t\tif (this.scrim) {\n\t\t\t\tthis.$.scrim.hide();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmousewheel: function (sender, e) {\n\t\tif (!this.dragging && this.useMouseWheel) {\n\t\t\tthis.calcBoundaries();\n\t\t\tthis.syncScrollMath();\n\t\t\tthis.stabilize();\n\t\t\tif (this.$.scrollMath.mousewheel(e)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tscrollMathStart: function () {\n\t\tif (this.scrollNode && !this.isScrolling()) {\n\t\t\tthis.scrolling = true;\n\t\t\tif (!this.isOverscrolling()) {\n\t\t\t\tthis.calcBoundaries();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tscrollMathScroll: function (sender) {\n\t\tif(!this.overscroll) {\n\t\t\t//don't overscroll past edges\n\t\t\tthis.effectScroll(-Math.min(sender.leftBoundary, Math.max(sender.rightBoundary, sender.x)),\n\t\t\t\t\t-Math.min(sender.topBoundary, Math.max(sender.bottomBoundary, sender.y)));\n\t\t} else {\n\t\t\tthis.effectScroll(-sender.x, -sender.y);\n\t\t}\n\t\tif (this.thumb) {\n\t\t\tthis.showThumbs();\n\t\t\tthis.delayHideThumbs(100);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tscrollMathStop: function () {\n\t\tthis.scrolling = false;\n\t\tthis.effectScrollStop();\n\t\tif (this.thumb) {\n\t\t\tthis.delayHideThumbs(100);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tscrollMathStabilize: function (sender) {\n\t\tthis.effectScroll(-sender.x, -sender.y);\n\t\tif (this.thumb) {\n\t\t\tthis.showThumbs();\n\t\t\tthis.delayHideThumbs(100);\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcBoundaries: function () {\n\t\tvar s = this.$.scrollMath || this, b = this._getScrollBounds();\n\t\ts.bottomBoundary = b.clientHeight - b.height;\n\t\ts.rightBoundary = b.clientWidth - b.width;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsyncScrollMath: function () {\n\t\tvar m = this.$.scrollMath;\n\t\tif(m) {\n\t\t\tm.setScrollX(-this.getScrollLeft());\n\t\t\tm.setScrollY(-this.getScrollTop());\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\teffectScroll: function (x, y) {\n\t\tif (this.scrollNode) {\n\t\t\tthis.scrollLeft = this.scrollNode.scrollLeft = x;\n\t\t\tthis.scrollTop = this.scrollNode.scrollTop = y;\n\t\t\tthis.effectOverscroll(x !== null? Math.round(x): x, y !== null? Math.round(y): y);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\teffectScrollStop: function () {\n\t\tthis.effectOverscroll(null, null);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\teffectOverscroll: function (x, y) {\n\t\tvar n = this.scrollNode;\n\t\tvar xt = '0', yt = '0', zt = this.accel ? ',0' : '';\n\t\tif (y !== null && Math.abs(y - n.scrollTop) > 1) {\n\t\t\tyt = (n.scrollTop - y);\n\t\t}\n\t\tif (x !== null && Math.abs(x - n.scrollLeft) > 1) {\n\t\t\txt = (n.scrollLeft - x);\n\t\t}\n\t\tif(!this.transform) {\n\t\t\t//adjust top/left if browser can't handle translations\n\t\t\tthis.$.client.setBounds({left:xt + 'px', top:yt + 'px'});\n\t\t} else {\n\t\t\tDom.transformValue(this.$.client, this.translation, xt + 'px, ' + yt + 'px' + zt);\n\t\t}\n\t},\n\n\t/**\n\t* Retrieves the overscroll boundaries of the [scroller]{@link enyo.Scroller}.\n\t*\n\t* @returns {enyo.Scroller~OverscrollBoundaryObject} An [object]{@glossary Object}\n\t*\tdescribing the overscroll boundaries.\n\t* @public\n\t*/\n\tgetOverScrollBounds: function () {\n\t\tvar m = this.$.scrollMath || this;\n\t\treturn {\n\t\t\toverleft: Math.min(m.leftBoundary - m.x, 0) || Math.max(m.rightBoundary - m.x, 0),\n\t\t\tovertop: Math.min(m.topBoundary - m.y, 0) || Math.max(m.bottomBoundary - m.y, 0)\n\t\t};\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\t_getScrollBounds: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tvar r = sup.apply(this, arguments);\n\t\t\tutils.mixin(r, this.getOverScrollBounds());\n\t\t\treturn r;\n\t\t};\n\t}),\n\n\t/**\n\t* Retrieves the scroll boundaries of the [scroller]{@link enyo.Scroller}.\n\t*\n\t* @returns {enyo.Scroller~BoundaryObject} An [object]{@glossary Object} describing the\n\t*\tscroll boundaries.\n\t* @method\n\t* @public\n\t*/\n\tgetScrollBounds: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.stop(true);\n\t\t\treturn sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* This method exists primarily to support an internal use case for\n\t* [enyo.DataList]{@link enyo.DataList}. It is intended to be called by the\n\t* [scroller]{@link enyo.Scroller} that owns this strategy.\n\t*\n\t* Triggers a remeasurement of the scroller's metrics (specifically, the\n\t* size of its viewport, the size of its contents and the difference between\n\t* the two, which determines the extent to which the scroller may scroll).\n\t*\n\t* @public\n\t*/\n\tremeasure: function () {\n\t\tthis.calcBoundaries();\n\t\tif (this.thumb) {\n\t\t\tthis.syncThumbs();\n\t\t}\n\t\tthis.stabilize();\n\t},\n\n\t/**\n\t* Displays the scroll indicators and sets the auto-hide timeout.\n\t*\n\t* @public\n\t*/\n\talertThumbs: function () {\n\t\tthis.showThumbs();\n\t\tthis.delayHideThumbs(500);\n\t},\n\n\t/**\n\t* Syncs the vertical and horizontal scroll indicators.\n\t*\n\t* @public\n\t*/\n\tsyncThumbs: function () {\n\t\tthis.$.vthumb.sync(this);\n\t\tthis.$.hthumb.sync(this);\n\t},\n\tupdateThumbs: function () {\n\t\tthis.$.vthumb.update(this);\n\t\tthis.$.hthumb.update(this);\n\t},\n\n\t/**\n\t* Syncs and shows both the vertical and horizontal scroll indicators. We only sync after we\n\t* have checked if the vertical and/or horizontal scroll indicators are to be shown, so that\n\t* {@link enyo.ScrollThumb#update} accurately makes calculations when the indicators are\n\t* visible.\n\t*\n\t* @public\n\t*/\n\tshowThumbs: function () {\n\t\tif (this.horizontal != 'hidden') {\n\t\t\tthis.$.hthumb.show();\n\t\t}\n\t\tif (this.vertical != 'hidden') {\n\t\t\tthis.$.vthumb.show();\n\t\t}\n\t\tthis.syncThumbs();\n\t},\n\n\t/**\n\t* Hides the vertical and horizontal scroll indicators.\n\t*\n\t* @public\n\t*/\n\thideThumbs: function () {\n\t\tthis.$.vthumb.hide();\n\t\tthis.$.hthumb.hide();\n\t},\n\n\t/**\n\t* Hides the vertical and horizontal scroll indicators asynchronously.\n\t*\n\t* @public\n\t*/\n\tdelayHideThumbs: function (delay) {\n\t\tthis.$.vthumb.delayHide(delay);\n\t\tthis.$.hthumb.delayHide(delay);\n\t}\n});","var\n\tkind = require('../../enyo/lib/kind');\n\nvar\n\tFittableLayout = require('./FittableLayout'),\n\tFittableColumnsLayout = FittableLayout.Columns;\n\n/**\n* {@link enyo.FittableColumns} provides a container in which items are laid out in a\n* set of vertical columns, with most items having natural size, but one\n* expanding to fill the remaining space. The one that expands is labeled with\n* the attribute `fit: true`.\n*\n* For more information, see the documentation on\n* [Fittables]{@linkplain $dev-guide/building-apps/layout/fittables.html} in the\n* Enyo Developer Guide.\n*\n* @ui\n* @class  enyo.FittableColumns\n* @extends enyo.Control\n* @public\n*/\nmodule.exports = kind(/** @lends  enyo.FittableColumns.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.FittableColumns',\n\n\t/**\n\t* A {@glossary kind} used to manage the size and placement of child\n\t* [components]{@link enyo.Component}.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @private\n\t*/\n\tlayoutKind: FittableColumnsLayout,\n\n\t/**\n\t* By default, items in columns stretch to fit vertically; set to `true` to\n\t* avoid this behavior.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tnoStretch: false\n});","var\n\tkind = require('../../enyo/lib/kind')\t;\n\nvar\n\tFittableLayout = require('./FittableLayout'),\n\tFittableRowsLayout = FittableLayout.Rows;\n\n/**\n* {@link enyo.FittableRows} provides a container in which items are laid out in a\n* set\tof horizontal rows, with most of the items having natural size, but one\n* expanding to fill the remaining space. The one that expands is labeled with\n* the attribute `fit: true`.\n*\n* For more information, see the documentation on\n* [Fittables]{@linkplain $dev-guide/building-apps/layout/fittables.html} in the\n* Enyo Developer Guide.\n*\n* @ui\n* @class  enyo.FittableRows\n* @extends enyo.Control\n* @public\n*/\nmodule.exports = kind(/** @lends  enyo.FittableRows.prototype */{\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.FittableRows',\n\n\t/**\n\t* A {@glossary kind} used to manage the size and placement of child\n\t* [components]{@link enyo.Component}.\n\t*\n\t* @type {String}\n\t* @default ''\n\t* @private\n\t*/\n\tlayoutKind: FittableRowsLayout,\n\n\t/**\n\t* By default, items in columns stretch to fit horizontally; set to `true` to\n\t* avoid this behavior.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tnoStretch: false\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind');\n\nvar\n\tIcon = require('../../onyx/lib/Icon');\n\n/**\n* {@link onyx.IconButton} is an {@link onyx.Icon} that acts like a button. The\n* icon image is specified by setting the [src]{@link onyx.Icon#src} property\n* to a URL.\n*\n* If you want to combine an icon with text inside a button, use an\n* {@link onyx.Icon} inside an {@link onyx.Button}.\n*\n* The image associated with the `src` property of the IconButton is assumed to\n* be a 32x64-pixel strip, with the top half showing the button's normal state\n* and the bottom half showing its state when hovered-over or active.\n*\n* For more information, see the documentation on\n* [Buttons]{@linkplain $dev-guide/building-apps/controls/buttons.html} in the\n* Enyo Developer Guide.\n*\n* @class  onyx.IconButton\n* @extends onyx.Icon\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.IconButton.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.IconButton',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Icon,\n\n\t/**\n\t* @lends  onyx.IconButton.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Used when the IconButton is part of an {@link enyo.Group}; a value\n\t\t* of `true` indicates that this is the active button of the group.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  false\n\t\t* @public\n\t\t*/\n\t\tactive: false\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-icon-button',\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tondown: 'down',\n\t\tonenter: 'enter',\n\t\tondragfinish: 'dragfinish',\n\t\tonleave: 'leave',\n\t\tonup: 'up'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trendered: function () {\n\t\tIcon.prototype.rendered.apply(this, arguments);\n\t\tthis.activeChanged();\n\t},\n\n\t/**\n\t* Makes the control [active]{@link onyx.IconButton#active} (if it is not\n\t* [disabled]{@link onyx.Icon#disabled}).\n\t*\n\t* @private\n\t*/\n\ttap: function () {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.setActive(true);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdown: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.addClass('pressed');\n\t\tthis._isPressed = true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tenter: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tif(this._isPressed) {\n\t\t\tthis.addClass('pressed');\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragfinish: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.removeClass('pressed');\n\t\tthis._isPressed = false;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tleave: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.removeClass('pressed');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tup: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.removeClass('pressed');\n\t\tthis._isPressed = false;\n\t},\n\n\t/**\n\t* @fires enyo.GroupItem#onActivate\n\t* @private\n\t*/\n\tactiveChanged: function () {\n\t\tthis.bubble('onActivate');\n\t}\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind');\n\nvar\n\tIcon = require('../../onyx/lib/Icon');\n\n/**\n* Fires when the user changes the value of the toggle button, but not\n* when the value is changed programmatically.\n*\n* @event onyx.ToggleIconButton#onChange\n* @type {Object}\n* @property {Boolean} value - The current value of the button.\n* @public\n*/\n\n/**\n* {@link onyx.ToggleIconButton} is an icon that acts like a toggle switch. The icon\n* image is specified by setting the [src]{@link onyx.Icon#src} property to a URL.\n*\n* ```\n* {kind: 'onyx.ToggleIconButton', src: 'images/search.png', ontap: 'buttonTap'}\n* ```\n*\n* The image associated with the `src` property is assumed\tto be a 32x64-pixel\n* strip, with the top half showing the button's normal state and the bottom\n* half showing its state when hovered-over or active.\n*\n* @ui\n* @class onyx.ToggleIconButton\n* @extends onyx.Icon\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.ToggleIconButton.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.ToggleIconButton',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Icon,\n\n\t/**\n\t* @lends enyo.ToggleIconButton.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Used when the ToggleIconButton is part of an {@link enyo.Group}; set the\n\t\t* value to `true` to indicate that this is the active button in the group.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tactive: false,\n\t\n\t\t/**\n\t\t* Indicates whether the button is currently in the `'on'` state.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tvalue: false\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonChange: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-icon-button onyx-icon-toggle',\n\n\t/**\n\t* @private\n\t*/\n\tactiveChanged: function () {\n\t\tthis.addRemoveClass('active', this.value);\n\t\tthis.bubble('onActivate');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdateValue: function (inValue) {\n\t\tif (!this.disabled) {\n\t\t\tthis.setValue(inValue);\n\t\t\tthis.doChange({value: this.value});\n\t\t}\n\t},\n\n\t/**\n\t* Programmatically simulates a user tap of the toggle button.\n\t*\n\t* @public\n\t*/\n\ttap: function () {\n\t\tthis.updateValue(!this.value);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function () {\n\t\tthis.setActive(this.value);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tIcon.prototype.create.apply(this, arguments);\n\t\tthis.value = Boolean(this.value || this.active);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trendered: function () {\n\t\tIcon.prototype.rendered.apply(this, arguments);\n\t\tthis.valueChanged();\n\t\tthis.removeClass('onyx-icon');\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tAnimator = require('../../../enyo/lib/Animator');\n\nvar\n\tIcon = require('../../../onyx/lib/Icon'),\n\tProgressBar = require('../../../onyx/lib/ProgressBar');\n\n/**\n* Fires when cancel button is tapped.\n*\n* @event onyx.ProgressButton#event:onCancel\n* @type {Object}\n* @public\n*/\n\n/**\n* {@link onyx.ProgressButton} is an {@link onyx.ProgressBar} with a cancel\n* button on the right; there may also be other controls inside.\n*\n* ```\n* {kind: 'onyx.ProgressButton'},\n* {kind: 'onyx.ProgressButton', barClasses: 'onyx-light', progress: 20, components: [\n* \t{content: '0'},\n* \t{content: '100', style: 'float: right;'}\n* ]}\n* ```\n*\n* @class  onyx.ProgressButton\n* @extends onyx.ProgressBar\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.ProgressButton */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.ProgressButton',\n\n\t/**\n\t* @private\n\t*/\n\tkind: ProgressBar,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-progress-button',\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonCancel: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{name: 'progressAnimator', kind: Animator, onStep: 'progressAnimatorStep', onEnd: 'progressAnimatorComplete'},\n\t\t{name: 'bar', classes: 'onyx-progress-bar-bar onyx-progress-button-bar'},\n\t\t{name: 'client', classes: 'onyx-progress-button-client'},\n\t\t{kind: Icon, src: 'images/progress-button-cancel.png', classes: 'onyx-progress-button-icon', ontap: 'cancelTap'}\n\t],\n\n\t/**\n\t* @fires onyx.ProgressButton#event:onCancel\n\t* @private\n\t*/\n\tcancelTap: function () {\n\t\tthis.doCancel();\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\nvar\n\tProgressBar = require('../../../onyx/lib/ProgressBar');\n\n/**\n* {@link onyx.RangeSliderKnobLabel} provides the labels for the knobs\n* within a {@link onyx.RangeSlider}.\n*\n* @class onyx.RangeSliderKnobLabel\n* @extends enyo.Control\n* @ui\n* @public\n*/\nvar RangeSliderKnobLabel = kind(\n\t/** @lends  onyx.RangeSliderKnobLabel.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.RangeSliderKnobLabel',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-range-slider-label',\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonSetLabel: 'setLabel'\n\t},\n\n\t/**\n\t* Handles [onSetLabel]{@link onyx.RangeSlider#onSetLabel} events.\n\t*\n\t* @private\n\t*/\n\tsetLabel: function (sender, content) {\n\t\tthis.setContent(content);\n\t}\n});\n\n/**\n* Requests that the knob label be changed.\n*\n* @event onyx.RangeSlider#onSetLabel\n* @type {String}\n* @public\n* @todo  Event payload is a string rather than an object\n*/\n\n/**\n* Fires when bar position is set.\n*\n* @event onyx.RangeSlider#onChange\n* @type {Object}\n* @property {Number} value - The new bar position.\n* @property {Boolean} startChanged - Indicates whether the first slider (`rangeStart`)\n* \ttriggered the event.\n* @public\n*/\n\n/**\n* Fires while control knob is being dragged.\n*\n* @event onyx.RangeSlider#onChanging\n* @type {Object}\n* @property {Number} value - The current bar position.\n* @public\n*/\n\n/**\n* {@link onyx.RangeSlider} is a control that combines a horizontal slider with\n* two control knobs. The user may drag the knobs to select a desired range of\n* values.\n*\n* ```\n* {kind: 'onyx.RangeSlider', rangeMin: 100, rangeMax: 500,\n* \trangeStart: 200, rangeEnd: 400, interval: 20}\n* ```\n*\n* [onChanging]{@link onyx.RangeSlider#onChanging} events are fired while\n* the control knobs are being dragged, and an\n* [onchange]{@link onyx.RangeSlider#onChange} event is fired when the\n* position is set by finishing a drag.\n*\n* @class  onyx.RangeSlider\n* @extends onyx.ProgressBar\n* @ui\n* @public\n*/\nvar RangeSlider = module.exports = kind(\n\t/** @lends  onyx.RangeSlider.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.RangeSlider',\n\n\t/**\n\t* @private\n\t*/\n\tkind: ProgressBar,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-slider',\n\n\t/**\n\t* @lends  onyx.RangeSlider.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Minimum slider value.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\trangeMin: 0,\n\n\t\t/**\n\t\t* Maximum slider value.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  100\n\t\t* @public\n\t\t*/\n\t\trangeMax: 100,\n\n\t\t/**\n\t\t* Value of first slider, expressed as an integer between\n\t\t* [rangeMin]{@link onyx.RangeSlider#rangeMin} and\n\t\t* [rangeMax]{@link onyx.RangeSlider#rangeMax}.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\trangeStart: 0,\n\n\t\t/**\n\t\t* Value of second slider, expressed as an integer between\n\t\t* [rangeMin]{@link onyx.RangeSlider#rangeMin} and\n\t\t* [rangeMax]{@link onyx.RangeSlider#rangeMax}.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  100\n\t\t* @public\n\t\t*/\n\t\trangeEnd: 100,\n\n\t\t/**\n\t\t* Position of first slider, expressed as an integer between `0` and `100`\n\t\t* (percentage).\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tbeginValue: 0,\n\n\t\t/**\n\t\t* Position of second slider, expressed as an integer between `0` and `100`\n\t\t* (percentage).\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tendValue: 0\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonChange: '',\n\t\tonChanging: ''\n\t},\n\n\t/**\n\t* If `true`, stripes are shown in the slider bar.\n\t*\n\t* @type {Boolean}\n\t* @private\n\t*/\n\tshowStripes: false,\n\n\t/**\n\t* If `true`, a label is shown above each slider knob.\n\t*\n\t* Note that this is a design-time property and should not be set after object creation.\n\t*\n\t* @type {Boolean}\n\t* @public\n\t*/\n\tshowLabels: false,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tondragstart: 'dragstart',\n\t\tondrag: 'drag',\n\t\tondragfinish: 'dragfinish',\n\t\tondown: 'down'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmoreComponents: [\n\t\t{name: 'startKnob', classes: 'onyx-slider-knob'},\n\t\t{name: 'endKnob', classes: 'onyx-slider-knob onyx-range-slider-knob'}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tProgressBar.prototype.create.apply(this, arguments);\n\t\tthis.createComponents(this.moreComponents);\n\t\tthis.initControls();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trendered: function () {\n\t\tProgressBar.prototype.rendered.apply(this, arguments);\n\t\tvar p = this.calcPercent(this.beginValue);\n\t\tthis.updateBarPosition(p);\n\t},\n\n\t/**\n\t* @private\n\t* @todo  Why are handlers for ondown/onup added here instead of in the components block?\n\t*/\n\tinitControls: function () {\n\t\tthis.$.bar.applyStyle('position', 'relative');\n\t\tthis.refreshRangeSlider();\n\t\tif (this.showLabels) {\n\t\t\tthis.$.startKnob.createComponent({name: 'startLabel', kind: RangeSliderKnobLabel});\n\t\t\tthis.$.endKnob.createComponent({name: 'endLabel', kind: RangeSliderKnobLabel});\n\t\t}\n\t\t// add handlers for up/down events on knobs for pressed state (workaround for inconsistent (timing-wise) active:hover styling)\n\t\tthis.$.startKnob.ondown = 'knobDown';\n\t\tthis.$.startKnob.onup = 'knobUp';\n\t\tthis.$.endKnob.ondown = 'knobDown';\n\t\tthis.$.endKnob.onup = 'knobUp';\n\t},\n\n\t/**\n\t* Refreshes the knob positions.\n\t*\n\t* @private\n\t*/\n\trefreshRangeSlider: function () {\n\t\t// Calculate range percentages, in order to position sliders\n\t\tthis.beginValue = this.calcKnobPercent(this.rangeStart);\n\t\tthis.endValue = this.calcKnobPercent(this.rangeEnd);\n\t\tthis.beginValueChanged();\n\t\tthis.endValueChanged();\n\t},\n\n\t/**\n\t* Calculates the completion ratio for the passed-in value.\n\t*\n\t* @param  {Number} value - Value for which completion ratio will be calculated.\n\t* @return {Number}         - Completion ratio (between `0` and `1`).\n\t*/\n\tcalcKnobRatio: function (value) {\n\t\treturn (value - this.rangeMin) / (this.rangeMax - this.rangeMin);\n\t},\n\n\t/**\n\t* Calculates the completion percentage for the passed-in value.\n\t*\n\t* @param  {Number} value - Value for which completion percentage will be calculated.\n\t* @return {Number}         - Completion percentage (between `0` and `100`).\n\t*/\n\tcalcKnobPercent: function (value) {\n\t\treturn this.calcKnobRatio(value) * 100;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tbeginValueChanged: function (sliderPos) {\n\t\tif (sliderPos === undefined) {\n\t\t\tvar p = this.calcPercent(this.beginValue);\n\t\t\tthis.updateKnobPosition(p, this.$.startKnob);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tendValueChanged: function (sliderPos) {\n\t\tif (sliderPos === undefined) {\n\t\t\tvar p = this.calcPercent(this.endValue);\n\t\t\tthis.updateKnobPosition(p, this.$.endKnob);\n\t\t}\n\t},\n\n\t/**\n\t* Calculates the appropriate knob position during a drag event.\n\t* @param  {Event} event - The drag event.\n\t* @return {Number}        - The knob position.\n\t*/\n\tcalcKnobPosition: function (event) {\n\t\tvar x = event.clientX - this.hasNode().getBoundingClientRect().left;\n\t\treturn (x / this.getBounds().width) * (this.max - this.min) + this.min;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdateKnobPosition: function (percent, control) {\n\t\tcontrol.applyStyle('left', percent + '%');\n\t\tthis.updateBarPosition();\n\t},\n\n\t/**\n\t* Updates the position of the bar between the knobs.\n\t*\n\t* @private\n\t*/\n\tupdateBarPosition: function () {\n\t\tif ((this.$.startKnob !== undefined) && (this.$.endKnob !== undefined)) {\n\t\t\tvar barStart = this.calcKnobPercent(this.rangeStart);\n\t\t\tvar barWidth = this.calcKnobPercent(this.rangeEnd) - barStart;\n\t\t\tthis.$.bar.applyStyle('left', barStart + '%');\n\t\t\tthis.$.bar.applyStyle('width', barWidth + '%');\n\t\t}\n\t},\n\n\t/**\n\t* Calculates the ratio of the value within the allowed range.\n\t*\n\t* @return {Number}\n\t* @private\n\t*/\n\tcalcRangeRatio: function (value) {\n\t\treturn ((value / 100) * (this.rangeMax - this.rangeMin) + this.rangeMin) - (this.increment/2);\n\t},\n\n\t/**\n\t* Ensures that the active knob is on top.\n\t*\n\t* @param {String} controlName - Name of active knob.\n\t* @private\n\t*/\n\tswapZIndex: function (controlName) {\n\t\tif (controlName === 'startKnob') {\n\t\t\tthis.$.startKnob.applyStyle('z-index', 1);\n\t\t\tthis.$.endKnob.applyStyle('z-index', 0);\n\t\t} else if (controlName === 'endKnob') {\n\t\t\tthis.$.startKnob.applyStyle('z-index', 0);\n\t\t\tthis.$.endKnob.applyStyle('z-index', 1);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdown: function (sender, event) {\n\t\tthis.swapZIndex(sender.name);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragstart: function (sender, event) {\n\t\tif (event.horizontal) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.dragging = true;\n\t\t\tsender.addClass('pressed');\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @fires onyx.RangeSlider#onChanging\n\t* @private\n\t*/\n\tdrag: function (sender, event) {\n\t\tif (this.dragging) {\n\t\t\tvar knobPos = this.calcKnobPosition(event);\n\t\t\tvar _val, val, p;\n\n\t\t\tif ((sender.name === 'startKnob') && (knobPos >= 0)) {\n\t\t\t\tif (((knobPos <= this.endValue) && (event.xDirection === -1)) || (knobPos <= this.endValue)) {\n\t\t\t\t\tthis.setBeginValue(knobPos);\n\t\t\t\t\t_val = this.calcRangeRatio(this.beginValue);\n\t\t\t\t\tval = (this.increment) ? this.calcIncrement(_val+0.5*this.increment) : _val;\n\t\t\t\t\tp = this.calcKnobPercent(val);\n\t\t\t\t\tthis.updateKnobPosition(p, this.$.startKnob);\n\t\t\t\t\tthis.setRangeStart(val);\n\t\t\t\t\tthis.doChanging({value: val});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.drag(this.$.endKnob, event);\n\t\t\t\t}\n\t\t\t} else if ((sender.name === 'endKnob') && (knobPos <= 100)) {\n\t\t\t\tif (((knobPos >= this.beginValue) && (event.xDirection === 1)) || (knobPos >= this.beginValue)) {\n\t\t\t\t\tthis.setEndValue(knobPos);\n\t\t\t\t\t_val = this.calcRangeRatio(this.endValue);\n\t\t\t\t\tval = (this.increment) ? this.calcIncrement(_val+0.5*this.increment) : _val;\n\t\t\t\t\tp = this.calcKnobPercent(val);\n\t\t\t\t\tthis.updateKnobPosition(p, this.$.endKnob);\n\t\t\t\t\tthis.setRangeEnd(val);\n\t\t\t\t\tthis.doChanging({value: val});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.drag(this.$.startKnob, event);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @fires onyx.RangeSlider#onChange\n\t* @private\n\t*/\n\tdragfinish: function (sender, event) {\n\t\tthis.dragging = false;\n\t\tevent.preventTap();\n\t\tvar val;\n\t\tif (sender.name === 'startKnob') {\n\t\t\tval = this.calcRangeRatio(this.beginValue);\n\t\t\tthis.doChange({value: val, startChanged: true});\n\t\t} else if (sender.name === 'endKnob') {\n\t\t\tval = this.calcRangeRatio(this.endValue);\n\t\t\tthis.doChange({value: val, startChanged: false});\n\t\t}\n\t\tsender.removeClass('pressed');\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tknobDown: function (sender, event) {\n\t\tsender.addClass('pressed');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tknobUp: function (sender, event) {\n\t\tsender.removeClass('pressed');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trangeMinChanged: function () {\n\t\tthis.refreshRangeSlider();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trangeMaxChanged: function () {\n\t\tthis.refreshRangeSlider();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trangeStartChanged: function () {\n\t\tthis.refreshRangeSlider();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trangeEndChanged: function () {\n\t\tthis.refreshRangeSlider();\n\t},\n\n\t/**\n\t* Sets the label for the start knob.\n\t*\n\t* @param {String} content - New label for start knob.\n\t* @fires onyx.RangeSlider#onSetLabel\n\t* @public\n\t*/\n\tsetStartLabel: function (content) {\n\t\tthis.$.startKnob.waterfallDown('onSetLabel', content);\n\t},\n\n\t/**\n\t* Sets the label for the end knob.\n\t*\n\t* @param {String} content - New label for end knob.\n\t* @fires onyx.RangeSlider#onSetLabel\n\t* @public\n\t*/\n\tsetEndLabel: function (content) {\n\t\tthis.$.endKnob.waterfallDown('onSetLabel', content);\n\t}\n});\n\nRangeSlider.KnobLabel = RangeSliderKnobLabel;","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tAnimator = require('../../../enyo/lib/Animator');\n\nvar\n\tProgressBar = require('../../../onyx/lib/ProgressBar');\n\n/**\n* Fires when bar position is set.\n*\n* @event onyx.Slider#onChange\n* @type {Object}\n* @property {Number} value - The new bar position.\n* @public\n*/\n\n/**\n* Fires while control knob is being dragged.\n*\n* @event onyx.Slider#onChanging\n* @type {Object}\n* @property {Number} value - The current bar position.\n* @public\n*/\n\n/**\n* Fires when animation to a position finishes.\n*\n* @event onyx.Slider#onAnimateFinish\n* @type {enyo.Animator}\n* @public\n* @todo  Animator as the payload; overlap with\n* \t{@link onyx.ProgressBar#onAnimateProgressFinish}\n*/\n\n/**\n* {@link onyx.Slider} is a control that presents a range of selection options\n* in the form of a horizontal slider with a control knob. The knob may be\n* tapped and dragged to the desired location.\n*\n* ```\n* {kind: 'onyx.Slider', value: 30}\n* ```\n*\n* [onChanging]{@link onyx.Slider#onChanging} events are fired while the\n* control knob is being dragged, and an [onChange]{@link onyx.Slider#onChange}\n* event is fired when the position is set, either by finishing a drag or by tapping\n* the bar.\n*\n* @class  onyx.Slider\n* @extends onyx.ProgressBar\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Slider.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Slider',\n\n\t/**\n\t* @private\n\t*/\n\tkind: ProgressBar,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-slider',\n\n\t/**\n\t* @lends onyx.Slider.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Position of slider, expressed as an integer between `0` and `100`, inclusive.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tvalue: 0,\n\n\t\t/**\n\t\t* When `true`, current progress will be styled differently from rest of bar.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tlockBar: true,\n\n\t\t/**\n\t\t* When `true`, tapping on bar will change current position.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\ttappable: true\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonChange: '',\n\t\tonChanging: '',\n\t\tonAnimateFinish: ''\n\t},\n\n\t/**\n\t* If `true`, stripes are shown in the slider bar.\n\t*\n\t* @type {Boolean}\n\t* @default  false\n\t* @public\n\t*/\n\tshowStripes: false,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tondragstart: 'dragstart',\n\t\tondrag: 'drag',\n\t\tondragfinish: 'dragfinish'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmoreComponents: [\n\t\t{kind: Animator, onStep: 'animatorStep', onEnd: 'animatorComplete'},\n\t\t{classes: 'onyx-slider-taparea'},\n\t\t{name: 'knob', classes: 'onyx-slider-knob'}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tProgressBar.prototype.create.apply(this, arguments);\n\n\t\t// add handlers for up/down events on knob for pressed state (workaround for inconsistent (timing-wise) active:hover styling)\n\t\tthis.moreComponents[2].ondown = 'knobDown';\n\t\tthis.moreComponents[2].onup = 'knobUp';\n\n\t\tthis.createComponents(this.moreComponents);\n\t\tthis.valueChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function () {\n\t\tthis.value = this.clampValue(this.min, this.max, this.value);\n\t\tif (!this.$.animator.isAnimating()) {\n\t\t\tthis.updateBar(this.value);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdateBar: function (value) {\n\t\tvar p = this.calcPercent(value);\n\t\tthis.updateKnobPosition(p);\n\t\tif (this.lockBar) {\n\t\t\tthis.setProgress(value);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdateKnobPosition: function (percent) {\n\t\tthis.$.knob.applyStyle('left', percent + '%');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcKnobPosition: function (event) {\n\t\tvar x = event.clientX - this.hasNode().getBoundingClientRect().left;\n\t\treturn (x / this.getBounds().width) * (this.max - this.min) + this.min;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragstart: function (sender, event) {\n\t\tif (event.horizontal) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.dragging = true;\n\t\t\tsender.addClass('pressed');\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @fires onyx.Slider#onChanging\n\t* @private\n\t*/\n\tdrag: function (sender, event) {\n\t\tif (this.dragging) {\n\t\t\tvar v = this.calcKnobPosition(event);\n\t\t\tv = (this.increment) ? this.calcIncrement(v) : v;\n\t\t\tthis.setValue(this.clampValue(this.min, this.max, v));\n\t\t\tthis.doChanging({value: this.value});\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @fires onyx.Slider#onChange\n\t* @private\n\t*/\n\tdragfinish: function (sender, event) {\n\t\tthis.dragging = false;\n\t\tevent.preventTap();\n\t\tthis.doChange({value: this.value});\n\t\tsender.removeClass('pressed');\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttap: function (sender, event) {\n\t\tif (this.tappable) {\n\t\t\tvar v = this.calcKnobPosition(event);\n\t\t\tv = (this.increment) ? this.calcIncrement(v) : v;\n\t\t\tthis.tapped = true;\n\t\t\tthis.animateTo(v);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tknobDown: function (sender, event) {\n\t\tthis.$.knob.addClass('pressed');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tknobUp: function (sender, event) {\n\t\tthis.$.knob.removeClass('pressed');\n\t},\n\n\t/**\n\t* Animates to the given value.\n\t*\n\t* @param  {Number} value - The value to animate to.\n\t* @public\n\t* @todo  functional overlap with {@link onyx.ProgressBar#animateProgressTo}\n\t*/\n\tanimateTo: function (value) {\n\t\tthis.$.animator.play({\n\t\t\tstartValue: this.value,\n\t\t\tendValue: value,\n\t\t\tnode: this.hasNode()\n\t\t});\n\n\t\tthis.setValue(value);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tanimatorStep: function (sender) {\n\t\tthis.updateBar(sender.value);\n\t\treturn true;\n\t},\n\n\t/**\n\t* @fires onyx.Slider#onChange\n\t* @fires onyx.Slider#onAnimateFinish\n\t* @private\n\t*/\n\tanimatorComplete: function (sender) {\n\t\tif (this.tapped) {\n\t\t\tthis.tapped = false;\n\t\t\tthis.doChange({value: this.value});\n\t\t}\n\t\tthis.doAnimateFinish(sender);\n\t\treturn true;\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tSpinner = require('../../../onyx/lib/Spinner');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.SpinnerSample',\n\tclasses: 'onyx onyx-sample',\n\thandlers: {\n\t\tonSelect: 'itemSelected'\n\t},\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Light Spinner'},\n\t\t{style: 'background: black; border-radius: 5px; padding: 15px', components: [\n\t\t\t{kind: Spinner}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Dark Spinner'},\n\t\t{style: 'background: white; border-radius: 5px; padding: 15px', components: [\n\t\t\t{kind: Spinner, classes: 'onyx-light'}\n\t\t]}\n\t]\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tGroup = require('../../../enyo/lib/Group');\n\nvar\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tToggleButton = require('../../../onyx/lib/ToggleButton');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.ToggleButtonSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Toggle Buttons'},\n\t\t{classes: 'onyx-sample-tools', components: [\n\t\t\t{kind: ToggleButton, onChange: 'toggleChanged', value: true},\n\t\t\t{kind: ToggleButton, onChange: 'toggleChanged'},\n\t\t\t{kind: ToggleButton, onChange: 'toggleChanged'},\n\t\t\t{kind: ToggleButton, onChange: 'toggleChanged', value: true, disabled: true}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Toggle Buttons Group'},\n\t\t{kind: Group, classes: 'onyx-sample-tools group', onActivate: 'groupActivated', highlander: true, components: [\n\t\t\t{kind: ToggleButton},\n\t\t\t{kind: ToggleButton, value: true},\n\t\t\t{kind: ToggleButton}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'result', classes: 'onyx-sample-result', content: 'No button tapped yet.'}\n\t\t]}\n\t],\n\ttoggleChanged: function (sender, event) {\n\t\tthis.$.result.setContent(sender.name + ' was ' + (sender.getValue() ? ' selected.' : 'deselected.'));\n\t},\n\tordinals: ['1st', '2nd', '3rd'],\n\tgroupActivated: function (sender, event) {\n\t\tif (event.originator.getActive()) {\n\t\t\tvar selected = event.originator.indexInContainer();\n\t\t\tthis.$.result.setContent('The ' + this.ordinals[selected] + ' toggle button in the group is selected.');\n\t\t}\n\t}\n});\n","require('../../../enyo');\n\n\n\nvar\n\tkind = require('../kind');\nvar\n\tToolDecorator = require('../ToolDecorator');\n\n/**\n* {@link enyo.Button} implements an HTML [button]{@glossary button}, with support\n* for grouping using {@link enyo.Group}.\n*\n* For more information, see the documentation on\n* [Buttons]{@linkplain $dev-guide/building-apps/controls/buttons.html} in the\n* Enyo Developer Guide.\n*\n* @class enyo.Button\n* @extends enyo.ToolDecorator\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends enyo.Button.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'enyo.Button',\n\t\n\t/**\n\t* @private\n\t*/\n\tkind: ToolDecorator,\n\n\t/**\n\t* @private\n\t*/\n\ttag: 'button',\n\n\t/**\n\t* @private\n\t*/\n\tattributes: {\n\t\t/**\n\t\t * Set to `'button'`; otherwise, the default value would be `'submit'`, which\n\t\t * can cause unexpected problems when [controls]{@link enyo.Control} are used\n\t\t * inside of a [form]{@glossary form}.\n\t\t * \n\t\t * @type {String}\n\t\t * @private\n\t\t */\n\t\ttype: 'button'\n\t},\n\t\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Button.prototype */ {\n\t\t\n\t\t/**\n\t\t * When `true`, the [button]{@glossary button} is shown as disabled and does not \n\t\t * generate tap [events]{@glossary event}.\n\t\t * \n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tdisabled: false\n\t},\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.disabledChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tdisabledChanged: function () {\n\t\tthis.setAttribute('disabled', this.disabled);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttap: function () {\n\t\tif (this.disabled) {\n\t\t\t// work around for platforms like Chrome on Android or Opera that send\n\t\t\t// mouseup to disabled form controls\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.setActive(true);\n\t\t}\n\t}\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind'),\n\tToolDecorator = require('../../enyo/lib/ToolDecorator');\n\n/**\n* {@link onyx.InputDecorator} is a control that provides input styling. Any\n* controls in the InputDecorator will appear to be inside an area styled as an\n* input. Usually, an InputDecorator surrounds an {@link onyx.Input}.\n*\n* ```\n* {kind: 'onyx.InputDecorator', components: [\n* \t{kind: 'onyx.Input'}\n* ]}\n* ```\n*\n* Other controls, such as buttons, may be placed to the right or left of the\n* input control, e.g.:\n*\n* ```\n* {kind: 'onyx.InputDecorator', components: [\n* \t{kind: 'onyx.IconButton', src: 'search.png'},\n* \t{kind: 'onyx.Input'},\n* \t{kind: 'onyx.IconButton', src: 'cancel.png'}\n* ]}\n* ```\n*\n* Note that the InputDecorator fits around the content inside it. If the\n* decorator is sized, then its contents will likely need to be sized as well.\n*\n* ```\n* {kind: 'onyx.InputDecorator', style: 'width: 500px;', components: [\n* \t{kind: 'onyx.Input', style: 'width: 100%;'}\n* ]}\n* ```\n*\n* @class  onyx.InputDecorator\n* @extends enyo.ToolDecorator\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.InputDecorator.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.InputDecorator',\n\n\t/**\n\t* @private\n\t*/\n\tkind: ToolDecorator,\n\n\t/**\n\t* @private\n\t*/\n\ttag: 'label',\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-input-decorator',\n\n\t/**\n\t* @lends  onyx.InputDecorator.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* If set to `true`, the input will look focused, even when it doesn't\n\t\t* actually have focus.\n\t\t* @type {Boolean}\n\t\t* @default  false\n\t\t* @public\n\t\t*/\n\t\talwaysLooksFocused: false\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonDisabledChange: 'disabledChange',\n\t\tonfocus: 'receiveFocus',\n\t\tonblur: 'receiveBlur'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tToolDecorator.prototype.create.apply(this, arguments);\n\t\tthis.updateFocus(false);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\talwaysLooksFocusedChanged: function (oldValue) {\n\t\tthis.updateFocus(this.focus);\n\t},\n\n\t/**\n\t* Updates the focus state of the control unless\n\t* [alwaysLooksFocused]{@link onyx.InputDecorator#alwaysLooksFocused} is `true`.\n\t*\n\t* @param  {Boolean} focus - The requested focus state.\n\t* @private\n\t*/\n\tupdateFocus: function (focus) {\n\t\tthis.focused = focus;\n\t\tthis.addRemoveClass('onyx-focused', this.alwaysLooksFocused || this.focused);\n\t},\n\n\t/**\n\t* Handles `onfocus` events triggered by child components.\n\t*\n\t* @private\n\t*/\n\treceiveFocus: function () {\n\t\tthis.updateFocus(true);\n\t},\n\n\t/**\n\t* Handles `onblur` events triggered by child components.\n\t*\n\t* @private\n\t*/\n\treceiveBlur: function () {\n\t\tthis.updateFocus(false);\n\t},\n\n\t/**\n\t* Handles `onDisabledChange` events triggered by child components.\n\t*\n\t* @private\n\t*/\n\tdisabledChange: function (sender, event) {\n\t\tthis.addRemoveClass('onyx-disabled', event.originator.disabled);\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tutils = require('../../../enyo/lib/utils'),\n\tCheckbox = require('../../../enyo/lib/Checkbox');\n\n/**\n* {@link onyx.Checkbox} is a box that shows or hides a checkmark when clicked. The\n* [onActivate]{@link enyo.Checkbox#onActivate} event is fired when the box is clicked.\n* Call `getValue()` to retrieve a boolean indicating whether the box is currently\n* checked.\n*\n* ```\n* {kind: 'onyx.Checkbox', onchange: 'checkboxClicked'}\n*\n* checkboxClicked: function (sender) {\n* \tif (sender.getValue()) {\n* \t\tthis.log('I've been checked!');\n* \t}\n* }\n* ```\n*\n* @class  onyx.Checkbox\n* @extends enyo.Checkbox\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  enyo.Checkbox.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Checkbox',\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-checkbox',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Checkbox,\n\n\t/**\n\t* @private\n\t*/\n\ttag: 'div',\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\t// prevent double onchange bubble in IE\n\t\tonclick: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttap: function (sender, e) {\n\t\tif (!this.disabled) {\n\t\t\tthis.setChecked(!this.getChecked());\n\t\t\tthis.bubble('onchange');\n\t\t}\n\t\treturn !this.disabled;\n\t},\n\n\t/**\n\t* Overrides {@link enyo.Input} `dragstart` handler, to allow drags to propagate\n\t* for Checkbox.\n\t*\n\t* @private\n\t*/\n\tdragstart: utils.nop\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tRichText = require('../../../enyo/lib/RichText');\n\n/**\n* {@link onyx.RichText} is an Onyx-styled rich text control, derived from\n* {@link enyo.RichText}. Typically, an `onyx.RichText` is placed inside an\n* {@link onyx.InputDecorator}, which provides styling, e.g.:\n*\n* ```\n* {kind: 'onyx.InputDecorator', components: [\n* \t{kind: 'onyx.RichText', style: 'width: 100px;', onchange: 'inputChange'}\n* ]}\n* ```\n*\n* For more information, see the documentation on\n* [Text Fields]{@linkplain $dev-guide/building-apps/controls/text-fields.html}\n* in the Enyo Developer Guide.\n*\n* @class  onyx.RichText\n* @extends enyo.RichText\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.RichText.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.RichText',\n\n\t/**\n\t* @private\n\t*/\n\tkind: RichText,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-richtext'\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tTextArea = require('../../../enyo/lib/TextArea');\n\n/**\n* {@link onyx.TextArea} is an Onyx-styled TextArea control, derived from\n* {@link enyo.TextArea}. Typically, an `onyx.TextArea` is placed inside an\n* {@link onyx.InputDecorator}, which provides styling, e.g.:\n*\n* ```\n* {kind: 'onyx.InputDecorator', components: [\n* \t{kind: 'onyx.TextArea', onchange: 'inputChange'}\n* ]}\n* ```\n*\n* For more information, see the documentation on\n* [Text Fields]{@linkplain $dev-guide/building-apps/controls/text-fields.html}\n* in the Enyo Developer Guide.\n*\n* @ui\n* @class  onyx.TextArea\n* @extends enyo.TextArea\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.TextArea.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.TextArea',\n\n\t/**\n\t* @private\n\t*/\n\tkind: TextArea,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-textarea'\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tPopup = require('../../../enyo/lib/Popup');\n\n/**\n* {@link onyx.Popup} is an {@link enyo.Popup} with Onyx styling applied.\n*\n* For more information, see the documentation on\n* [Popups]{@linkplain $dev-guide/building-apps/controls/popups.html} in the\n* Enyo Developer Guide.\n*\n* @class  onyx.Popup\n* @extends enyo.Popup\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Popup.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Popup',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Popup,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-popup'\n});","require('../../enyo');\n\nvar\n\tkind = require('./kind'),\n\tdispatcher = require('./dispatcher');\n\nvar\n\tTouchScrollStrategy = require('./TouchScrollStrategy'),\n\tDom = require('./dom');\n\n/**\n* {@link enyo.TranslateScrollStrategy} is a helper [kind]{@glossary kind} that extends\n* {@link enyo.TouchScrollStrategy}, optimizing it for scrolling environments in which effecting \n* scroll changes with transforms using CSS translations is fastest.\n* \n* `enyo.TranslateScrollStrategy` is not typically created in application code. Instead, it is \n* specified as the value of the [strategyKind]{@link enyo.Scroller#strategyKind} property of \n* an {@link enyo.Scroller} or {@link enyo.List}, or is used by the framework implicitly.\n*\n* @class enyo.TranslateScrollStrategy\n* @extends enyo.TouchScrollStrategy\n* @protected\n*/\nmodule.exports = kind(\n\t/** @lends enyo.TranslateScrollStrategy.prototype */ {\n\n\tname: 'enyo.TranslateScrollStrategy',\n\n\t/**\n\t* @private\n\t*/\n\tkind: TouchScrollStrategy,\n\n\t/** \n\t* Set to `true` to optimize the strategy to only use translation to scroll; this increases \n\t* fluidity of scrolling animation. It should not be used when the \n\t* [scroller]{@link enyo.Scroller} contains [controls]{@link enyo.Control} that require \n\t* keyboard input. This is because when `translateOptimized` is `true`, it is possible to \n\t* position inputs such that they will not become visible when focused.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\ttranslateOptimized: false,\n\t\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{name: 'clientContainer', classes: 'enyo-touch-scroller', components: [\n\t\t\t{name: 'client'}\n\t\t]}\n\t],\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tdispatcher.makeBubble(this.$.clientContainer, 'scroll');\n\t\t\tif (this.translateOptimized) {\n\t\t\t\tthis.setStartPosition();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tsetStartPosition: function() {\n\t\tthis.startX = this.getScrollLeft();\n\t\tthis.startY = this.getScrollTop();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetScrollSize: function () {\n\t\tvar n = this.$.client.hasNode();\n\t\treturn {width: n ? n.scrollWidth : 0, height: n ? n.scrollHeight : 0};\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\t// apply initial transform so we're always composited\n\t\t\tDom.transformValue(this.$.client, this.translation, '0,0,0');\n\t\t};\n\t}),\n\t\n\t/**\n\t* @private\n\t*/\n\tcalcScrollNode: function () {\n\t\treturn this.$.clientContainer.hasNode();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxHeightChanged: function () {\n\t\t// content should cover scroller at a minimum if there's no max-height.\n\t\tthis.$.client.applyStyle('min-height', this.maxHeight ? null : '100%');\n\t\tthis.$.client.applyStyle('max-height', this.maxHeight);\n\t\tthis.$.clientContainer.addRemoveClass('enyo-scrollee-fit', !this.maxHeight);\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tshouldDrag: kind.inherit(function (sup) {\n\t\treturn function(inEvent) {\n\t\t\t// stop and update drag info before checking drag status\n\t\t\tthis.stop();\n\t\t\tthis.calcStartInfo();\n\t\t\treturn sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tsyncScrollMath: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tif (!this._translated) {\n\t\t\t\tsup.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t}),\n\t\n\t/**\n\t* Sets the horizontal scroll position.\n\t*\n\t* @param {Number} left - The horizontal scroll position in pixels.\n\t* @method\n\t* @public\n\t*/\n\tsetScrollLeft: kind.inherit(function (sup) {\n\t\treturn function(inLeft) {\n\t\t\tvar m, p;\n\t\t\tif (this.translateOptimized) {\n\t\t\t\tp = this.scrollLeft;\n\t\t\t\tm = this.$.scrollMath;\n\t\t\t\tthis.stop(true);\n\t\t\t\tm.setScrollX(-inLeft);\n\t\t\t\tm.stabilize();\n\t\t\t\tif (p != -m.x) {\n\t\t\t\t\t// We won't get a native scroll event,\n\t\t\t\t\t// so need to make one ourselves\n\t\t\t\t\tm.doScroll();\n\t\t\t\t\tthis.delayHideThumbs(100);\n\t\t\t\t} \n\t\t\t} else {\n\t\t\t\tsup.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t}),\n\t\n\t/**\n\t* Sets the vertical scroll position.\n\t*\n\t* @param {Number} top - The vertical scroll position in pixels.\n\t* @method\n\t* @public\n\t*/\n\tsetScrollTop: kind.inherit(function (sup) {\n\t\treturn function(inTop) {\n\t\t\tvar m, p;\n\t\t\tif (this.translateOptimized) {\n\t\t\t\tp = this.scrollTop;\n\t\t\t\tm = this.$.scrollMath;\n\t\t\t\tthis.stop(true);\n\t\t\t\tm.setScrollY(-inTop);\n\t\t\t\tm.stabilize();\n\t\t\t\tif (p != -m.y) {\n\t\t\t\t\t// We won't get a native scroll event,\n\t\t\t\t\t// so need to make one ourselves\n\t\t\t\t\tm.doScroll();\n\t\t\t\t\tthis.delayHideThumbs(100);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsup.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t}),\n\t\n\t/**\n\t* Retrieves the horizontal scroll position.\n\t*\n\t* @returns {Number} The horizontal scroll position in pixels.\n\t* @method\n\t* @public\n\t*/\n\tgetScrollLeft: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\treturn this._translated ? this.scrollLeft: sup.apply(this, arguments);\n\t\t};\n\t}),\n\t\n\t/**\n\t* Retrieves the vertical scroll position.\n\t*\n\t* @returns {Number} The vertical scroll position in pixels.\n\t* @method\n\t* @private\n\t*/\n\tgetScrollTop: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\treturn this._translated ? this.scrollTop : sup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcalcBoundaries: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tif (this.translateOptimized && !this.isScrolling()) this.stabilize();\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\thandleResize: function() {\n\t\tif (this.translateOptimized) {\n\t\t\tthis.stabilize();\n\t\t}\n\t},\n\t\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tscrollMathStart: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tif (!this._translated) {\n\t\t\t\tthis.setStartPosition();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tscrollMathScroll: function (sender) {\n\t\tif(!this.overscroll) { //don't overscroll past edges\n\t\t\tthis.scrollLeft = -Math.min(sender.leftBoundary, Math.max(sender.rightBoundary, sender.x));\n\t\t\tthis.scrollTop = -Math.min(sender.topBoundary, Math.max(sender.bottomBoundary, sender.y));\n\t\t} else {\n\t\t\tthis.scrollLeft = -sender.x;\n\t\t\tthis.scrollTop = -sender.y;\n\t\t}\n\t\tthis.effectScroll(this.scrollLeft, this.scrollTop);\n\t\tif (this.thumb) {\n\t\t\tthis.showThumbs();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tscrollMathStabilize: kind.inherit(function (sup) {\n\t\treturn function (sender) {\n\t\t\tif (this._translated) {\n\t\t\t\tthis.scrollLeft = -sender.x;\n\t\t\t\tthis.scrollTop = -sender.y;\n\t\t\t\tthis.effectScroll(-sender.x, -sender.y);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn sup.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* While moving, scroller uses translate.\n\t* \n\t* @private\n\t*/\n\teffectScroll: kind.inherit(function (sup) {\n\t\treturn function (x, y) {\n\t\t\tvar o;\n\t\t\tif (this.translateOptimized || this.isScrolling()) {\n\t\t\t\tx = this.startX - x;\n\t\t\t\ty = this.startY - y;\n\t\t\t\to = x + 'px, ' + y + 'px' + (this.accel ? ',0' : '');\n\t\t\t\tDom.transformValue(this.$.client, this.translation, o);\n\t\t\t\tthis._translated = true;\n\t\t\t} else {\n\t\t\t\tsup.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* When stopped, we use `scrollLeft/scrollTop` (makes cursor positioning automagic).\n\t* \n\t* @private\n\t*/\n\teffectScrollStop: function () {\n\t\tif (!this.translateOptimized) {\n\t\t\tvar t = '0,0' + (this.accel ? ',0' : '');\n\t\t\t// FIXME: normally translate3d changes not effect scrollHeight; however\n\t\t\t// there appear to be some dom changes (e.g. showing a node inside the scroller,\n\t\t\t// which do cause the scrollHeight to be changed from the translate3d.\n\t\t\t// In this case setting the translate3d back to 0 does not restore scrollHeight.\n\t\t\t// This causes a problem because setting scrollTop can produced an unexpected result if\n\t\t\t// scrollHeight is less than expected.\n\t\t\t// We detect this fault by validating scroll bounds and (1) un-apply the translate3d,\n\t\t\t// (2) update scrollTop/Left, and (3) re-apply a 0,0,0 translate3d to ensure compositing.\n\t\t\t// Luckily this corrects the problem (which appears to be a webkit bug). Note that\n\t\t\t// it's important to maintain a composited state (translate3d 0,0,0) or Android 4 is\n\t\t\t// slow to start scrolling.\n\t\t\tvar m = this.$.scrollMath, sb = this._getScrollBounds();\n\t\t\tvar needsBoundsFix = Boolean((sb.maxTop + m.bottomBoundary) || (sb.maxLeft + m.rightBoundary));\n\t\t\tDom.transformValue(this.$.client, this.translation, needsBoundsFix ? null : t);\n\t\t\t// note: this asynchronously triggers dom scroll event\n\t\t\tthis.setScrollLeft(this.scrollLeft);\n\t\t\tthis.setScrollTop(this.scrollTop);\n\t\t\tif (needsBoundsFix) {\n\t\t\t\tDom.transformValue(this.$.client, this.translation, t);\n\t\t\t}\n\t\t\tthis._translated = false;\n\t\t}\n\t},\n\n\t/**\n\t* FIXME: we can fix scrolling artifacts BUGS on Android 4.04 with this heinous incantation.\n\t* \n\t* @private\n\t*/\n\ttwiddle: function () {\n\t\tif (this.translateOptimized && this.scrollNode) { // this.scrollNode is not always defined and makes Motorola XOOM crash\n\t\t\tthis.scrollNode.scrollTop = 1;\n\t\t\tthis.scrollNode.scrollTop = 0;\n\t\t}\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control'),\n\tGroup = require('../../../enyo/lib/Group');\n\nvar\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tIcon = require('../../../onyx/lib/Icon'),\n\tIconButton = require('../../../onyx/lib/IconButton'),\n\tToggleIconButton = require('../../../onyx/lib/ToggleIconButton'),\n\tToolbar = require('../../../onyx/lib/Toolbar');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.IconButtonSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Icon'},\n\t\t{kind: Icon, src: 'assets/menu-icon-bookmark.png' },\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Icon Button'},\n\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png', ontap: 'iconTapped'},\n\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png', disabled: true, ontap: 'iconTapped'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Grouped Icon Buttons'},\n\t\t{kind: Group, onActivate: 'iconGroupActivated', components: [\n\t\t\t{kind: IconButton, active: true, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Toggle Icon Buttons'},\n\t\t{kind: ToggleIconButton, onChange: 'toggleChanged', src: 'assets/menu-icon-bookmark.png'},\n\t\t{kind: ToggleIconButton, onChange: 'toggleChanged', value: true, src: 'assets/menu-icon-bookmark.png'},\n\t\t{kind: ToggleIconButton, onChange: 'toggleChanged', disabled: true, src: 'assets/menu-icon-bookmark.png'},\n\t\t{kind: ToggleIconButton, onChange: 'toggleChanged', value: true, disabled: true, src: 'assets/menu-icon-bookmark.png'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Icon Buttons in Toolbar'},\n\t\t{kind: Toolbar, defaultKind: IconButton, components: [\n\t\t\t{src: 'assets/menu-icon-bookmark.png', ontap: 'iconTapped'},\n\t\t\t{src: 'assets/menu-icon-bookmark.png', ontap: 'iconTapped'},\n\t\t\t{src: 'assets/menu-icon-bookmark.png', ontap: 'iconTapped'},\n\t\t\t{kind: Control},\n\t\t\t{kind: Group, tag: null, onActivate: 'iconGroupActivated', defaultKind: IconButton, components: [\n\t\t\t\t{src: 'assets/menu-icon-bookmark.png', active: true},\n\t\t\t\t{src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t{src: 'assets/menu-icon-bookmark.png'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'result', classes: 'onyx-sample-result', content: 'No button tapped yet.'}\n\t\t]}\n\t],\n\ticonTappedCounts: {},\n\ticonTapped: function (sender, event) {\n\t\tthis.iconTappedCounts[sender.name] = this.iconTappedCounts[sender.name] || 0;\n\t\tthis.$.result.setContent('The icon button was tapped: ' + (++this.iconTappedCounts[sender.name]));\n\t},\n\ttoggleChanged: function (sender, event) {\n\t\tthis.$.result.setContent(sender.name + ' was ' + (sender.getValue() ? ' selected.' : 'deselected.'));\n\t},\n\tordinals: ['1st', '2nd', '3rd'],\n\ticonGroupActivated: function (sender, event) {\n\t\tif (event.originator.getActive()) {\n\t\t\tvar selected = event.originator.indexInContainer();\n\t\t\tthis.$.result.setContent('The ' + this.ordinals[selected] + ' icon button in the group is selected.');\n\t\t}\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tButton = require('../../../enyo/lib/Button');\n\n/**\n* {@link onyx.Button} is an {@link enyo.Button} with Onyx styling applied. The\n* color of the button may be customized by specifying a background color.\n*\n* The `'onyx-affirmative'`, `'onyx-negative'`, and `'onyx-blue'` classes provide\n* some built-in presets.\n* ```\n* {kind: 'onyx.Button', content: 'Button'},\n* {kind: 'onyx.Button', content: 'Affirmative', classes: 'onyx-affirmative'},\n* {kind: 'onyx.Button', content: 'Negative', classes: 'onyx-negative'},\n* {kind: 'onyx.Button', content: 'Blue', classes: 'onyx-blue'},\n* {kind: 'onyx.Button', content: 'Custom', style: 'background-color: purple; color: #F1F1F1;'}\n* ```\n* For more information, see the documentation on\n* [Buttons]{@linkplain $dev-guide/building-apps/controls/buttons.html} in the\n* Enyo Developer Guide.\n*\n* @class onyx.Button\n* @extends enyo.Button\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends onyx.Button.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Button',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Button,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-button enyo-unselectable',\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tondown: 'down',\n\t\tonenter: 'enter',\n\t\tondragfinish: 'dragfinish',\n\t\tonleave: 'leave',\n\t\tonup: 'up'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdown: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.addClass('pressed');\n\t\tthis._isPressed = true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tenter: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tif(this._isPressed) {\n\t\t\tthis.addClass('pressed');\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragfinish: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.removeClass('pressed');\n\t\tthis._isPressed = false;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tleave: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.removeClass('pressed');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tup: function (sender, event) {\n\t\tif (this.disabled) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.removeClass('pressed');\n\t\tthis._isPressed = false;\n\t}\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind'),\n\tButton = require('../../enyo/lib/Button');\n\n/**\n* Fires when the menu item is selected.\n*\n* @event onyx.MenuItem#onSelect\n* @type {Object}\n* @property {enyo.Control} selected - The selected menu item.\n* @property {String} content - The selected menu item's content.\n* @public\n*/\n\n/**\n* Fires when the menu item's content changes.\n*\n* @event onyx.MenuItem#onItemContentChange\n* @type {Object}\n* @property {enyo.Control} content - The menu item's content.\n* @public\n*/\n\n/**\n* {@link onyx.MenuItem} is a button styled to look like a menu item, designed\n* for use in an {@link onyx.Menu}. When the MenuItem is tapped, it tells the\n* menu to hide itself and emits an [onSelect]{@link onyx.MenuItem#onSelect}\n* event with its content and a reference to itself. This event and its properties\n* may be handled by a client application to determine which menu item was selected.\n*\n* ```\n* enyo.kind({\n* \thandlers: {\n* \t\tonSelect: 'itemSelected'\n* \t},\n* \tcomponents: [\n* \t\t{kind: 'onyx.MenuDecorator', components: [\n* \t\t\t{content: 'Open Menu (floating)'},\n* \t\t\t{kind: 'onyx.Menu', floating: true, components: [\n* \t\t\t\t{content: '1'},\n* \t\t\t\t{content: '2'},\n* \t\t\t\t{classes: 'onyx-menu-divider'},\n* \t\t\t\t{content: 'Label', classes: 'onyx-menu-label'},\n* \t\t\t\t{content: '3'},\n* \t\t\t]}\n* \t\t]}\n* \t],\n* \titemSelected: function (sender, event) {\n* \t\tenyo.log('Menu Item Selected: ' + event.originator.content);\n* \t}\n* })\n* ```\n*\n* @class  onyx.MenuItem\n* @extends enyo.Button\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.MenuItem.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.MenuItem',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Button,\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonSelect: '',\n\t\tonItemContentChange: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-menu-item',\n\n\t/**\n\t* @private\n\t*/\n\ttag: 'div',\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tthis.silence();\n\t\tButton.prototype.create.apply(this, arguments);\n\t\tthis.unsilence();\n\t\tif (this.active){\n\t\t\tthis.bubble('onActivate');\n\t\t}\n\t},\n\n\t/**\n\t* Handles `ontap` events.\n\t*\n\t* @fires onyx.Menu#onRequestHideMenu\n\t* @fires onyx.MenuItem#onSelect\n\t* @private\n\t*/\n\ttap: function (sender) {\n\t\tButton.prototype.tap.apply(this, arguments);\n\t\tthis.bubble('onRequestHideMenu');\n\t\tthis.doSelect({selected:this, content:this.content});\n\t},\n\n\t/**\n\t* Sends notification that the item's content has changed.\n\t*\n\t* @fires onyx.MenuItem#onItemContentChange\n\t* @private\n\t*/\n\tcontentChanged: function (old) {\n\t\tButton.prototype.contentChanged.apply(this, arguments);\n\t\tthis.doItemContentChange({content: this.content});\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tButton = require('../../../enyo/lib/Button');\n\n/**\n* {@link onyx.RadioButton} is a radio button designed for use within an\n* {@link onyx.RadioGroup}.\n*\n* @class  onyx.RadioButton\n* @extends enyo.Button\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.RadioButton.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.RadioButton',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Button,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-radiobutton'\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tButton = require('../../../enyo/lib/Button'),\n\tGroupItem = require('../../../enyo/lib/GroupItem');\n\n/**\n* onyx.TabBar.Item is a special button for TabBar. This widget is\n* designed to be used only within TabBar.\n*\n* @class  onyx.TabBar.Item\n* @extends enyo.GroupItem\n* @ui\n* @private\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.TabBar.Item */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.TabBarItem',\n\n\t/**\n\t* @private\n\t*/\n\tkind: GroupItem,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-tab-item',\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonTabActivated: '',\n\t\tonTabCloseRequest: '',\n\t\tonTabSwitchRequest: '',\n\t\tonActivate: '',\n\t\tonShowTooltip: '',\n\t\tonHideTooltip: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonmouseover: 'navOver',\n\t\tonmouseout: 'navOut'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tnavOver: function (item) {\n\t\tthis.$.dissolve.addClass('onyx-tab-item-hovered');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tnavOut: function (item) {\n\t\tthis.$.dissolve.removeClass('onyx-tab-item-hovered');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{kind: Button, name: 'button', ontap: 'requestSwitch', onmouseover: 'showTooltipFromTab', onmouseout: 'doHideTooltip'},\n\t\t{classes: 'onyx-tab-item-dissolve', ontap: 'requestSwitch', name: 'dissolve', showing: false, onmouseover: 'showTooltipFromTab', onmouseout: 'doHideTooltip'},\n\t\t{classes: 'onyx-tab-item-close', name: 'closeButton' , ontap: 'requestClose'}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tGroupItem.prototype.create.apply(this, arguments);\n\t\tthis.$.button.setContent(this.content);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\traise: function () {\n\t\tthis.addClass('active');\n\t\tthis.$.dissolve.addClass('active');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tputBack: function () {\n\t\tthis.removeClass('active');\n\t\tthis.$.dissolve.removeClass('active');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsetActiveTrue: function () {\n\t\tthis.setActive(true);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tactiveChanged: function (inOldValue) {\n\t\t// called during destruction, hence the test on this.container\n\t\tif (this.container && this.hasNode()) {\n\t\t\tif (this.active) {\n\t\t\t\tthis.raise();\n\t\t\t} else {\n\t\t\t\tthis.putBack();\n\t\t\t}\n\t\t\tthis.doActivate();\n\t\t}\n\t\t// do not return true;\n\t\t// activate event must be propagated to my RadioGroup owner\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_origWidth: null,\n\n\t/**\n\t* @private\n\t*/\n\torigWidth: function () {\n\t\tthis._origWidth = this._origWidth || this.getBounds().width ;\n\t\treturn this._origWidth;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\treduce: function (coeff) {\n\t\tvar width = Math.floor(this.origWidth() * coeff) - this.$.closeButton.getBounds().width - 7;\n\n\t\tif (coeff === 1) {\n\t\t\tthis.$.dissolve.hide();\n\t\t} else {\n\t\t\tthis.$.dissolve.show();\n\t\t}\n\n\t\tthis.$.button.applyStyle('width', width + 'px');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestSwitch: function (inSender, inEvent) {\n\t\tvar i = this.indexInContainer();\n\t\tthis.doTabSwitchRequest({\n\t\t\tindex:    i,\n\t\t\tcaption:  this.content,\n\t\t\tuserData: this.userData,\n\t\t\tuserId:   this.userId\n\t\t});\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestClose: function (inSender, inEvent) {\n\t\tthis.doTabCloseRequest({ index: this.tabIndex });\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowTooltipFromTab: function (inSender, inEvent){\n\t\tthis.doShowTooltip({tooltipContent: this.tooltipMsg, bounds:this.getBounds()});\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tInput = require('../../../onyx/lib/Input'),\n\tInputDecorator = require('../../../onyx/lib/InputDecorator');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.GroupboxSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Groupboxes'},\n\t\t{kind: Groupbox, components: [\n\t\t\t{kind: GroupboxHeader, content: 'Header'},\n\t\t\t{content: 'I\\'m a group item!', style: 'padding: 8px;'},\n\t\t\t{content: 'I\\'m a group item!', style: 'padding: 8px;'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, components: [\n\t\t\t{content: 'I\\'m a group item!', style: 'padding: 8px;'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, components: [\n\t\t\t{kind: GroupboxHeader, content: 'Header'},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, style: 'width: 100%', placeholder: 'Enter text here'}\n\t\t\t]},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, style: 'width: 100%', value: 'Middle'}\n\t\t\t]},\n\t\t\t{kind: InputDecorator, style: 'background: lightblue;', components: [\n\t\t\t\t{kind: Input, style: 'width: 100%;', value: 'Last'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, components: [\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, style: 'width: 100%', placeholder: 'Enter text here'}\n\t\t\t]}\n\t\t]},\n\t\t{kind: Groupbox, components: [\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, type: 'password', style: 'width: 100%', placeholder: 'Enter Password'}\n\t\t\t]}\n\t\t]}\n\t]\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tGroup = require('../../../enyo/lib/Group');\n\nvar\n\tCheckbox = require('../../../onyx/lib/Checkbox'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.CheckboxSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Checkboxes'},\n\t\t{classes: 'onyx-sample-tools', components: [\n\t\t\t{kind: Checkbox, onchange: 'checkboxChanged'},\n\t\t\t{kind: Checkbox, onchange: 'checkboxChanged'},\n\t\t\t{kind: Checkbox, onchange: 'checkboxChanged', checked: true}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Checkboxes Group'},\n\t\t{kind: Group, classes: 'onyx-sample-tools group', onActivate: 'groupActivated', highlander: true, components: [\n\t\t\t{kind: Checkbox, checked: true},\n\t\t\t{kind: Checkbox},\n\t\t\t{kind: Checkbox}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'result', classes: 'onyx-sample-result', content: 'No button tapped yet.'}\n\t\t]}\n\t],\n\tcheckboxChanged: function (sender, event) {\n\t\tthis.$.result.setContent(sender.name + ' was ' + (sender.getValue() ? ' selected.' : 'deselected.'));\n\t},\n\tordinals: ['1st', '2nd', '3rd'],\n\tgroupActivated: function (sender, event) {\n\t\tif (event.originator.getActive()) {\n\t\t\tvar selected = event.originator.indexInContainer();\n\t\t\tthis.$.result.setContent('The ' + this.ordinals[selected] + ' checkbox in the group is selected.');\n\t\t}\n\t}\n});\n","var\n\tkind = require('../../../enyo/lib/kind'),\n\tutils = require('../../../enyo/lib/utils');\n\nvar\n\tCheckbox = require('../../../onyx/lib/Checkbox'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tInput = require('../../../onyx/lib/Input'),\n\tInputDecorator = require('../../../onyx/lib/InputDecorator'),\n\tRichText = require('../../../onyx/lib/RichText'),\n\tTextArea = require('../../../onyx/lib/TextArea');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.InputSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Inputs'},\n\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, placeholder: 'Enter text here', onchange: 'inputChanged'}\n\t\t\t]},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, placeholder: 'Search term', onchange: 'inputChanged'},\n\t\t\t\t{kind: 'Image', src: 'assets/search-input-search.png'}\n\t\t\t]},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, type: 'password', placeholder: 'Enter password', onchange: 'inputChanged'}\n\t\t\t]},\n\t\t\t{content: 'alwaysLookFocused: '},\n\t\t\t{kind: Checkbox, onchange: 'changeFocus'}\n\t\t]},\n\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, disabled: true, value: 'Disabled input'}\n\t\t\t]},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{content: 'Left: '},\n\t\t\t\t{kind: Input, value: 'Input Area', onchange: 'inputChanged'},\n\t\t\t\t{content: ' :Right'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'RichTexts'},\n\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: RichText, style: 'width: 200px;', placeholder: 'Enter text here', onchange: 'inputChanged'}\n\t\t\t]},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: RichText, style: 'width: 200px;', placeholder: 'Search term', onchange: 'inputChanged'},\n\t\t\t\t{kind: 'Image', src: 'assets/search-input-search.png'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'TextAreas'},\n\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: TextArea, placeholder: 'Enter text here', onchange: 'inputChanged'}\n\t\t\t]},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: TextArea, placeholder: 'Search term', onchange: 'inputChanged'},\n\t\t\t\t{kind: 'Image', src: 'assets/search-input-search.png'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'result', classes: 'onyx-sample-result', content: 'No input entered yet.'}\n\t\t]}\n\t],\n\tinputChanged: function (sender, event) {\n\t\tthis.$.result.setContent('Input: ' + sender.getValue());\n\t},\n\tchangeFocus: function (sender, event) {\n\t\tutils.forEach([this.$.inputDecorator, this.$.inputDecorator2, this.$.inputDecorator3], function(inItem) {\n\t\t\tinItem.setAlwaysLooksFocused(sender.getValue());\n\t\t\t// If disabling alwaysLooksFocused, we need to blur the\n\t\t\t// InputDecorator for the setting to go into effect\n\t\t\tif (!sender.getValue()) {\n\t\t\t\tinItem.triggerHandler('onblur');\n\t\t\t}\n\t\t});\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tPopup = require('../../../onyx/lib/Popup');\n\n/**\n* {@link onyx.Tooltip} is a subkind of {@link onyx.Popup} that works in\n* conjunction with an {@link onyx.TooltipDecorator}. It automatically displays\n* a tooltip when the user hovers over the decorator. The tooltip is positioned\n* around the decorator where there is available window space.\n*\n*  ```\n*\t{kind: 'onyx.TooltipDecorator', components: [\n*\t\t{kind: 'onyx.Button', content: 'Tooltip'},\n*\t\t{kind: 'onyx.Tooltip', content: 'I am a tooltip for a button.'}\n*\t]}\n*  ```\n*\n* You may also force a tooltip to be displayed by calling its `show()` method.\n*\n* @ui\n* @class onyx.Tooltip\n* @extends onyx.Popup\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Tooltip.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Tooltip',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Popup,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-tooltip below left-arrow',\n\n\t/**\n\t* If `true`, the tooltip is automatically dismissed when user stops hovering\n\t* over the decorator.\n\t*\n\t* @type {Boolean}\n\t* @default false\n\t* @public\n\t*/\n\tautoDismiss: false,\n\n\t/**\n\t* Hovering over the decorator for this length of time (in milliseconds)\n\t* causes the tooltip to appear.\n\t*\n\t* @type {Number}\n\t* @default 500\n\t* @public\n\t*/\n\tshowDelay: 500,\n\n\t/**\n\t* Default `'margin-left'` value.\n\t*\n\t* @type {Number}\n\t* @default -6\n\t* @public\n\t*/\n\tdefaultLeft: -6,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonRequestShowTooltip: 'requestShow',\n\t\tonRequestHideTooltip: 'requestHide'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestShow: function () {\n\t\tthis.showJob = setTimeout(this.bindSafely('show'), this.showDelay);\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcancelShow: function () {\n\t\tclearTimeout(this.showJob);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestHide: function () {\n\t\tthis.cancelShow();\n\t\treturn Popup.prototype.requestHide.apply(this, arguments);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowingChanged: function () {\n\t\tthis.cancelShow();\n\t\tthis.adjustPosition(true);\n\t\tPopup.prototype.showingChanged.apply(this, arguments);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tapplyPosition: function (inRect) {\n\t\tvar s = '';\n\t\tfor (var n in inRect) {\n\t\t\ts += (n + ':' + inRect[n] + (isNaN(inRect[n]) ? '; ' : 'px; '));\n\t\t}\n\t\tthis.addStyles(s);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tadjustPosition: function (belowActivator) {\n\t\tif (this.showing && this.hasNode()) {\n\t\t\tvar b = this.node.getBoundingClientRect();\n\n\t\t\t//when the tooltip bottom goes below the window height move it above the decorator\n\t\t\tif (b.top + b.height > window.innerHeight) {\n\t\t\t\tthis.addRemoveClass('below', false);\n\t\t\t\tthis.addRemoveClass('above', true);\n\t\t\t} else {\n\t\t\t\tthis.addRemoveClass('above', false);\n\t\t\t\tthis.addRemoveClass('below', true);\n\t\t\t}\n\n\t\t\t// when the tooltip's right edge is out of the window, align its right edge with the decorator left\n\t\t\t// edge (approx)\n\t\t\tif (b.left + b.width > window.innerWidth){\n\t\t\t\tthis.applyPosition({'margin-left': -b.width, bottom: 'auto'});\n\t\t\t\t//use the right-arrow\n\t\t\t\tthis.addRemoveClass('left-arrow', false);\n\t\t\t\tthis.addRemoveClass('right-arrow', true);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandleResize: function () {\n\t\t//reset the tooltip to align its left edge with the decorator\n\t\tthis.applyPosition({'margin-left': this.defaultLeft, bottom: 'auto'});\n\t\tthis.addRemoveClass('left-arrow', true);\n\t\tthis.addRemoveClass('right-arrow', false);\n\n\t\tthis.adjustPosition(true);\n\t\tPopup.prototype.handleResize.apply(this, arguments);\n\t}\n});","require('../../../enyo');\n\n\n\nvar\n\tkind = require('../kind'),\n\tutils = require('../utils'),\n\tplatform = require('../platform');\n\nvar\n\tControl = require('../Control'),\n\tScrollStrategy = require('../ScrollStrategy'),\n\tTouchScrollStrategy = require('../TouchScrollStrategy'),\n\tTranslateScrollStrategy = require('../TranslateScrollStrategy');\n\n/**\n* An [object]{@glossary Object} representing the scroll boundaries.\n*\n* @typedef {Object} enyo.Scroller~BoundaryObject\n* @property {Number} left - The left scroll position.\n* @property {Number} top - The top scroll position.\n* @property {Number} maxLeft - Maximum value for the left scroll position (minimum is always 0).\n* @property {Number} maxTop - Maximum value for the top scroll position (minimum is always 0).\n* @property {Number} clientHeight - The vertical size of the [scroller]{@link enyo.Scroller} on\n*\tscreen.\n* @property {Number} clientWidth - The horizontal size of the [scroller]{@link enyo.Scroller} on\n*\tscreen.\n* @property {Number} width - The horizontal size of the full area of the scrolled region.\n* @property {Number} height - The vertical size of the full area of the scrolled region.\n* @property {Number} xDir - Either `1`, `-1`, or `0`, indicating positive movement along the\n*\tx-axis, negative movement, or no movement, respectively.\n* @property {Number} yDir - Either `1`, `-1`, or `0`, indicating positive movement along the\n*\ty-axis, negative movement, or no movement, respectively.\n*/\n\n\n/**\n* An [object]{@glossary Object} representing the overscroll boundaries.\n*\n* @typedef {Object} enyo.Scroller~OverscrollBoundaryObject\n* @property {Number} overleft - The left overscroll position.\n* @property {Number} overtop - The top overscroll position.\n*/\n\n/**\n* The extended {@glossary event} [object]{@glossary Object} that is provided \n* when a scroll event is fired.\n*\n* @typedef {Object} enyo.Scroller~ScrollEvent\n* @property {enyo.Scroller~BoundaryObject} bounds Current values of scroller bounds.\n*/\n\n/**\n* Fires when a scrolling action starts.\n*\n* @event enyo.Scroller#onScrollStart\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently \n*\tpropagated the {@glossary event}.\n* @property {enyo.Scroller~ScrollEvent} event - An [object]{@glossary Object} containing \n*\tevent information.\n* @public\n*/\n\n/**\n* Fires while a scrolling action is in progress.\n*\n* @event enyo.Scroller#onScroll\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently \n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing \n*\tevent information.\n* @public\n*/\n\n/**\n* Fires when a scrolling action stops.\n*\n* @event enyo.Scroller#onScrollStop\n* @type {Object}\n* @property {Object} sender - The [component]{@link enyo.Component} that most recently \n*\tpropagated the {@glossary event}.\n* @property {Object} event - An [object]{@glossary Object} containing \n*\tevent information.\n* @public\n*/\n\n/**\n* {@link enyo.Scroller} is a scroller suitable for use in both desktop and mobile\n* applications.\n* \n* In some mobile environments, a default scrolling solution is not implemented for\n* DOM elements. In such cases, `enyo.Scroller` implements a touch-based scrolling\n* solution, which may be opted into either globally (by setting\n* [touchScrolling]{@link enyo.Scroller#touchScrolling} to `true`) or on a\n* per-instance basis (by specifying a [strategyKind]{@link enyo.Scroller#strategyKind}\n* of `\"TouchScrollStrategy\"`).\n* \n* For more information, see the documentation on\n* [Scrollers]{@linkplain $dev-guide/building-apps/layout/scrollers.html} in the\n* Enyo Developer Guide.\n*\n* @class enyo.Scroller\n* @public\n*/\nvar Scroller = module.exports = kind(\n\t/** @lends enyo.Scroller.prototype */ {\n\t\n\tname: 'enyo.Scroller',\n\t\n\tkind: Control,\n\t\n\t/**\n\t* @private\n\t*/\n\tpublished: \n\t\t/** @lends enyo.Scroller.prototype */ {\n\n\t\t/**\n\t\t* Specifies how to horizontally scroll.  Acceptable values are `'scroll'`, `'auto'`,\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\n\t\t* scroll strategy.\n\t\t* \n\t\t* @type {String}\n\t\t* @default 'default'\n\t\t* @public\n\t\t*/\n\t\thorizontal: 'default',\n\n\t\t/**\n\t\t* Specifies how to vertically scroll.  Acceptable values are `'scroll'`, `'auto'`,\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\n\t\t* scroll strategy.\n\t\t* \n\t\t* @type {String}\n\t\t* @default 'default'\n\t\t* @public\n\t\t*/\n\t\tvertical: 'default',\n\n\t\t/**\n\t\t* The vertical scroll position.\n\t\t* \n\t\t* @type {Number}\n\t\t* @default 0\n\t\t* @public\n\t\t*/\n\t\tscrollTop: 0,\n\n\t\t/**\n\t\t* The horizontal scroll position.\n\t\t* \n\t\t* @type {Number}\n\t\t* @default 0\n\t\t* @public\n\t\t*/\n\t\tscrollLeft: 0,\n\n\t\t/**\n\t\t* Maximum height of the scroll content.\n\t\t* \n\t\t* @type {Number}\n\t\t* @default null\n\t\t* @memberof enyo.Scroller.prototype\n\t\t* @public\n\t\t*/\n\t\tmaxHeight: null,\n\n\t\t/**\n\t\t* Set to `true` to make this [scroller]{@link enyo.Scroller} select a \n\t\t* platform-appropriate touch-based scrolling strategy. Note that if you specify a value \n\t\t* for [strategyKind]{@link enyo.Scroller#strategyKind}, that will take precedence over\n\t\t* this setting.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\ttouch: false,\n\t\t/**\n\t\t* Specifies a type of scrolling. The [scroller]{@link enyo.Scroller} will attempt to \n\t\t* automatically select a strategy compatible with the runtime environment. Alternatively,\n\t\t* you may choose to use a specific strategy:\n\t\t* \n\t\t* - [ScrollStrategy]{@link enyo.ScrollStrategy} is the default and implements no \n\t\t*\tscrolling, relying instead on the environment to scroll properly.\n\t\t* - [TouchScrollStrategy]{@link enyo.TouchScrollStrategy} implements a touch scrolling \n\t\t*\tmechanism.\n\t\t* - [TranslateScrollStrategy]{@link enyo.TranslateScrollStrategy} implements a touch \n\t\t*\tscrolling mechanism using translations; it is currently recommended only for Android\n\t\t*\t3 and 4, and Windows Phone 8.\n\t\t* - [TransitionScrollStrategy]{@link enyo.TransitionScrollStrategy} implements a touch \n\t\t*\tscrolling mechanism using CSS transitions; it is currently recommended only for iOS \n\t\t*\t5 and later.\n\t\t*\n\t\t* @type {String}\n\t\t* @default 'ScrollStrategy'\n\t\t* @public\n\t\t*/\n\t\tstrategyKind: ScrollStrategy,\n\n\t\t/**\n\t\t* Set to `true` to display a scroll thumb in touch [scrollers]{@link enyo.Scroller}.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tthumb: true,\n\n\t\t/**\n\t\t* If `true`, mouse wheel may be used to move the [scroller]{@link enyo.Scroller}.\n\t\t* \n\t\t* @type {Boolean}\n\t\t* @default true\n\t\t* @public\n\t\t*/\n\t\tuseMouseWheel: true\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonScrollStart: '',\n\t\tonScroll: '',\n\t\tonScrollStop: ''\n\t},\n\n\t/**\n\t* If `true`, enables touch scrolling globally.\n\t*\n\t* @name touchScrolling\n\t* @type {Boolean}\n\t* @default undefined\n\t* @memberof enyo.Scroller.prototype\n\t* @public\n\t*/\n\n\t/**\n\t* If `true` and this is a touch [scroller]{@link enyo.Scroller}, the scroller\n\t* will overscroll and bounce back at the edges.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\ttouchOverscroll: true,\n\n\t/**\n\t* If `true`, the [scroller]{@link enyo.Scroller} will not propagate `dragstart` \n\t* [events]{@glossary event} that cause it to start scrolling.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\tpreventDragPropagation: true,\n\n\t/**\n\t* If `true`, the [scroller]{@link enyo.Scroller} will not propagate scroll \n\t* [events]{@glossary event}.\n\t*\n\t* @type {Boolean}\n\t* @default true\n\t* @public\n\t*/\n\tpreventScrollPropagation: true,\n\n\t/**\n\t* Needed to allow global mods to `enyo.Scroller.touchScrolling`.\n\t* \n\t* @private\n\t*/\n\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonscroll: 'domScroll',\n\t\tonScrollStart: 'scrollStart',\n\t\tonScroll: 'scroll',\n\t\tonScrollStop: 'scrollStop'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'enyo-scroller',\n\n\t/**\n\t* @private\n\t*/\n\tstatics: {\n\t\tosInfo: [\n\t\t\t{os: 'android', version: 3},\n\t\t\t{os: 'androidChrome', version: 18},\n\t\t\t{os: 'androidFirefox', version: 16},\n\t\t\t{os: 'firefoxOS', version: 16},\n\t\t\t{os: 'ios', version: 5},\n\t\t\t{os: 'webos', version: 1e9},\n\t\t\t{os: 'blackberry', version:1e9},\n\t\t\t{os: 'tizen', version: 2}\n\t\t],\n\t\t//* Returns true if platform should have touch events.\n\t\thasTouchScrolling: function() {\n\t\t\tfor (var i=0, t; (t=this.osInfo[i]); i++) {\n\t\t\t\tif (platform[t.os]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// special detection for IE10+ on touch devices\n\t\t\tif ((platform.ie >= 10 || platform.windowsPhone >= 8) && platform.touch) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t\tReturns true if the platform has native div scrollers (desktop\n\t\t\tbrowsers always have them).\n\t\t*/\n\t\thasNativeScrolling: function() {\n\t\t\tfor (var i=0, t; (t=this.osInfo[i]); i++) {\n\t\t\t\tif (platform[t.os] < t.version) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\tgetTouchStrategy: function() {\n\t\t\treturn (platform.androidChrome >= 27) || (platform.android >= 3) || (platform.windowsPhone === 8) || (platform.webos >= 4)\n\t\t\t\t? TranslateScrollStrategy\n\t\t\t\t: TouchScrollStrategy;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcontrolParentName: 'strategy',\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tcreate: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.horizontalChanged();\n\t\t\tthis.verticalChanged();\n\t\t\tthis.useMouseWheelChanged();\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\timportProps: kind.inherit(function (sup) {\n\t\treturn function(inProps) {\n\t\t\tsup.apply(this, arguments);\n\t\t\t// allow global overriding of strategy kind\n\t\t\tif (inProps && inProps.strategyKind === undefined && (Scroller.touchScrolling || this.touch)) {\n\t\t\t\tthis.strategyKind = Scroller.getTouchStrategy();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tinitComponents: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tthis.strategyKindChanged();\n\t\t\tsup.apply(this, arguments);\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\trendered: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tthis.syncStrategy();\n\t\t};\n\t}),\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tsyncStrategy: function() {\n\t\tthis.$.strategy.setScrollLeft(this.scrollLeft);\n\t\tthis.$.strategy.setScrollTop(this.scrollTop);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstrategyKindChanged: function () {\n\t\tif (this.$.strategy) {\n\t\t\tthis.$.strategy.destroy();\n\t\t\tthis.controlParent = null;\n\t\t}\n\t\t// note: createComponents automatically updates controlParent.\n\t\tthis.createStrategy();\n\t\tif (this.hasNode()) {\n\t\t\tthis.render();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreateStrategy: function () {\n\t\tthis.createComponents([{name: 'strategy', maxHeight: this.maxHeight,\n\t\t\tkind: this.strategyKind, thumb: this.thumb,\n\t\t\tpreventDragPropagation: this.preventDragPropagation,\n\t\t\toverscroll:this.touchOverscroll, isChrome: true}]);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetStrategy: function () {\n\t\treturn this.$.strategy;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxHeightChanged: function () {\n\t\tthis.$.strategy.setMaxHeight(this.maxHeight);\n\t},\n\n\t/**\n\t* @method\n\t* @private\n\t*/\n\tshowingChanged: kind.inherit(function (sup) {\n\t\treturn function() {\n\t\t\tsup.apply(this, arguments);\n\t\t\tif (this.showing) {\n\t\t\t\tthis.syncStrategy();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tshowingChangedHandler: kind.inherit(function(sup) {\n\t\treturn function(sender, event) {\n\t\t\tif (this.showing && event.showing) {\n\t\t\t\tthis.syncStrategy();\n\t\t\t}\n\t\t};\n\t}),\n\n\t/**\n\t* @private\n\t*/\n\tthumbChanged: function () {\n\t\tthis.$.strategy.setThumb(this.thumb);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thorizontalChanged: function () {\n\t\tthis.$.strategy.setHorizontal(this.horizontal);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tverticalChanged: function () {\n\t\tthis.$.strategy.setVertical(this.vertical);\n\t},\n\n\t// FIXME: these properties are virtual; property changed methods are fired only if\n\t// property value changes, not if getter changes.\n\t\n\t/**\n\t* Sets the horizontal scroll position.\n\t*\n\t* @param {Number} left - The horizontal scroll position in pixels.\n\t* @public\n\t*/\n\tsetScrollLeft: function (left) {\n\t\tthis.$.strategy.setScrollLeft(left);\n\t},\n\n\t/**\n\t* Sets the vertical scroll position.\n\t*\n\t* @param {Number} top - The vertical scroll position in pixels.\n\t* @public\n\t*/\n\tsetScrollTop: function (top) {\n\t\tthis.$.strategy.setScrollTop(top);\n\t},\n\n\t/**\n\t* Retrieves the horizontal scroll position.\n\t*\n\t* @returns {Number} The horizontal scroll position in pixels.\n\t* @public\n\t*/\n\tgetScrollLeft: function () {\n\t\t// sync our internal property\n\t\tthis.scrollLeft = this.$.strategy.getScrollLeft();\n\t\treturn this.scrollLeft;\n\t},\n\n\t/**\n\t* Retrieves the vertical scroll position.\n\t*\n\t* @returns {Number} The vertical scroll position in pixels.\n\t* @public\n\t*/\n\tgetScrollTop: function () {\n\t\t// sync our internal property\n\t\tthis.scrollTop = this.$.strategy.getScrollTop();\n\t\treturn this.scrollTop;\n\t},\n\n\t/**\n\t* Retrieves the scroll boundaries of the [scroller]{@link enyo.Scroller}.\n\t* \n\t* @returns {enyo.Scroller~BoundaryObject} An [object]{@glossary Object} describing the \n\t*\tscroll boundaries.\n\t* @public\n\t*/\n\tgetScrollBounds: function () {\n\t\tvar bounds  = this.$.strategy.getScrollBounds();\n\t\tif (\n\t\t\t(bounds.xDir !== -1 && bounds.xDir !== 0 && bounds.xDir !== 1) ||\n\t\t\t(bounds.yDir !== -1 && bounds.yDir !== 0 && bounds.yDir !== 1)\n\t\t) {\n\t\t\tthis.decorateBounds(bounds);\n\t\t}\n\t\t// keep our properties synchronized always and without extra calls\n\t\tthis.scrollTop  = bounds.top;\n\t\tthis.scrollLeft = bounds.left;\n\t\treturn bounds;\n\t},\n\n\t/** \n\t* Trigger a remeasurement of the scroller's metrics (specifically, the\n\t* size of its viewport, the size of its contents and the difference between\n\t* the two, which determines the extent to which the scroller may scroll).\n\t* \n\t* You should generally not need to call this from application code, as the\n\t* scroller usually remeasures automatically whenever needed. This method\n\t* exists primarily to support an internal use case for\n\t* [enyo.DataList]{@link enyo.DataList}.\n\t*\n\t* @public\n\t*/\n\tremeasure: function() {\n\t\tvar s = this.$.strategy;\n\t\tif (s.remeasure) s.remeasure();\n\t},\n\n\t/**\n\t* Scrolls the given [control]{@link enyo.Control} into view.\n\t*\n\t* @param {enyo.Control} ctl - The control to make visible in the\n\t*\t[scroller's]{@link enyo.Scroller} viewport.\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top\n\t* of the scroller.\n\t* @public\n\t*/\n\tscrollIntoView: function (ctl, alignWithTop) {\n\t\tthis.$.strategy.scrollIntoView(ctl, alignWithTop);\n\t},\n\n\t/** \n\t* Scrolls to the specified position.\n\t*\n\t* @param {Number} x - The `x` position in pixels.\n\t* @param {Number} y - The `y` position in pixels.\n\t* @public\n\t*/\n\tscrollTo: function (x, y) {\n\t\tthis.$.strategy.scrollTo(x, y);\n\t},\n\n\t/**\n\t* Ensures that the given [control]{@link enyo.Control} is visible in the \n\t* [scroller's]{@link enyo.Scroller} viewport. Unlike \n\t* [scrollIntoView()]{@link enyo.Scroller#scrollIntoView}, which uses DOM's \n\t* [scrollIntoView()]{@glossary scrollIntoView}, this only affects the current \n\t* scroller.\n\t*\n\t* @param {enyo.Control} ctl - The [control]{@link enyo.Control} to make visible in the\n\t*\t[scroller's]{@link enyo.Scroller} viewport.\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\n\t*\tscroller.\n\t* @public\n\t*/\n\tscrollToControl: function (ctl, alignWithTop) {\n\t\tthis.scrollToNode(ctl.hasNode(), alignWithTop);\n\t},\n\n\t/** \n\t* Ensures that the given node is visible in the [scroller's]{@link enyo.Scroller} viewport.\n\t*\n\t* @param {Node} node - The node to make visible in the [scroller's]{@link enyo.Scroller}\n\t*\tviewport.\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\n\t*\tscroller.\n\t* @public\n\t*/\n\tscrollToNode: function (node, alignWithTop) {\n\t\tthis.$.strategy.scrollToNode(node, alignWithTop);\n\t},\n\n\t/** \n\t* Stops the scroller if it is currently animating.\n\t* \n\t* @public\n\t*/\n\tstop: function() {\n\t\tif (typeof this.$.strategy.stop == 'function') {\n\t\t\tthis.$.strategy.stop(true);\n\t\t}\n\t},\n\n\t/** \n\t* Adds current values of `getScrollBounds()` to {@glossary event}.\n\t* \n\t* @private\n\t*/\n\tdecorateScrollEvent: function (e) {\n\t\tvar bounds = e.scrollBounds = e.scrollBounds || this.$.strategy._getScrollBounds();\n\t\t// in the off chance that the event already had scrollBounds then we need\n\t\t// to make sure they are decorated\n\t\tif (\n\t\t\t(bounds.xDir !== -1 && bounds.xDir !== 0 && bounds.xDir !== 1) ||\n\t\t\t(bounds.yDir !== -1 && bounds.yDir !== 0 && bounds.yDir !== 1)\n\t\t) {\n\t\t\tthis.decorateBounds(bounds);\n\t\t}\n\t\t// keep our properties synchronized always and without extra calls\n\t\tthis.scrollTop  = bounds.top;\n\t\tthis.scrollLeft = bounds.left;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdecorateBounds: function (bounds) {\n\t\tvar x       = this.scrollLeft - bounds.left,\n\t\t\ty       = this.scrollTop  - bounds.top;\n\t\tbounds.xDir = (x < 0? 1: x > 0? -1: 0);\n\t\tbounds.yDir = (y < 0? 1: y > 0? -1: 0);\n\t\t// we update our current bounds properties so we don't have to unnecessarily\n\t\t// call getScrollTop/getScrollLeft because we already have the current data\n\t\tthis.scrollLeft = bounds.left;\n\t\tthis.scrollTop  = bounds.top;\n\t},\n\n\t/** \n\t* Normalizes scroll {@glossary event} to `onScroll`.\n\t*\n\t* @fires enyo.Scroller#onScroll\n\t* @private\n\t*/\n\tdomScroll: function (sender, e) {\n\t\t// if a scroll event originated here, pass it to our strategy to handle\n\t\tif (this.$.strategy.domScroll && e.originator == this) {\n\t\t\tthis.$.strategy.domScroll(sender, e);\n\t\t}\n\t\tthis.decorateScrollEvent(e);\n\t\tthis.doScroll(e);\n\t\treturn true;\n\t},\n\n\t/**\n\t* @returns {Boolean} `true` if the current scroll {@glossary event} should\n\t* be stopped; `false` if it should be allowed to propagate.\n\t* @private\n\t*/\n\tshouldStopScrollEvent: function (e) {\n\t\treturn (this.preventScrollPropagation &&\n\t\t\te.originator.owner != this.$.strategy);\n\t},\n\n\t/**\n\t* Calls [shouldStopScrollEvent()]{@link enyo.Scroller#shouldStopScrollEvent} to\n\t* determine whether current scroll {@glossary event} should be stopped.\n\t*\n\t* @private\n\t*/\n\tscrollStart: function (sender, e) {\n\t\tif (!this.shouldStopScrollEvent(e)) {\n\t\t\tthis.decorateScrollEvent(e);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t/** \n\t* Either propagates or stops the current scroll {@glossary event}.\n\t*\n\t* @private\n\t*/\n\tscroll: function (sender, e) {\n\t\t// note: scroll event can be native dom or generated.\n\t\tvar stop;\n\t\tif (e.dispatchTarget) {\n\t\t\t// allow a dom event if it orignated with this scroller or its strategy\n\t\t\tstop = this.preventScrollPropagation && !(e.originator == this ||\n\t\t\t\te.originator.owner == this.$.strategy);\n\t\t} else {\n\t\t\tstop = this.shouldStopScrollEvent(e);\n\t\t}\n\t\tif (!stop) {\n\t\t\tthis.decorateScrollEvent(e);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t* Calls [shouldStopScrollEvent()]{@link enyo.Scroller#shouldStopScrollEvent} to\n\t* determine whether current scroll {@glossary event} should be stopped.\n\t*\n\t* @private\n\t*/\n\tscrollStop: function (sender, e) {\n\t\tif (!this.shouldStopScrollEvent(e)) {\n\t\t\tthis.decorateScrollEvent(e);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t* Scrolls to the top of the scrolling region.\n\t*\n\t* @public\n\t*/\n\tscrollToTop: function () {\n\t\tthis.setScrollTop(0);\n\t},\n\n\t/**\n\t* Scrolls to the bottom of the scrolling region.\n\t*\n\t* @public\n\t*/\n\tscrollToBottom: function () {\n\t\tthis.setScrollTop(this.getScrollBounds().maxTop);\n\t},\n\n\t/**\n\t* Scrolls to the right edge of the scrolling region.\n\t*\n\t* @public\n\t*/\n\tscrollToRight: function () {\n\t\tthis.setScrollLeft(this.getScrollBounds().maxLeft);\n\t},\n\n\t/**\n\t* Scrolls to the left edge of the scrolling region.\n\t*\n\t* @public\n\t*/\n\tscrollToLeft: function () {\n\t\tthis.setScrollLeft(0);\n\t},\n\n\t/**\n\t* Ensures scroll position is in bounds.\n\t*\n\t* @public\n\t*/\n\tstabilize: function () {\n\t\tvar s = this.getStrategy();\n\t\tif (s.stabilize) {\n\t\t\ts.stabilize();\n\t\t}\n\t},\n\n\t/**\n\t* Sends the [useMouseWheel]{@link enyo.Scroller#useMouseWheel} property to the scroll \n\t* strategy.\n\t*\n\t* @private\n\t*/\n\tuseMouseWheelChanged: function () {\n\t\tthis.$.strategy.setUseMouseWheel(this.useMouseWheel);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tresize: kind.inherit(function (sup) {\n\t\treturn function () {\n\t\t\tif (this.getAbsoluteShowing(true)) {\n\t\t\t\tsup.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t})\n});\n\n// provide a touch scrolling solution by default when the environment is mobile\nif (Scroller.hasTouchScrolling()) {\n\tScroller.prototype.strategyKind = Scroller.getTouchStrategy();\n}","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind');\n\nvar\n\tButton = require('../../onyx/lib/Button');\n\n/**\n* {@link onyx.PickerButton} is a button that, when tapped, shows an\n* {@link onyx.Picker}. Once an item is selected, the list of items closes, but\n* the item stays selected and the PickerButton displays the choice that was made.\n*\n* @class  onyx.PickerButton\n* @extends onyx.Button\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.PickerButton.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.PickerButton',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Button,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonChange: 'change'\n\t},\n\n\t/**\n\t* Handles [onChange]{@link onyx.Picker#onChange} event that is waterfalled\n\t* down from {@link onyx.PickerDecorator}.\n\t*\n\t* @private\n\t*/\n\tchange: function (sender, event) {\n\t\tif (event.content !== undefined){\n\t\t\tthis.setContent(event.content);\n\t\t}\n\t}\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind'),\n\tControl = require('../../enyo/lib/Control');\n\nvar\n\tButton = require('../../onyx/lib/Button');\n\n/**\n* {@link onyx.TooltipDecorator} is a control that couples an {@link onyx.Tooltip}\n* with an activating control, such as a button. The tooltip is displayed when the\n* activator generates an `onenter` event:\n*\n*  ```\n* \t{kind: 'onyx.TooltipDecorator', components: [\n* \t\t{kind: 'onyx.Button', content: 'Tooltip'},\n* \t\t{kind: 'onyx.Tooltip', content: 'I am a tooltip for a button.'}\n* \t]}\n* \t```\n*\n* Here's an example with an {@link onyx.Input} control and an\n* {@link onyx.InputDecorator} around the input:\n*\n* ```\n* \t{kind: 'onyx.TooltipDecorator', components: [\n* \t\t{kind: 'onyx.InputDecorator', components: [\n* \t\t\t{kind: 'onyx.Input', placeholder: 'Just an input...'}\n* \t\t]},\n* \t\t{kind: 'onyx.Tooltip', content: 'I am a tooltip for an input.'}\n* \t]}\n* \t```\n*\n* @ui\n* @class onyx.TooltipDecorator\n* @extends enyo.Control\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends onyx.TooltipDecorator.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.TooltipDecorator',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tdefaultKind: Button,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-popup-decorator',\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonenter: 'enter',\n\t\tonleave: 'leave'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tenter: function () {\n\t\tthis.requestShowTooltip();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tleave: function () {\n\t\tthis.requestHideTooltip();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttap: function () {\n\t\tthis.requestHideTooltip();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestShowTooltip: function () {\n\t\tthis.waterfallDown('onRequestShowTooltip');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestHideTooltip: function () {\n\t\tthis.waterfallDown('onRequestHideTooltip');\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.ButtonSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Buttons'},\n\t\t{classes: 'onyx-sample-tools', components: [\n\t\t\t{kind: Button, content: 'Button', ontap:'buttonTapped'}\n\t\t]},\n\t\t{classes: 'onyx-sample-tools', components: [\n\t\t\t{kind: Button, content: 'Affirmative', classes: 'onyx-affirmative', ontap:'buttonTapped'},\n\t\t\t{kind: Button, content: 'Negative', classes: 'onyx-negative', ontap:'buttonTapped'},\n\t\t\t{kind: Button, content: 'Blue', classes: 'onyx-blue', ontap:'buttonTapped'},\n\t\t\t{kind: Button, content: 'Dark', classes: 'onyx-dark', ontap:'buttonTapped'},\n\t\t\t{kind: Button, content: 'Custom', style: 'background-color: purple; color: #F1F1F1;', ontap:'buttonTapped'}\n\t\t]},\n\t\t{classes: 'onyx-sample-tools', components: [\n\t\t\t{kind: Button, content: 'Active', classes: 'active', ontap:'buttonTapped'},\n\t\t\t{kind: Button, content: 'Disabled', disabled: true, ontap:'buttonTapped'},\n\t\t\t{kind: Button, content: 'Active Disabled', classes: 'active', disabled: true, ontap:'buttonTapped'}\n\t\t]},\n\t\t{classes: 'onyx-sample-tools', components: [\n\t\t\t{kind: Button, content: 'Tall Button', style: 'height: 70px;', ontap:'buttonTapped'}\n\t\t]},\n\t\t{classes: 'onyx-sample-divider', content: 'Buttons with images'},\n\t\t{classes: 'onyx-sample-tools', components: [\n\t\t\t{kind: Button, name:'Image Button', ontap:'buttonTapped', components: [\n\t\t\t\t{tag: 'img', attributes: {src: 'assets/enyo-logo-small.png'}},\n\t\t\t\t{content: 'There is an image here'}\n\t\t\t]},\n\t\t\t{kind: Button, name:'Fishbowl Button', ontap:'buttonTapped', components: [\n\t\t\t\t{_kind: 'onyx.Icon', src: 'assets/fish_bowl.png'}\n\t\t\t]}\n\t\t]},\n\t\t{kind: Groupbox, classes:'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name:'result', classes:'onyx-sample-result', content:'No button tapped yet.'}\n\t\t]}\n\t],\n\tbuttonTapped: function (sender, event) {\n\t\tif (sender.content){\n\t\t\tthis.$.result.setContent('The \\'' + sender.getContent() + '\\' button was tapped');\n\t\t} else {\n\t\t\tthis.$.result.setContent('The \\'' + sender.getName() + '\\' button was tapped');\n\t\t}\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tInput = require('../../../onyx/lib/Input'),\n\tInputDecorator = require('../../../onyx/lib/InputDecorator'),\n\tPopup = require('../../../onyx/lib/Popup'),\n\tSpinner = require('../../../onyx/lib/Spinner');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.PopupSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Popups'},\n\t\t{classes: 'onyx-sample-tools', components: [\n\t\t\t{kind: Button, content: 'Basic Popup', ontap: 'showPopup', popup: 'basicPopup'},\n\t\t\t{name: 'basicPopup', kind: Popup, centered: true, floating: true, classes:'onyx-sample-popup', style: 'padding: 10px;', content: 'Popup...'},\n\t\t\t{tag: 'br'},\n\t\t\t{kind: Button, content: 'Popup w/Spinner (Dark)', ontap: 'showPopup', popup: 'spinnerPopup'},\n\t\t\t{name: 'spinnerPopup', classes: 'onyx-sample-popup', kind: Popup, centered: true, floating: true, onHide: 'popupHidden', scrim: true, components: [\n\t\t\t\t{kind: Spinner},\n\t\t\t\t{content: 'Popup'}\n\t\t\t]},\n\t\t\t{tag: 'br'},\n\t\t\t{kind: Button, content: 'Popup w/Spinner (Light)', ontap: 'showPopup', popup: 'lightPopup'},\n\t\t\t{name: 'lightPopup', classes: 'onyx-sample-popup', style: 'background: #eee;color: black;', kind: Popup, centered: true, floating: true, onHide: 'popupHidden', scrim: true, components: [\n\t\t\t\t{kind: Spinner, classes: 'onyx-light'},\n\t\t\t\t{content: 'Popup'}\n\t\t\t]},\n\t\t\t{tag: 'br'},\n\t\t\t{kind: Button, content: 'Modal Popup with Input', ontap: 'showPopup', popup: 'modalPopup'},\n\t\t\t{name: 'modalPopup', classes: 'onyx-sample-popup', kind: Popup, centered: true, modal: true, floating: true, onShow: 'popupShown', onHide: 'popupHidden', components: [\n\t\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t\t{kind: Input}\n\t\t\t\t]},\n\t\t\t\t{tag: 'br'},\n\t\t\t\t{kind: Button, content: 'Close', ontap: 'closeModalPopup'},\n\t\t\t\t{kind: Button, content: 'Another!', ontap: 'showPopup', popup: 'lightPopup'}\n\t\t\t]},\n\t\t\t{tag: 'br'},\n\t\t\t{kind: Button, content: 'Popup at Event (right)', ontap: 'showPopupAtEvent', popup: 'rightEventPopup', style: 'float: right;'},\n\t\t\t{kind: Button, content: 'Popup at Event', ontap: 'showPopupAtEvent', popup: 'leftEventPopup'},\n\t\t\t{name: 'leftEventPopup', classes: 'onyx-sample-popup', kind: Popup, modal: true, floating: true, content: 'Anchor defaults<br/>to top left corner', allowHtml: true},\n\t\t\t{name: 'rightEventPopup', classes: 'onyx-sample-popup', kind: Popup, modal: true, floating: true, content: 'Adjusts anchor to<br/>stay in viewport', allowHtml: true},\n\t\t\t{tag: 'br'},\n\t\t\t{kind: Button, content: 'Two Popups', ontap: 'showTwoPopups'},\n\t\t\t{name: 'firstPopup', classes: 'onyx-sample-popup', kind: Popup, modal: false, floating: true, content: 'Popup 1', style: 'top: 20px; left: 20px'},\n\t\t\t{name: 'secondPopup', classes: 'onyx-sample-popup', kind: Popup, modal: false, floating: true, content: 'Popup 2', style: 'top: 20px; left: 200px'}\n\t\t]}\n\t],\n\tshowPopup: function (sender) {\n\t\tvar p = this.$[sender.popup];\n\t\tif (p) {\n\t\t\tp.show();\n\t\t}\n\t},\n\tshowPopupAtEvent: function (sender, event) {\n\t\tvar p = this.$[sender.popup];\n\t\tif (p) {\n\t\t\tp.showAtEvent(event);\n\t\t}\n\t},\n\tpopupHidden: function () {\n\t\t// FIXME: needed to hide ios keyboard\n\t\tdocument.activeElement.blur();\n\t\tif(this.$.modalPopup.showing) {   // Refocus input on modal\n\t\t\tthis.startJob('focus', function () { this.$.input.focus(); }, 500);\n\t\t}\n\t},\n\tpopupShown: function () {\n\t\t// FIXME: does not focus input on android.\n\t\tthis.$.input.focus();\n\t\tthis.startJob('focus', function () { this.$.input.focus(); }, 500);\n\t},\n\tcloseModalPopup: function () {\n\t\tthis.$.modalPopup.hide();\n\t},\n\tshowTwoPopups: function () {\n\t\tthis.$.firstPopup.show();\n\t\tthis.$.secondPopup.show();\n\t\tthis.startJob('clearSecond', function () { this.$.secondPopup.hide(); }, 2000);\n\t}\n});","var\n\tanimation = require('../../../enyo/lib/animation'),\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tCheckbox = require('../../../onyx/lib/Checkbox'),\n\tInput = require('../../../onyx/lib/Input'),\n\tInputDecorator = require('../../../onyx/lib/InputDecorator'),\n\tProgressBar = require('../../../onyx/lib/ProgressBar'),\n\tProgressButton = require('../../../onyx/lib/ProgressButton'),\n\tSlider = require('../../../onyx/lib/Slider');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.ProgressSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Progress Bars'},\n\t\t{kind: ProgressBar, progress: 25},\n\t\t{kind: ProgressBar, animateStripes: false, progress: 25},\n\t\t{kind: ProgressBar, progress: 25, barClasses: 'onyx-green'},\n\t\t{kind: ProgressBar, progress: 25, barClasses: 'onyx-red'},\n\t\t{kind: ProgressBar, progress: 25, barClasses: 'onyx-dark'},\n\t\t{kind: ProgressBar, animateStripes: false, barClasses: 'onyx-light', progress: 50},\n\t\t{kind: ProgressBar, showStripes: false, progress: 75},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Progress Buttons'},\n\t\t{kind: ProgressButton, progress: 25, onCancel:'clearValue', components: [\n\t\t\t{content: '0'},\n\t\t\t{content: '100', style: 'float: right;'}\n\t\t]},\n\t\t{kind: ProgressButton, animateStripes: false, barClasses: 'onyx-dark', progress: 50, onCancel:'clearValue'},\n\t\t{kind: ProgressButton, showStripes: false, progress: 75, onCancel:'clearValue'},\n\t\t{tag: 'br'},\n\t\t{kind: InputDecorator, style:'margin-right:10px;', components: [\n\t\t\t{kind: Input, placeholder: 'Value', style:'width:50px;'}\n\t\t]},\n\t\t{kind: Button, content:'Set', classes:'onyx-sample-spaced-button', ontap:'changeValue'},\n\t\t{kind: Button, content:'-', classes:'onyx-sample-spaced-button', ontap:'decValue'},\n\t\t{kind: Button, content:'+', classes:'onyx-sample-spaced-button', ontap:'incValue'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{kind: Checkbox, name:'animateSetting', checked:true},\n\t\t{content:'Animated', classes:'enyo-inline onyx-sample-animate-label'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Sliders'},\n\t\t{kind: Slider, min: 10, max: 50, value: 30},\n\t\t{tag: 'br'},\n\t\t{kind: Slider, lockBar: false, progress: 20, value: 75},\n\t\t{tag: 'br'},\n\t\t{name: 'progressSlider', kind: Slider, lockBar: false, value: 75},\n\t\t{kind: Button, content: 'Toggle Progress', ontap: 'toggleProgress'}\n\t],\n\tchangeValue: function (sender, event) {\n\t\tfor (var i in this.$) {\n\t\t\tif (this.$[i].kind == ProgressBar || this.$[i].kind == ProgressButton) {\n\t\t\t\tif (this.$.animateSetting.getValue()) {\n\t\t\t\t\tthis.$[i].animateProgressTo(this.$.input.getValue());\n\t\t\t\t} else {\n\t\t\t\t\tthis.$[i].setProgress(this.$.input.getValue());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tincValue: function () {\n\t\tthis.$.input.setValue(Math.min(parseInt(this.$.input.getValue() || 0, 10) + 10, 100));\n\t\tthis.changeValue();\n\t},\n\tdecValue: function () {\n\t\tthis.$.input.setValue(Math.max(parseInt(this.$.input.getValue() || 0, 10) - 10, 0));\n\t\tthis.changeValue();\n\t},\n\tclearValue: function (sender, event) {\n\t\tsender.setProgress(0);\n\t},\n\ttoggleProgress: function () {\n\t\tthis._progressing = !this._progressing;\n\t\tthis.nextProgress();\n\t},\n\tnextProgress: function () {\n\t\tif (this._progressing) {\n\t\t\tanimation.requestAnimationFrame(this.bindSafely(function () {\n\t\t\t\tthis.incrementProgress();\n\t\t\t\tsetTimeout(this.bindSafely('nextProgress'), 500);\n\t\t\t}), this.hasNode());\n\t\t}\n\t},\n\tincrementProgress: function () {\n\t\tvar p = this.$.progressSlider;\n\t\tvar i = p.min + ((p.progress - p.min + 5) % (p.max - p.min + 1));\n\t\tp.animateProgressTo(i);\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\nvar\n\tDrawer = require('../../../onyx/lib/Drawer'),\n\tMenuItem = require('../../../onyx/lib/MenuItem');\n\n/**\n* {@link onyx.Submenu} is a control that collapses several menu items into a drawer,\n* which may be opened and closed by tapping on its label. It is meant to be placed\n* inside an {@link onyx.Menu}.\n*\n* ```\n* {kind: 'onyx.MenuDecorator', components:[\n* \t{content: 'Open menu'},\n* \t{kind: 'onyx.Menu', components:[\n* \t\t{content: 'One'},\n* \t\t{content: 'Two'},\n* \t\t{kind: 'onyx.Submenu', content: 'Sort by...', components: [\n* \t\t\t{content: 'A'},\n* \t\t\t{content: 'B'},\n* \t\t\t{content: 'C'}\n* \t\t]},\n* \t\t{content: 'Three'}\n* \t]}\n* ]}\n* ```\n*\n* @class  onyx.Submenu\n* @extends enyo.Control\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Submenu.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Submenu',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tdefaultKind: MenuItem,\n\n\t/**\n\t* @private\n\t*/\n\tinitComponents: function () {\n\t\tthis.createChrome([\n\t\t\t{name: 'label', kind: Control, classes: 'onyx-menu-item', content: this.content || this.name, isChrome: true, ontap: 'toggleOpen'},\n\t\t\t{name: 'client', kind: Drawer, classes: 'client onyx-submenu', isChrome: true, open: false}\n\t\t]);\n\n\t\tControl.prototype.initComponents.apply(this, arguments);\n\t},\n\n\t/**\n\t* Toggles the submenu's open/closed state.\n\t*\n\t* @public\n\t*/\n\ttoggleOpen: function () {\n\t\tthis.setOpen(!this.getOpen());\n\t},\n\n\t/**\n\t* Opens or closes the submenu.\n\t*\n\t* @param {Boolean} open - `true` to open the submenu; `false` to close it.\n\t* @public\n\t*/\n\tsetOpen: function (open) {\n\t\tthis.$.client.setOpen(open);\n\t},\n\n\t/**\n\t* Determines whether the submenu is currently open.\n\t*\n\t* @return {Boolean} - `true` if submenu is currently open; otherwise, `false`.\n\t* @public\n\t*/\n\tgetOpen: function () {\n\t\treturn this.$.client.getOpen();\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tGroup = require('../../../enyo/lib/Group');\n\nvar\n\tRadioButton = require('../../../onyx/lib/RadioButton');\n\n/**\n* {@link onyx.RadioGroup} is a group of {@link onyx.RadioButton} objects laid out\n* horizontally. Within the same radio group, tapping on one radio button will\n* release any previously-tapped radio button.\n*\n* ```\n* {kind: 'onyx.RadioGroup', components: [\n* \t{content: 'foo', active: true},\n* \t{content: 'bar'},\n* \t{content: 'baz'}\n* ]}\n* ```\n*\n* @class  onyx.RadioGroup\n* @extends enyo.Group\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.RadioGroup.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.RadioGroup',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Group,\n\n\t/**\n\t* @private\n\t*/\n\tdefaultKind: RadioButton,\n\n\t/**\n\t* Set to `true` to provide radio button behavior.\n\t*\n\t* @private\n\t*/\n\thighlander: true\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tutils = require('../../../enyo/lib/utils'),\n\tPopup = require('../../../enyo/lib/Popup'),\n\tScroller = require('../../../enyo/lib/Scroller'),\n\tTouchScrollStrategy = require('../../../enyo/lib/TouchScrollStrategy');\n\nvar\n\tButton = require('../../../onyx/lib/Button');\n\n/**\n* Fires when the popup is tapped.\n* @todo  Should this be removed? Never triggered and duplicate of ontap\n* @event onyx.ContextualPopup#onTap\n* @public\n*/\n\n/**\n* {@link onyx.ContextualPopup} is a subkind of {@link enyo.Popup}. Contextual\n* popups serve as child windows that appear near the point of initiation. Use\n* them to prompt users to make a selection from a defined set of options; to\n* conduct other quick, single-step interactions in which context should be\n* maintained; and to present simple views, such as previews.\n*\n* A contextual popup is meant to be used in conjunction with a decorator, such\n* as an {@link onyx.MenuDecorator}. The decorator couples the popup with an\n* activating control, which may be a button or any other control with an\n* `onActivate` event. When the control is activated, the popup shows itself in\n* the correct position relative to the activator.\n*\n* Note that, by default, the popup is not floating, so toolbars and controls\n* with high z-index values may obscure it. You may set the `floating` property\n* to `true` to have the popup always appear on top; however, the popup will not\n* be in the containing document's flow and so will not scroll with the document.\n*\n* In addition, while contextual popups have their own positioning logic, they\n* do not currently have their own sizing logic, so be sure to take this into\n* account when using them.\n*\n* ```\n* {kind: 'onyx.MenuDecorator', components: [\n* \t{content: 'Show Popup'},\n* \t{kind: 'onyx.ContextualPopup',\n* \t\ttitle: 'Sample Popup',\n* \t\tactionButtons: [\n* \t\t\t{content:'Button 1', classes: 'onyx-button-warning'},\n* \t\t\t{content:'Button 2'}\n* \t\t],\n* \t\tcomponents: [\n* \t\t\t{content:'Sample component in popup'}\n* \t\t]\n* \t}\n* ]}\n* ```\n*\n* @class onyx.ContextualPopup\n* @extends enyo.Popup\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends onyx.ContextualPopup.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.ContextualPopup',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Popup,\n\n\t/**\n\t* @private\n\t*/\n\tmodal: true,\n\n\t/**\n\t* @private\n\t*/\n\tautoDismiss: true,\n\n\t/**\n\t* @private\n\t*/\n\tfloating: false,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-contextual-popup enyo-unselectable',\n\n\t/**\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Maximum height of the menu, in pixels.\n\t\t*\n\t\t* @type {Number}\n\t\t* @memberOf onyx.ContextualPopup.prototype\n\t\t* @public\n\t\t*/\n\t\tmaxHeight: 100,\n\n\t\t/**\n\t\t* Whether scrolling is enabled.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @memberOf onyx.ContextualPopup.prototype\n\t\t* @public\n\t\t*/\n\t\tscrolling: true,\n\n\t\t/**\n\t\t* Popup title content.\n\t\t*\n\t\t* @type {String}\n\t\t* @memberOf onyx.ContextualPopup.prototype\n\t\t* @public\n\t\t*/\n\t\ttitle: undefined,\n\n\t\t/**\n\t\t* Buttons displayed at bottom of popup.\n\t\t*\n\t\t* @type {Array}\n\t\t* @memberOf onyx.ContextualPopup.prototype\n\t\t* @public\n\t\t*/\n\t\tactionButtons: []\n\t},\n\n\t/** @lends onyx.ContextualPopup */\n\tstatics: {\n\t\t/**\n\t\t* @private\n\t\t*/\n\t\tsubclass: function (ctor, props) {\n\t\t\tvar proto = ctor.prototype;\n\t\t\tif (props.actionButtons) {\n\t\t\t\tproto.kindActionButtons = props.actionButtons;\n\t\t\t\tdelete proto.actionButtons;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Vertical flush layout margin.\n\t*\n\t* @type {Number}\n\t* @private\n\t*/\n\tvertFlushMargin: 60,\n\n\t/**\n\t* Horizontal flush layout margin.\n\t*\n\t* @type {Number}\n\t* @private\n\t*/\n\thorizFlushMargin: 50,\n\n\t/**\n\t* Popups wider than this value are considered wide (for layout purposes).\n\t*\n\t* @type {Number}\n\t* @private\n\t*/\n\twidePopup: 200,\n\n\t/**\n\t* Popups longer than this value are considered long (for layout purposes).\n\t*\n\t* @type {Number}\n\t* @private\n\t*/\n\tlongPopup: 200,\n\n\t/**\n\t* Do not allow horizontal flush popups past this amount of buffer space on\n\t* left/right screen edge.\n\t*\n\t* @type {Number}\n\t* @private\n\t*/\n\thorizBuffer: 16,\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonTap: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonActivate: 'childControlActivated',\n\t\tonRequestShowMenu: 'requestShow',\n\t\tonRequestHideMenu: 'requestHide'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{name: 'title', classes: 'onyx-contextual-popup-title'},\n\t\t{classes: 'onyx-contextual-popup-scroller', components:[\n\t\t\t{name: 'client', kind: Scroller, vertical: 'auto', classes: 'enyo-unselectable', thumb: false, strategyKind: TouchScrollStrategy}\n\t\t]},\n\t\t{name: 'actionButtons', classes: 'onyx-contextual-popup-action-buttons'}\n\t],\n\n\t/**\n\t* Name of the Scroller component.\n\t*\n\t* @private\n\t*/\n\tscrollerName: 'client',\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tPopup.prototype.create.apply(this, arguments);\n\t\tthis.maxHeightChanged();\n\t\tthis.titleChanged();\n\t\tthis.actionButtonsChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetScroller: function () {\n\t\treturn this.$[this.scrollerName];\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttitleChanged: function (){\n\t\tthis.$.title.setContent(this.title);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tactionButtonsChanged: function () {\n\t\tif (this.actionButtons) {\n\t\t\tutils.forEach(this.actionButtons, function (button) {\n\t\t\t\tbutton.kind = Button;\n\t\t\t\tbutton.classes = button.classes + ' onyx-contextual-popup-action-button';\n\t\t\t\tbutton.popup = this;\n\t\t\t\tbutton.actionButton = true;\n\t\t\t\tthis.$.actionButtons.createComponent(button, {\n\t\t\t\t\towner: this.getInstanceOwner()\n\t\t\t\t});\n\t\t\t}, this);\n\t\t} else if (this.kindActionButtons) {\n\t\t\tutils.forEach(this.kindActionButtons, function (button) {\n\t\t\t\tbutton.kind = Button;\n\t\t\t\tbutton.classes = button.classes + ' onyx-contextual-popup-action-button';\n\t\t\t\tbutton.popup = this;\n\t\t\t\tbutton.actionButton = true;\n\t\t\t\tthis.$.actionButtons.createComponent(button, {\n\t\t\t\t\towner: this\n\t\t\t\t});\n\t\t\t}, this);\n\t\t}\n\t\tif(this.hasNode()) {\n\t\t\tthis.$.actionButtons.render();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxHeightChanged: function () {\n\t\tif (this.scrolling) {\n\t\t\tthis.getScroller().setMaxHeight(this.maxHeight + 'px');\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowingChanged: function () {\n\t\tPopup.prototype.showingChanged.apply(this, arguments);\n\t\tif (this.scrolling) {\n\t\t\tthis.getScroller().setShowing(this.showing);\n\t\t}\n\t\tif (!this.showing) {\n\t\t\tthis.activator = this.activatorOffset = null;\n\t\t}\n\t\tthis.adjustPosition();\n\t},\n\n\t/**\n\t* @todo  document why bubbling is explicitly prevented\n\t* @private\n\t*/\n\tchildControlActivated: function (sender, event) {\n\t\treturn true;\n\t},\n\n\t/**\n\t* Handles `onRequestShowMenu` events.\n\t*\n\t* @private\n\t*/\n\trequestShow: function (sender, event) {\n\t\tthis.activator = event.activator.hasNode();\n\t\tthis.show();\n\t\treturn true;\n\t},\n\n\t/**\n\t* Handles `onRequestHideMenu` events.\n\t*\n\t* @private\n\t*/\n\trequestHide: function (sender, event) {\n\t\tthis.setShowing(false);\n\t},\n\n\t/**\n\t* Positions the popup.\n\t*\n\t* @todo seems to duplicate enyo.Control.setBounds()\n\t* @private\n\t*/\n\tapplyPosition: function (rect) {\n\t\tvar s = '';\n\t\tfor (var n in rect) {\n\t\t\ts += (n + ':' + rect[n] + (isNaN(rect[n]) ? '; ' : 'px; '));\n\t\t}\n\t\tthis.addStyles(s);\n\t},\n\n\t/**\n\t* Calculates the position of the popup relative to the page.\n\t*\n\t* @param {Element} node\n\t* @private\n\t*/\n\tgetPageOffset: function (node) {\n\t\tvar r = this.getBoundingRect(node);\n\n\t\tvar pageYOffset = (window.pageYOffset === undefined) ? document.documentElement.scrollTop : window.pageYOffset;\n\t\tvar pageXOffset = (window.pageXOffset === undefined) ? document.documentElement.scrollLeft : window.pageXOffset;\n\t\tvar rHeight = (r.height === undefined) ? (r.bottom - r.top) : r.height;\n\t\tvar rWidth = (r.width === undefined) ? (r.right - r.left) : r.width;\n\n\t\treturn {top: r.top + pageYOffset, left: r.left + pageXOffset, height: rHeight, width: rWidth};\n\t},\n\n\t/**\n\t* Adjusts the popup position + nub location & direction.\n\t*\n\t* ContextualPopup positioning rules:\n\t*\n\t* 1. Activator Location:\n\t*    1. If activator is located in a corner then position using a flush style.\n\t*       1. Attempt vertical first.\n\t*       2. Horizontal if vertical doesn't fit.\n\t*    2. If not in a corner then check if the activator is located in one of the 4 \"edges\"\n\t*       of the view & position the following way if so:\n\t*       1.   Activator is in top edge, position popup below it.\n\t*       2.  Activator is in bottom edge, position popup above it.\n\t*       3. Activator is in left edge, position popup to the right of it.\n\t*       4.  Activator is in right edge, position popup to the left of it.\n\t\t*\n\t* 2. Screen Size - the popup should generally extend in the direction where there’s room\n\t*    for it.\n\t*\n\t*    Note: no specific logic below for this rule since it is built into the positioning\n\t*    functions, ie we attempt to never position a popup where there isn't enough room for\n\t*    it.\n\t*\n\t* 3. Popup Size:\n\t*\n\t*    1. If popup content is wide, use top or bottom positioning.\n\t*    2. If popup content is long, use horizontal positioning.\n\t*\n\t* 4. Favor top or bottom:\n\t*\n\t*    If all the above rules have been followed and location can still vary then favor top\n\t*    or bottom positioning.\n\t*\n\t* 5. If top or bottom will work, favor bottom.\n\t*\n\t*    Note: There is no specific logic below for this rule since it is built into the\n\t*    vertical position functions, i.e., we attempt to use a bottom position for the popup\n\t*    as much as possible. Additionally, within the vertical position function, we center\n\t*    the popup if the activator is at the vertical center of the view.\n\t*\t\n\t* @private\n\t*/\n\tadjustPosition: function () {\n\t\tif (this.showing && this.hasNode() && this.activator) {\n\t\t\tthis.resetPositioning();\n\t\t\tthis.activatorOffset = this.getPageOffset(this.activator);\n\t\t\tvar innerWidth = this.getViewWidth();\n\t\t\tvar innerHeight = this.getViewHeight();\n\n\t\t\t//These are the view \"flush boundaries\"\n\t\t\tvar topFlushPt = this.vertFlushMargin;\n\t\t\tvar bottomFlushPt = innerHeight - this.vertFlushMargin;\n\t\t\tvar leftFlushPt = this.horizFlushMargin;\n\t\t\tvar rightFlushPt = innerWidth - this.horizFlushMargin;\n\n\t\t\t//Rule 1 - Activator Location based positioning\n\t\t\t//if the activator is in the top or bottom edges of the view, check if the popup needs flush positioning\n\t\t\tif ((this.activatorOffset.top + this.activatorOffset.height) < topFlushPt || this.activatorOffset.top > bottomFlushPt) {\n\t\t\t\t//check/try vertical flush positioning\t(rule 1.a.i)\n\t\t\t\tif (this.applyVerticalFlushPositioning(leftFlushPt, rightFlushPt)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//if vertical doesn't fit then check/try horizontal flush (rule 1.a.ii)\n\t\t\t\tif (this.applyHorizontalFlushPositioning(leftFlushPt, rightFlushPt)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//if flush positioning didn't work then try just positioning vertically (rule 1.b.i & rule 1.b.ii)\n\t\t\t\tif (this.applyVerticalPositioning()){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t//otherwise check if the activator is in the left or right edges of the view & if so try horizontal positioning\n\t\t\t} else if ((this.activatorOffset.left + this.activatorOffset.width) < leftFlushPt || this.activatorOffset.left > rightFlushPt) {\n\t\t\t\t//if flush positioning didn't work then try just positioning horizontally (rule 1.b.iii & rule 1.b.iv)\n\t\t\t\tif (this.applyHorizontalPositioning()){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Rule 2 - no specific logic below for this rule since it is inheritent to the positioning functions, ie we attempt to never\n\t\t\t//position a popup where there isn't enough room for it.\n\n\t\t\t//Rule 3 - Popup Size based positioning\n\t\t\tvar clientRect = this.getBoundingRect(this.node);\n\n\t\t\t//if the popup is wide then use vertical positioning\n\t\t\tif (clientRect.width > this.widePopup) {\n\t\t\t\tif (this.applyVerticalPositioning()){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if the popup is long then use horizontal positioning\n\t\t\telse if (clientRect.height > this.longPopup) {\n\t\t\t\tif (this.applyHorizontalPositioning()){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Rule 4 - Favor top or bottom positioning\n\t\t\tif (this.applyVerticalPositioning()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//but if thats not possible try horizontal\n\t\t\telse if (this.applyHorizontalPositioning()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Rule 5 - no specific logic below for this rule since it is built into the vertical position functions, ie we attempt to\n\t\t\t//         use a bottom position for the popup as much possible.\n\t\t}\n\t},\n\n\t/**\n\t* Moves the popup below or above the activator and verifies that it fits onscreen.\n\t*\n\t* @return {Boolean} `true` if vertical positioning can be used; otherwise, `false`.\n\t* @private\n\t*/\n\tinitVerticalPositioning: function () {\n\t\tthis.resetPositioning();\n\t\tthis.addClass('vertical');\n\n\t\tvar clientRect = this.getBoundingRect(this.node);\n\t\tvar innerHeight = this.getViewHeight();\n\n\t\tif (this.floating){\n\t\t\tif (this.activatorOffset.top < (innerHeight / 2)) {\n\t\t\t\tthis.applyPosition({top: this.activatorOffset.top + this.activatorOffset.height, bottom: 'auto'});\n\t\t\t\tthis.addClass('below');\n\t\t\t} else {\n\t\t\t\tthis.applyPosition({top: this.activatorOffset.top - clientRect.height, bottom: 'auto'});\n\t\t\t\tthis.addClass('above');\n\t\t\t}\n\t\t} else {\n\t\t\t//if the popup's bottom goes off the screen then put it on the top of the invoking control\n\t\t\tif ((clientRect.top + clientRect.height > innerHeight) && ((innerHeight - clientRect.bottom) < (clientRect.top - clientRect.height))){\n\t\t\t\tthis.addClass('above');\n\t\t\t} else {\n\t\t\t\tthis.addClass('below');\n\t\t\t}\n\t\t}\n\n\t\t//if moving the popup above or below the activator puts it past the edge of the screen then vertical doesn't work\n\t\tclientRect = this.getBoundingRect(this.node);\n\t\tif ((clientRect.top + clientRect.height) > innerHeight || clientRect.top < 0){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t* Implements positioning rules (rule 1.b.i & rule 1.b.ii).\n\t*\n\t* @return {Boolean} `true` if vertical positioning is used; otherwise, `false`.\n\t* @private\n\t*/\n\tapplyVerticalPositioning: function () {\n\t\t//if we can't fit the popup above or below the activator then forget vertical positioning\n\t\tif (!this.initVerticalPositioning()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar clientRect = this.getBoundingRect(this.node);\n\t\tvar innerWidth = this.getViewWidth();\n\n\t\tif (this.floating){\n\t\t\t//Get the left edge delta to horizontally center the popup\n\t\t\tvar centeredLeft = this.activatorOffset.left + this.activatorOffset.width/2 - clientRect.width/2;\n\t\t\tif (centeredLeft + clientRect.width > innerWidth) {//popup goes off right edge of the screen if centered\n\t\t\t\tthis.applyPosition({left: this.activatorOffset.left + this.activatorOffset.width - clientRect.width});\n\t\t\t\tthis.addClass('left');\n\t\t\t} else if (centeredLeft < 0) {//popup goes off left edge of the screen if centered\n\t\t\t\tthis.applyPosition({left:this.activatorOffset.left});\n\t\t\t\tthis.addClass('right');\n\t\t\t} else {//center the popup\n\t\t\t\tthis.applyPosition({left: centeredLeft});\n\t\t\t}\n\n\t\t} else {\n\t\t\t//Get the left edge delta to horizontally center the popup\n\t\t\tvar centeredLeftDelta = this.activatorOffset.left + this.activatorOffset.width/2 - clientRect.left - clientRect.width/2;\n\t\t\tif (clientRect.right + centeredLeftDelta > innerWidth) {//popup goes off right edge of the screen if centered\n\t\t\t\tthis.applyPosition({left: this.activatorOffset.left + this.activatorOffset.width - clientRect.right});\n\t\t\t\tthis.addRemoveClass('left', true);\n\t\t\t} else if (clientRect.left + centeredLeftDelta < 0) {//popup goes off left edge of the screen if centered\n\t\t\t\tthis.addRemoveClass('right', true);\n\t\t\t} else {//center the popup\n\t\t\t\tthis.applyPosition({left: centeredLeftDelta});\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t* Implements positioning (rule 1.a.i).\n\t*\n\t* @return {Boolean} `true` if vertical flush positioning is used; otherwise, `false`.\n\t* @private\n\t*/\n\tapplyVerticalFlushPositioning: function (leftFlushPt, rightFlushPt) {\n\t\t//if we can't fit the popup above or below the activator then forget vertical positioning\n\t\tif (!this.initVerticalPositioning()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar clientRect = this.getBoundingRect(this.node);\n\t\tvar innerWidth = this.getViewWidth();\n\n\t\t//If the activator's right side is within our left side cut off use flush positioning\n\t\tif ((this.activatorOffset.left + this.activatorOffset.width/2) < leftFlushPt){\n\t\t\t//if the activator's left edge is too close or past the screen left edge\n\t\t\tif (this.activatorOffset.left + this.activatorOffset.width/2 < this.horizBuffer){\n\t\t\t\tthis.applyPosition({left:this.horizBuffer + (this.floating ? 0 : -clientRect.left)});\n\t\t\t} else {\n\t\t\t\tthis.applyPosition({left:this.activatorOffset.width/2  + (this.floating ? this.activatorOffset.left : 0)});\n\t\t\t}\n\n\t\t\tthis.addClass('right');\n\t\t\tthis.addClass('corner');\n\t\t\treturn true;\n\t\t}\n\t\t//If the activator's left side is within our right side cut off use flush positioning\n\t\telse if (this.activatorOffset.left + this.activatorOffset.width/2 > rightFlushPt) {\n\t\t\tif ((this.activatorOffset.left+this.activatorOffset.width/2) > (innerWidth-this.horizBuffer)){\n\t\t\t\tthis.applyPosition({left:innerWidth - this.horizBuffer - clientRect.right});\n\t\t\t} else {\n\t\t\t\tthis.applyPosition({left: (this.activatorOffset.left + this.activatorOffset.width/2) - clientRect.right});\n\t\t\t}\n\t\t\tthis.addClass('left');\n\t\t\tthis.addClass('corner');\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t* Moves the popup left or right of the activator and verifies that it fits onscreen.\n\t* A return value of `true` is a precondition for using\n\t* [applyHorizontalPositioning()]{@link onyx.ContextualPopup#applyHorizontalPositioning} and\n\t* [applyHorizontalFlushPositioning()]{@link onyx.ContextualPopup#applyHorizontalFlushPositioning}.\n\t*\n\t* @return {Boolean} `true` if horizontal positioning can be used; otherwise, `false`.\n\t* @private\n\t*/\n\tinitHorizontalPositioning: function () {\n\t\tthis.resetPositioning();\n\n\t\tvar clientRect = this.getBoundingRect(this.node);\n\t\tvar innerWidth = this.getViewWidth();\n\n\t\t//adjust horizontal positioning of the popup & nub vertical positioning\n\t\tif (this.floating){\n\t\t\tif ((this.activatorOffset.left + this.activatorOffset.width) < innerWidth/2) {\n\t\t\t\tthis.applyPosition({left: this.activatorOffset.left + this.activatorOffset.width});\n\t\t\t\tthis.addRemoveClass('left', true);\n\t\t\t} else {\n\t\t\t\tthis.applyPosition({left: this.activatorOffset.left - clientRect.width});\n\t\t\t\tthis.addRemoveClass('right', true);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.activatorOffset.left - clientRect.width > 0) {\n\t\t\t\tthis.applyPosition({left: this.activatorOffset.left - clientRect.left - clientRect.width});\n\t\t\t\tthis.addRemoveClass('right', true);\n\t\t\t} else {\n\t\t\t\tthis.applyPosition({left: this.activatorOffset.width});\n\t\t\t\tthis.addRemoveClass('left', true);\n\t\t\t}\n\t\t}\n\t\tthis.addRemoveClass('horizontal', true);\n\n\t\t//if moving the popup left or right of the activator puts it past the edge of the screen then horizontal won't work\n\t\tclientRect = this.getBoundingRect(this.node);\n\t\tif (clientRect.left < 0 || (clientRect.left + clientRect.width) > innerWidth){\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\n\t},\n\n\t/**\n\t* Implements positioning (rule 1.b.iii & rule 1.b.iv).\n\t*\n\t* @return {Boolean} `true` if using horizontal positioning; otherwise, `false`.\n\t* @private\n\t*/\n\tapplyHorizontalPositioning: function () {\n\t\t//if we can't fit the popup left or right of the activator then forget horizontal positioning\n\t\tif (!this.initHorizontalPositioning()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar clientRect = this.getBoundingRect(this.node);\n\t\tvar innerHeight = this.getViewHeight();\n\t\tvar activatorCenter = this.activatorOffset.top + this.activatorOffset.height/2;\n\n\t\tif (this.floating){\n\t\t\t//if the activator's center is within 10% of the center of the view, vertically center the popup\n\t\t\tif ((activatorCenter >= (innerHeight/2 - 0.05 * innerHeight)) && (activatorCenter <= (innerHeight/2 + 0.05 * innerHeight))) {\n\t\t\t\tthis.applyPosition({top: this.activatorOffset.top + this.activatorOffset.height/2 - clientRect.height/2, bottom: 'auto'});\n\t\t\t} else if (this.activatorOffset.top + this.activatorOffset.height < innerHeight/2) { //the activator is in the top 1/2 of the screen\n\t\t\t\tthis.applyPosition({top: this.activatorOffset.top - this.activatorOffset.height, bottom: 'auto'});\n\t\t\t\tthis.addRemoveClass('high', true);\n\t\t\t} else { //otherwise the popup will be positioned in the bottom 1/2 of the screen\n\t\t\t\tthis.applyPosition({top: this.activatorOffset.top - clientRect.height + this.activatorOffset.height*2, bottom: 'auto'});\n\t\t\t\tthis.addRemoveClass('low', true);\n\t\t\t}\n\t\t} else {\n\t\t\t//if the activator's center is within 10% of the center of the view, vertically center the popup\n\t\t\tif ((activatorCenter >= (innerHeight/2 - 0.05 * innerHeight)) && (activatorCenter <= (innerHeight/2 + 0.05 * innerHeight))) {\n\t\t\t\tthis.applyPosition({top: (this.activatorOffset.height - clientRect.height)/2});\n\t\t\t} else if (this.activatorOffset.top + this.activatorOffset.height < innerHeight/2) { //the activator is in the top 1/2 of the screen\n\t\t\t\tthis.applyPosition({top: -this.activatorOffset.height});\n\t\t\t\tthis.addRemoveClass('high', true);\n\t\t\t} else { //otherwise the popup will be positioned in the bottom 1/2 of the screen\n\t\t\t\tthis.applyPosition({top: clientRect.top - clientRect.height - this.activatorOffset.top + this.activatorOffset.height});\n\t\t\t\tthis.addRemoveClass('low', true);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t* Implements positioning (rule 1.a.ii).\n\t*\n\t* @return {Boolean} `true` if using flush positioning; otherwise, `false`.\n\t* @private\n\t*/\n\tapplyHorizontalFlushPositioning: function (leftFlushPt, rightFlushPt) {\n\t\t//if we can't fit the popup left or right of the activator then forget vertical positioning\n\t\tif (!this.initHorizontalPositioning()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar clientRect = this.getBoundingRect(this.node);\n\t\tvar innerHeight = this.getViewHeight();\n\n\t\t//adjust vertical positioning (high or low nub & popup position)\n\t\tif (this.floating){\n\t\t\tif (this.activatorOffset.top < (innerHeight/2)){\n\t\t\t\tthis.applyPosition({top: this.activatorOffset.top + this.activatorOffset.height/2});\n\t\t\t\tthis.addRemoveClass('high', true);\n\t\t\t} else {\n\t\t\t\tthis.applyPosition({top:this.activatorOffset.top + this.activatorOffset.height/2 - clientRect.height});\n\t\t\t\tthis.addRemoveClass('low', true);\n\t\t\t}\n\t\t} else {\n\t\t\tif (((clientRect.top + clientRect.height) > innerHeight) && ((innerHeight - clientRect.bottom) < (clientRect.top - clientRect.height))) {\n\t\t\t\tthis.applyPosition({top: clientRect.top - clientRect.height - this.activatorOffset.top - this.activatorOffset.height/2});\n\t\t\t\tthis.addRemoveClass('low', true);\n\t\t\t} else {\n\t\t\t\tthis.applyPosition({top: this.activatorOffset.height/2});\n\t\t\t\tthis.addRemoveClass('high', true);\n\t\t\t}\n\t\t}\n\n\t\t//If the activator's right side is within our left side cut off use flush positioning\n\t\tif ((this.activatorOffset.left + this.activatorOffset.width) < leftFlushPt){\n\t\t\tthis.addClass('left');\n\t\t\tthis.addClass('corner');\n\t\t\treturn true;\n\t\t}\n\t\t//If the activator's left side is within our right side cut off use flush positioning\n\t\telse if (this.activatorOffset.left > rightFlushPt) {\n\t\t\tthis.addClass('right');\n\t\t\tthis.addClass('corner');\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t* Calculates top/left values that are relative to the viewport and not absolute for the\n\t* provided Node.\n\t*\n\t* @param  {Element} Node.\n\t* @return {Object}  Object containing the top, bottom, left, right, height, and width of the\n\t* \tnode.\n\t* @private\n\t*/\n\tgetBoundingRect:  function (node){\n\t\t// getBoundingClientRect returns t\n\t\tvar o = node.getBoundingClientRect();\n\t\tif (!o.width || !o.height) {\n\t\t\treturn {\n\t\t\t\tleft: o.left,\n\t\t\t\tright: o.right,\n\t\t\t\ttop: o.top,\n\t\t\t\tbottom: o.bottom,\n\t\t\t\twidth: o.right - o.left,\n\t\t\t\theight: o.bottom - o.top\n\t\t\t};\n\t\t}\n\t\treturn o;\n\t},\n\n\t/**\n\t* Determines the view height.\n\t*\n\t* @return {Number} - Height of the view.\n\t* @private\n\t*/\n\tgetViewHeight: function () {\n\t\treturn (window.innerHeight === undefined) ? document.documentElement.clientHeight : window.innerHeight;\n\t},\n\n\t/**\n\t* Determines the view width.\n\t*\n\t* @return {Number} - Width of the view.\n\t* @private\n\t*/\n\tgetViewWidth: function () {\n\t\treturn (window.innerWidth === undefined) ? document.documentElement.clientWidth : window.innerWidth;\n\t},\n\n\t/**\n\t* Removes all positioning classes and resets the `'top'` and `'left'` CSS attributes.\n\t*\n\t* @private\n\t*/\n\tresetPositioning: function () {\n\t\tthis.removeClass('right');\n\t\tthis.removeClass('left');\n\t\tthis.removeClass('high');\n\t\tthis.removeClass('low');\n\t\tthis.removeClass('corner');\n\t\tthis.removeClass('below');\n\t\tthis.removeClass('above');\n\t\tthis.removeClass('vertical');\n\t\tthis.removeClass('horizontal');\n\n\t\tthis.applyPosition({left: 'auto'});\n\t\tthis.applyPosition({top: 'auto'});\n\t},\n\n\t/**\n\t* Handles `resize` events to reposition the popup.\n\t*\n\t* @method\n\t* @private\n\t*/\n\thandleResize: function () {\n\t\tPopup.prototype.handleResize.apply(this, arguments);\n\t\tthis.adjustPosition();\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tScroller = require('../../../enyo/lib/Scroller'),\n\tTouchScrollStrategy = require('../../../enyo/lib/TouchScrollStrategy');\n\nvar\n\tMenuItem = require('../../../onyx/lib/MenuItem'),\n\tPopup = require('../../../onyx/lib/Popup');\n\n/**\n* Requests that a menu be displayed and positioned near an activating control.\n*\n* @event onyx.Menu#onRequestShowMenu\n* @type {Object}\n* @property {enyo.Control} activator - Control near which the menu should be displayed.\n* @public\n*/\n\n/**\n* Requests that a menu be hidden.\n*\n* @event onyx.Menu#onRequestHideMenu\n* @type {Object}\n* @public\n*/\n\n/**\n* {@link onyx.Menu} is a subkind of {@link onyx.Popup} that displays a list of\n* {@link onyx.MenuItem} objects and looks like a popup menu. It is meant to be\n* used together with an {@link onyx.MenuDecorator}. The decorator couples the\n* menu with an activating control, which may be a button or any other control\n* with an [onActivate]{@link enyo.GroupItem#onActivate} event. When the\n* control is activated, the menu shows itself in the correct position relative\n* to the activator.\n*\n* ```\n* {kind: 'onyx.MenuDecorator', components: [\n* \t{content: 'Show menu'},\n* \t{kind: 'onyx.Menu', components: [\n* \t\t{content: '1'},\n* \t\t{content: '2'},\n* \t\t{classes: 'onyx-menu-divider'},\n* \t\t{content: 'Label', classes: 'onyx-menu-label'},\n* \t\t{content: '3'},\n* \t]}\n* ]}\n* ```\n*\n* @class  onyx.Menu\n* @extends onyx.Popup\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Menu.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Menu',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Popup,\n\n\t/**\n\t* When `true`, controls outside of the menu will not receive events while\n\t* the menu is showing.\n\t*\n\t* @private\n\t*/\n\tmodal: true,\n\n\t/**\n\t* @private\n\t*/\n\tdefaultKind: MenuItem,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-menu',\n\n\t/**\n\t* @lends  onyx.Menu.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Maximum height of the menu, in pixels.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  200\n\t\t* @public\n\t\t*/\n\t\tmaxHeight: 200,\n\n\t\t/**\n\t\t* Indicates whether scrolling is enabled.\n\t\t*\n\t\t* Note that this is a design-time property and should not be set after creation.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tscrolling: true,\n\n\t\t/**\n\t\t* The current scroll strategy.\n\t\t*\n\t\t* @type {String}\n\t\t* @default  'TouchScrollStrategy'\n\t\t* @public\n\t\t*/\n\t\tscrollStrategyKind: TouchScrollStrategy\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonActivate: 'itemActivated',\n\t\tonRequestShowMenu: 'requestMenuShow',\n\t\tonRequestHideMenu: 'requestHide'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tchildComponents: [\n\t\t{name: 'client', kind: Scroller}\n\t],\n\n\t/**\n\t* If `true`, menu will be shown on top of activating control, if possible.\n\t*\n\t* @type {Boolean}\n\t* @private\n\t*/\n\tshowOnTop: false,\n\n\t/**\n\t* @private\n\t*/\n\tscrollerName: 'client',\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tPopup.prototype.create.apply(this, arguments);\n\t\tthis.maxHeightChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinitComponents: function () {\n\t\tif (this.scrolling) {\n\t\t\tthis.createComponents(this.childComponents, {isChrome: true, strategyKind: this.scrollStrategyKind});\n\t\t}\n\t\tPopup.prototype.initComponents.apply(this, arguments);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetScroller: function () {\n\t\treturn this.$[this.scrollerName];\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxHeightChanged: function () {\n\t\tif (this.scrolling) {\n\t\t\tthis.getScroller().setMaxHeight(this.maxHeight + 'px');\n\t\t}\n\t},\n\n\t/**\n\t* Handles [onActivate]{@link enyo.GroupItem#onActivate} events.\n\t*\n\t* @private\n\t*/\n\titemActivated: function (sender, event) {\n\t\tevent.originator.setActive(false);\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowingChanged: function () {\n\t\tPopup.prototype.showingChanged.apply(this, arguments);\n\t\tif (this.scrolling) {\n\t\t\tthis.getScroller().setShowing(this.showing);\n\t\t}\n\t\tthis.adjustPosition(true);\n\t},\n\n\t/**\n\t* Handles [onRequestShowMenu]{@link onyx.Menu#onRequestShowMenu} events.\n\t*\n\t* @private\n\t*/\n\trequestMenuShow: function (sender, event) {\n\t\tif (this.floating) {\n\t\t\tvar n = event.activator.hasNode();\n\t\t\tif (n) {\n\t\t\t\tvar r = this.activatorOffset = this.getPageOffset(n);\n\t\t\t\tthis.applyPosition({top: r.top + (this.showOnTop ? 0 : r.height), left: r.left, width: r.width});\n\t\t\t}\n\t\t}\n\t\tthis.show();\n\t\treturn true;\n\t},\n\n\t/**\n\t* Applies CSS styles to position the menu.\n\t*\n\t* @param  {Object} rect - Object with at least one position attribute\n\t* \t(`'top'`, `'right'`, `'bottom'`, `'left'`).\n\t* @private\n\t* @todo Duplicate of {@link onyx.ContextualPopup#applyPosition} and possibly `setBounds()`\n\t*/\n\tapplyPosition: function (rect) {\n\t\tvar s = '';\n\t\tfor (var n in rect) {\n\t\t\ts += (n + ':' + rect[n] + (isNaN(rect[n]) ? '; ' : 'px; '));\n\t\t}\n\t\tthis.addStyles(s);\n\t},\n\n\t/**\n\t* Calculates the position of the popup relative to the page.\n\t*\n\t* @param {Element} node - The DOM node.\n\t* @return {Object} Object containing `'top'`, `'left'`, `'height'`, and\n\t* `'width'` values for the page.\n\t* @private\n\t* @todo  Duplicate of {@link onyx.ContextualPopup#getPageOffset}\n\t*/\n\tgetPageOffset: function (node) {\n\t\t// getBoundingClientRect returns top/left values which are relative to the viewport and not absolute\n\t\tvar r = node.getBoundingClientRect();\n\n\t\t// IE8 doesn't return window.page{X/Y}Offset & r.{height/width}\n\t\t// FIXME: Perhaps use an alternate universal method instead of conditionals\n\t\tvar pageYOffset = (window.pageYOffset === undefined) ? document.documentElement.scrollTop : window.pageYOffset;\n\t\tvar pageXOffset = (window.pageXOffset === undefined) ? document.documentElement.scrollLeft : window.pageXOffset;\n\t\tvar rHeight = (r.height === undefined) ? (r.bottom - r.top) : r.height;\n\t\tvar rWidth = (r.width === undefined) ? (r.right - r.left) : r.width;\n\n\t\treturn {top: r.top + pageYOffset, left: r.left + pageXOffset, height: rHeight, width: rWidth};\n\t},\n\n\t/**\n\t* Adjusts the menu position to fit inside the current window size.\n\t* Note that we aren't currently adjusting picker scroller heights.\n\t*\n\t* @private\n\t*/\n\tadjustPosition: function () {\n\t\tif (this.showing && this.hasNode()) {\n\t\t\tif (this.scrolling && !this.showOnTop) {\n\t\t\t\tthis.getScroller().setMaxHeight(this.maxHeight+'px');\n\t\t\t}\n\t\t\tthis.removeClass('onyx-menu-up');\n\n\t\t\t//reset the left position before we get the bounding rect for proper horizontal calculation\n\t\t\tif (!this.floating) {\n\t\t\t\tthis.applyPosition({left: 'auto'});\n\t\t\t}\n\n\t\t\tvar b = this.node.getBoundingClientRect();\n\t\t\tvar bHeight = (b.height === undefined) ? (b.bottom - b.top) : b.height;\n\t\t\tvar innerHeight = (window.innerHeight === undefined) ? document.documentElement.clientHeight : window.innerHeight;\n\t\t\tvar innerWidth = (window.innerWidth === undefined) ? document.documentElement.clientWidth : window.innerWidth;\n\n\t\t\t//position the menu above the activator if it's getting cut off, but only if there's more room above than below\n\t\t\tthis.menuUp = (b.top + bHeight > innerHeight) && ((innerHeight - b.bottom) < (b.top - bHeight));\n\t\t\tthis.addRemoveClass('onyx-menu-up', this.menuUp);\n\n\t\t\t//if floating, adjust the vertical positioning\n\t\t\tif (this.floating) {\n\t\t\t\tvar r = this.activatorOffset;\n\t\t\t\t//if the menu doesn't fit below the activator, move it up\n\t\t\t\tif (this.menuUp) {\n\t\t\t\t\tthis.applyPosition({top: (r.top - bHeight + (this.showOnTop ? r.height : 0)), bottom: 'auto'});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//if the top of the menu is above the top of the activator and there's room to move it down, do so\n\t\t\t\t\tif ((b.top < r.top) && (r.top + (this.showOnTop ? 0 : r.height) + bHeight < innerHeight))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.applyPosition({top: r.top + (this.showOnTop ? 0 : r.height), bottom: 'auto'});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//adjust the horizontal positioning to keep the menu from being cut off on the right\n\t\t\tif ((b.right) > innerWidth) {\n\t\t\t\tif (this.floating){\n\t\t\t\t\tthis.applyPosition({left:innerWidth-b.width});\n\t\t\t\t} else {\n\t\t\t\t\tthis.applyPosition({left: -(b.right - innerWidth)});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//finally prevent the menu from being cut off on the left\n\t\t\tif (b.left < 0) {\n\t\t\t\tif (this.floating){\n\t\t\t\t\tthis.applyPosition({left: 0, right:'auto'});\n\t\t\t\t} else {\n\t\t\t\t\t//handle the situation where a non-floating menu is right or left aligned\n\t\t\t\t\tif (this.getComputedStyleValue('right') == 'auto'){\n\t\t\t\t\t\tthis.applyPosition({left:-b.left});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.applyPosition({right:b.left});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//adjust the scroller height based on room available - only doing this for menus currently\n\t\t\tif (this.scrolling && !this.showOnTop){\n\t\t\t\tb = this.node.getBoundingClientRect(); //update to the current menu position\n\t\t\t\tvar scrollerHeight;\n\t\t\t\tif (this.menuUp){\n\t\t\t\t\tscrollerHeight = (this.maxHeight < b.bottom) ? this.maxHeight : b.bottom;\n\t\t\t\t} else {\n\t\t\t\t\tscrollerHeight = ((b.top + this.maxHeight) < innerHeight) ? this.maxHeight : (innerHeight - b.top);\n\t\t\t\t}\n\t\t\t\tthis.getScroller().setMaxHeight(scrollerHeight+'px');\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Handles `onresize` events, adjusting the position of the menu.\n\t*\n\t* @private\n\t*/\n\thandleResize: function () {\n\t\tPopup.prototype.handleResize.apply(this, arguments);\n\t\tthis.adjustPosition();\n\t},\n\n\t/**\n\t* Handles [onRequestMenuHide]{@link onyx.Menu#onRequestMenuHide} events.\n\t*\n\t* @private\n\t*/\n\trequestHide: function (){\n\t\tthis.setShowing(false);\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tutils = require('../../../enyo/lib/utils'),\n\tScroller = require('../../../enyo/lib/Scroller');\n\nvar\n\tSlider = require('../../../onyx/lib/Slider'),\n\tInputDecorator = require('../../../onyx/lib/InputDecorator'),\n\tInput = require('../../../onyx/lib/Input'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tRangeSlider = require('../../../onyx/lib/RangeSlider'),\n\tCheckbox = require('../../../onyx/lib/Checkbox'),\n\tButton = require('../../../onyx/lib/Button')\n\nmodule.exports = kind({\n\tname: 'onyx.sample.SliderSample',\n\tkind: Scroller,\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Sliders'},\n\t\t{kind: Slider, value: 50, onChanging: 'sliderChanging', onChange: 'sliderChanged'},\n\t\t{tag: 'br'},\n\t\t{kind: Slider, lockBar: false, value: 50, onChanging: 'sliderChanging', onChange: 'sliderChanged'},\n\n\t\t{tag: 'br'},\n\t\t{kind: InputDecorator, style: 'margin-right: 10px;', components: [\n\t\t\t{kind: Input, placeholder: 'Value', style: 'width: 50px;'}\n\t\t]},\n\t\t{kind: Button, content: 'Set', classes: 'onyx-sample-spaced-button', ontap: 'changeValue'},\n\t\t{kind: Button, content: '-', classes: 'onyx-sample-spaced-button', ontap: 'decValue'},\n\t\t{kind: Button, content: '+', classes: 'onyx-sample-spaced-button', ontap: 'incValue'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{kind: Checkbox, name: 'animateSetting', value: true},\n\t\t{content: 'Animated', classes: 'enyo-inline onyx-sample-animate-label'},\n\t\t{name : 'incrementSetting', kind: Checkbox, onchange: 'sliderIncrementChanged', checked: false},\n\t\t{content: 'increment by 7', classes: 'enyo-inline'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'result', classes: 'onyx-sample-result', content: 'No slider moved yet.'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'RangeSlider'},\n\t\t{tag: 'br'},\n\t\t{kind: RangeSlider, rangeMin: 100, rangeMax: 500, rangeStart: 200, rangeEnd: 400, increment: 20, showLabels: true, onChanging: 'rangeSliderChanging', onChange: 'rangeSliderChanged'},\n\t\t{components: [\n\t\t\t{style: 'width: 20%; display: inline-block; text-align: left;', content: '$100'},\n\t\t\t{style: 'width: 60%; display: inline-block; text-align: center;', content: '$300'},\n\t\t\t{style: 'width: 20%; display: inline-block; text-align: right;', content: '$500'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Checkbox, onchange: 'rangeSliderIncrementChanged', checked: true},\n\t\t{content: 'increment by 20', classes: 'enyo-inline'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'rangeSliderResult', classes: 'onyx-sample-result', content: 'RangeSlider not moved yet.'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Slider (Bound Value)'},\n\t\t{tag: 'br'},\n\t\t{kind: Slider, name: 'boundSlider', value: 50},\n\t\t{tag: 'br'},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'boundResult', classes: 'onyx-sample-result'}\n\t\t]}\n\t],\n\tbindings: [\n\t\t{from: '$.boundSlider.value', to: '$.boundResult.content', transform: function (val) {\n\t\t\treturn utils.format('Current value: %.', val);\n\t\t}}\n\t],\n\tchangeValue: function (sender, event) {\n\t\tfor (var i in this.$) {\n\t\t\tif (this.$[i].kind == Slider) {\n\t\t\t\tif (this.$.animateSetting.getValue()) {\n\t\t\t\t\tthis.$[i].animateTo(this.$.input.getValue());\n\t\t\t\t} else {\n\t\t\t\t\tthis.$[i].setValue(this.$.input.getValue());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tincValue: function () {\n\t\tvar tGap = (this.$.incrementSetting.getChecked()) ? 7 : 10;\n\t\tthis.$.input.setValue(Math.min(parseInt(this.$.input.getValue() || 0, 10) + tGap, 100));\n\t\tthis.changeValue();\n\t},\n\tdecValue: function () {\n\t\tvar tGap = (this.$.incrementSetting.getChecked()) ? 7 : 10;\n\t\tthis.$.input.setValue(Math.max(parseInt(this.$.input.getValue() || 0, 10) - tGap, 0));\n\t\tthis.changeValue();\n\t},\n\tsliderChanging: function (sender, event) {\n\t\tthis.$.result.setContent(sender.name + ' changing: ' + Math.round(sender.getValue()));\n\t},\n\tsliderChanged: function (sender, event) {\n\t\tthis.$.result.setContent(sender.name + ' changed to ' + Math.round(sender.getValue()) + '.');\n\t},\n\trangeSliderIncrementChanged: function (sender, event) {\n\t\tthis.$.rangeSlider.setIncrement(sender.getValue() ? 20 : 0);\n\t},\n\tsliderIncrementChanged: function (sender, event) {\n\t\tthis.$.slider2.setIncrement(sender.getValue() ? 7 : 0);\n\t\tthis.$.slider.setIncrement(sender.getValue() ? 7 : 0);\n\t},\n\tupdateRangeLabels: function (slider) {\n\t\tslider.setStartLabel('--> ' + Math.floor(slider.getRangeStart()));\n\t\tslider.setEndLabel(Math.ceil(slider.getRangeEnd()) + '<--');\n\t},\n\trangeSliderChanging: function (sender, event) {\n\t\tthis.updateRangeLabels(sender);\n\t\tthis.$.rangeSliderResult.setContent('Range changing: $' + Math.round(sender.getRangeStart()) + ' - $' + Math.round(sender.getRangeEnd()));\n\t},\n\trangeSliderChanged: function (sender, event) {\n\t\tthis.updateRangeLabels(sender);\n\t\tthis.$.rangeSliderResult.setContent('Range changed to $' + Math.round(sender.getRangeStart()) + ' - $' + Math.round(sender.getRangeEnd()) + '.');\n\t},\n\tcreate: function () {\n\t\tScroller.prototype.create.apply(this, arguments);\n\t\tthis.updateRangeLabels(this.$.rangeSlider);\n\t}\n});\n","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind');\n\nvar\n\tButton = require('../../onyx/lib/Button'),\n\tTooltipDecorator = require('../../onyx/lib/TooltipDecorator');\n\n/**\n* {@link onyx.MenuDecorator} is a control that loosely couples an {@link onyx.Menu}\n* with an activating control, which may be a button or any other control with an\n* [onActivate]{@link enyo.GroupItem#onActivate} event. The decorator must\n* surround both the activating control and the menu itself. When the menu is\n* activated, it shows itself in the correct position relative to the activator.\n*\n* ```\n* {kind: 'onyx.MenuDecorator', components: [\n* \t{content: 'Show menu'},\n* \t{kind: 'onyx.Menu', components: [\n* \t\t{content: '1'},\n* \t\t{content: '2'},\n* \t\t{classes: 'onyx-menu-divider'},\n* \t\t{content: 'Label', classes: 'onyx-menu-label'},\n* \t\t{content: '3'},\n* \t]}\n* ]}\n* ```\n*\n* @class  onyx.MenuDecorator\n* @extends onyx.TooltipDecorator\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.MenuDecorator.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.MenuDecorator',\n\n\t/**\n\t* @private\n\t*/\n\tkind: TooltipDecorator,\n\n\t/**\n\t* @private\n\t*/\n\tdefaultKind: Button,\n\n\t/**\n\t* Selection on iOS prevents tap events, so avoid.\n\t*\n\t* @private\n\t*/\n\tclasses: 'onyx-popup-decorator enyo-unselectable',\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonActivate: 'activated',\n\t\tonHide: 'menuHidden'\n\t},\n\n\t/**\n\t* Handles [onActivate]{@link enyo.GroupItem#onActivate} events.\n\t*\n\t* @private\n\t*/\n\tactivated: function (sender, event) {\n\t\tthis.requestHideTooltip();\n\t\tif (event.originator.active) {\n\t\t\tthis.menuActive = true;\n\t\t\tthis.activator = event.originator;\n\t\t\tthis.activator.addClass('active');\n\t\t\tthis.requestShowMenu();\n\t\t}\n\t},\n\n\t/**\n\t* Requests that the child menu be shown.\n\t*\n\t* @fires onyx.Menu#onRequestShowMenu\n\t* @private\n\t*/\n\trequestShowMenu: function () {\n\t\tthis.waterfallDown('onRequestShowMenu', {activator: this.activator});\n\t},\n\n\t/**\n\t* Requests that the child menu be hidden.\n\t*\n\t* @fires onyx.Menu#onRequestHideMenu\n\t* @private\n\t*/\n\trequestHideMenu: function () {\n\t\tthis.waterfallDown('onRequestHideMenu');\n\t},\n\n\t/**\n\t* Handles [onHide]{@link enyo.Popup#onHide} events.\n\t*\n\t* @private\n\t*/\n\tmenuHidden: function () {\n\t\tthis.menuActive = false;\n\t\tif (this.activator) {\n\t\t\tthis.activator.setActive(false);\n\t\t\tthis.activator.removeClass('active');\n\t\t}\n\t},\n\n\t/**\n\t* Handles `onenter` events. Suppresses default behavior if menu is not active.\n\t*\n\t* @private\n\t*/\n\tenter: function (sender) {\n\t\tif (!this.menuActive) {\n\t\t\tTooltipDecorator.prototype.enter.apply(this, arguments);\n\t\t}\n\t},\n\n\t/**\n\t* Handles `onleave` events. Suppresses default behavior if menu is not active.\n\t*\n\t* @private\n\t*/\n\tleave: function (sender, event) {\n\t\tif (!this.menuActive) {\n\t\t\tTooltipDecorator.prototype.leave.apply(this, arguments);\n\t\t}\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tGroup = require('../../../enyo/lib/Group');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tRadioGroup = require('../../../onyx/lib/RadioGroup');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.ButtonGroupSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'RadioGroup'},\n\t\t{kind: RadioGroup, onActivate: 'radioActivated', components: [\n\t\t\t{content: 'Alpha', active: true},\n\t\t\t{content: 'Beta'},\n\t\t\t{content: 'Gamma'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'TabGroup'},\n\t\t{kind: RadioGroup, onActivate: 'tabActivated', controlClasses: 'onyx-tabbutton', components: [\n\t\t\t{content: 'Alpha', active: true},\n\t\t\t{content: 'Beta'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Button Group'},\n\t\t{kind: Group, onActivate: 'buttonActivated', classes: 'onyx-sample-tools group', defaultKind: Button, highlander: true, components: [\n\t\t\t{content: 'Button A', active: true, classes: 'onyx-affirmative'},\n\t\t\t{content: 'Button B', classes: 'onyx-negative'},\n\t\t\t{content: 'Button C', classes: 'onyx-blue'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'result', classes: 'onyx-sample-result', content: 'No button tapped yet.'}\n\t\t]}\n\t],\n\tradioActivated: function (sender, event) {\n\t\tif (event.originator.getActive()) {\n\t\t\tthis.$.result.setContent('The \\'' + event.originator.getContent() + '\\' radio button is selected.');\n\t\t}\n\t},\n\ttabActivated: function (sender, event) {\n\t\tif (event.originator.getActive()) {\n\t\t\tthis.$.result.setContent('The \\'' + event.originator.getContent() + '\\' tab button is selected.');\n\t\t}\n\t},\n\tbuttonActivated: function (sender, event) {\n\t\tif (event.originator.getActive()) {\n\t\t\tthis.$.result.setContent('The \\'' + event.originator.getContent() + '\\' button is selected.');\n\t\t}\n\t}\n});\n","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tMenu = require('../../../onyx/lib/Menu');\n\n/**\n* Fires when the currently selected item changes.\n*\n* @event onyx.Picker#onChange\n* @type {Object}\n* @property {enyo.Control} selected - The currently selected item.\n* @property {String} content - The content of the currently selected item.\n* @public\n*/\n\n/**\n* {@link onyx.Picker}, a subkind of {@link onyx.Menu}, is used to display a\n* list of items that may be selected. It is meant to be used together with an\n* {@link onyx.PickerDecorator}. The decorator loosely couples the picker with\n* an {@link onyx.PickerButton}--a button that, when tapped, shows the picker.\n* Once an item is selected, the list of items closes, but the item stays\n* selected and the PickerButton displays the choice that was made.\n*\n* To initialize the Picker to a particular value, set the `active` property to\n* `true` for the item that should be selected.\n*\n* \t{kind: 'onyx.PickerDecorator', components: [\n* \t\t{}, //this uses the defaultKind property of PickerDecorator to inherit from PickerButton\n* \t\t{kind: 'onyx.Picker', components: [\n* \t\t\t{content: 'Gmail', active: true},\n* \t\t\t{content: 'Yahoo'},\n* \t\t\t{content: 'Outlook'},\n* \t\t\t{content: 'Hotmail'}\n* \t\t]}\n* \t]}\n*\n* Each item in the list is an {@link onyx.MenuItem}, so a client app may\n* listen for an [onSelect]{@link onyx.MenuItem#onSelect} event with the\n* item to determine which picker item was selected.\n*\n* @class  onyx.Picker\n* @extends onyx.Menu\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.Picker.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Picker',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Menu,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-picker enyo-unselectable',\n\n\t/**\n\t* @lends  onyx.Picker.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Currently selected item, if any\n\t\t* @type {onyx.MenuItem}\n\t\t* @default  null\n\t\t* @public\n\t\t*/\n\t\tselected: null\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonChange: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonItemContentChange: 'itemContentChange'\n\t},\n\n\t/**\n\t* When `true`, the picker is rendered in a floating layer outside of other\n\t* controls. This can be used to guarantee that the picker will be shown on\n\t* top of other controls.\n\t*\n\t* @private\n\t*/\n\tfloating: true,\n\n\t/**\n\t* Overrides default value from {@link onyx.Menu}.\n\t*\n\t* @private\n\t*/\n\tshowOnTop: true,\n\n\t/**\n\t* @private\n\t*/\n\tinitComponents: function () {\n\t\tthis.setScrolling(true);\n\t\tMenu.prototype.initComponents.apply(this, arguments);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowingChanged: function () {\n\t\tthis.getScroller().setShowing(this.showing);\n\t\tMenu.prototype.showingChanged.apply(this, arguments);\n\t\tif (this.showing && this.selected) {\n\t\t\tthis.scrollToSelected();\n\t\t}\n\t},\n\n\t/**\n\t* Ensures that the selected item is visible.\n\t*\n\t* @private\n\t*/\n\tscrollToSelected: function () {\n\t\tthis.getScroller().scrollToControl(this.selected, !this.menuUp);\n\t},\n\n\t/**\n\t* Handles [onActivate]{@link enyo.GroupItem#onActivate} event,\n\t* selecting the activated item.\n\t*\n\t* @private\n\t*/\n\titemActivated: function (sender, event) {\n\t\tthis.processActivatedItem(event.originator);\n\t\treturn Menu.prototype.itemActivated.apply(this, arguments);\n\t},\n\n\t/**\n\t* If passed-in control is `active`, selects it.\n\t* @param {enyo.Control} item\n\t*\n\t* @private\n\t*/\n\tprocessActivatedItem: function (item) {\n\t\tif (item.active) {\n\t\t\tthis.setSelected(item);\n\t\t}\n\t},\n\n\t/**\n\t* Highlights the selected item with the CSS class `'selected'`.\n\t*\n\t* @fires onyx.Picker#onChange\n\t* @private\n\t*/\n\tselectedChanged: function (old) {\n\t\tif (old) {\n\t\t\told.removeClass('selected');\n\t\t}\n\t\tif (this.selected) {\n\t\t\tthis.selected.addClass('selected');\n\t\t\tthis.doChange({selected: this.selected, content: this.selected.content});\n\t\t}\n\t},\n\n\t/**\n\t* Handles [onItemContentChange]{@link onyx.MenuItem#onItemContentChange}\n\t* events.\n\t*\n\t* @fires onyx.Picker#onChange\n\t* @private\n\t*/\n\titemContentChange: function (sender, event) {\n\t\tif (event.originator == this.selected) {\n\t\t\tthis.doChange({selected: this.selected, content: this.selected.content});\n\t\t}\n\t},\n\n\t/**\n\t* Handles `onresize` events.\n\t*\n\t* @private\n\t*/\n\thandleResize: function () {\n\t\tMenu.prototype.handleResize.apply(this, arguments);\n\t\tthis.adjustPosition();\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\nvar\n\tFittableLayout = require('../../../layout/lib/FittableLayout'),\n\tFittableColumnsLayout = FittableLayout.Columns;\n\nvar\n\tIconButton = require('../../../onyx/lib/IconButton'),\n\tMenu = require('../../../onyx/lib/Menu'),\n\tMenuDecorator = require('../../../onyx/lib/MenuDecorator');\n\n/**\n* {@link onyx.MoreToolbar} extends {@link enyo.Control}, providing a toolbar\n* that can adapt to different screen sizes by moving overflowing controls and\n* content into an {@link onyx.Menu}.\n*\n* ```\n* {kind: 'onyx.MoreToolbar', components: [\n* \t{content: 'More Toolbar', unmoveable: true},\n* \t{kind: 'onyx.Button', content: 'Alpha'},\n* \t{kind: 'onyx.Button', content: 'Beta'},\n* \t{kind: 'onyx.Button', content: 'Gamma', unmoveable: true},\n* \t{kind: 'onyx.Button', content: 'Epsilon'}\n* ]}\n* ```\n*\n* You may prevent a control from being moved into the menu by setting its\n* `unmoveable` property to `true` (the default is `false`).\n*\n* @class  onyx.MoreToolbar\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.MoreToolbar.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.MoreToolbar',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-toolbar onyx-more-toolbar',\n\n\t/**\n\t* CSS class to be applied to the menu.\n\t*\n\t* Note that this is a design-time property and should not be set after object creation.\n\t*\n\t* @type {String}\n\t* @default  ''\n\t* @public\n\t*/\n\tmenuClass: '',\n\n\t/**\n\t* CSS class to be applied to individual controls moved from the toolbar to the menu.\n\t*\n\t* Note that this is a design-time property and should not be set after object creation.\n\t*\n\t* @type {String}\n\t* @default  ''\n\t* @public\n\t*/\n\tmovedClass: '',\n\n\t/**\n\t* @private\n\t*/\n\tlayoutKind: FittableColumnsLayout,\n\n\t/**\n\t* @private\n\t*/\n\tnoStretch: true,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonHide: 'reflow'\n\t},\n\n\t/**\n\t* @lends  onyx.MoreToolbar.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Layout kind that will be applied to the client controls.\n\t\t*\n\t\t* @type {String}\n\t\t* @default  'FittableColumnsLayout'\n\t\t* @public\n\t\t*/\n\t\tclientLayoutKind: FittableColumnsLayout\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttools: [\n\t\t{name: 'client', noStretch: true, fit: true, classes: 'onyx-toolbar-inline'},\n\t\t{name: 'nard', kind: MenuDecorator, showing: false, onActivate: 'activated', components: [\n\t\t\t{kind: IconButton, classes: 'onyx-more-button'},\n\t\t\t{name: 'menu', kind: Menu, scrolling: false, classes: 'onyx-more-menu'}\n\t\t]}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tinitComponents: function () {\n\t\tif (this.menuClass && this.menuClass.length>0 && !this.$.menu.hasClass(this.menuClass)) {\n\t\t\tthis.$.menu.addClass(this.menuClass);\n\t\t}\n\t\tthis.createChrome(this.tools);\n\t\tControl.prototype.initComponents.apply(this, arguments);\n\t\tthis.$.client.setLayoutKind(this.clientLayoutKind);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tclientLayoutKindChanged: function () {\n\t\tthis.$.client.setLayoutKind(this.clientLayoutKind);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\treflow: function () {\n\t\tControl.prototype.reflow.apply(this, arguments);\n\t\tif (this.isContentOverflowing()) {\n\t\t\tthis.$.nard.show();\n\t\t\tif (this.popItem()) {\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t} else if (this.tryPushItem()) {\n\t\t\tthis.reflow();\n\t\t} else if (!this.$.menu.children.length) {\n\t\t\tthis.$.nard.hide();\n\t\t\tthis.$.menu.hide();\n\t\t}\n\t},\n\n\t/**\n\t* Handles [onActivate]{@link enyo.GroupItem#onActivate} events.\n\t*\n\t* Adds the `'active'` CSS class to this control if the event's originator is active.\n\t*\n\t* @private\n\t*/\n\tactivated: function (sender, event) {\n\t\tthis.addRemoveClass('active', event.originator.active);\n\t},\n\n\t/**\n\t* Removes the next collapsible item from the toolbar and adds it to the menu.\n\t*\n\t* @private\n\t*/\n\tpopItem: function () {\n\t\tvar c = this.findCollapsibleItem();\n\t\tif (c) {\n\t\t\t//apply movedClass is needed\n\t\t\tif(this.movedClass && this.movedClass.length > 0 && !c.hasClass(this.movedClass)) {\n\t\t\t\tc.addClass(this.movedClass);\n\t\t\t}\n\t\t\t// passing null to add child to the front of the control list\n\t\t\tthis.$.menu.addChild(c, null);\n\t\t\tvar p = this.$.menu.hasNode();\n\t\t\tif (p && c.hasNode()) {\n\t\t\t\tc.insertNodeInParent(p);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* Removes the first child of the menu and adds it back to the toolbar.\n\t*\n\t* @private\n\t*/\n\tpushItem: function () {\n\t\tvar c$ = this.$.menu.children;\n\t\tvar c = c$[0];\n\t\tif (c) {\n\t\t\t//remove any applied movedClass\n\t\t\tif (this.movedClass && this.movedClass.length > 0 && c.hasClass(this.movedClass)) {\n\t\t\t\tc.removeClass(this.movedClass);\n\t\t\t}\n\t\t\tthis.$.client.addChild(c);\n\t\t\tvar p = this.$.client.hasNode();\n\t\t\tif (p && c.hasNode()) {\n\t\t\t\tvar nextChild;\n\t\t\t\tvar currIndex;\n\t\t\t\tfor (var i = 0; i < this.$.client.children.length; i++) {\n\t\t\t\t\tvar curr = this.$.client.children[i];\n\t\t\t\t\tif(curr.toolbarIndex !== undefined && curr.toolbarIndex != i) {\n\t\t\t\t\t\tnextChild = curr;\n\t\t\t\t\t\tcurrIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextChild && nextChild.hasNode()) {\n\t\t\t\t\tc.insertNodeInParent(p, nextChild.node);\n\t\t\t\t\tvar newChild = this.$.client.children.pop();\n\t\t\t\t\tthis.$.client.children.splice(currIndex, 0, newChild);\n\t\t\t\t} else {\n\t\t\t\t\tc.appendNodeToParent(p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* Pushes an item back into the toolbar if doing so doesn't cause the content\n\t* to overflow.\n\t*\n\t* @return {Boolean} - Whether item was successfully pushed.\n\t* @private\n\t*/\n\ttryPushItem: function () {\n\t\tif (this.pushItem()) {\n\t\t\tif (!this.isContentOverflowing()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.popItem();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Determines whether the toolbar has content that is not visible.\n\t*\n\t* @return {Boolean} `true` if some toolbar content is not visible.\n\t* @private\n\t*/\n\tisContentOverflowing: function () {\n\t\tif (this.$.client.hasNode()) {\n\t\t\tvar c$ = this.$.client.children;\n\t\t\tvar n = c$.length && c$[c$.length-1].hasNode();\n\t\t\tif (n) {\n\t\t\t\tthis.$.client.reflow();\n\t\t\t\t//Workaround: scrollWidth value not working in Firefox, so manually compute\n\t\t\t\t//return (this.$.client.node.scrollWidth > this.$.client.node.clientWidth);\n\t\t\t\treturn ((n.offsetLeft + n.offsetWidth) > this.$.client.node.clientWidth);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Finds the next control (starting from the end) that can be pushed onto the menu.\n\t*\n\t* @private\n\t*/\n\tfindCollapsibleItem: function () {\n\t\tvar c$ = this.$.client.children;\n\t\tvar c;\n\t\tfor (var i = c$.length - 1; (c = c$[i]); i--) {\n\t\t\tif (!c.unmoveable) {\n\t\t\t\treturn c;\n\t\t\t} else {\n\t\t\t\tif (c.toolbarIndex===undefined) {\n\t\t\t\t\tc.toolbarIndex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind');\n\nvar\n\tMenuDecorator = require('../../onyx/lib/MenuDecorator'),\n\tPickerButton = require('../../onyx/lib/PickerButton');\n\n/**\n* {@link onyx.PickerDecorator} is a control that loosely couples an\n* {@link onyx.Picker} with an activating {@link onyx.PickerButton}. The\n* decorator must surround both the activating button and the picker itself.\n* When the button is activated, the picker shows itself in the correct\n* position relative to the activator.\n*\n* ```\n* {kind: 'onyx.PickerDecorator', components: [\n* \t{}, //this uses the defaultKind property of PickerDecorator to inherit from PickerButton\n* \t{kind: 'onyx.Picker', components: [\n* \t\t{content: 'Gmail', active: true},\n* \t\t{content: 'Yahoo'},\n* \t\t{content: 'Outlook'},\n* \t\t{content: 'Hotmail'}\n* \t]}\n* ]}\n* ```\n*\n* @class  onyx.PickerDecorator\n* @extends onyx.MenuDecorator\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.PickerDecorator.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.PickerDecorator',\n\n\t/**\n\t* @private\n\t*/\n\tkind: MenuDecorator,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-picker-decorator',\n\n\t/**\n\t* @private\n\t*/\n\tdefaultKind: PickerButton,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonChange: 'change'\n\t},\n\n\t/**\n\t* Handles [onChange]{@link onyx.Picker#onChange} event, waterfalling\n\t* it down to children.\n\t*\n\t* @private\n\t*/\n\tchange: function (sender, event) {\n\t\tthis.waterfallDown('onChange', event);\n\t}\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tutils = require('../../../enyo/lib/utils'),\n\tScroller = require('../../../enyo/lib/Scroller');\n\nvar\n\tFittableColumns = require('../../../layout/lib/FittableColumns');\n\nvar\n\tIconButton = require('../../../onyx/lib/IconButton'),\n\tMenu = require('../../../onyx/lib/Menu'),\n\tMenuDecorator = require('../../../onyx/lib/MenuDecorator'),\n\tRadioGroup = require('../../../onyx/lib/RadioGroup'),\n\tTabBarItem = require('../../../onyx/lib/TabBarItem'),\n\tTooltip = require('../../../onyx/lib/Tooltip'),\n\tTooltipDecorator = require('../../../onyx/lib/TooltipDecorator');\n\n/**\n* {@link onyx.TabBar} is a scrolled set of radio buttons that is used by\n* {@link onyx.TabPanels}. This bar may also be used by other kinds to provide\n* a similar layout. By default, a tap on a tab will immediately switch the\n* tab and fire an `onTabChanged` event.\n*\n*\n* Here's an example:\n*\n* ```\n* enyo.kind({\n* \tname: 'myStuff'\n* });\n*\n* enyo.kind({\n* \tname: 'App',\n* \tfit: true,\n* \tcomponents: [\n* \t\t{name:'bar',kind: 'onyx.TabBar'},\n* \t\t{kind: 'MyStuff'}\n* \t],\n*\n* \thandlers: {\n* \t\tonTabChanged: 'switchStuff'\n* \t},\n*\n* \trendered: function () {\n* \t\tthis.asdfasdf(arguments);\n* \t\tthis.$.bar.addTab({\n* \t\t\t\t'caption': 'greetings',\n* \t\t\t\t'data' : { 'msg': 'Hello World !' } // arbitrary user data\n* \t\t\t}\n* \t\t) ;\n* \t},\n*\n* \tswitchStuff: function (inSender,inEvent) {\n* \t\tthis.log('Tapped tab with caption '+ inEvent.caption\n* \t\t\t+ ' and message ' + inEvent.data.msg );\n* \t}\n* });\n* ```\n*\n* Tabs must be created after construction, i.e. in rendered function. If tabs are created in\n* 'create' function, the last created tabs will not be selected.\n*\n* You can also setup the TabBar so a tap on a tab will fire a\n* 'onTabChangeRequest' event:\n*\n* ```\n* enyo.kind({\n* \tname: 'App',\n* \tfit: true,\n* \tcomponents: [\n* \t\t{name:'bar',kind: 'onyx.TabBar', checkBeforeChanging: true },\n* \t\t{kind: 'MyStuff'}\n* \t],\n*\n*     handlers: {\n* \t\tonTabChangeRequest: 'switchStuff'\n* \t},\n*\n*     // same rendered function as above\n* \tswitchStuff: function (inSender,inEvent) {\n* \t\tthis.log('Tapped tab with caption ' + inEvent.caption\n* \t\t\t+ ' and message ' + inEvent.data.msg );\n* \t\t// do switch\n* \t\tinEvent.next();\n* \t}\n* });\n* ```\n*\n* In this mode, no event is fired *after* the actual switch.\n*\n* @class  onyx.TabBar\n* @extends enyo.FittableColumns\n* @ui\n* @private\n*/\nmodule.exports = kind (\n\t/** @lends  onyx.TabBar.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.TabBar',\n\n\t/**\n\t* @private\n\t*/\n\tkind: FittableColumns,\n\n\t/**\n\t* @private\n\t*/\n\tisPanel: true,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-tab-bar',\n\n\t/**\n\t* @private\n\t*/\n\tcheckBeforeClosing: false,\n\n\t/**\n\t* @private\n\t*/\n\tcheckBeforeChanging: false,\n\n\t/**\n\t* @private\n\t*/\n\tdebug: false,\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\t/*\n\t\tFired when a tab different from the one currently selected is tapped.\n\t\tinEvent contains :\n\n\t\t{\n\t\t\t'index': 3, // index of tab in tab bar\n\t\t\t'userId': 1234, // unique id in tab managed by user\n\t\t\t'caption': 'bar.js', // tab label\n\t\t\t'data': { 'lang': 'javascript' },\n\t\t\t'next': callback // call with error message if problem\n\t\t}\n\n\t\t*/\n\t\tonTabChanged: '',\n\n\t\t/*\n\t\tFired when a tab different from the one currently selected is tapped\n\t\twhen checkBeforeChanging is true.\n\t\tinEvent contains the same structure as onTabChanged event. Call next()\n\t\twhen the tab change can be completed.\n\n\t\t*/\n\n\t\tonTabChangeRequested: '',\n\n\t\t/*\n\t\t* Fired when a tab is about to be removed. inEvent\n\t\t* contains the same data as onTabChanged.\n\t\t*\n\t\t* if (removeOk) { inEvent.next() ;}\n\t\t* else ( inEvent.next('not now') ;}\n\t\t*\n\t\t* Once a tab is removed (by calling next() ), a replacement\n\t\t* tab will be activated and a doTabChanged event will be\n\t\t* fired.\n\t\t*/\n\t\tonTabRemoveRequested: '',\n\n\t\t/*\n\t\t* Fired when a tab is removed. inEvent contains the same\n\t\t* data as onTabChanged (minus the next callback)\n\t\t*/\n\t\tonTabRemoved: ''\n\t},\n\n\t/**\n\t* @lends onyx.TabBar.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Set a maximum height for the scrollable menu that can be raised on the right of\n\t\t* the tab bar.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 600\n\t\t* @public\n\t\t*/\n\t\tmaxMenuHeight: 600\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonShowTooltip: 'showTooltip',\n\t\tonHideTooltip: 'hideTooltip'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{fit: true, components: [\n\t\t\t{name: 'scroller', kind: Scroller, maxHeight: '100px', touch: true, thumb: false, vertical: 'hidden', horizontal: 'auto', classes: 'onyx-tab-bar-scroller', components: [\n\t\t\t\t{classes: 'onyx-tab-wrapper', components: [\n\t\t\t\t\t// double level of components is required to add padding\n\t\t\t\t\t// at this level. This avoid '> div' in selectors\n\t\t\t\t\t{components: [\n\t\t\t\t\t\t{name: 'tabs', classes: 'onyx-tab-holder', kind: RadioGroup, defaultKind: TabBarItem, style: 'text-align: left; white-space: nowrap;', onTabCloseRequest: 'requestTabClose', onTabSwitchRequest: 'requestTabSwitch'},\n\t\t\t\t\t\t\t{classes: 'onyx-tab-line'},\n\t\t\t\t\t\t\t{classes: 'onyx-tab-rug'}\n\t\t\t\t\t\t]}\n\t\t\t\t\t]}\n\t\t\t\t]},\n\t\t\t\t{kind: TooltipDecorator, components:[\n\t\t\t\t\t{kind: Tooltip, classes: 'onyx-tab-tooltip'}\n\t\t\t\t]}\n\t\t\t]\n\n\t\t},\n\t\t{kind: MenuDecorator, name: 'tabPicker', onSelect: 'popupButtonTapped', components: [\n\t\t\t{kind: IconButton, classes: 'onyx-more-button', ontap: 'showPopupAtEvent'},\n\t\t\t{kind: Menu, name: 'popup'}\n\t\t]}\n\t],\n\n\t/**\n\t* lastIndex is required to avoid duplicate index in the tab bar.\n\t*\n\t* @private\n\t*/\n\tlastIndex: 0,\n\n\t/**\n\t* @private\n\t*/\n\tclientTransitionStart: function (inSender, inEvent) {\n\t\tvar i = inEvent.toIndex;\n\t\tvar t = this.$.tabs.getClientControls()[i];\n\t\tif (t && t.hasNode()) {\n\t\t\tthis.$.tabs.setActive(t);\n\t\t\tvar tn = t.node;\n\t\t\tvar tl = tn.offsetLeft;\n\t\t\tvar tr = tl + tn.offsetWidth;\n\t\t\tvar sb = this.$.scroller.getScrollBounds();\n\t\t\tif (tr < sb.left || tr > sb.left + sb.clientWidth) {\n\t\t\t\tthis.$.scroller.scrollToControl(t);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tFittableColumns.prototype.create.apply(this, arguments);\n\t\tthis.maxMenuHeightChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxMenuHeightChanged: function () {\n\t\tthis.$.popup.setMaxHeight(this.getMaxMenuHeight());\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trendered: function () {\n\t\tFittableColumns.prototype.rendered.apply(this, arguments);\n\t\tthis.resetWidth();\n\t},\n\n\t/**\n\t* Append a new tab to the tab bar. inControl is an object\n\t* with optional caption and data attributes. When not\n\t* specified the tab will have a generated caption like\n\t* 'Tab 0', 'Tab 1'. etc... data is an arbitrary object that will\n\t* be given back with onTabChanged events\n\t*\n\t* @public\n\t*/\n\taddTab: function (inControl) {\n\t\tvar c = inControl.caption || ('Tab ' + this.lastIndex);\n\t\tthis.selectedId = this.lastIndex++ ;\n\t\tvar t = this.$.tabs.createComponent(\n\t\t\t{\n\t\t\t\tcontent:  c,\n\t\t\t\tuserData: inControl.data || { },\n\t\t\t\ttooltipMsg: inControl.tooltipMsg, //may be null\n\t\t\t\tuserId:   inControl.userId, // may be null\n\t\t\t\ttabIndex: this.selectedId,\n\t\t\t\taddBefore: this.$.line\n\t\t\t}\n\t\t);\n\n\t\tt.render();\n\t\tthis.resetWidth();\n\t\tt.raise();\n\t\tt.setActive(true);\n\t\treturn t;\n\t},\n\n\t/**\n\t*\n\t* Remove a tab from the tab bar. target is an object with\n\t* either a caption attribute or an index. The tab(s) matching\n\t* the caption will be destroyed or the tab with matching\n\t* index will be destroyed.\n\t*\n\t* Example:\n\t*\n\t* ```\n\t*\tmyTab.removeTab({'index':0}); // remove the leftmost tab\n\t*\tmyTab.removeTab({'caption':'foo.js'});\n\t* ```\n\t*\n\t* @public\n\t*/\n\tremoveTab: function (target) {\n\t\tvar tab = this.resolveTab(target,'removeTab');\n\n\t\tif (! tab) { return; }\n\n\t\tvar activeTab = this.$.tabs.active ;\n\t\tvar keepActiveTab = activeTab !== tab ;\n\t\tvar gonerIndex = tab.indexInContainer();\n\t\tvar tabData = {\n\t\t\tindex:   tab.tabIndex,\n\t\t\tcaption: tab.content,\n\t\t\tuserId:  tab.userId,\n\t\t\tdata:    tab.userData\n\t\t} ;\n\n\t\ttab.destroy();\n\t\tthis.resetWidth();\n\n\t\tvar ctrls = this.$.tabs.controls;\n\t\tvar ctrlLength = ctrls.length ;\n\t\tvar replacementTab\n\t\t\t\t= keepActiveTab           ? activeTab\n\t\t\t\t: gonerIndex < ctrlLength ? ctrls[gonerIndex]\n\t\t\t\t:                           ctrls[ ctrlLength - 1 ];\n\n\t\t// replacementTab may be undef if all tabs were removed\n\t\tif (replacementTab) {\n\t\t\treplacementTab.setActive(true) ;\n\t\t\treplacementTab.raise();\n\t\t\tthis.$.scroller.scrollIntoView(replacementTab);\n\n\t\t\tthis.doTabChanged({\n\t\t\t\tindex:   replacementTab.tabIndex,\n\t\t\t\tcaption: replacementTab.content,\n\t\t\t\ttooltipMsg: replacementTab.tooltipMsg,\n\t\t\t\tdata:    replacementTab.userData,\n\t\t\t\tuserId:  replacementTab.userId\n\t\t\t});\n\t\t}\n\n\t\tthis.doTabRemoved(tabData);\n\t},\n\n\t/**\n\t* Request to remove a tab from the tab bar. This is a bit\n\t* like removeTab, except that a onTabRemoveRequested event is\n\t* fired to let the application the possibility to cancel the\n\t* request.\n\t*\n\t* @public\n\t*/\n\trequestRemoveTab: function (target) {\n\t\tvar tab = this.resolveTab(target,'removeTab');\n\t\tvar tabData = {\n\t\t\tindex:   tab.tabIndex,\n\t\t\tcaption: tab.content,\n\t\t\ttooltipMsg: tab.tooltipMsg,\n\t\t\tuserId:  tab.userId,\n\t\t\tdata:    tab.userData\n\t\t} ;\n\t\tvar that = this ;\n\t\tif (tab) {\n\t\t\ttabData.next = function (err) {\n\t\t\t\tif (err) { throw new Error(err);   }\n\t\t\t\telse     { that.removeTab(target); }\n\t\t\t} ;\n\t\t\tthis.doTabRemoveRequested( tabData ) ;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tresolveTab: function (target,action_name){\n\t\tvar targetTab ;\n\t\tif (target.userId) {\n\t\t\tutils.forEach(\n\t\t\t\tthis.$.tabs.controls,\n\t\t\t\tfunction (tab){\n\t\t\t\t\tif (tab.userId === target.userId) {\n\t\t\t\t\t\ttargetTab = tab;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse if (target.caption) {\n\t\t\tutils.forEach(\n\t\t\t\tthis.$.tabs.controls,\n\t\t\t\tfunction (tab){\n\t\t\t\t\tif (tab.content === target.caption) {\n\t\t\t\t\t\ttargetTab = tab;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse if (typeof target.index !== 'undefined') {\n\t\t\tutils.forEach(\n\t\t\t\tthis.$.tabs.controls,\n\t\t\t\tfunction (tab){\n\t\t\t\t\tif (tab.tabIndex === target.index) {\n\t\t\t\t\t\ttargetTab = tab;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('internal: ' + action_name+ ' called without index or caption');\n\t\t}\n\t\treturn targetTab ;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestTabClose: function (inSender,inEvent) {\n\t\tif (this.checkBeforeClosing) {\n\t\t\tthis.requestRemoveTab(inEvent) ;\n\t\t}\n\t\telse {\n\t\t\tthis.removeTab(inEvent);\n\t\t}\n\t},\n\n\t/**\n\t* Activate a tab in the tab bar. target is an object with\n\t* either a caption attribute or an index. The tab(s) matching\n\t* the caption will be activated or the tab with matching\n\t* index will be activated\n\t*\n\t* Example:\n\t*\n\t* ```\n\t* myTab.activate({'index':0}); // activate the leftmost tab\n\t* myTab.activate({'caption':'foo.js'});\n\t* ```\n\t*\n\t* Note that tabActivated event will be fired.\n\t*\n\t* @public\n\t*/\n\tactivate: function (target) {\n\t\tvar tab = this.resolveTab(target,'activate');\n\t\tif (tab) {\n\t\t\tthis.raiseTab(tab);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\traiseTab: function (tab) {\n\t\ttab.setActive(true) ;\n\t\tthis.$.scroller.scrollIntoView(tab);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trequestTabSwitch: function (inSender, inEvent) {\n\t\tvar tab = inEvent.originator;\n\t\tthis._requestTabSwitch(tab);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\t_requestTabSwitch: function (tab) {\n\t\tvar event, next;\n\n\t\tif (this.checkBeforeChanging) {\n\t\t\t// polite mode, ask before\n\t\t\tevent = 'onTabChangeRequested';\n\t\t\t// then change the tab\n\t\t\tnext = utils.bind(tab, tab.setActiveTrue);\n\t\t} else {\n\t\t\t// rough mode, change the tab\n\t\t\ttab.setActiveTrue();\n\t\t\tevent = 'onTabChanged';\n\t\t\t// and then undo if necessary\n\t\t\tnext =  utils.bind(this, 'undoSwitchOnError', oldIndex);\n\t\t}\n\n\t\tvar data = {\n\t\t\tindex:   tab.tabIndex,\n\t\t\tcaption: tab.content,\n\t\t\ttooltipMsg: tab.tooltipMsg,\n\t\t\tdata:    tab.userData,\n\t\t\tuserId:  tab.userId\n\t\t} ;\n\n\t\tvar oldIndex = this.selectedId ;\n\t\tthis.selectedId = data.index;\n\n\t\tif ( this.selectedId != oldIndex ) {\n\t\t\tdata.next = next;\n\t\t\tthis.bubble(event, data);\n\t\t}\n\t\telse {\n\t\t\t// when clicking on a tab, the tab is always deactivated even\n\t\t\t// if user clicks on the active tab. So the activation\n\t\t\t// must be put back.\n\t\t\ttab.setActiveTrue();\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowTooltip: function (inSender, inEvent) {\n\t\tvar t = inEvent.tooltipContent;\n\t\tvar bounds = inEvent.bounds;\n\t\tif(t){\n\t\t\tif(!this.$.tooltip.showing){\n\t\t\t\tthis.$.tooltip.setContent(t);\n\t\t\t\tvar leftSpace = bounds.left + ( bounds.width / 2 );\n\t\t\t\tthis.$.tooltipDecorator.applyStyle('left', leftSpace + 'px');\n\t\t\t\tthis.$.tooltip.show();\n\t\t\t}\n\t\t}\n\t\treturn true ;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thideTooltip: function () {\n\t\tthis.$.tooltip.hide();\n\t\treturn true ;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tundoSwitchOnError: function (oldIndex, err) {\n\t\tif (err) {\n\t\t\tthis.activate({ 'index': oldIndex } ) ;\n\t\t}\n\t},\n\n\t/**\n\t* use scroller's getScrollBounds to get scroll boundaries\n\t*\n\t* @private\n\t*/\n\thandleResize: function () {\n\t\tFittableColumns.prototype.handleResize.apply(this, arguments);\n\t\tthis.adjustTabWidth() ;\n\t},\n\n\t/**\n\t* compute tab width by adding width of tabs contained in tab bar.\n\t*\n\t* @private\n\t*/\n\tcomputeOrigTabWidth: function () {\n\t\tvar result = 0;\n\t\tutils.forEach(\n\t\t\tthis.$.tabs.getControls(),\n\t\t\tfunction (tab){\n\t\t\t\tvar w = tab.origWidth() ;\n\t\t\t\t// must add margin and padding of inner button and outer tab-item\n\t\t\t\tresult += w + 18 ;\n\t\t\t}\n\t\t);\n\t\treturn result;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\torigTabWidth: null,\n\n\t/**\n\t* @private\n\t*/\n\tadjustTabWidth: function (inSender, inEvent) {\n\t\tvar scrolledWidth = this.$.scroller.getBounds().width;\n\t\tvar tabsWidth = this.origTabWidth ;\n\t\tvar coeff = scrolledWidth > tabsWidth ? 1 : scrolledWidth / tabsWidth ;\n\t\tcoeff = coeff < 0.5 ? 0.5 : coeff;\n\t\tthis.applyCoeff(coeff) ;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tapplyCoeff: function (coeff) {\n\t\tutils.forEach(\n\t\t\tthis.$.tabs.getControls(),\n\t\t\tfunction (tab){\n\t\t\t\ttab.reduce(coeff) ;\n\t\t\t}\n\t\t);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tresetWidth: function () {\n\t\tthis.applyCoeff(1) ; // restore original size to all tabs\n\t\tthis.origTabWidth = this.computeOrigTabWidth(); // measure tab width\n\t\tthis.adjustTabWidth();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tisEmpty: function () {\n\t\treturn ! this.$.tabs.getControls().length ;\n\t},\n\n\t/**\n\t* Since action buttons of Contextual Popups are not dynamic, this\n\t* kind is created on the fly and destroyed once the user clicks\n\t* on a button\n\t*\n\t* @private\n\t*/\n\tshowPopupAtEvent: function (inSender, inEvent) {\n\t\tvar that = this ;\n\t\tvar popup = this.$.popup;\n\n\t\tfor (var name in popup.$) {\n\t\t\tif (popup.$.hasOwnProperty(name) && /menuItem/.test(name)) {\n\t\t\t\tpopup.$[name].destroy();\n\t\t\t}\n\t\t}\n\n\t\t//popup.render();\n\t\tutils.forEach(\n\t\t\tthis.$.tabs.getControls(),\n\t\t\tfunction (tab) {\n\t\t\t\tthat.$.popup.createComponent({\n\t\t\t\t\tcontent: tab.content,\n\t\t\t\t\tvalue: tab.tabIndex\n\t\t\t\t}) ;\n\t\t\t}\n\t\t);\n\n\t\tpopup.maxHeightChanged();\n\t\tpopup.showAtPosition({top: 30, right:30});\n\t\tthis.render();\n\t\tthis.resize(); // required for IE10 to work correctly\n\t\treturn ;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tpopupButtonTapped: function (inSender, inEvent) {\n\t\tvar target = { index: inEvent.originator.value } ;\n\t\tvar tab = this.resolveTab(target,'activate');\n\t\tif (tab) {\n\t\t\tthis._requestTabSwitch(tab);\n\t\t}\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tScroller = require('../../../enyo/lib/Scroller');\n\nvar\n\tFittableRows = require('../../../layout/lib/FittableRows'),\n\tFittableColumns = require('../../../layout/lib/FittableColumns');\n\nvar\n\tContextualPopup = require('../../../onyx/lib/ContextualPopup'),\n\tIconButton = require('../../../onyx/lib/IconButton'),\n\tMenu = require('../../../onyx/lib/Menu'),\n\tMenuDecorator = require('../../../onyx/lib/MenuDecorator'),\n\tToolbar = require('../../../onyx/lib/Toolbar');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.ContextualPopupSample',\n\tkind: FittableRows,\n\tclasses: 'onyx enyo-fit',\n\thandlers: {\n\t\tontap: 'tapHandler'\n\t},\n\tcomponents: [\n\t\t{kind: Toolbar, name: 'topToolbar', classes: 'onyx-menu-toolbar', style: 'background-color:lightgray', components: [\n\t\t\t{kind: FittableColumns, style: 'width:100%;', components: [\n\t\t\t\t{kind: MenuDecorator, components: [\n\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t{kind: ContextualPopup, title: 'Toolbar Button', floating: true, actionButtons: [\n\t\t\t\t\t\t{content: 'test1',\tclasses: 'onyx-button-warning'},\n\t\t\t\t\t\t{content: 'test2'}\n\t\t\t\t\t], components: [\n\t\t\t\t\t\t{content: 'testing 1'},\n\t\t\t\t\t\t{content: 'testing 2'}\n\t\t\t\t\t]}\n\t\t\t\t]},\n\t\t\t\t{kind: MenuDecorator, fit: true, style: 'position:absolute;right:0;', components: [\n\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t{kind: ContextualPopup, title: 'Toolbar Button', floating: true, actionButtons: [\n\t\t\t\t\t\t{content: 'test1', classes: 'onyx-button-warning'},\n\t\t\t\t\t\t{content: 'test2'}\n\t\t\t\t\t], components: [\n\t\t\t\t\t\t{content: 'testing 1'},\n\t\t\t\t\t\t{content: 'testing 2'},\n\t\t\t\t\t\t{content: 'testing 3'},\n\t\t\t\t\t\t{content: 'testing 4'},\n\t\t\t\t\t\t{content: 'testing 5'},\n\t\t\t\t\t\t{content: 'testing 6'}\n\t\t\t\t\t]}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\t\t{kind: Scroller, fit: true, thumb: false, components: [\n\t\t\t{name: 'buttonContainer', kind: FittableRows, classes: 'onyx-contextualpopup-button-container enyo-fit', components: [\n\t\t\t\t//Top row of buttons\n\t\t\t\t{components: [\n\t\t\t\t\t{kind: MenuDecorator, style: 'display:inline-block', components: [\n\t\t\t\t\t\t{content: 'Average'},\n\t\t\t\t\t\t{kind: ContextualPopup, title: 'Average', floating: true, actionButtons: [\n\t\t\t\t\t\t\t{content: 'Press Me'}\n\t\t\t\t\t\t], components: [\n\t\t\t\t\t\t\t{content: 'Item 1'},\n\t\t\t\t\t\t\t{content: 'Item 2'},\n\t\t\t\t\t\t\t{content: 'Item 3'},\n\t\t\t\t\t\t\t{content: 'Item 4'},\n\t\t\t\t\t\t\t{content: 'Item 5'}\n\t\t\t\t\t\t]}\n\t\t\t\t\t]},\n\t\t\t\t\t{kind: MenuDecorator, style: 'display:inline-block;float:right', components: [\n\t\t\t\t\t\t{content: 'Small'},\n\t\t\t\t\t\t{kind: ContextualPopup, title: 'Small', floating: true}\n\t\t\t\t\t]}\n\t\t\t\t]},\n\t\t\t\t//Center row of buttons\n\t\t\t\t{fit: true, style: 'padding-top:15%;padding-bottom:15%;', components: [\n\t\t\t\t\t{kind: MenuDecorator, style: 'display:inline-block;', components: [\n\t\t\t\t\t\t{content: 'Wide'},\n\t\t\t\t\t\t{kind: ContextualPopup, title: 'Wide', style: 'width:300px', floating: true, actionButtons: [\n\t\t\t\t\t\t\t{content: 'test1', classes: 'onyx-button-warning'},\n\t\t\t\t\t\t\t{content: 'test2'}\n\t\t\t\t\t\t], components: [\n\t\t\t\t\t\t\t{kind: Scroller, style: 'min-width:150px;', horizontal: 'auto', touch: true, thumb: false, components: [\n\t\t\t\t\t\t\t\t{content: 'testing 1'},\n\t\t\t\t\t\t\t\t{content: 'testing 2'}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t]}\n\t\t\t\t\t]},\n\t\t\t\t\t{kind: MenuDecorator, style: 'display:inline-block;float:right', components: [\n\t\t\t\t\t\t{content: 'Long'},\n\t\t\t\t\t\t{kind: ContextualPopup, maxHeight: '200', title: 'Long', floating: true, actionButtons: [\n\t\t\t\t\t\t\t{content: 'Press Me'}\n\t\t\t\t\t\t], components: [\n\t\t\t\t\t\t\t{content: 'testing 1'},\n\t\t\t\t\t\t\t{content: 'testing 2'},\n\t\t\t\t\t\t\t{content: 'testing 3'},\n\t\t\t\t\t\t\t{content: 'testing 4'},\n\t\t\t\t\t\t\t{content: 'testing 5'},\n\t\t\t\t\t\t\t{content: 'testing 6'},\n\t\t\t\t\t\t\t{content: 'testing 7'},\n\t\t\t\t\t\t\t{content: 'testing 8'},\n\t\t\t\t\t\t\t{content: 'testing 9'},\n\t\t\t\t\t\t\t{content: 'testing 10'},\n\t\t\t\t\t\t\t{content: 'testing 11'},\n\t\t\t\t\t\t\t{content: 'testing 12'},\n\t\t\t\t\t\t\t{content: 'testing 13'},\n\t\t\t\t\t\t\t{content: 'testing 14'},\n\t\t\t\t\t\t\t{content: 'testing 15'},\n\t\t\t\t\t\t\t{content: 'testing 16'},\n\t\t\t\t\t\t\t{content: 'testing 17'},\n\t\t\t\t\t\t\t{content: 'testing 18'},\n\t\t\t\t\t\t\t{content: 'testing 19'},\n\t\t\t\t\t\t\t{content: 'testing 20'},\n\t\t\t\t\t\t\t{content: 'testing 21'},\n\t\t\t\t\t\t\t{content: 'testing 22'},\n\t\t\t\t\t\t\t{content: 'testing 23'},\n\t\t\t\t\t\t\t{content: 'testing 24'},\n\t\t\t\t\t\t\t{content: 'testing 25'},\n\t\t\t\t\t\t\t{content: 'testing 26'},\n\t\t\t\t\t\t\t{content: 'testing 27'},\n\t\t\t\t\t\t\t{content: 'testing 28'},\n\t\t\t\t\t\t\t{content: 'testing 29'},\n\t\t\t\t\t\t\t{content: 'testing 30'}\n\t\t\t\t\t\t]}\n\t\t\t\t\t]}\n\t\t\t\t]},\n\t\t\t\t//Bottom row of buttons\n\t\t\t\t{components: [\n\t\t\t\t\t{kind: MenuDecorator, style: 'display:inline-block;', components: [\n\t\t\t\t\t\t{content: 'Press Me'},\n\t\t\t\t\t\t{kind: ContextualPopup, title: 'Press Me', floating: true, style: 'width:200px', actionButtons: [\n\t\t\t\t\t\t\t{content: 'test1', classes: 'onyx-button-warning'},\n\t\t\t\t\t\t\t{content: 'test2'}\n\t\t\t\t\t\t], components: [\n\t\t\t\t\t\t\t{content: 'testing 1'},\n\t\t\t\t\t\t\t{content: 'testing 2'},\n\t\t\t\t\t\t\t{content: 'testing 3'},\n\t\t\t\t\t\t\t{content: 'testing 4'},\n\t\t\t\t\t\t\t{content: 'testing 5'},\n\t\t\t\t\t\t\t{content: 'testing 6'},\n\t\t\t\t\t\t\t{content: 'testing 7'},\n\t\t\t\t\t\t\t{content: 'testing 8'},\n\t\t\t\t\t\t\t{content: 'testing 9'},\n\t\t\t\t\t\t\t{content: 'testing 10'}\n\t\t\t\t\t\t]}\n\t\t\t\t\t]},\n\t\t\t\t\t{kind: MenuDecorator, style: 'display:inline-block;float:right', components: [\n\t\t\t\t\t\t{content: 'Try Me'},\n\t\t\t\t\t\t{kind: ContextualPopup, style: 'width:250px', title: 'Try Me', floating: true, actionButtons: [\n\t\t\t\t\t\t\t{content: 'Do Nothing', classes: 'onyx-button-warning'},\n\t\t\t\t\t\t\t{content: 'Dismiss', ontap: 'dismissTap'}\n\t\t\t\t\t\t], components: [\n\t\t\t\t\t\t\t{content: 'Item 1'},\n\t\t\t\t\t\t\t{content: 'Item 2'},\n\t\t\t\t\t\t\t{content: 'Item 3'},\n\t\t\t\t\t\t\t{content: 'Item 4'},\n\t\t\t\t\t\t\t{content: 'Item 5'}\n\t\t\t\t\t\t]}\n\t\t\t\t\t]}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\t\t{kind: Toolbar, name: 'bottomToolbar', classes: 'onyx-menu-toolbar', style: 'background-color:lightgray', components: [\n\t\t\t{kind: FittableColumns, style: 'width:100%;', components: [\n\t\t\t\t{kind: MenuDecorator, components: [\n\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t{kind: ContextualPopup, title: 'Toolbar Button', floating: true, actionButtons: [\n\t\t\t\t\t\t{content: 'test1', classes: 'onyx-button-warning'},\n\t\t\t\t\t\t{content: 'test2'}\n\t\t\t\t\t], components: [\n\t\t\t\t\t\t{content: 'testing 1'},\n\t\t\t\t\t\t{content: 'testing 2'},\n\t\t\t\t\t\t{content: 'testing 3'},\n\t\t\t\t\t\t{content: 'testing 4'},\n\t\t\t\t\t\t{content: 'testing 5'},\n\t\t\t\t\t\t{content: 'testing 6'}\n\t\t\t\t\t]}\n\t\t\t\t]},\n\t\t\t\t{kind: MenuDecorator, fit: true, style: 'position:absolute;right:0;', components: [\n\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t{kind: ContextualPopup, name: 'facebook', title: 'Toolbar Button', floating: true, actionButtons: [\n\t\t\t\t\t\t{content: 'test1', classes: 'onyx-button-warning'},\n\t\t\t\t\t\t{content: 'Dismiss', name: 'dismiss_button'}\n\t\t\t\t\t], components: [\n\t\t\t\t\t\t{content: 'testing 1'},\n\t\t\t\t\t\t{content: 'testing 2'},\n\t\t\t\t\t\t{content: 'testing 3'},\n\t\t\t\t\t\t{content: 'testing 4'},\n\t\t\t\t\t\t{content: 'testing 5'},\n\t\t\t\t\t\t{content: 'testing 6'}\n\t\t\t\t\t]}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]}\n\t],\n\tdismissTap: function (sender, event) {\n\t\tthis.log(sender.name, 'action button tapped');\n\t\tsender.popup.hide();\n\t\treturn true;\n\t},\n\ttapHandler: function (sender, event) {\n\t\tif (event.originator.actionButton) {\n\t\t\tthis.log(event.originator.popup); //info about popup it's coming from\n\t\t\tthis.log('action button name: ' + event.originator.name); //name of action button (you can set this - see example use below)\n\n\t\t\tif (event.originator.name == 'dismiss_button') {\n\t\t\t\tevent.originator.popup.hide();\n\t\t\t}\n\t\t}\n\t}\n});\n","var\n\tkind = require('../../../enyo/lib/kind'),\n\tScroller = require('../../../enyo/lib/Scroller'),\n\tTouchScrollStrategy = require('../../../enyo/lib/TouchScrollStrategy');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tIconButton = require('../../../onyx/lib/IconButton'),\n\tMenu = require('../../../onyx/lib/Menu'),\n\tMenuDecorator = require('../../../onyx/lib/MenuDecorator'),\n\tMenuItem = require('../../../onyx/lib/MenuItem')\n\tToolbar = require('../../../onyx/lib/Toolbar');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.MenuSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Menus in Toolbars'},\n\t\t{kind: Toolbar, classes: 'onyx-menu-toolbar', components: [\n\t\t\t{kind: MenuDecorator, onSelect: 'itemSelected', components: [\n\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t{kind: Menu, components: [\n\t\t\t\t\t{components: [\n\t\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t\t{content: 'Bookmarks'}\n\t\t\t\t\t]},\n\t\t\t\t\t{content: 'Favorites'},\n\t\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t\t{content: 'Recents'}\n\t\t\t\t]}\n\t\t\t]},\n\t\t\t{kind: MenuDecorator, onSelect: 'itemSelected', components: [\n\t\t\t\t{content: 'Bookmarks menu'},\n\t\t\t\t{kind: Menu, components: [\n\t\t\t\t\t{components: [\n\t\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t\t{content: 'Bookmarks'}\n\t\t\t\t\t]},\n\t\t\t\t\t{content: 'Favorites'},\n\t\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t\t{content: 'Recents'}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Menus from Buttons'},\n\t\t{kind: MenuDecorator, onSelect: 'itemSelected', components: [\n\t\t\t{content: 'Popup menu (floating)'},\n\t\t\t{kind: Menu, floating: true, components: [\n\t\t\t\t{content: '1'},\n\t\t\t\t{content: '2'},\n\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t{content: '3'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: MenuDecorator, onSelect: 'itemSelected', components: [\n\t\t\t{content: 'Scrolling Popup menu'},\n\t\t\t{kind: Menu, components: [\n\t\t\t\t{name: 'menuScroller', kind: 'enyo.Scroller', defaultKind: MenuItem, vertical: 'auto', classes: 'enyo-unselectable', maxHeight: '200px', strategyKind: TouchScrollStrategy, components: [\n\t\t\t\t\t{content: '1'},\n\t\t\t\t\t{content: '2'},\n\t\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t\t{content: '3'},\n\t\t\t\t\t{content: '4'},\n\t\t\t\t\t{content: '5'},\n\t\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t\t{content: '6'},\n\t\t\t\t\t{content: '7'}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: MenuDecorator, onSelect: 'itemSelected', components: [\n\t\t\t{content: 'Split Popup menu', kind: Button, onActivate: 'preventMenuActivate', style: 'border-radius: 3px 0 0 3px;'},\n\t\t\t{content: 'v', allowHtml: true, style: 'border-radius: 0 3px 3px 0;'},\n\t\t\t{kind: Menu, components: [\n\t\t\t\t{content: '1'},\n\t\t\t\t{content: '2'},\n\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t{content: '3'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'menuSelection', classes: 'onyx-sample-result', content: 'No menu selection yet.'}\n\t\t]}\n\t],\n\tshowPopup: function (sender) {\n\t\tvar p = this.$[sender.popup];\n\t\tif (p) {\n\t\t\tp.show();\n\t\t}\n\t},\n\tpreventMenuActivate: function () {\n\t\treturn true;\n\t},\n\titemSelected: function (sender, event) {\n\t\t// Menu items send an onSelect event with a reference to themselves & any directly displayed content\n\t\tif (event.originator.content) {\n\t\t\tthis.$.menuSelection.setContent(event.originator.content + ' Selected');\n\t\t} else if (event.selected) {\n\t\t\t//\tSince some of the menu items do not have directly displayed content (they are kinds with subcomponents),\n\t\t\t//\twe have to handle those items differently here.\n\t\t\tthis.$.menuSelection.setContent(event.selected.controlAtIndex(1).content + ' Selected');\n\t\t}\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tMenu = require('../../../onyx/lib/Menu'),\n\tMenuDecorator = require('../../../onyx/lib/MenuDecorator'),\n\tSubmenu = require('../../../onyx/lib/Submenu');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.SubmenuSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Submenu'},\n\t\t{kind: MenuDecorator, onSelect: 'itemSelected', components:[\n\t\t\t{content: 'Contact actions'},\n\t\t\t{kind: Menu, components:[\n\t\t\t\t{content: 'Add contact'},\n\t\t\t\t{kind: Submenu, content: 'Sort by...', components:[\n\t\t\t\t\t{content: 'First Name'},\n\t\t\t\t\t{content: 'Last Name'},\n\t\t\t\t\t{content: 'Company'}\n\t\t\t\t]},\n\t\t\t\t{content: 'Sync'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Nested Submenu'},\n\t\t{kind: MenuDecorator, onSelect: 'itemSelected', components: [\n\t\t\t{content: 'Email actions'},\n\t\t\t{kind: Menu, components: [\n\t\t\t\t{content: 'Reply'},\n\t\t\t\t{content: 'Forward'},\n\t\t\t\t{kind: Submenu, content: 'Move to...', components:[\n\t\t\t\t\t{kind: Submenu, content: 'Personal...', components:[\n\t\t\t\t\t\t{content: 'Games'},\n\t\t\t\t\t\t{content: 'Recpies'}\n\t\t\t\t\t]},\n\t\t\t\t\t{kind: Submenu, content: 'Work...', components:[\n\t\t\t\t\t\t{content: 'Primary project'},\n\t\t\t\t\t\t{content: 'Super secret project'}\n\t\t\t\t\t]}\n\t\t\t\t]},\n\t\t\t\t{content: 'Delete'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes: 'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Result'},\n\t\t\t{name: 'menuSelection', classes: 'onyx-sample-result', content: 'No menu selection yet.'}\n\t\t]}\n\t],\n\titemSelected: function (sender, event) {\n\t\tthis.$.menuSelection.setContent(event.originator.content + ' Selected');\n\t}\n});\n","var\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tIconButton = require('../../../onyx/lib/IconButton'),\n\tInput = require('../../../onyx/lib/Input'),\n\tInputDecorator = require('../../../onyx/lib/InputDecorator'),\n\tMenu = require('../../../onyx/lib/Menu'),\n\tMenuDecorator = require('../../../onyx/lib/MenuDecorator'),\n\tToolbar = require('../../../onyx/lib/Toolbar'),\n\tTooltip = require('../../../onyx/lib/Tooltip'),\n\tTooltipDecorator = require('../../../onyx/lib/TooltipDecorator');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.TooltipSample',\n\tclasses: 'onyx onyx-sample',\n\thandlers: {\n\t\tonSelect: 'itemSelected'\n\t},\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Tooltips on Toolbar'},\n\t\t{kind: Toolbar, classes: 'onyx-menu-toolbar', components: [\n\t\t\t{kind: TooltipDecorator, components: [\n\t\t\t\t{kind: Button, content: 'Tooltip'},\n\t\t\t\t{kind: Tooltip, content: 'I\\'m a tooltip for a button.'}\n\t\t\t]},\n\t\t\t{kind: TooltipDecorator, components: [\n\t\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t\t{kind: Input, style: 'width: 130px;', placholder: 'Just an input...'}\n\t\t\t\t]},\n\t\t\t\t{kind: Tooltip, content: 'I\\'m a tooltip for an input.'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Toolbar, classes: 'onyx-menu-toolbar', components: [\n\t\t\t{kind: MenuDecorator, components: [\n\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t{kind: Tooltip, content: 'Bookmarks menu'},\n\t\t\t\t{kind: Menu, components: [\n\t\t\t\t\t{components: [\n\t\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t\t{content: 'Bookmarks'}\n\t\t\t\t\t]},\n\t\t\t\t\t{content: 'Favorites'},\n\t\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t\t{content: 'Recents'}\n\t\t\t\t]}\n\t\t\t]},\n\t\t\t{kind: MenuDecorator, components: [\n\t\t\t\t{content: 'Bookmarks menu'},\n\t\t\t\t{kind: Tooltip, content: 'Tap to open...'},\n\t\t\t\t{kind: Menu, components: [\n\t\t\t\t\t{components: [\n\t\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t\t{content: 'Bookmarks'}\n\t\t\t\t\t]},\n\t\t\t\t\t{content: 'Favorites'},\n\t\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t\t{content: 'Recents'}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-sample-divider', content: 'Tooltips on items'},\n\t\t{kind: TooltipDecorator, components: [\n\t\t\t{kind: Button, content: 'Tooltip'},\n\t\t\t{kind: Tooltip, content: 'I\\'m a tooltip for a button.'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: TooltipDecorator, components: [\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, style: 'width: 130px;', placholder: 'Just an input...'}\n\t\t\t]},\n\t\t\t{kind: Tooltip, content: 'I\\'m a tooltip for an input.'}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: MenuDecorator, components: [\n\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t{kind: Tooltip, content: 'Bookmarks menu'},\n\t\t\t{kind: Menu, components: [\n\t\t\t\t{components: [\n\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t{content: 'Bookmarks'}\n\t\t\t\t]},\n\t\t\t\t{content: 'Favorites'},\n\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t{content: 'Recents'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: MenuDecorator, components: [\n\t\t\t{content: 'Bookmarks menu'},\n\t\t\t{kind: Tooltip, content: 'Tap to open...'},\n\t\t\t{kind: Menu, components: [\n\t\t\t\t{components: [\n\t\t\t\t\t{kind: IconButton, src: 'assets/menu-icon-bookmark.png'},\n\t\t\t\t\t{content: 'Bookmarks'}\n\t\t\t\t]},\n\t\t\t\t{content: 'Favorites'},\n\t\t\t\t{classes: 'onyx-menu-divider'},\n\t\t\t\t{content: 'Recents'}\n\t\t\t]}\n\t\t]}\n\t]\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind'),\n\tScroller = require('../../enyo/lib/Scroller'),\n\tTouchScrollStrategy = require('../../enyo/lib/TouchScrollStrategy');\n\nvar\n\tFlyweightRepeater = require('../../layout/lib/FlyweightRepeater');\n\nvar\n\tPicker = require('../../onyx/lib/Picker');\n\n/**\n* Fires when a row is being initialized.\n*\n* @event onyx.FlyweightPicker#onSetupItem\n* @type {Object}\n* @property {Number} index - The row index.\n* @property {enyo.Control} flyweight - The row control, for decoration.\n* @see enyo.FlyweightRepeater.onSetupItem\n* @public\n*/\n\n/**\n* Fires when an item is selected.\n*\n* @event onyx.FlyweightPicker#onSelect\n* @type {Object}\n* @property {String} content - Content of the selected item.\n* @property {Number} selected - Row index of the selected item.\n* @public\n*/\n\n/**\n* {@link onyx.FlyweightPicker}, a subkind of {@link onyx.Picker}, is a picker\n* that employs the flyweight pattern. It is used to display a large list of\n* selectable items.\tAs with {@link enyo.FlyweightRepeater}, the\n* [onSetupItem]{@link onyx.FlyweightPicker#onSetupItem} event allows for\n* customization of item rendering.\n*\n* To initialize the FlyweightPicker to a particular value, call `setSelected()`\n* with the index of the item you wish to select, and call `setContent()` with\n* the item that should be shown in the activator button.\n*\n* When an item is selected, FlyweightPicker sends an\n* [onSelect]{@link onyx.FlyweightPicker#onSelect} event with the selected\n* item's information. This may be handled by a client application to determine\n* which item was selected.\n*\n* ```\n* enyo.kind({\n* \thandlers: {\n* \t\tonSelect: 'itemSelected'\n* \t},\n* \tcomponents: [\n* \t\t{kind: 'onyx.PickerDecorator', components: [\n* \t\t\t{},\n* \t\t\t{name: 'yearPicker', kind: 'onyx.FlyweightPicker', count: 200,\n* \t\t\t\tonSetupItem: 'setupYear', components: [\n* \t\t\t\t\t{name: 'year'}\n* \t\t\t\t]\n* \t\t\t}\n* \t\t]}\n* \t],\n* \tcreate: function () {\n* \t\tvar d = new Date();\n* \t\tvar y = d.getYear();\n* \t\tthis.$.yearPicker.setSelected(y);\n* \t\tthis.$.year.setContent(1900+y);\n* \t},\n* \tsetupYear: function (sender, event) {\n* \t\tthis.$.year.setContent(1900+event.index);\n* \t},\n* \titemSelected: function (sender, event) {\n* \t\tenyo.log('Picker Item Selected: ' + event.selected.content);\n* \t}\n* })\n* ```\n*\n* @class   onyx.FlyweightPicker\n* @extends onyx.Picker\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends onyx.FlyweightPicker.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.FlyweightPicker',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Picker,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-flyweight-picker',\n\n\t/**\n\t* @lends  onyx.FlyweightPicker.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* The number of rows to render.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tcount: 0\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonSetupItem: '',\n\t\tonSelect: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonSelect: 'itemSelect'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{name: 'scroller', kind: Scroller, strategyKind: TouchScrollStrategy, components: [\n\t\t\t{name: 'flyweight', kind: FlyweightRepeater, noSelect: true, ontap: 'itemTap'}\n\t\t]}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tscrollerName: 'scroller',\n\n\t/**\n\t* Force the flyweight's client control ([MenuItem]{@link onyx.MenuItem} by default)\n\t* to activate. This will result in a call to `processActivatedItem()`, which preps\n\t* our picker selection logic. This is a workaround for changes caused by ENYO-1609\n\t* which resulted in ENYO-1611.\n\t*\n\t* @private\n\t*/\n\tinitComponents: function () {\n\t\tthis.controlParentName = 'flyweight';\n        Picker.prototype.initComponents.apply(this, arguments);\n\t\tthis.$.flyweight.$.client.children[0].setActive(true);\n    },\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tPicker.prototype.create.apply(this, arguments);\n\t\tthis.countChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trendered: function () {\n\t\tPicker.prototype.rendered.apply(this, arguments);\n\t\tthis.selectedChanged();\n\t},\n\n\t/**\n\t* Scrolls the [selected]{@link onyx.FlyweightPicker#selected} control into view.\n\t*\n\t* @public\n\t*/\n\tscrollToSelected: function () {\n\t\tvar n = this.$.flyweight.fetchRowNode(this.selected);\n\t\tthis.getScroller().scrollToNode(n, !this.menuUp);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcountChanged: function () {\n\t\tthis.$.flyweight.count = this.count;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tprocessActivatedItem: function (item) {\n\t\tthis.item = item;\n\t},\n\n\t/**\n\t* @fires onyx.Picker#onChange\n\t* @private\n\t*/\n\tselectedChanged: function (old) {\n\t\tif (!this.item) {\n\t\t\treturn;\n\t\t}\n\t\tif (old != null) {\n\t\t\tthis.item.removeClass('selected');\n\t\t\tthis.$.flyweight.renderRow(old);\n\t\t}\n\t\tvar n;\n\t\tif (this.selected != null) {\n\t\t\tthis.item.addClass('selected');\n\t\t\tthis.$.flyweight.renderRow(this.selected);\n\t\t\t// need to remove the class from control to make sure it won't apply to other rows\n\t\t\tthis.item.removeClass('selected');\n\t\t\tn = this.$.flyweight.fetchRowNode(this.selected);\n\t\t}\n\t\tthis.doChange({selected: this.selected, content: n && n.textContent || this.item.content});\n\t},\n\n\t/**\n\t* @fires onyx.FlyweightPicker#onSelect\n\t* @private\n\t*/\n\titemTap: function (sender, event) {\n\t\tthis.setSelected(event.rowIndex);\n\t\t//Send the select event that we want the client to receive.\n\t\tthis.doSelect({selected: this.item, content: this.item.content});\n\t},\n\n\t/**\n\t* Blocks all `select` events that aren't coming from this control. This is to\n\t* prevent `select` events from MenuItems since they won't have the correct value\n\t* in a Flyweight context.\n\t*\n\t* @private\n\t*/\n\titemSelect: function (sender, event) {\n\t\tif (event.originator != this) {\n\t\t\treturn true;\n\t\t}\n\t}\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind');\n\nvar\n\tPicker = require('../../onyx/lib/Picker');\n\n/**\n* {@link onyx.IntegerPicker}, a subkind of {@link onyx.Picker}, is used to\n* display a list of integers that may be selected, ranging from\n* [min]{@link onyx.IntegerPicker#min} to [max]{@link onyx.IntegerPicker#max}.\n* It is meant to be used in conjunction with an {@link onyx.PickerDecorator}.\n* The decorator loosely couples the picker with an {@link onyx.PickerButton}--a\n* button that, when tapped, shows the picker. Once an item is selected, the\n* list of items closes,\tbut the item stays selected and the PickerButton\n* displays the choice that was made.\n*\n* To initialize the IntegerPicker to a particular value, set the\n* [value]{@link onyx.IntegerPicker#value} property to the integer that should\n* be selected.\n*\n* ```\n* {kind: 'onyx.PickerDecorator', components: [\n* \t{}, //this uses the defaultKind property of PickerDecorator to inherit from PickerButton\n* \t{kind: 'onyx.IntegerPicker', min: 0, max: 25, value: 5}\n* ]}\n* ```\n*\n* Each item in the list is an {@link onyx.MenuItem}, so an application may\n* listen for an [onSelect]{@link onyx.MenuItem#onSelect} event with the\n* item to determine which picker item was selected.\n*\n* @class  onyx.IntegerPicker\n* @extends onyx.Picker\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.IntegerPicker.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.IntegerPicker',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Picker,\n\n\t/**\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Selected value of the picker.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @memberOf  onyx.IntegerPicker.prototype\n\t\t* @public\n\t\t*/\n\t\tvalue: 0,\n\n\t\t/**\n\t\t* Minimum value of the picker.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @memberOf  onyx.IntegerPicker.prototype\n\t\t* @public\n\t\t*/\n\t\tmin: 0,\n\n\t\t/**\n\t\t* Maximum value of the picker.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  9\n\t\t* @memberOf onyx.IntegerPicker.prototype\n\t\t* @public\n\t\t*/\n\t\tmax: 9\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tPicker.prototype.create.apply(this, arguments);\n\t\tthis.rangeChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tminChanged: function () {\n\t\tthis.destroyClientControls();\n\t\tthis.rangeChanged();\n\t\tthis.render();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxChanged: function () {\n\t\tthis.destroyClientControls();\n\t\tthis.rangeChanged();\n\t\tthis.render();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trangeChanged: function () {\n\t\tfor (var i=this.min; i<=this.max; i++) {\n\t\t\tthis.createComponent({content: i, active: (i===this.value) ? true : false});\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function () {\n\t\tvar controls = this.getClientControls();\n\t\tvar len = controls.length;\n\t\t// Validate our value\n\t\tthis.value = Math.min(this.max, Math.max(this.value, this.min));\n\t\tfor (var i=0; i<len; i++) {\n\t\t\tif (this.value === parseInt(controls[i].content, 10)) {\n\t\t\t\tthis.setSelected(controls[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tselectedChanged: function (old) {\n\t\tif (old) {\n\t\t\told.removeClass('selected');\n\t\t}\n\t\tif (this.selected) {\n\t\t\tthis.selected.addClass('selected');\n\t\t\tthis.doChange({selected: this.selected, content: this.selected.content});\n\t\t}\n\t\tthis.setValue(parseInt(this.selected.content, 10));\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tFittableRows = require('../../../layout/lib/FittableRows')\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tInput = require('../../../onyx/lib/Input'),\n\tInputDecorator = require('../../../onyx/lib/InputDecorator'),\n\tMoreToolbar = require('../../../onyx/lib/MoreToolbar');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.MoreToolbarSample',\n\tclasses: 'onyx onyx-sample',\n\tkind: FittableRows,\n\tfit: true,\n\tcomponents: [\n\t\t{kind: MoreToolbar, components: [\n\t\t\t{content: 'More Toolbar', unmoveable: true},\n\t\t\t{kind: Button, content: 'Alpha'},\n\t\t\t{kind: Button, content: 'Beta'},\n\t\t\t{kind: Button, content: 'Gamma', unmoveable: true},\n\t\t\t{kind: Button, content: 'Epsilon'},\n\t\t\t{kind: Button, content: 'Othercon'},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, placeholder: 'pulez'}\n\t\t\t]},\n\t\t\t{kind: Button, content: 'Maxizon'}\n\t\t]},\n\t\t{fit: true, style: 'background: lightpurple;padding:25px;', components: [\n\t\t\t{content: 'The \\'More Toolbar\\' label and the Gamma button have the unmoveable property set to true.'}\n\t\t]},\n\t\t{kind: MoreToolbar, components: [\n\t\t\t{content: 'More Toolbar', unmoveable: true},\n\t\t\t{kind: Button, content: 'Alpha'},\n\t\t\t{kind: Button, content: 'Beta'},\n\t\t\t{kind: Button, content: 'Gamma', unmoveable: true},\n\t\t\t{kind: Button, content: 'Epsilon'},\n\t\t\t{kind: Button, content: 'Othercon'},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, placeholder: 'pulez'}\n\t\t\t]},\n\t\t\t{kind: Button, content: 'Maxizon'}\n\t\t]}\n\t]\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tScroller = require('../../../enyo/lib/Scroller');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tGrabber = require('../../../onyx/lib/Grabber'),\n\tInput = require('../../../onyx/lib/Input'),\n\tInputDecorator = require('../../../onyx/lib/InputDecorator'),\n\tMoreToolbar = require('../../../onyx/lib/MoreToolbar'),\n\tToolbar = require('../../../onyx/lib/Toolbar');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.ToolbarSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'ToolBar'},\n\t\t{kind: Toolbar, components: [\n\t\t\t{kind: Grabber},\n\t\t\t{content: 'Header'},\n\t\t\t{kind: Button, content: 'Button'},\n\t\t\t{kind: Button, content: 'Down', classes: 'active'},\n\t\t\t{kind: Button, content: 'Button'},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, placeholder: 'Input'}\n\t\t\t]},\n\t\t\t{kind: Button, content: 'Right'},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, placeholder: 'Right Input'}\n\t\t\t]},\n\t\t\t{kind: Button, content: 'More Right'},\n\t\t\t{content: 'There\\'s more'},\n\t\t\t{kind: Button, content: 'Far Right'}\n\t\t]},\n\t\t{tag: 'br'},\n\n\t\t{classes: 'onyx-sample-divider', content: 'Scrolling ToolBar'},\n\t\t{kind: Scroller, classes: 'onyx-toolbar', touchOverscroll: false, touch: true, vertical: 'hidden', style: 'margin: 0px;', thumb: false, components: [\n\t\t\t{classes: 'onyx-toolbar-inline', style: 'white-space: nowrap;', components: [\n\t\t\t\t{kind: Grabber},\n\t\t\t\t{content: 'Header'},\n\t\t\t\t{kind: Button, content: 'Button'},\n\t\t\t\t{kind: Button, content: 'Down', classes: 'active'},\n\t\t\t\t{kind: Button, content: 'Button'},\n\t\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t\t{kind: Input, placeholder: 'Input'}\n\t\t\t\t]},\n\t\t\t\t{kind: Button, content: 'Right'},\n\t\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t\t{kind: Input, placeholder: 'Right Input'}\n\t\t\t\t]},\n\t\t\t\t{kind: Button, content: 'More Right'},\n\t\t\t\t{content: 'There\\'s more'},\n\t\t\t\t{kind: Button, content: 'Far Right'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\n\t\t{classes: 'onyx-sample-divider', content: 'More ToolBar'},\n\t\t{kind: MoreToolbar, components: [\n\t\t\t{kind: Grabber},\n\t\t\t{content: 'Header'},\n\t\t\t{kind: Button, content: 'Button'},\n\t\t\t{kind: Button, content: 'Down', classes: 'active'},\n\t\t\t{kind: Button, content: 'Button'},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, placeholder: 'Input'}\n\t\t\t]},\n\t\t\t{kind: Button, content: 'Right'},\n\t\t\t{kind: InputDecorator, components: [\n\t\t\t\t{kind: Input, placeholder: 'Right Input'}\n\t\t\t]},\n\t\t\t{kind: Button, content: 'More Right'},\n\t\t\t{content: 'There\\'s more'},\n\t\t\t{kind: Button, content: 'Far Right'}\n\t\t]}\n\t]\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\nvar\n\tilib = require('../../../enyo-ilib');\n\nvar\n\tPicker = require('../../../onyx/lib/Picker'),\n\tPickerDecorator = require('../../../onyx/lib/PickerDecorator');\n\n/**\n* Fires when one of the [TimePicker]{@link onyx.TimePicker}'s fields is selected.\n*\n* @event onyx.TimePicker#onSelect\n* @type {Object}\n* @property {String} name - Name of the [TimePicker]{@link onyx.TimePicker} that\n* generated the event.\n* @property {Date} value  - Current {@glossary Date} value of the control.\n* @public\n*/\n\n/**\n* {@link onyx.TimePicker} is a group of {@link onyx.Picker} controls that,\n* collectively, display the current time. The user may change the hour, minute,\n* and meridiem (AM/PM) values.\n*\n* By default, TimePicker tries to determine the current locale and use that\n* locale's rules to format the time (including AM/PM). In order to do this\n* successfully, the [iLib]{@glossary ilib} library must be loaded; if it is\n* not loaded, the control defaults to using standard U.S. time formatting.\n*\n* @ui\n* @class onyx.TimePicker\n* @extends enyo.Control\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.TimePicker.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.TimePicker',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-toolbar-inline',\n\n\t/**\n\t* @lends onyx.TimePicker.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* If `true`, the control is shown as disabled and users cannot select new values.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tdisabled: false,\n\n\t\t/**\n\t\t* Current locale used for formatting; may be set after control creation, in\n\t\t* which case the control will be updated to reflect the new value.\n\t\t*\n\t\t* @type {String}\n\t\t* @default 'en-US'\n\t\t* @public\n\t\t*/\n\t\tlocale: 'en-US',\n\n\t\t/**\n\t\t* If `true`, 24-hour time is used. When the locale is changed, this value is\n\t\t* updated to reflect the new locale's rules.\n\t\t*\n\t\t* @type {Boolean|null}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tis24HrMode: null,\n\n\t\t/**\n\t\t* {@glossary Date} object representing the currently-selected date/time.\n\t\t* When a Date object is passed to `setValue()`, the object is stored here\n\t\t* and the control is updated to reflect the new date/time.\n\t\t*\n\t\t* @type {Object|null}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tvalue: null\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonSelect: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tif (ilib) {\n\t\t\tthis.locale = ilib.getLocale();\n\t\t}\n\t\tthis.initDefaults();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinitDefaults: function () {\n\t\t// defaults that match en_US for when ilib isn't loaded\n\t\tthis._strAm = 'AM';\n\t\tthis._strPm = 'PM';\n\t\t// Attempt to use the ilib lib (ie assume it is loaded)\n\t\tif (ilib) {\n\t\t\tthis._tf = new ilib.DateFmt({locale:this.locale});\n\n\t\t\tvar objAmPm = new ilib.DateFmt({locale:this.locale, type: 'time', template: 'a'});\n\t\t\tvar timeobj = ilib.Date.newInstance({locale:this.locale, hour: 1});\n\t\t\tthis._strAm = objAmPm.format(timeobj);\n\t\t\ttimeobj.hour = 13;\n\t\t\tthis._strPm = objAmPm.format(timeobj);\n\n\t\t\tif (this.is24HrMode == null) {\n\t\t\t\tthis.is24HrMode = (this._tf.getClock() == '24');\n\t\t\t}\n\t\t} else if (this.is24HrMode == null) {\n\t\t\tthis.is24HrMode = false;\n\t\t}\n\n\t\tthis.setupPickers(this._tf ? this._tf.getTimeComponents() : 'hma');\n\n\t\tvar d = this.value = this.value || new Date();\n\n\t\t// create hours\n\t\tvar i;\n\t\tif (!this.is24HrMode) {\n\t\t\tvar h = d.getHours();\n\t\t\th = (h === 0) ? 12 : h;\n\t\t\tfor (i=1; i<=12; i++) {\n\t\t\t\tthis.$.hourPicker.createComponent({content: i, value:i, active: (i == (h>12 ? h%12 : h))});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i=0; i<24; i++) {\n\t\t\t\tthis.$.hourPicker.createComponent({content: i, value:i, active: (i == d.getHours())});\n\t\t\t}\n\t\t}\n\n\t\t// create minutes\n\t\tfor (i=0; i<=59; i++) {\n\t\t\tthis.$.minutePicker.createComponent({content: (i < 10) ? ('0'+i):i, value:i, active: i == d.getMinutes()});\n\t\t}\n\n\t\t// create am/pm\n\t\tif (d.getHours() >= 12) {\n\t\t\tthis.$.ampmPicker.createComponents([{content: this._strAm},{content:this._strPm, active: true}]);\n\t\t} else {\n\t\t\tthis.$.ampmPicker.createComponents([{content: this._strAm, active: true},{content:this._strPm}]);\n\t\t}\n\t\tthis.$.ampmPicker.getParent().setShowing(!this.is24HrMode);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tsetupPickers: function (timeComponents) {\n\t\t// order is always fixed hours, minutes, am/pm\n\t\tif (timeComponents.indexOf('h') !== -1) {\n\t\t\tthis.createHour();\n\t\t}\n\t\tif (timeComponents.indexOf('m') !== -1) {\n\t\t\tthis.createMinute();\n\t\t}\n\t\tif (timeComponents.indexOf('a') !== -1) {\n\t\t\tthis.createAmPm();\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreateHour: function () {\n\t\tthis.createComponent(\n\t\t\t{kind: PickerDecorator, onSelect: 'updateHour', components: [\n\t\t\t\t{name: 'hourPickerButton', classes: 'onyx-timepicker-hour', disabled: this.disabled},\n\t\t\t\t{name: 'hourPicker', kind: Picker}\n\t\t\t]}\n\t\t);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreateMinute: function () {\n\t\tthis.createComponent(\n\t\t\t{kind: PickerDecorator, onSelect: 'updateMinute', components: [\n\t\t\t\t{name: 'minutePickerButton', classes: 'onyx-timepicker-minute', disabled: this.disabled},\n\t\t\t\t{name: 'minutePicker', kind: Picker}\n\t\t\t]}\n\t\t);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreateAmPm: function () {\n\t\tthis.createComponent(\n\t\t\t{kind: PickerDecorator, onSelect: 'updateAmPm', components: [\n\t\t\t\t{name: 'ampmPickerButton', classes: 'onyx-timepicker-ampm', disabled: this.disabled},\n\t\t\t\t{name: 'ampmPicker', kind: Picker}\n\t\t\t]}\n\t\t);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdisabledChanged: function () {\n\t\tthis.$.hourPickerButton.setDisabled(this.disabled);\n\t\tthis.$.minutePickerButton.setDisabled(this.disabled);\n\t\tthis.$.ampmPickerButton.setDisabled(this.disabled);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tlocaleChanged: function () {\n\t\t//reset 24 hour mode when changing locales\n\t\tthis.is24HrMode = null;\n\t\tthis.refresh();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tis24HrModeChanged: function () {\n\t\tthis.refresh();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function (){\n\t\tthis.refresh();\n\t},\n\n\t/**\n\t* @fires onyx.TimePicker#onSelect\n\t* @private\n\t*/\n\tupdateHour: function (inSender, inEvent){\n\t\tvar h = inEvent.selected.value;\n\t\tif (!this.is24HrMode){\n\t\t\tvar ampm = this.$.ampmPicker.getParent().controlAtIndex(0).content;\n\t\t\th = h + (h == 12 ? -12 : 0) + (this.isAm(ampm) ? 0 : 12);\n\t\t}\n\t\tthis.setValue(this.calcTime(h, this.value.getMinutes()));\n\t\tthis.doSelect({name:this.name, value:this.value});\n\t\treturn true;\n\t},\n\n\t/**\n\t* @fires onyx.TimePicker#onSelect\n\t* @private\n\t*/\n\tupdateMinute: function (inSender, inEvent){\n\t\tthis.setValue(this.calcTime(this.value.getHours(), inEvent.selected.value));\n\t\tthis.doSelect({name:this.name, value:this.value});\n\t\treturn true;\n\t},\n\n\t/**\n\t* @fires onyx.TimePicker#onSelect\n\t* @private\n\t*/\n\tupdateAmPm: function (inSender, inEvent){\n\t\tvar h = this.value.getHours();\n\t\tif (!this.is24HrMode){\n\t\t\th = h + (h > 11 ? (this.isAm(inEvent.content) ? -12 : 0) : (this.isAm(inEvent.content) ? 0 : 12));\n\t\t}\n\t\tthis.setValue(this.calcTime(h, this.value.getMinutes()));\n\t\tthis.doSelect({name:this.name, value:this.value});\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcTime: function (hour, minute){\n\t\treturn new Date(this.value.getFullYear(),\n\t\t\t\t\t\tthis.value.getMonth(),\n\t\t\t\t\t\tthis.value.getDate(),\n\t\t\t\t\t\thour, minute,\n\t\t\t\t\t\tthis.value.getSeconds(),\n\t\t\t\t\t\tthis.value.getMilliseconds());\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tisAm: function (value){\n\t\treturn value == this._strAm;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\trefresh: function (){\n\t\tthis.destroyClientControls();\n\t\tthis.initDefaults();\n\t\tthis.render();\n\t}\n});","require('../../onyx');\n\nvar\n\tkind = require('../../enyo/lib/kind'),\n\tutils = require('../../enyo/lib/utils');\n\nvar\n\tFittableLayout = require('../../layout/lib/FittableLayout'),\n\tFittableRowsLayout = FittableLayout.Rows,\n\tPanels = require('../../layout/lib/Panels');\n\nvar\n\tTabBar = require('../../onyx/lib/TabBar');\n\n/**\n* enyo.TabPanels is a subkind of enyo.Panels that\n* displays a set of tabs, which allow navigation between the individual panels.\n* Unlike enyo.Panels, by default, the user cannot drag between the panels of a\n* TabPanels. This behavior may be enabled by setting _draggable_ to _true_.\n*\n* ```\n* enyo.kind({\n* \tname: 'App',\n* \tkind: 'onyx.TabPanels',\n* \tfit: true,\n* \tcomponents: [\n* \t\t{kind: 'MyStartPanel'},\n* \t\t{kind: 'MyMiddlePanel'},\n* \t\t{kind: 'MyLastPanel'}\n* \t]\n* });\n* new App().renderInto(document.body);\n* ```\n*\n* @ui\n* @class  onyx.TabPanels\n* @extends enyo.Panels\n* @private\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.TabPanels.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.TabPanels',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Panels,\n\n\t/**\n\t* @private\n\t*/\n\tdraggable: false,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tonTabChanged: 'switchPanel'\n\t},\n\n\t/**\n\t* @lends onyx.TabPanels.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Set a maximum height for the scrollable menu that can be raised on the right of\n\t\t* the tab bar.\n\t\t*\n\t\t* @type {Number|null}\n\t\t* @default null\n\t\t* @public\n\t\t*/\n\t\tmaxMenuHeight: null\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttabTools: [\n\t\t{kind: TabBar, isPanel: true, name: 'bar'},\n\t\t{name: 'client', isPanel: true, fit: true, kind: Panels, classes: 'enyo-tab-panels', onTransitionStart: 'clientTransitionStart'}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tPanels.prototype.create.apply(this, arguments);\n\n\t\tif (this.getMaxMenuHeight()) {\n\t\t\tthis.maxMenuHeightChanged();\n\t\t}\n\n\t\t// getPanels called on client will return panels of *this* kind\n\t\tthis.$.client.getPanels = this.bindSafely('getClientPanels');\n\n\t\t// basically, set all these Panel parameters to false\n\t\tthis.draggableChanged();\n\t\tthis.animateChanged();\n\t\tthis.wrapChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxMenuHeightChanged: function () {\n\t\tthis.$.bar.setMaxMenuHeight(this.getMaxMenuHeight()) ;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinitComponents: function () {\n\t\tthis.createChrome(this.tabTools);\n\t\tPanels.prototype.initComponents.apply(this, arguments);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tgetClientPanels: function () {\n\t\treturn this.getPanels();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tflow: function () {\n\t\tPanels.prototype.flow.apply(this, arguments);\n\t\tthis.$.client.flow();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\treflow: function () {\n\t\tPanels.prototype.reflow.apply(this, arguments);\n\t\tthis.$.client.reflow();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdraggableChanged: function () {\n\t\tthis.$.client.setDraggable(this.draggable);\n\t\tthis.draggable = false;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tanimateChanged: function () {\n\t\tthis.$.client.setAnimate(this.animate);\n\t\tthis.animate = false;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\twrapChanged: function () {\n\t\tthis.$.client.setWrap(this.wrap);\n\t\tthis.wrap = false;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tisClient: function (inControl) {\n\t\treturn ! inControl.isPanel ;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tinitDone: false,\n\n\t/**\n\t* @private\n\t*/\n\trendered: function () {\n\n\t\tif (this.initDone) { return ;}\n\n\t\tvar that = this ;\n\t\tutils.forEach(this.controls, function (c) {\n\t\t\tif (that.isClient(c)) {\n\t\t\t\tthat.$.bar.addTab(c) ;\n\t\t\t}\n\t\t});\n\n\t\tthis.setIndex(this.controls.length - 1);\n\t\tthis.initDone = true;\n\n\t\t// must be called at the end otherwise kind size is weird\n\t\tPanels.prototype.rendered.apply(this, arguments);\n\t},\n\n\t/**\n\t* Add a new control managed by the tab bar. inControl is a\n\t* control with optional caption attribute. When not specified\n\t* the tab will have a generated caption like 'Tab 0', 'Tab\n\t* 1'. etc...\n\t*\n\t* @public\n\t*/\n\taddTab: function (inControl){\n\t\tthis.$.bar.addTab(inControl);\n\t\tthis.setIndex(this.controls.length - 1);\n\t},\n\n\t/**\n\t* Remove a tab from the tab bar. The control managed by the\n\t* tab will also be destroyed. target is an object with either\n\t* a caption attribute or an index. The tab(s) matching the\n\t* caption will be destroyed or the tab with matching index\n\t* will be destroyed.\n\t*\n\t* Example:\n\t*\n\t* ```\n\t*\tmyTab.removeTab({'index':0}); // remove the leftmost tab\n\t*\tmyTab.removeTab({'caption':'foo.js'});\n\t* ```\n\t*\n\t* @public\n\t*/\n\tremoveTab: function (indexData) {\n\t\tthis.$.bar.removeTab(indexData);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tlayoutKindChanged: function () {\n\t\tif (!this.layout) {\n\t\t\tthis.layout = new FittableRowsLayout(this);\n\t\t}\n\t\tthis.$.client.setLayoutKind(this.layoutKind);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tindexChanged: function () {\n\t\t// FIXME: initialization order problem\n\t\tif (this.$.client.layout) {\n\t\t\tthis.$.client.setIndex(this.index);\n\t\t}\n\t\tthis.index = this.$.client.getIndex();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tswitchPanel: function (inSender, inEvent) {\n\t\tif (this.hasNode()) {\n\t\t\tvar i = inEvent.index;\n\t\t\tif (this.getIndex() != i) {\n\t\t\t\tthis.setIndex(i);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tstartTransition: utils.nop,\n\n\t/**\n\t* @private\n\t*/\n\tfinishTransition: utils.nop,\n\n\t/**\n\t* @private\n\t*/\n\tstepTransition: utils.nop,\n\n\t/**\n\t* @private\n\t*/\n\trefresh: utils.nop\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tutils = require('../../../enyo/lib/utils'),\n\tControl = require('../../../enyo/lib/Control');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tPopup = require('../../../onyx/lib/Popup'),\n\tTabBar = require('../../../onyx/lib/TabBar');\n\nvar SimpleTabBar = kind({\n\tname: 'SimpleTabBar',\n\tkind: Control,\n\tfit: true,\n\tcomponents: [\n\t\t{name: 'bar',kind: 'onyx.TabBar'},\n\t\t{style: 'border: 2px solid grey; ', components: [\n\t\t\t{content: 'Only the content of this kind is changed', style: 'padding: 1em'},\n\t\t\t{name: 'stuff', content: 'empty', style: 'padding: 1em'}\n\t\t]}\n\t],\n\n\thandlers: {\n\t\tonTabChanged: 'switchStuff'\n\t},\n\n\trendered: function () {\n\t\tControl.prototype.rendered.apply(this, arguments);\n\t\tthis.$.bar.addTab(\n\t\t\t{'caption': 'English', 'tooltipMsg': 'English/Anglais', 'data': {'msg': 'Hello World !'}}\n\t\t);\n\t\tthis.$.bar.addTab(\n\t\t\t{'caption': 'Français', 'tooltipMsg': 'French/Français', 'data': {'msg': 'Bonjour tout le monde !'}}\n\t\t);\n\t},\n\n\tswitchStuff: function (sender, event) {\n\t\tthis.log('Tapped tab with caption ' + event.caption + ' and message ' + event.data.msg);\n\t\tthis.$.stuff.setContent(event.data.msg);\n\t}\n});\n\nvar DynamicTabBar = kind({\n\t\tname: 'DynamicTabBar',\n\t\tkind: Control,\n\t\tfit: true,\n\t\tcomponents: [\n\t\t\t{name: 'bar', kind: 'onyx.TabBar', maxMenuHeight: 200},\n\t\t\t{style: 'border: 2px solid grey; ', components: [\n\t\t\t\t{content: 'create many tabs and reduce the width of the browser'},\n\t\t\t\t{name: 'stuff', content: 'empty', style: 'padding: 1em'},\n\t\t\t\t{kind: Button, content: 'create tab', ontap: 'addATab', style: 'margin: 0.5em'},\n\t\t\t\t{kind: Button, content: 'kill last tab', ontap: 'killTab'}\n\t\t\t]}\n\t\t],\n\n\t\thandlers: {\n\t\t\tonTabChanged: 'switchStuff'\n\t\t},\n\n\t\tnumber: 1,\n\t\trendered: function () {\n\t\t\tControl.prototype.rendered.apply(this, arguments);\n\t\t\tvar date = new Date();\n\t\t\tthis.creationTime = date.getTime();\n\t\t\tthis.addATab() ;\n\t\t},\n\n\t\taddATab: function (sender, event) {\n\t\t\tthis.log('adding a tab');\n\t\t\tvar date = new Date();\n\t\t\tvar delta = (date.getTime() - this.creationTime) / 1000;\n\t\t\tthis.$.bar.addTab({'caption': 'Tab label ' + this.number, data: {\n\t\t\t\tmsg: 'tab ' + this.number++ + ' created after ' + delta + ' seconds'\n\t\t\t}});\n\t\t},\n\n\t\tswitchStuff: function (sender, event) {\n\t\t\tthis.log('Tapped tab with caption ' + event.caption + ' and message ' + event.data.msg );\n\t\t\tthis.$.stuff.setContent( event.data.msg);\n\t\t},\n\t\tkillTab: function (sender, event) {\n\t\t\tthis.log('killing tab');\n\t\t\tthis.$.bar.removeTab({index: this.number-- - 2});\n\t\t}\n\t}\n);\n\n// This class shows how actual switch or actual close can be controlled\n// from the application. In the example below, these are controlled by a\n// 500ms timer.\n\nvar DelayedTabBar = kind({\n\tname: 'DelayedTabBar',\n\tkind: Control,\n\tfit: true,\n\tcomponents: [\n\t\t{name: 'bar', kind: TabBar, checkBeforeChanging: true, checkBeforeClosing: true},\n\t\t{style: 'border: 2px solid grey;', components: [\n\t\t\t{content: 'Only the content of this kind is changed', style: 'padding: 1em'},\n\t\t\t{name: 'stuff', content: 'empty', style: 'padding: 1em'}\n\t\t]},\n\t\t{name: 'delayPopup', kind: Popup, modal: true, floating: true, centered: true, content: 'delayed'}\n\t],\n\n\thandlers: {\n\t\t// for convenienve, the same delay is applied to tabChange and close\n\t\t// Of course, different handlers can be used.\n\t\tonTabChangeRequested: 'delayAction',\n\t\tonTabChanged:         'updateContent',\n\t\tonTabRemoveRequested: 'delayAction'\n\t},\n\n\trendered: function () {\n\t\tControl.prototype.rendered.apply(this, arguments);\n\t\t// With apologies to Morris and Goscinny\n\t\tvar names = ['Joe', 'Jack', 'William', 'Averell'];\n\n\t\tvar add = function (name) {\n\t\t\tthis.$.bar.addTab({\n\t\t\t\t'caption': name,\n\t\t\t\t'data' : { 'msg': 'Hello ' + name } // arbitrary user data\n\t\t\t});\n\t\t};\n\t\tutils.forEach(names, add, this);\n\t},\n\n\tdelayAction: function (sender, event) {\n\t\tthis.log('Tapped tab with caption ' + event.caption + ' and message ' + event.data.msg );\n\t\tthis.$.delayPopup.show();\n\t\tsetTimeout(this.bindSafely(this.resumeAction, sender, event), 500);\n\t},\n\tresumeAction: function (sender, event) {\n\t\tthis.$.delayPopup.hide();\n\t\tthis.$.stuff.setContent(event.data.msg);\n\t\tevent.next(); // call event.next(error) is abort is needed\n\t},\n\tupdateContent: function (sender, event) {\n\t\tthis.$.stuff.setContent( event.data.msg);\n\t}\n});\n\nmodule.exports = kind({\n\tname: 'onyx.sample.TabBarSample',\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Simple Tab Bar'},\n\t\t{kind: SimpleTabBar},\n\t\t{classes: 'onyx-sample-divider', content: 'Dynamic Tab Bar', style: 'padding-top: 4em;'},\n\t\t{kind: DynamicTabBar},\n\t\t{classes: 'onyx-sample-divider', content: 'Delayed Tab Bar', style: 'padding-top: 4em;'},\n\t\t{kind: DelayedTabBar}\n\t]\n});","require('../../../onyx');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\nvar\n\tilib = require('../../../enyo-ilib');\n\nvar\n\tFlyweightPicker = require('../../../onyx/lib/FlyweightPicker'),\n\tPicker = require('../../../onyx/lib/Picker'),\n\tPickerDecorator = require('../../../onyx/lib/PickerDecorator');\n\n/**\n* Fires when one of the [DatePicker]{@link onyx.DatePicker}'s fields is selected.\n*\n* @event onyx.DatePicker#onSelect\n* @type {Object}\n* @property {String} name - Name of the [DatePicker]{@link onyx.DatePicker} that\n* generated the event.\n* @property {Date} value - Current {@glossary Date} value of the control.\n* @public\n*/\n\n/**\n* {@link onyx.DatePicker} is a group of {@link onyx.Picker} controls used for\n* displaying a date. The user may change the day, month, and year values.\n*\n* By default, `DatePicker` tries to determine the current locale and use that\n* locale's rules to format the date (including the month name). In order to do\n* this successfully, the [iLib]{@glossary ilib} library must be loaded; if it\n* is not loaded, the control defaults to using standard U.S. date formatting.\n*\n* The `day` field is automatically populated with the proper number of days for\n* the selected month and year.\n*\n* @class  onyx.DatePicker\n* @extends enyo.Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends  onyx.DatePicker.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.DatePicker',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-toolbar-inline',\n\n\t/**\n\t* @lends  onyx.DatePicker.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* If `true`, the control is shown as disabled and the user cannot select\n\t\t* new values.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  false\n\t\t* @public\n\t\t*/\n\t\tdisabled: false,\n\n\t\t/**\n\t\t* Current locale used for formatting; may be set after control creation, in\n\t\t* which case the control will be updated to reflect the new value.\n\t\t*\n\t\t* @type {String}\n\t\t* @default  en-US\n\t\t* @public\n\t\t*/\n\t\tlocale: 'en-US',\n\n\t\t/**\n\t\t* If `true`, the `day` field is hidden.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  false\n\t\t* @public\n\t\t*/\n\t\tdayHidden: false,\n\n\t\t/**\n\t\t* If `true`, the `month` field is hidden.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tmonthHidden: false,\n\n\t\t/**\n\t\t* If `true`, the `year` field is hidden.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default false\n\t\t* @public\n\t\t*/\n\t\tyearHidden: false,\n\n\t\t/**\n\t\t* Optional minimum year value.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  1900\n\t\t* @public\n\t\t*/\n\t\tminYear: 1900,\n\n\t\t/**\n\t\t* Optional maximum year value.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default 2099\n\t\t* @public\n\t\t*/\n\t\tmaxYear: 2099,\n\n\t\t/**\n\t\t* Date object representing currently selected date. When a Date object is\n\t\t* passed to `setValue()`, the passed-in object is stored here and the\n\t\t* control is updated to reflect the new date.\n\t\t*\n\t\t* @type {Date}\n\t\t* @default  null\n\t\t* @public\n\t\t*/\n\t\tvalue: null\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonSelect: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tif (ilib) {\n\t\t\tthis.locale = ilib.getLocale();\n\t\t}\n\t\tthis.initDefaults();\n\t},\n\n\t/**\n\t* Performs initial setup of the picker, including creation of the necessary\n\t* child controls.\n\t*\n\t* @private\n\t*/\n\tinitDefaults: function () {\n\t\tvar months;\n\t\t//Attempt to use the ilib library if it is loaded\n\t\tif (ilib) {\n\t\t\tmonths = [];\n\t\t\tthis._tf = new ilib.DateFmt({locale:this.locale, timezone: 'local'});\n\t\t\tmonths = this._tf.getMonthsOfYear({length: 'long'});\n\t\t}\n\t\t// Fall back to en_US as default\n\t\telse {\n\t\t\tmonths = [undefined, 'JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n\t\t}\n\n\t\t// use iLib's getTemplate as that returns locale-specific ordering\n\t\tthis.setupPickers(this._tf ? this._tf.getTemplate() : 'mdy');\n\n\t\tthis.dayHiddenChanged();\n\t\tthis.monthHiddenChanged();\n\t\tthis.yearHiddenChanged();\n\n\t\t//Fill month, year & day pickers with values\n\t\tvar d = this.value = this.value || new Date();\n\t\tfor (var i=0,m; (m=months[i + 1]); i++) {\n\t\t\tthis.$.monthPicker.createComponent({content: m, value:i, active: i==d.getMonth()});\n\t\t}\n\n\t\tvar y = d.getFullYear();\n\t\tthis.$.yearPicker.setSelected(y-this.minYear);\n\n\t\tfor (i=1; i<=this.monthLength(d.getYear(), d.getMonth()); i++) {\n\t\t\tthis.$.dayPicker.createComponent({content:i, value:i, active: i==d.getDate()});\n\t\t}\n\t},\n\n\t/**\n\t* Determines the number of days in a particular month/year.\n\t*\n\t* @param  {Number} year\n\t* @param  {Number} month\n\t* @return {Number} Number of days in the month/year\n\t* @private\n\t*/\n\tmonthLength: function (year, month) {\n\t\t// determine number of days in a particular month/year\n\t\treturn 32 - new Date(year, month, 32).getDate();\n\t},\n\n\t/**\n\t* Handler for year [onSetupItem]{@link onyx.FlyweightPicker#onSetupItem} event.\n\t*\n\t* @private\n\t*/\n\tsetupYear: function (sender, event) {\n\t\tthis.$.year.setContent(this.minYear+event.index);\n\t\treturn true;\n\t},\n\n\t/**\n\t* Builds the picker components.\n\t*\n\t* @param  {String} ordering - Representation of the picker order. Year, Month, and Day\n\t* are represented as `'y'`, `'m'`, and `'d'`, respectively. So, for example, if the\n\t* value of `ordering` is `'ymd'`, the pickers will be created in the order: Year, Month,\n\t* Day.\n\t* @private\n\t*/\n\tsetupPickers: function (ordering) {\n\t\tvar orderingArr = ordering.split('');\n\t\tvar o,f,l;\n\t\tvar createdYear = false, createdMonth = false, createdDay = false;\n\t\tfor(f = 0, l = orderingArr.length; f < l; f++) {\n\t\t\to = orderingArr[f];\n\t\t\tswitch (o.toLowerCase()){\n\t\t\tcase 'd':\n\t\t\t\tif (!createdDay) {\n\t\t\t\t\tthis.createDay();\n\t\t\t\t\tcreatedDay = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'm':\n\t\t\t\tif (!createdMonth) {\n\t\t\t\t\tthis.createMonth();\n\t\t\t\t\tcreatedMonth = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'y':\n\t\t\t\tif (!createdYear) {\n\t\t\t\t\tthis.createYear();\n\t\t\t\t\tcreatedYear = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t* Creates the year picker.\n\t*\n\t* @private\n\t*/\n\tcreateYear: function () {\n\t\tvar yearCount = this.maxYear - this.minYear;\n\t\tthis.createComponent(\n\t\t\t{kind: PickerDecorator, onSelect: 'updateYear', components: [\n\t\t\t\t{name: 'yearPickerButton', classes: 'onyx-datepicker-year', disabled: this.disabled},\n\t\t\t\t{name: 'yearPicker', kind: FlyweightPicker, count: ++yearCount, onSetupItem: 'setupYear', components: [\n\t\t\t\t\t{name: 'year'}\n\t\t\t\t]}\n\t\t\t]}\n\t\t);\n\t},\n\n\t/**\n\t* Creates the month picker.\n\t*\n\t* @private\n\t*/\n\tcreateMonth: function () {\n\t\tthis.createComponent(\n\t\t\t{kind: PickerDecorator, onSelect: 'updateMonth', components: [\n\t\t\t\t{name: 'monthPickerButton', classes: 'onyx-datepicker-month', disabled: this.disabled},\n\t\t\t\t{name: 'monthPicker', kind: Picker}\n\t\t\t]}\n\t\t);\n\t},\n\n\t/**\n\t* Creates the day picker.\n\t*\n\t* @private\n\t*/\n\tcreateDay: function () {\n\t\tthis.createComponent(\n\t\t\t{kind: PickerDecorator, onSelect: 'updateDay', components: [\n\t\t\t\t{name: 'dayPickerButton', classes: 'onyx-datepicker-day', disabled: this.disabled},\n\t\t\t\t{name: 'dayPicker', kind: Picker}\n\t\t\t]}\n\t\t);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tlocaleChanged: function () {\n\t\tthis.refresh();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdayHiddenChanged: function () {\n\t\tthis.$.dayPicker.getParent().setShowing(this.dayHidden ? false : true);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmonthHiddenChanged: function () {\n\t\tthis.$.monthPicker.getParent().setShowing(this.monthHidden ? false : true);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tyearHiddenChanged: function () {\n\t\tthis.$.yearPicker.getParent().setShowing(this.yearHidden ? false : true);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tminYearChanged: function () {\n\t\tthis.refresh();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmaxYearChanged: function () {\n\t\tthis.refresh();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function (){\n\t\tthis.refresh();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdisabledChanged: function () {\n\t\tthis.$.yearPickerButton.setDisabled(this.disabled);\n\t\tthis.$.monthPickerButton.setDisabled(this.disabled);\n\t\tthis.$.dayPickerButton.setDisabled(this.disabled);\n\t},\n\n\t/**\n\t* Handler for the day picker's [onSelect]{link onyx.DatePicker#onSelect} event.\n\t*\n\t* @fires onyx.DatePicker#onSelect\n\t* @private\n\t*/\n\tupdateDay: function (sender, event){\n\t\tvar date = this.calcDate(this.value.getFullYear(),\n\t\t\t\t\t\t\t\tthis.value.getMonth(),\n\t\t\t\t\t\t\t\tevent.selected.value);\n\t\tthis.doSelect({name:this.name, value:date});\n\t\tthis.setValue(date);\n\t\treturn true;\n\t},\n\n\t/**\n\t* Handler for the month picker's [onSelect]{link onyx.DatePicker#onSelect} event.\n\t*\n\t* @fires onyx.DatePicker#onSelect\n\t* @private\n\t*/\n\tupdateMonth: function (sender, event){\n\t\tvar date = this.calcDate(this.value.getFullYear(),\n\t\t\t\t\t\t\t\tevent.selected.value,\n\t\t\t\t\t\t\t\tthis.value.getDate());\n\t\tthis.doSelect({name:this.name, value:date});\n\t\tthis.setValue(date);\n\t\treturn true;\n\t},\n\n\t/**\n\t* Handler for the year picker's [onSelect]{link onyx.DatePicker#onSelect} event.\n\t*\n\t* @fires onyx.DatePicker#onSelect\n\t* @private\n\t*/\n\tupdateYear: function (sender, event){\n\t\t//if the node wasn't found (issue around FlyWeightRepeater/Picker) don't update the picker\n\t\tif (event.originator.selected != -1) {\n\t\t\tvar date = this.calcDate(this.minYear + event.originator.selected,\n\t\t\t\t\t\t\t\t\tthis.value.getMonth(),\n\t\t\t\t\t\t\t\t\tthis.value.getDate());\n\t\t\tthis.doSelect({name:this.name, value:date});\n\t\t\tthis.setValue(date);\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t* Creates a {@glossary Date} object for the given `year`, `month`, and `date`. The\n\t* time component is pulled from the current [value]{@link onyx.DatePicker#value}.\n\t*\n\t* @param  {Number} year\n\t* @param  {Number} month\n\t* @param  {Number} day\n\t* @return {Date}\n\t* @private\n\t*/\n\tcalcDate: function (year, month, day){\n\t\treturn new Date(year,month,day,\n\t\t\t\t\t\tthis.value.getHours(),\n\t\t\t\t\t\tthis.value.getMinutes(),\n\t\t\t\t\t\tthis.value.getSeconds(),\n\t\t\t\t\t\tthis.value.getMilliseconds());\n\t},\n\n\t/**\n\t* Refreshes the pickers by destroying and rebuilding the components.\n\t*\n\t* @public\n\t*/\n\trefresh: function (){\n\t\tthis.destroyClientControls();\n\t\tthis.initDefaults();\n\t\tthis.render();\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind');\n\nvar\n\tFittableRows = require('../../../layout/lib/FittableRows');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tFlyweightPicker = require('../../../onyx/lib/FlyweightPicker'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tIntegerPicker = require('../../../onyx/lib/IntegerPicker'),\n\tPicker = require('../../../onyx/lib/Picker'),\n\tPickerDecorator = require('../../../onyx/lib/PickerDecorator');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.PickerSample',\n\tkind: FittableRows,\n\tclasses: 'onyx onyx-sample',\n\thandlers: {\n\t\tonSelect: 'itemSelected'\n\t},\n\tcomponents: [\n\t\t{content: 'Default Picker', classes:'onyx-sample-divider'},\n\t\t{kind: PickerDecorator, components: [\n\t\t\t{},\n\t\t\t{kind: Picker, components: [\n\t\t\t\t{content: 'Gmail', active: true},\n\t\t\t\t{content: 'Yahoo'},\n\t\t\t\t{content: 'Outlook'},\n\t\t\t\t{content: 'Hotmail'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{content: 'Picker with Static Button', classes:'onyx-sample-divider'},\n\t\t{kind: PickerDecorator, components: [\n\t\t\t{kind: Button, content: 'Pick One...', style: 'width: 200px'},\n\t\t\t{kind: Picker, components: [\n\t\t\t\t{content: 'Hello!'},\n\t\t\t\t{content: 'I am busy.'},\n\t\t\t\t{content: 'Good Bye.'}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{content: 'Integer Picker', classes:'onyx-sample-divider'},\n\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t{kind: PickerDecorator, components: [\n\t\t\t\t{style: 'min-width: 60px;'},\n\t\t\t\t{kind: IntegerPicker, min: 0, max: 25, value: 5}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{content: 'Other Pickers', classes:'onyx-sample-divider'},\n\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t{content: 'JS Library', classes: 'onyx-sample-label'},\n\t\t\t{kind: PickerDecorator, components: [\n\t\t\t\t{name:'libPickerButton', style: 'min-width: 160px;'},\n\t\t\t\t{name: 'libPicker', kind: FlyweightPicker, count: 200, onSetupItem: 'setupLibs', components: [\n\t\t\t\t\t{name: 'lib'}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t{kind: PickerDecorator, components: [\n\t\t\t\t{},\n\t\t\t\t{kind: Picker, components: [\n\t\t\t\t\t{content: 'Gmail'},\n\t\t\t\t\t{content: 'Yahoo'},\n\t\t\t\t\t{content: 'Outlook'},\n\t\t\t\t\t{content: 'Hotmail', active: true}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\t\t{tag: 'br'},\n\t\t{kind: Groupbox, classes:'onyx-sample-result-box', components: [\n\t\t\t{kind: GroupboxHeader, content: 'Selection'},\n\t\t\t{name:'pickerSelection', classes:'onyx-sample-result', content: 'Nothing picked yet.'}\n\t\t]}\n\t],\n\tlibs: ['Enyo', 'AngularJS', 'Backbone.js', 'Dojo', 'Ember.js', 'Ext JS', 'Google Web Toolkit', 'Knockout', 'SproutCore', 'Spine', 'Yahoo! Mojito', 'AccDC', 'Dojo Toolkit', 'Glow', 'jQuery', 'jQuery Mobile', 'midori', 'MooTools', 'Prototype JavaScript Framework', 'YUI Library', 'Ample SDK', 'DHTMLX', 'iX Framework', 'jQuery UI', 'Lively Kernel', 'qooxdoo', 'Script.aculo.us', 'SmartClient', 'D3.js', 'JavaScript InfoVis Toolkit', 'Kinetic.js', 'Processing.js', 'Raphael', 'SWFObject', 'Three.js', 'EaseIJS', 'Chaplin.js', 'Echo', 'JavaScriptMVC', 'Rialto Toolkit', 'Web Atoms JS', 'FuncJS', 'Google Closure Library', 'Joose', 'jsPHP', 'MochiKit', 'PDF.js', 'Rico', 'Socket.IO', 'Spry framework', 'Underscore.js', 'Wakanda Framework', 'Cascade Framework', 'Handlebars', 'Mustache', 'Twitter Bootstrap', 'ZURB Foundation', 'Modernizr'],\n\tcreate: function () {\n\t\tFittableRows.prototype.create.apply(this, arguments);\n\t\tthis.$.libPicker.setSelected(0);\n\t\tthis.$.libPickerButton.setContent(this.libs[this.$.libPicker.getSelected()]);\n\t},\n\tsetupLibs: function (sender, event) {\n\t\tthis.$.lib.setContent(this.libs.length > event.index ? this.libs[event.index] : 'JS Library ' + (event.index-this.libs.length));\n\t\treturn true;\n\t},\n\titemSelected: function (sender, event) {\n\t\tthis.$.pickerSelection.setContent(event.selected.content);\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\t$L = require('../../../enyo/lib/hooks').$L;\n\nvar\n\tFittableColumns = require('../../../layout/lib/FittableColumns'),\n\tFittableRows = require('../../../layout/lib/FittableRows');\n\nvar\n\tilib = require('../../../enyo-ilib');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tPicker = require('../../../onyx/lib/Picker'),\n\tPickerDecorator = require('../../../onyx/lib/PickerDecorator'),\n\tTimePicker = require('../../../onyx/lib/TimePicker'),\n\tToolbar = require('../../../onyx/lib/Toolbar');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.TimePickerSample',\n\tkind: FittableRows,\n\tclasses: 'onyx enyo-fit',\n\thandlers: {\n\t\tonSelect: 'updateTimeValues'\n\t},\n\tcomponents: [\n\t\t{kind: Toolbar, content:$L('Times')},\n\t\t{kind: FittableColumns, style: 'padding: 10px', components:[\n\t\t\t{components: [\n\t\t\t\t{content: $L('Choose Locale: '), classes: 'onyx-sample-divider'},\n\t\t\t\t{kind: PickerDecorator, style: 'padding: 10px;', onSelect: 'localeChanged', components: [\n\t\t\t\t\t{content: 'Pick One...', style: 'width: 200px'},\n\t\t\t\t\t{kind: Picker, name: 'localePicker', components: [\n\t\t\t\t\t\t{content: 'en-US', active: true},\n\t\t\t\t\t\t{content: 'en-CA'},\n\t\t\t\t\t\t{content: 'en-IE'},\n\t\t\t\t\t\t{content: 'en-GB'},\n\t\t\t\t\t\t{content: 'en-MX'},\n\t\t\t\t\t\t{content: 'de-DE'},\n\t\t\t\t\t\t{content: 'fr-FR'},\n\t\t\t\t\t\t{content: 'fr-CA'},\n\t\t\t\t\t\t{content: 'it-IT'},\n\t\t\t\t\t\t{content: 'es-ES'},\n\t\t\t\t\t\t{content: 'es-MX'},\n\t\t\t\t\t\t{content: 'es-US'},\n\t\t\t\t\t\t{content: 'ko-KR'},\n\t\t\t\t\t\t{content: 'ja-JP'},\n\t\t\t\t\t\t{content: 'zh-HK'}\n\t\t\t\t\t]}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\n\t\t{kind: Button, content: 'Get Times', style: 'margin: 10px;', ontap: 'getTimes'},\n\t\t{kind: Button, content: 'Reset Times', ontap: 'resetTimes'},\n\n\t\t{style: 'width: 100%;height: 5px;background-color: black;margin-bottom: 5px;'},\n\t\t{caption: 'Dates', style: 'padding: 10px', components:\n\t\t[\n\t\t\t{content: 'TIME', classes: 'onyx-sample-divider'},\n\t\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t\t{name: 'timePicker1', kind: TimePicker}\n\t\t\t]},\n\t\t\t{kind: Groupbox, style: 'padding: 5px;', components: [\n\t\t\t\t{kind: GroupboxHeader, content: 'Value'},\n\t\t\t\t{name: 'timePicker1Value', style: 'padding: 15px;'}\n\t\t\t]},\n\t\t\t{content: 'TIME 24 HOUR MODE',classes: 'onyx-sample-divider'},\n\t\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t\t{name: 'timePicker2', kind: TimePicker, is24HrMode: true}\n\t\t\t]},\n\t\t\t{kind: Groupbox, style: 'padding: 5px;', components: [\n\t\t\t\t{kind: GroupboxHeader, content: 'Localized Value'},\n\t\t\t\t{name: 'timePicker2Value', style: 'padding: 15px;'}\n\t\t\t]},\n\t\t\t{content: 'DISABLED', classes: 'onyx-sample-divider'},\n\t\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t\t{name: 'timePicker3', kind: TimePicker, disabled: true}\n\t\t\t]}\n\t\t]}\n\t],\n\tbindings: [\n\t\t{from: '.$.localePicker.selected.content', to: '.locale'}\n\t],\n\trendered: function () {\n\t\tFittableRows.prototype.rendered.apply(this, arguments);\n\t\tthis.localeChanged();\n\t},\n\tlocaleChanged: function () {\n\t\tthis.$.timePicker1.setLocale(this.locale);\n\t\tthis.$.timePicker2.setLocale(this.locale);\n\t\tthis.$.timePicker2.setIs24HrMode(true);\n\t\tthis.$.timePicker3.setLocale(this.locale);\n\t\treturn true;\n\t},\n\tresetTimes: function (date) {\n\t\tvar d = new Date();\n\t\tthis.$.timePicker1.setValue(d);\n\t\tthis.$.timePicker2.setValue(d);\n\t\tthis.$.timePicker3.setValue(d);\n\n\t\tthis.getTimes();\n\t},\n\tgetTimes: function () {\n\t\tvar fmt = new ilib.DateFmt({\n\t\t\ttype: 'time',\n\t\t\tlength: 'short',\n\t\t\tlocale: this.locale,\n\t\t\ttimezone: 'local'\n\t\t});\n\n\t\tthis.$.timePicker1Value.setContent(fmt.format(this.$.timePicker1.getValue()));\n\t\tthis.$.timePicker2Value.setContent(fmt.format(this.$.timePicker2.getValue()));\n\t},\n\tupdateTimeValues: function (sender, date){\n\t\tvar fmt = new ilib.DateFmt({\n\t\t\ttype: 'time',\n\t\t\tlength: 'short',\n\t\t\tlocale: this.locale,\n\t\t\ttimezone: 'local'\n\t\t});\n\n\t\tthis.$[date.name + 'Value'].setContent(fmt.format(date.value));\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\tControl = require('../../../enyo/lib/Control');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tTabPanels = require('../../../onyx/lib/TabPanels');\n\nvar SimpleTabPanel = kind({\n\tkind: TabPanels,\n\tstyle: 'height: 150px;',\n\tfit: true,\n\tcomponents: [\n\t\t{name: 'Blue welcome', 'caption': 'Blue', style: 'height: 100px; border: 2px solid grey; padding: 20px; color: blue', content: 'The whole kind is changed: Blue Hello World !'},\n\t\t{name: 'Red welcome', 'caption': 'Red', style: 'height: 100px; border: 2px solid grey; padding: 20px; color: red', content: 'The whole kind is changed: Red Hello World !'}\n\t]\n});\n\nvar DynamicTabPanel = kind({\n\tkind: TabPanels,\n\tstyle: 'height: 150px;',\n\tcomponents: [{\n\t\t'caption': 'Tab label 1' ,\n\t\tstyle: 'border: 2px solid grey; padding: 20px;',\n\t\tcontent: 'tab created at startup'\n\t}]\n});\n\nmodule.exports = kind({\n\tname: 'onyx.sample.TabPanelSample',\n\tkind: Control,\n\tclasses: 'onyx onyx-sample',\n\tcomponents: [\n\t\t{classes: 'onyx-sample-divider', content: 'Simple Tab Panel'},\n\t\t{kind: SimpleTabPanel},\n\t\t{classes: 'onyx-sample-divider', content: 'Dynamic Tab Panel', style: 'padding-top: 4em;'},\n\t\t{kind: DynamicTabPanel, name: 'dynamicTP', maxMenuHeight: 200},\n\t\t{kind: Button, content: 'create tab', style: 'margin-top: 2em;', ontap: 'addATab'},\n\t\t{kind: Button, content: 'kill last tab', ontap: 'killTab', style: 'margin-left: 10px'}\n\t],\n\n\tnumber: 2, // because 1 tab is create at startup\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tvar date = new Date();\n\t\tthis.creationTime = date.getTime();\n\t},\n\n\taddATab: function (sender, event) {\n\t\tthis.log('adding a tab');\n\t\tvar date = new Date();\n\t\tvar delta = (date.getTime() - this.creationTime) / 1000 ;\n\t\tvar tooltipMessage = '';\n\t\tvar contentForTooltip = ' and doesn\\'t have a tooltip';\n\t\tif (this.number % 2){\n\t\t\ttooltipMessage = 'I\\'m a odd tab => ' + this.number;\n\t\t\tcontentForTooltip = ' and has a tooltip';\n\t\t}\n\t\tvar added = this.$.dynamicTP.createComponent({\n\t\t\tcaption: 'Tab label ' + this.number++,\n\t\t\ttooltipMsg: tooltipMessage,\n\t\t\tstyle: 'border: 2px solid grey; padding: 20px;',\n\t\t\tcontent: 'tab created after ' + delta + ' seconds' + contentForTooltip\n\t\t});\n\t\tthis.render();\n\t\tthis.$.dynamicTP.addTab(added);\n\t},\n\tkillTab: function (sender, event) {\n\t\tthis.log('killing tab');\n\t\tthis.$.dynamicTP.removeTab({index: this.number-- - 2});\n\t}\n});","var\n\tkind = require('../../../enyo/lib/kind'),\n\t$L = require('../../../enyo/lib/hooks').$L;\n\nvar\n\tFittableColumns = require('../../../layout/lib/FittableColumns'),\n\tFittableRows = require('../../../layout/lib/FittableRows');\n\nvar\n\tilib = require('../../../enyo-ilib');\n\nvar\n\tButton = require('../../../onyx/lib/Button'),\n\tDatePicker = require('../../../onyx/lib/DatePicker'),\n\tGroupbox = require('../../../onyx/lib/Groupbox'),\n\tGroupboxHeader = require('../../../onyx/lib/GroupboxHeader'),\n\tPicker = require('../../../onyx/lib/Picker'),\n\tPickerDecorator = require('../../../onyx/lib/PickerDecorator'),\n\tToolbar = require('../../../onyx/lib/Toolbar');\n\nmodule.exports = kind({\n\tname: 'onyx.sample.DatePickerSample',\n\tkind: FittableRows,\n\tclasses: 'onyx',\n\thandlers: {\n\t\tonSelect: 'updateDateValues'\n\t},\n\tcomponents: [\n\t\t{kind: Toolbar, content:$L('Dates')},\n\t\t{kind: FittableColumns, style: 'padding: 10px', components:[\n\t\t\t{components: [\n\t\t\t\t{content:$L('Choose Locale: '), classes: 'onyx-sample-divider'},\n\t\t\t\t{kind: PickerDecorator, style: 'padding: 10px;', onSelect: 'localeChanged', components: [\n\t\t\t\t\t{content: 'Pick One...', style: 'width: 200px'},\n\t\t\t\t\t{kind: Picker, name: 'localePicker', components: [\n\t\t\t\t\t\t{content: 'en-US', active: true},\n\t\t\t\t\t\t{content: 'en-CA'},\n\t\t\t\t\t\t{content: 'en-IE'},\n\t\t\t\t\t\t{content: 'en-GB'},\n\t\t\t\t\t\t{content: 'en-MX'},\n\t\t\t\t\t\t{content: 'de-DE'},\n\t\t\t\t\t\t{content: 'fr-FR'},\n\t\t\t\t\t\t{content: 'fr-CA'},\n\t\t\t\t\t\t{content: 'it-IT'},\n\t\t\t\t\t\t{content: 'es-ES'},\n\t\t\t\t\t\t{content: 'es-MX'},\n\t\t\t\t\t\t{content: 'es-US'},\n\t\t\t\t\t\t{content: 'ko-KR'},\n\t\t\t\t\t\t{content: 'ja-JP'},\n\t\t\t\t\t\t{content: 'zh-HK'}\n\t\t\t\t\t]}\n\t\t\t\t]}\n\t\t\t]}\n\t\t]},\n\t\t{kind: Button, content: 'Get Dates', style: 'margin: 10px;', ontap: 'getDates'},\n\t\t{kind: Button, content: 'Reset Dates', ontap: 'resetDates'},\n\t\t{style: 'width: 100%;height: 5px;background-color: black;margin-bottom: 5px;'},\n\t\t{caption: 'Dates', style: 'padding: 10px', components: [\n\t\t\t{content: 'DATE',classes: 'onyx-sample-divider'},\n\t\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t\t{name: 'datePicker1', kind: DatePicker}\n\t\t\t]},\n\t\t\t{kind: Groupbox, style: 'padding: 5px;', components: [\n\t\t\t\t{kind: GroupboxHeader, content: 'Value'},\n\t\t\t\t{name: 'datePicker1Value', style: 'padding: 15px;'}\n\t\t\t]},\n\t\t\t{content: 'DATE W/MIN & MAX YEARS',classes: 'onyx-sample-divider'},\n\t\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t\t{name: 'datePicker2', kind: DatePicker, minYear: 2010, maxYear: 2020}\n\t\t\t]},\n\t\t\t{kind: Groupbox, style: 'padding: 5px;', components: [\n\t\t\t\t{kind: GroupboxHeader, content: 'Value'},\n\t\t\t\t{name: 'datePicker2Value', style: 'padding: 15px;'}\n\t\t\t]},\n\t\t\t{content: 'DATE W/DAYS HIDDEN',classes: 'onyx-sample-divider'},\n\t\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t\t{name: 'datePicker3', kind: DatePicker, dayHidden: true}\n\t\t\t]},\n\t\t\t{kind: Groupbox, style: 'padding: 5px;', components: [\n\t\t\t\t{kind: GroupboxHeader, content: 'Value'},\n\t\t\t\t{name: 'datePicker3Value', style: 'padding: 15px;'}\n\t\t\t]},\n\t\t\t{content: 'DISABLED',classes: 'onyx-sample-divider'},\n\t\t\t{classes: 'onyx-toolbar-inline', components: [\n\t\t\t\t{name: 'datePicker4', kind: DatePicker, disabled: true}\n\t\t\t]}\n\t\t]}\n\t],\n\tbindings: [\n\t\t{from: '.$.localePicker.selected.content', to: '.locale'}\n\t],\n\trendered: function () {\n\t\tthis.inherited(arguments);\n\t\tthis.localeChanged();\n\t},\n\tlocaleChanged: function () {\n\t\tthis.$.datePicker1.setLocale(this.locale);\n\t\tthis.$.datePicker2.setLocale(this.locale);\n\t\tthis.$.datePicker3.setLocale(this.locale);\n\t\tthis.$.datePicker4.setLocale(this.locale);\n\t\treturn true;\n\t},\n\tresetDates: function (date) {\n\t\tvar d = new Date();\n\t\tthis.$.datePicker1.setValue(d);\n\t\tthis.$.datePicker2.setValue(d);\n\t\tthis.$.datePicker3.setValue(d);\n\t\tthis.$.datePicker4.setValue(d);\n\t\tthis.getDates();\n\t},\n\tgetDates: function () {\n\t\tvar fmt = this.format();\n\t\tthis.$.datePicker1Value.setContent(fmt.format(this.$.datePicker1.getValue()));\n\t\tthis.$.datePicker2Value.setContent(fmt.format(this.$.datePicker2.getValue()));\n\t\t// reformat the formatter to display the Date wiht only Month and year\n\t\tfmt = this.format('my');\n\t\tthis.$.datePicker3Value.setContent(fmt.format(this.$.datePicker3.getValue()));\n\t},\n\tupdateDateValues: function (sender, event){\n\t\tvar fmt = event.name != 'datePicker3' ? this.format() :  this.format('my');\n\t\tthis.$[event.name + 'Value'].setContent(fmt.format(event.value));\n\t},\n\tformat: function (dateComponents) {\n\t\tif (ilib) {\n\t\t\tvar fmt = new ilib.DateFmt({\n\t\t\t\tdateComponents: dateComponents || undefined,\n\t\t\t\tdate: 'short',\n\t\t\t\tlocale: this.locale,\n\t\t\t\ttimezone: 'local'\n\t\t\t});\n\t\t\treturn fmt;\n\t\t} else {\n\t\t\treturn function (v) { return v ? v.toString() : ''; };\n\t\t}\n\t}\n});\n","require('../../../enyo/lib/drag');\n\nvar\n\tkind = require('../../../enyo/lib/kind'),\n\tready = require('../../../enyo/lib/ready'),\n\tAnchor = require('../../../enyo/lib/Anchor'),\n\tCollection = require('../../../enyo/lib/Collection'),\n\tControl = require('../../../enyo/lib/Control'),\n\tDataRepeater = require('../../../enyo/lib/DataRepeater');\n\nvar\n\tsamples = {\n\t\tButtonGroup\t\t\t: require('./ButtonGroupSample'),\n\t\tButton\t\t\t\t: require('./ButtonSample'),\n\t\tCheckbox\t\t\t: require('./CheckboxSample'),\n\t\tContextualPopup\t\t: require('./ContextualPopupSample'),\n\t\tDatePicker\t\t\t: require('./DatePickerSample'),\n\t\tGroupbox\t\t\t: require('./GroupboxSample'),\n\t\tIconButton\t\t\t: require('./IconButtonSample'),\n\t\tInput\t\t\t\t: require('./InputSample'),\n\t\tMenu\t\t\t\t: require('./MenuSample'),\n\t\tMoreToolbar\t\t\t: require('./MoreToolbarSample'),\n\t\tPicker\t\t\t\t: require('./PickerSample'),\n\t\tPopup\t\t\t\t: require('./PopupSample'),\n\t\tProgress\t\t\t: require('./ProgressSample'),\n\t\tSlider\t\t\t\t: require('./SliderSample'),\n\t\tSpinner\t\t\t\t: require('./SpinnerSample'),\n\t\tSubmenu\t\t\t\t: require('./SubmenuSample'),\n\t\tTabBar\t\t\t\t: require('./TabBarSample'),\n\t\tTabPanel\t\t\t: require('./TabPanelSample'),\n\t\tTimePicker\t\t\t: require('./TimePickerSample'),\n\t\tToggleButton\t\t: require('./ToggleButtonSample'),\n\t\tToolbar\t\t\t\t: require('./ToolbarSample'),\n\t\tTooltip\t\t\t\t: require('./TooltipSample')\n\t};\n\nvar List = kind({\n\tkind: Control,\n\tcomponents: [\n\t\t{name: 'list', kind: DataRepeater, components: [\n\t\t\t{style: 'margin: 10px;', components: [\n\t\t\t\t{name: 'a', kind: Anchor}\n\t\t\t], bindings: [\n\t\t\t\t{from: 'model.name', to: '$.a.href', transform: function (v) { return '?' + v; }},\n\t\t\t\t{from: 'model.name', to: '$.a.content', transform: function (v) { return v + ' Sample'; }}\n\t\t\t]}\n\t\t]}\n\t],\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tthis.$.list.set('collection', new Collection(Object.keys(samples).map(function (key) {\n\t\t\treturn {name: key};\n\t\t})));\n\t}\n});\n\nready(function () {\n\tvar name = window.document.location.search.substring(1),\n\t\tSample = samples[name] || List;\n\n\tnew Sample({samples: samples}).renderInto(document.body);\n});"]}